[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[info] Setting Scala version to 2.12.6 on 4 projects.
[info] Reapplying settings...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed May 2, 2018 11:16:22 PM
[info] Updating core...
[info] Done updating.
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 5 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:987:79: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toDouble(pos: Int): Double = java.lang.Double.parseDouble(new String(buf, 0, mark, pos - mark))
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1073:75: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toFloat(pos: Int): Float = java.lang.Float.parseFloat(new String(buf, 0, mark, pos - mark))
[warn]                                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:445:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:453:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:964:14: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       zoneId.getBytes(0, len, buf, pos)
[warn]              ^
[warn] 5 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.25.3-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.25.3-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 57 Scala sources and 1 Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:48: Generated JSON codec for type 'Int':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Int] {
[info]       def nullValue: Int = 0;
[info]       def decodeValue(in: JsonReader, default: Int): Int = in.readInt();
[info]       def encodeValue(x: Int, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intCodec: JsonValueCodec[Int] = make[Int](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:57: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[String] {
[info]       def nullValue: String = null;
[info]       def decodeValue(in: JsonReader, default: String): String = in.readString(default);
[info]       def encodeValue(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonValueCodec[String] = make[String](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:65: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("a");
[info]       private[this] val r1: Array[String] = Array("b");
[info]       private[this] val r2: Array[String] = Array("l", "r");
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _a = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readString(_b)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = JsoniterCodecs.this.adtCodec.decodeValue(in, _l)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _r = JsoniterCodecs.this.adtCodec.decodeValue(in, _r)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d2(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d3(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("A")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("a");
[info]           out.writeVal(x.a)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("B")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("C")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.l, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("r");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.r, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val adtCodec: JsonValueCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "bd");
[info]       private[this] def d1(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _os = d1(in, _os)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bd");
[info]           out.writeVal(x.bd)
[info]         };
[info]         {
[info]           val v = x.os;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("os");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val anyRefsCodec: JsonValueCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:97: Generated JSON codec for type 'Array[BigDecimal]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigDecimal]] {
[info]       def nullValue: Array[BigDecimal] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = d0(in, default);
[info]       def encodeValue(x: Array[BigDecimal], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigDecimal] = new Array[scala.math.BigDecimal](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigDecimal](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigDecimal(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigDecimal], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigDecimalArrayCodec: JsonValueCodec[Array[BigDecimal]] = make[Array[BigDecimal]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:85: Generated JSON codec for type 'Array[BigInt]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigInt]] {
[info]       def nullValue: Array[BigInt] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigInt]): Array[BigInt] = d0(in, default);
[info]       def encodeValue(x: Array[BigInt], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigInt](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigInt(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigIntArrayCodec: JsonValueCodec[Array[BigInt]] = make[Array[BigInt]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:122: Generated JSON codec for type 'scala.collection.mutable.ArrayBuffer[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.ArrayBuffer[Boolean]] {
[info]       def nullValue: scala.collection.mutable.ArrayBuffer[Boolean] = ArrayBuffer.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               ArrayBuffer.empty[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayBufferCodec: JsonValueCodec[mutable.ArrayBuffer[Boolean]] = make[mutable.ArrayBuffer[Boolean]](CodecMakerConfig())
[info]                                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:88: Generated JSON codec for type 'Array[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Boolean]] {
[info]       def nullValue: Array[Boolean] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Boolean]): Array[Boolean] = d0(in, default);
[info]       def encodeValue(x: Array[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Boolean] = new Array[Boolean](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Boolean]): Array[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Boolean](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBoolean());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayCodec: JsonValueCodec[Array[Boolean]] = make[Array[Boolean]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:85: Generated JSON codec for type 'List[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[List[Boolean]] {
[info]       def nullValue: List[Boolean] = List.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: List[Boolean]): List[Boolean] = d0(in, default);
[info]       def encodeValue(x: List[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: List[Boolean]): List[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: List[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var l = x;
[info]         while (l.isEmpty.`unary_!`) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(l.head);
[info]             l = l.tail
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanListCodec: JsonValueCodec[List[Boolean]] = make[List[Boolean]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:91: Generated JSON codec for type 'scala.collection.immutable.Vector[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Vector[Boolean]] {
[info]       def nullValue: scala.collection.immutable.Vector[Boolean] = Vector.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanVectorCodec: JsonValueCodec[Vector[Boolean]] = make[Vector[Boolean]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:27:79: Generated JSON codec for type 'Array[Byte]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Byte]] {
[info]       def nullValue: Array[Byte] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Byte]): Array[Byte] = d0(in, default);
[info]       def encodeValue(x: Array[Byte], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Byte] = new Array[Byte](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Byte]): Array[Byte] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Byte](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readByte());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Byte], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val byteArrayCodec: JsonValueCodec[Array[Byte]] = make[Array[Byte]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:28:79: Generated JSON codec for type 'Array[Char]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Char]] {
[info]       def nullValue: Array[Char] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Char]): Array[Char] = d0(in, default);
[info]       def encodeValue(x: Array[Char], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Char] = new Array[Char](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Char]): Array[Char] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Char](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readChar());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Char], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val charArrayCodec: JsonValueCodec[Array[Char]] = make[Array[Char]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:29:85: Generated JSON codec for type 'Array[Double]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Double]] {
[info]       def nullValue: Array[Double] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Double]): Array[Double] = d0(in, default);
[info]       def encodeValue(x: Array[Double], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Double] = new Array[Double](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Double]): Array[Double] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Double](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDouble());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Double], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val doubleArrayCodec: JsonValueCodec[Array[Double]] = make[Array[Double]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:30:91: Generated JSON codec for type 'Array[java.time.Duration]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Duration]] {
[info]       def nullValue: Array[java.time.Duration] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Duration], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Duration] = new Array[java.time.Duration](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Duration](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDuration(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Duration], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val durationArrayCodec: JsonValueCodec[Array[Duration]] = make[Array[Duration]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:31:87: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value): com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val len = in.readStringAsCharBuf();
[info]           SuitEnum.values.iterator.find(((e) => in.isCharBufEqualsTo(len, e.toString))).getOrElse(in.enumValueError(len))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value, out: JsonWriter): Unit = out.writeVal(x.toString);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val enumArrayCodec: JsonValueCodec[Array[SuitEnum]] = make[Array[SuitEnum]](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:32:82: Generated JSON codec for type 'Array[Float]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Float]] {
[info]       def nullValue: Array[Float] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Float]): Array[Float] = d0(in, default);
[info]       def encodeValue(x: Array[Float], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Float] = new Array[Float](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Float]): Array[Float] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Float](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readFloat());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Float], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val floatArrayCodec: JsonValueCodec[Array[Float]] = make[Array[Float]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:33:88: Generated JSON codec for type 'Array[java.time.Instant]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Instant]] {
[info]       def nullValue: Array[java.time.Instant] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Instant], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Instant] = new Array[java.time.Instant](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Instant](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInstant(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Instant], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val instantArrayCodec: JsonValueCodec[Array[Instant]] = make[Array[Instant]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:34:76: Generated JSON codec for type 'Array[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Int]] {
[info]       def nullValue: Array[Int] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Int]): Array[Int] = d0(in, default);
[info]       def encodeValue(x: Array[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Int] = new Array[Int](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intArrayCodec: JsonValueCodec[Array[Int]] = make[Array[Int]](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:35:83: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Suit): com.github.plokhotnyuk.jsoniter_scala.macros.Suit = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val v = in.readString(null);
[info]           try {
[info]             Suit.valueOf(v)
[info]           } catch {
[info]             case ((_): IllegalArgumentException) => in.enumValueError(v)
[info]           }
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Suit, out: JsonWriter): Unit = out.writeVal(x.name);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val javaEnumArrayCodec: JsonValueCodec[Array[Suit]] = make[Array[Suit]](CodecMakerConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:36:79: Generated JSON codec for type 'Array[Long]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Long]] {
[info]       def nullValue: Array[Long] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Long]): Array[Long] = d0(in, default);
[info]       def encodeValue(x: Array[Long], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Long] = new Array[Long](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Long]): Array[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLong());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val longArrayCodec: JsonValueCodec[Array[Long]] = make[Array[Long]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:37:94: Generated JSON codec for type 'Array[java.time.LocalDate]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDate]] {
[info]       def nullValue: Array[java.time.LocalDate] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDate], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDate] = new Array[java.time.LocalDate](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDate](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDate(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDate], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateArrayCodec: JsonValueCodec[Array[LocalDate]] = make[Array[LocalDate]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:38:106: Generated JSON codec for type 'Array[java.time.LocalDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDateTime]] {
[info]       def nullValue: Array[java.time.LocalDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDateTime] = new Array[java.time.LocalDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateTimeArrayCodec: JsonValueCodec[Array[LocalDateTime]] = make[Array[LocalDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:39:94: Generated JSON codec for type 'Array[java.time.LocalTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalTime]] {
[info]       def nullValue: Array[java.time.LocalTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalTime] = new Array[java.time.LocalTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localTimeArrayCodec: JsonValueCodec[Array[LocalTime]] = make[Array[LocalTime]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:40:109: Generated JSON codec for type 'Array[java.time.OffsetDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetDateTime]] {
[info]       def nullValue: Array[java.time.OffsetDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetDateTime] = new Array[java.time.OffsetDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetDateTimeArrayCodec: JsonValueCodec[Array[OffsetDateTime]] = make[Array[OffsetDateTime]](CodecMakerConfig())
[info]                                                                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:41:97: Generated JSON codec for type 'Array[java.time.OffsetTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetTime]] {
[info]       def nullValue: Array[java.time.OffsetTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetTime] = new Array[java.time.OffsetTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetTimeArrayCodec: JsonValueCodec[Array[OffsetTime]] = make[Array[OffsetTime]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:42:85: Generated JSON codec for type 'Array[java.time.Period]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Period]] {
[info]       def nullValue: Array[java.time.Period] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Period], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Period] = new Array[java.time.Period](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Period](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readPeriod(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Period], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val periodArrayCodec: JsonValueCodec[Array[Period]] = make[Array[Period]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:43:82: Generated JSON codec for type 'Array[Short]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Short]] {
[info]       def nullValue: Array[Short] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Short]): Array[Short] = d0(in, default);
[info]       def encodeValue(x: Array[Short], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Short] = new Array[Short](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Short]): Array[Short] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Short](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readShort());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Short], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val shortArrayCodec: JsonValueCodec[Array[Short]] = make[Array[Short]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:44:79: Generated JSON codec for type 'Array[java.util.UUID]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.util.UUID]] {
[info]       def nullValue: Array[java.util.UUID] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = d0(in, default);
[info]       def encodeValue(x: Array[java.util.UUID], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.util.UUID] = new Array[java.util.UUID](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.util.UUID](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readUUID(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.util.UUID], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val uuidArrayCodec: JsonValueCodec[Array[UUID]] = make[Array[UUID]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:45:79: Generated JSON codec for type 'Array[java.time.Year]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Year]] {
[info]       def nullValue: Array[java.time.Year] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Year], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Year] = new Array[java.time.Year](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Year](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYear(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Year], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearArrayCodec: JsonValueCodec[Array[Year]] = make[Array[Year]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:46:94: Generated JSON codec for type 'Array[java.time.YearMonth]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.YearMonth]] {
[info]       def nullValue: Array[java.time.YearMonth] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.YearMonth], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.YearMonth] = new Array[java.time.YearMonth](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.YearMonth](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYearMonth(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.YearMonth], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearMonthArrayCodec: JsonValueCodec[Array[YearMonth]] = make[Array[YearMonth]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:47:106: Generated JSON codec for type 'Array[java.time.ZonedDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZonedDateTime]] {
[info]       def nullValue: Array[java.time.ZonedDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZonedDateTime] = new Array[java.time.ZonedDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZonedDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZonedDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zonedDateTimeArrayCodec: JsonValueCodec[Array[ZonedDateTime]] = make[Array[ZonedDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:48:85: Generated JSON codec for type 'Array[java.time.ZoneId]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneId]] {
[info]       def nullValue: Array[java.time.ZoneId] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneId], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneId] = new Array[java.time.ZoneId](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneId](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneId(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneId], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneIdArrayCodec: JsonValueCodec[Array[ZoneId]] = make[Array[ZoneId]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:49:97: Generated JSON codec for type 'Array[java.time.ZoneOffset]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneOffset]] {
[info]       def nullValue: Array[java.time.ZoneOffset] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneOffset] = new Array[java.time.ZoneOffset](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneOffset](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneOffset(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneOffsetArrayCodec: JsonValueCodec[Array[ZoneOffset]] = make[Array[ZoneOffset]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:50:66: Generated JSON codec for type 'scala.collection.immutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.BitSet] {
[info]       def nullValue: scala.collection.immutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             var mi = 0;
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>(mi))
[info]                   {
[info]                     mi = i;
[info]                     if (i.>=(x.length))
[info]                       x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                     else
[info]                       ()
[info]                   }
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               {
[info]                 if (mi.>(1).&&(mi.+(1).!=(x.length)))
[info]                   x = java.util.Arrays.copyOf(x, mi.+(1))
[info]                 else
[info]                   ();
[info]                 BitSet.fromBitMaskNoCopy(x)
[info]               }
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bitSetCodec: JsonValueCodec[BitSet] = make[BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:51:87: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "l");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val extractFieldsCodec: JsonValueCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:52:94: Generated JSON codec for type 'scala.collection.immutable.IntMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.IntMap[Boolean]] {
[info]       def nullValue: scala.collection.immutable.IntMap[Boolean] = IntMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intMapOfBooleansCodec: JsonValueCodec[IntMap[Boolean]] = make[IntMap[Boolean]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:53:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("geometry");
[info]       private[this] val r1: Array[String] = Array("coordinates");
[info]       private[this] def d2(in: JsonReader, default: scala.collection.immutable.Map[String,String]): scala.collection.immutable.Map[String,String] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[String, String];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d8(in: JsonReader, default: (Double, Double)): (Double, Double) = if (in.isNextToken('['))
[info]         {
[info]           val _1: Double = in.readDouble();
[info]           val _2: Double = if (in.isNextToken(','))
[info]             in.readDouble()
[info]           else
[info]             in.commaError();
[info]           if (in.isNextToken(']'))
[info]             new (Double, Double)(_1, _2)
[info]           else
[info]             in.arrayEndError()
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d7(in: JsonReader, default: IndexedSeq[(Double, Double)]): IndexedSeq[(Double, Double)] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[(Double, Double)];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: IndexedSeq[IndexedSeq[(Double, Double)]]): IndexedSeq[IndexedSeq[(Double, Double)]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[(Double, Double)]];
[info]             do 
[info]               x.+=(d7(in, IndexedSeq.empty[(Double, Double)]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]]): IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]             do 
[info]               x.+=(d6(in, IndexedSeq.empty[IndexedSeq[(Double, Double)]]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d4(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = IndexedSeq.empty[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d12(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _geometries: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 203916432 => if (in.isCharBufEqualsTo(l, "geometries"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometries = d12(in, _geometries)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection(geometries = _geometries)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Polygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d14(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Point): com.github.plokhotnyuk.jsoniter_scala.macros.Point = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: (Double, Double) = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d8(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Point(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d15(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.LineString): com.github.plokhotnyuk.jsoniter_scala.macros.LineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.LineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry): com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case -2116761119 => if (in.isCharBufEqualsTo(l, "MultiPolygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d4(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -627102946 => if (in.isCharBufEqualsTo(l, "MultiLineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d9(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1065891849 => if (in.isCharBufEqualsTo(l, "MultiPoint"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d10(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1950410960 => if (in.isCharBufEqualsTo(l, "GeometryCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d11(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1267133722 => if (in.isCharBufEqualsTo(l, "Polygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d13(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 77292912 => if (in.isCharBufEqualsTo(l, "Point"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d14(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1806700869 => if (in.isCharBufEqualsTo(l, "LineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d15(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Feature): com.github.plokhotnyuk.jsoniter_scala.macros.Feature = if (in.isNextToken('{'))
[info]         {
[info]           var _properties: scala.collection.immutable.Map[String,String] = Map.empty[String, String];
[info]           var _geometry: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -926053069 => if (in.isCharBufEqualsTo(l, "properties"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _properties = d2(in, _properties)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1846020210 => if (in.isCharBufEqualsTo(l, "geometry"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometry = d3(in, _geometry)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(2).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Feature(properties = _properties, geometry = _geometry)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d17(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]             do 
[info]               x.+=(JsoniterCodecs.this.geoJSONCodec.decodeValue(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d16(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _features: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -290659267 => if (in.isCharBufEqualsTo(l, "features"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _features = d17(in, _features)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection(features = _features)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 685445846 => if (in.isCharBufEqualsTo(l, "Feature"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1377727980 => if (in.isCharBufEqualsTo(l, "FeatureCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d16(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e2(x: scala.collection.immutable.Map[String,String], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e8(x: (Double, Double), out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._1)
[info]         };
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._2)
[info]         };
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e7(x: IndexedSeq[(Double, Double)], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e8(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: IndexedSeq[IndexedSeq[(Double, Double)]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e7(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e6(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e4(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPolygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiLineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPoint")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("GeometryCollection")
[info]         };
[info]         {
[info]           val v = x.geometries;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geometries");
[info]               e12(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Polygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e14(x: com.github.plokhotnyuk.jsoniter_scala.macros.Point, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Point")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("coordinates");
[info]           e8(x.coordinates, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e15(x: com.github.plokhotnyuk.jsoniter_scala.macros.LineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("LineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon)) => e4(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString)) => e9(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint)) => e10(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection)) => e11(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon)) => e13(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Point)) => e14(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.LineString)) => e15(x, out)
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Feature, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Feature")
[info]         };
[info]         {
[info]           val v = x.properties;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("properties");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geometry");
[info]           e3(x.geometry, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e17(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             JsoniterCodecs.this.geoJSONCodec.encodeValue(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e16(x: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("FeatureCollection")
[info]         };
[info]         {
[info]           val v = x.features;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("features");
[info]               e17(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Feature)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection)) => e16(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val geoJSONCodec: JsonValueCodec[GeoJSON] = make[GeoJSON](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:54:89: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("status");
[info]       private[this] val r1: Array[String] = Array("distance", "duration", "status");
[info]       private[this] val r2: Array[String] = Array("text", "value");
[info]       private[this] def d1(in: JsonReader, default: IndexedSeq[String]): IndexedSeq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _value = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _distance = d6(in, _distance)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _duration = d6(in, _duration)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _elements = d4(in, _elements)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _origin_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _rows: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _destination_addresses = d1(in, _destination_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _origin_addresses = d1(in, _origin_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _rows = d2(in, _rows)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(8).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e1(x: IndexedSeq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("value");
[info]           out.writeVal(x.value)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("distance");
[info]           e6(x.distance, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("duration");
[info]           e6(x.duration, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.elements;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("elements");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.destination_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("destination_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.origin_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("origin_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.rows;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("rows");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val googleMapsAPICodec: JsonValueCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:55:101: Generated JSON codec for type 'scala.collection.immutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.immutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mapOfIntsToBooleansCodec: JsonValueCodec[Map[Int, Boolean]] = make[Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:56:95: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "i");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val missingReqFieldCodec: JsonValueCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:57:89: Generated JSON codec for type 'scala.collection.mutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.BitSet] {
[info]       def nullValue: scala.collection.mutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>=(x.length))
[info]                   x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               BitSet.fromBitMaskNoCopy(x)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableBitSetCodec: JsonValueCodec[mutable.BitSet] = make[mutable.BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:58:120: Generated JSON codec for type 'scala.collection.mutable.LongMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.LongMap[Boolean]] {
[info]       def nullValue: scala.collection.mutable.LongMap[Boolean] = LongMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[Boolean];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableLongMapOfBooleansCodec: JsonValueCodec[mutable.LongMap[Boolean]] = make[mutable.LongMap[Boolean]](CodecMakerConfig())
[info]                                                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:59:124: Generated JSON codec for type 'scala.collection.mutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.mutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, Boolean];
[info]             do 
[info]               x.update(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableMapOfIntsToBooleansCodec: JsonValueCodec[mutable.Map[Int, Boolean]] = make[mutable.Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:60:96: Generated JSON codec for type 'scala.collection.mutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Set[Int]] {
[info]       def nullValue: scala.collection.mutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Set.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableSetOfIntsCodec: JsonValueCodec[mutable.Set[Int]] = make[mutable.Set[Int]](CodecMakerConfig())
[info]                                                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:61:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = ((0): Byte);
[info]           var _s: Short = ((0): Short);
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = '\u0000';
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var p0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(255).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("ch");
[info]           out.writeVal(x.ch)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val primitivesCodec: JsonValueCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:62:73: Generated JSON codec for type 'scala.collection.immutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Set[Int]] {
[info]       def nullValue: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val setOfIntsCodec: JsonValueCodec[Set[Int]] = make[Set[Int]](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:63:78: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decodeValue(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encodeValue(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private[this] val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private[this] val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private[this] val r4: Array[String] = Array("url", "description");
[info]       private[this] val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 31;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(15).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _expanded_url = in.readString(_expanded_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _display_url = in.readString(_display_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _hashtags = d3(in, _hashtags)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _symbols = d3(in, _symbols)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user_mentions = d4(in, _user_mentions)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = d12(in, _url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = d12(in, _description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r4(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var p0 = -1;
[info]           var p1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _location = in.readString(_location)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = in.readString(_description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d11(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _protected = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _followers_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _friends_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _listed_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favourites_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _utc_offset = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _time_zone = in.readString(_time_zone)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _verified = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _statuses_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translator = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translation_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_color = in.readString(_profile_background_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         if (p0.&(33554432).!=(0))
[info]                           p0.^=(33554432)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         if (p0.&(67108864).!=(0))
[info]                           p0.^=(67108864)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_tile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         if (p0.&(134217728).!=(0))
[info]                           p0.^=(134217728)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url = in.readString(_profile_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         if (p0.&(268435456).!=(0))
[info]                           p0.^=(268435456)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         if (p0.&(536870912).!=(0))
[info]                           p0.^=(536870912)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_banner_url = in.readString(_profile_banner_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         if (p0.&(1073741824).!=(0))
[info]                           p0.^=(1073741824)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_link_color = in.readString(_profile_link_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         if (p0.&(-2147483648).!=(0))
[info]                           p0.^=(-2147483648)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         if (p1.&(1).!=(0))
[info]                           p1.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         if (p1.&(2).!=(0))
[info]                           p1.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_text_color = in.readString(_profile_text_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         if (p1.&(4).!=(0))
[info]                           p1.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_use_background_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         if (p1.&(8).!=(0))
[info]                           p1.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _has_extended_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         if (p1.&(16).!=(0))
[info]                           p1.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         if (p1.&(32).!=(0))
[info]                           p1.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         if (p1.&(64).!=(0))
[info]                           p1.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _following = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         if (p1.&(128).!=(0))
[info]                           p1.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _follow_request_sent = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         if (p1.&(256).!=(0))
[info]                           p1.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _notifications = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         if (p1.&(512).!=(0))
[info]                           p1.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _translator_type = in.readString(_translator_type)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(-1).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           if (p1.&(1023).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p1).+(32)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 16777215;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(16650367).!=(0))
[info]             in.requiredFieldError(r5(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 33554431;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted_status = d13(in, _retweeted_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(33427583).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("expanded_url");
[info]           out.writeVal(x.expanded_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("display_url");
[info]           out.writeVal(x.display_url)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.hashtags;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("hashtags");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.symbols;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("symbols");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.user_mentions;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("user_mentions");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           e11(x.url, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           e11(x.description, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("location");
[info]           out.writeVal(x.location)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           out.writeVal(x.description)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e10(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("protected");
[info]           out.writeVal(x.`protected`)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("followers_count");
[info]           out.writeVal(x.followers_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("friends_count");
[info]           out.writeVal(x.friends_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("listed_count");
[info]           out.writeVal(x.listed_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favourites_count");
[info]           out.writeVal(x.favourites_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("utc_offset");
[info]           out.writeVal(x.utc_offset)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("time_zone");
[info]           out.writeVal(x.time_zone)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geo_enabled");
[info]           out.writeVal(x.geo_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("verified");
[info]           out.writeVal(x.verified)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("statuses_count");
[info]           out.writeVal(x.statuses_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("contributors_enabled");
[info]           out.writeVal(x.contributors_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translator");
[info]           out.writeVal(x.is_translator)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]           out.writeVal(x.is_translation_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_color");
[info]           out.writeVal(x.profile_background_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]           out.writeVal(x.profile_background_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]           out.writeVal(x.profile_background_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_tile");
[info]           out.writeVal(x.profile_background_tile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url");
[info]           out.writeVal(x.profile_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]           out.writeVal(x.profile_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_banner_url");
[info]           out.writeVal(x.profile_banner_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_link_color");
[info]           out.writeVal(x.profile_link_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]           out.writeVal(x.profile_sidebar_border_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]           out.writeVal(x.profile_sidebar_fill_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_text_color");
[info]           out.writeVal(x.profile_text_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]           out.writeVal(x.profile_use_background_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("has_extended_profile");
[info]           out.writeVal(x.has_extended_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile");
[info]           out.writeVal(x.default_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile_image");
[info]           out.writeVal(x.default_profile_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("following");
[info]           out.writeVal(x.following)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("follow_request_sent");
[info]           out.writeVal(x.follow_request_sent)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("notifications");
[info]           out.writeVal(x.notifications)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("translator_type");
[info]           out.writeVal(x.translator_type)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted_status");
[info]           e12(x.retweeted_status, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val twitterAPICodec: JsonValueCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:35:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:42:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:44:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:64:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:65:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:66:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:70:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:71:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:72:18: local val v3 in value twitterAPIFormat is never used
[warn]     implicit val v3: OFormat[UserEntities] = Json.format[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:73:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:74:18: local val v5 in value twitterAPIFormat is never used
[warn]     implicit val v5: OFormat[Entities] = Json.format[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:75:18: local val v6 in value twitterAPIFormat is never used
[warn]     implicit val v6: Format[User] = Jsonx.formatCaseClass[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:76:18: local val v7 in value twitterAPIFormat is never used
[warn]     implicit val v7: Format[RetweetedStatus] = Jsonx.formatCaseClass[RetweetedStatus]
[warn]                  ^
[warn] 14 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.3-SNAPSHOT.jar ...
[info] Compiling 49 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 421 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 617 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.3-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.3-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -p size=128 -jvm /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java -prof gc -rf json -rff graalvmce1.json .*Benchmark.*
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce
[info] # Run progress: 0.00% complete, ETA 00:56:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53143.981 ops/s
[info] # Warmup Iteration   2: 668419.816 ops/s
[info] # Warmup Iteration   3: 802635.177 ops/s
[info] Iteration   1: 832882.653 ops/s
[info]                  ·gc.alloc.rate:                   2395.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              4527.281 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4350.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.872 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.317 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 822279.178 ops/s
[info]                  ·gc.alloc.rate:                   2387.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              4568.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2296.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4396.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 823536.553 ops/s
[info]                  ·gc.alloc.rate:                   2398.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              4582.399 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2318.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4430.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 821968.637 ops/s
[info]                  ·gc.alloc.rate:                   2394.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              4585.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2340.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4481.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 831036.507 ops/s
[info]                  ·gc.alloc.rate:                   2423.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              4589.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2356.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4463.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce":
[info]   826340.706 ±(99.9%) 20038.328 ops/s [Average]
[info]   (min, avg, max) = (821968.637, 826340.706, 832882.653), stdev = 5203.890
[info]   CI (99.9%): [806302.378, 846379.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate":
[info]   2399.787 ±(99.9%) 53.276 MB/sec [Average]
[info]   (min, avg, max) = (2387.019, 2399.787, 2423.383), stdev = 13.836
[info]   CI (99.9%): [2346.512, 2453.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4570.586 ±(99.9%) 97.905 B/op [Average]
[info]   (min, avg, max) = (4527.281, 4570.586, 4589.537), stdev = 25.426
[info]   CI (99.9%): [4472.681, 4668.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2323.062 ±(99.9%) 97.571 MB/sec [Average]
[info]   (min, avg, max) = (2296.992, 2323.062, 2356.771), stdev = 25.339
[info]   CI (99.9%): [2225.491, 2420.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4424.500 ±(99.9%) 202.648 B/op [Average]
[info]   (min, avg, max) = (4350.468, 4424.500, 4481.568), stdev = 52.627
[info]   CI (99.9%): [4221.852, 4627.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 6.571 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.820, 3.872), stdev = 1.706
[info]   CI (99.9%): [≈ 0, 7.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.551 ±(99.9%) 12.414 B/op [Average]
[info]   (min, avg, max) = (0.040, 1.551, 7.317), stdev = 3.224
[info]   CI (99.9%): [≈ 0, 13.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 14.000), stdev = 2.280
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala
[info] # Run progress: 0.24% complete, ETA 01:29:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51831.270 ops/s
[info] # Warmup Iteration   2: 1514657.519 ops/s
[info] # Warmup Iteration   3: 1776289.657 ops/s
[info] Iteration   1: 1811956.618 ops/s
[info]                  ·gc.alloc.rate:                   1203.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              1045.133 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1135.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 1855855.455 ops/s
[info]                  ·gc.alloc.rate:               1219.769 MB/sec
[info]                  ·gc.alloc.rate.norm:          1034.451 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 833.560 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 1915477.338 ops/s
[info]                  ·gc.alloc.rate:                   1275.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              1047.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1076.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.257 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.498 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1923654.279 ops/s
[info]                  ·gc.alloc.rate:               1280.099 MB/sec
[info]                  ·gc.alloc.rate.norm:          1047.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1302.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1066.049 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 1878972.280 ops/s
[info]                  ·gc.alloc.rate:               1264.145 MB/sec
[info]                  ·gc.alloc.rate.norm:          1058.876 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1093.108 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala":
[info]   1877183.194 ±(99.9%) 175812.394 ops/s [Average]
[info]   (min, avg, max) = (1811956.618, 1877183.194, 1923654.279), stdev = 45657.920
[info]   CI (99.9%): [1701370.800, 2052995.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1248.552 ±(99.9%) 133.953 MB/sec [Average]
[info]   (min, avg, max) = (1203.282, 1248.552, 1280.099), stdev = 34.787
[info]   CI (99.9%): [1114.599, 1382.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1046.738 ±(99.9%) 33.490 B/op [Average]
[info]   (min, avg, max) = (1034.451, 1046.738, 1058.876), stdev = 8.697
[info]   CI (99.9%): [1013.247, 1080.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1241.599 ±(99.9%) 556.979 MB/sec [Average]
[info]   (min, avg, max) = (982.889, 1241.599, 1309.738), stdev = 144.646
[info]   CI (99.9%): [684.621, 1798.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1040.864 ±(99.9%) 457.812 B/op [Average]
[info]   (min, avg, max) = (833.560, 1040.864, 1135.543), stdev = 118.892
[info]   CI (99.9%): [583.052, 1498.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.866 ±(99.9%) 7.301 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.866, 4.257), stdev = 1.896
[info]   CI (99.9%): [≈ 0, 8.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.712 ±(99.9%) 5.997 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.712, 3.498), stdev = 1.557
[info]   CI (99.9%): [≈ 0, 6.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 14.000), stdev = 3.564
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala
[info] # Run progress: 0.47% complete, ETA 01:28:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1496056.166 ops/s
[info] # Warmup Iteration   2: 5403177.533 ops/s
[info] # Warmup Iteration   3: 5796283.020 ops/s
[info] Iteration   1: 5929165.353 ops/s
[info]                  ·gc.alloc.rate:               401.467 MB/sec
[info]                  ·gc.alloc.rate.norm:          106.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 67.901 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 5887552.224 ops/s
[info]                  ·gc.alloc.rate:               402.514 MB/sec
[info]                  ·gc.alloc.rate.norm:          107.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 88.416 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 5949225.608 ops/s
[info]                  ·gc.alloc.rate:               402.885 MB/sec
[info]                  ·gc.alloc.rate.norm:          106.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87.499 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 5905686.228 ops/s
[info]                  ·gc.alloc.rate:                   412.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              109.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     176.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 5887843.645 ops/s
[info]                  ·gc.alloc.rate:                   399.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              106.772 B/op
[info]                  ·gc.churn.PS_Eden_Space:          332.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala":
[info]   5911894.612 ±(99.9%) 103707.262 ops/s [Average]
[info]   (min, avg, max) = (5887552.224, 5911894.612, 5949225.608), stdev = 26932.447
[info]   CI (99.9%): [5808187.350, 6015601.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   403.723 ±(99.9%) 19.165 MB/sec [Average]
[info]   (min, avg, max) = (399.450, 403.723, 412.301), stdev = 4.977
[info]   CI (99.9%): [384.558, 422.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   107.471 ±(99.9%) 5.340 B/op [Average]
[info]   (min, avg, max) = (106.567, 107.471, 109.833), stdev = 1.387
[info]   CI (99.9%): [102.131, 112.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   382.497 ±(99.9%) 616.947 MB/sec [Average]
[info]   (min, avg, max) = (255.801, 382.497, 663.090), stdev = 160.219
[info]   CI (99.9%): [≈ 0, 999.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   101.845 ±(99.9%) 164.544 B/op [Average]
[info]   (min, avg, max) = (67.901, 101.845, 176.642), stdev = 42.731
[info]   CI (99.9%): [≈ 0, 266.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.012 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 5.000), stdev = 1.304
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson
[info] # Run progress: 0.71% complete, ETA 01:28:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3750.749 ops/s
[info] # Warmup Iteration   2: 196469.096 ops/s
[info] # Warmup Iteration   3: 266687.820 ops/s
[info] Iteration   1: 271159.668 ops/s
[info]                  ·gc.alloc.rate:                   2309.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              13401.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2297.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13333.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.229 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 274442.018 ops/s
[info]                  ·gc.alloc.rate:                   2353.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              13496.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2320.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13309.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 271437.566 ops/s
[info]                  ·gc.alloc.rate:               2343.176 MB/sec
[info]                  ·gc.alloc.rate.norm:          13586.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2341.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13577.087 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 263909.455 ops/s
[info]                  ·gc.alloc.rate:                   2268.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              13527.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12045.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.248 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 263064.193 ops/s
[info]                  ·gc.alloc.rate:                   2262.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              13532.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12136.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson":
[info]   268802.580 ±(99.9%) 19365.909 ops/s [Average]
[info]   (min, avg, max) = (263064.193, 268802.580, 274442.018), stdev = 5029.265
[info]   CI (99.9%): [249436.671, 288168.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2307.488 ±(99.9%) 159.983 MB/sec [Average]
[info]   (min, avg, max) = (2262.909, 2307.488, 2353.385), stdev = 41.547
[info]   CI (99.9%): [2147.505, 2467.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   13508.724 ±(99.9%) 262.892 B/op [Average]
[info]   (min, avg, max) = (13401.243, 13508.724, 13586.289), stdev = 68.272
[info]   CI (99.9%): [13245.832, 13771.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2201.908 ±(99.9%) 626.233 MB/sec [Average]
[info]   (min, avg, max) = (2019.744, 2201.908, 2341.589), stdev = 162.631
[info]   CI (99.9%): [1575.674, 2828.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   12880.232 ±(99.9%) 2807.198 B/op [Average]
[info]   (min, avg, max) = (12045.246, 12880.232, 13577.087), stdev = 729.020
[info]   CI (99.9%): [10073.034, 15687.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.162 ±(99.9%) 1.221 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.162, 0.729), stdev = 0.317
[info]   CI (99.9%): [≈ 0, 1.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.944 ±(99.9%) 7.079 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.944, 4.229), stdev = 1.838
[info]   CI (99.9%): [≈ 0, 8.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 11.000), stdev = 0.894
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce
[info] # Run progress: 0.94% complete, ETA 01:28:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41450.773 ops/s
[info] # Warmup Iteration   2: 799563.400 ops/s
[info] # Warmup Iteration   3: 867708.236 ops/s
[info] Iteration   1: 898819.390 ops/s
[info]                  ·gc.alloc.rate:                   2394.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              4192.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2300.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4026.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.896 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 895570.241 ops/s
[info]                  ·gc.alloc.rate:                   2405.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              4226.919 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2300.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4043.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 909499.870 ops/s
[info]                  ·gc.alloc.rate:               2449.594 MB/sec
[info]                  ·gc.alloc.rate.norm:          4238.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2322.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4019.142 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 891577.847 ops/s
[info]                  ·gc.alloc.rate:                   2404.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              4244.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2344.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4138.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 913971.033 ops/s
[info]                  ·gc.alloc.rate:               2463.228 MB/sec
[info]                  ·gc.alloc.rate.norm:          4241.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2359.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4062.594 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce":
[info]   901887.676 ±(99.9%) 36508.589 ops/s [Average]
[info]   (min, avg, max) = (891577.847, 901887.676, 913971.033), stdev = 9481.165
[info]   CI (99.9%): [865379.087, 938396.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate":
[info]   2423.416 ±(99.9%) 118.522 MB/sec [Average]
[info]   (min, avg, max) = (2394.725, 2423.416, 2463.228), stdev = 30.780
[info]   CI (99.9%): [2304.894, 2541.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   4228.691 ±(99.9%) 82.419 B/op [Average]
[info]   (min, avg, max) = (4192.264, 4228.691, 4244.146), stdev = 21.404
[info]   CI (99.9%): [4146.272, 4311.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2325.489 ±(99.9%) 101.320 MB/sec [Average]
[info]   (min, avg, max) = (2300.127, 2325.489, 2359.254), stdev = 26.312
[info]   CI (99.9%): [2224.169, 2426.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4058.053 ±(99.9%) 185.202 B/op [Average]
[info]   (min, avg, max) = (4019.142, 4058.053, 4138.738), stdev = 48.096
[info]   CI (99.9%): [3872.850, 4243.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.229 ±(99.9%) 1.839 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.229, 1.083), stdev = 0.478
[info]   CI (99.9%): [≈ 0, 2.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.401 ±(99.9%) 3.219 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.401, 1.896), stdev = 0.836
[info]   CI (99.9%): [≈ 0, 3.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala
[info] # Run progress: 1.18% complete, ETA 01:27:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 222797.577 ops/s
[info] # Warmup Iteration   2: 2717481.913 ops/s
[info] # Warmup Iteration   3: 2889385.262 ops/s
[info] Iteration   1: 2905727.276 ops/s
[info]                  ·gc.alloc.rate:                   1247.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              675.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     709.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2880126.685 ops/s
[info]                  ·gc.alloc.rate:                   1233.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              673.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     538.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.854 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2778609.174 ops/s
[info]                  ·gc.alloc.rate:                   1203.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              681.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     741.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.521 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2782427.237 ops/s
[info]                  ·gc.alloc.rate:               1190.633 MB/sec
[info]                  ·gc.alloc.rate.norm:          673.504 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 553.903 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 2819800.500 ops/s
[info]                  ·gc.alloc.rate:               1227.350 MB/sec
[info]                  ·gc.alloc.rate.norm:          685.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1308.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 730.232 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala":
[info]   2833338.174 ±(99.9%) 221200.997 ops/s [Average]
[info]   (min, avg, max) = (2778609.174, 2833338.174, 2905727.276), stdev = 57445.196
[info]   CI (99.9%): [2612137.178, 3054539.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1220.277 ±(99.9%) 88.548 MB/sec [Average]
[info]   (min, avg, max) = (1190.633, 1220.277, 1247.117), stdev = 22.996
[info]   CI (99.9%): [1131.729, 1308.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   677.855 ±(99.9%) 19.625 B/op [Average]
[info]   (min, avg, max) = (673.504, 677.855, 685.055), stdev = 5.096
[info]   CI (99.9%): [658.230, 697.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1178.434 ±(99.9%) 689.295 MB/sec [Average]
[info]   (min, avg, max) = (979.201, 1178.434, 1309.651), stdev = 179.008
[info]   CI (99.9%): [489.139, 1867.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   654.731 ±(99.9%) 384.620 B/op [Average]
[info]   (min, avg, max) = (538.520, 654.731, 741.619), stdev = 99.885
[info]   CI (99.9%): [270.110, 1039.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.789 ±(99.9%) 5.670 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.789, 3.393), stdev = 1.472
[info]   CI (99.9%): [≈ 0, 6.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.433 ±(99.9%) 3.096 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.433, 1.854), stdev = 0.804
[info]   CI (99.9%): [≈ 0, 3.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 13.000), stdev = 3.782
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala
[info] # Run progress: 1.41% complete, ETA 01:27:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 966702.395 ops/s
[info] # Warmup Iteration   2: 12840679.159 ops/s
[info] # Warmup Iteration   3: 13923009.730 ops/s
[info] Iteration   1: 14061944.900 ops/s
[info]                  ·gc.alloc.rate:                   737.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 13578242.315 ops/s
[info]                  ·gc.alloc.rate:                   744.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              86.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 13907179.809 ops/s
[info]                  ·gc.alloc.rate:               727.007 MB/sec
[info]                  ·gc.alloc.rate.norm:          82.253 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 74.822 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 13925410.031 ops/s
[info]                  ·gc.alloc.rate:                   724.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              81.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 13524386.334 ops/s
[info]                  ·gc.alloc.rate:                   701.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              81.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.925 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.340 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala":
[info]   13799432.678 ±(99.9%) 905040.739 ops/s [Average]
[info]   (min, avg, max) = (13524386.334, 13799432.678, 14061944.900), stdev = 235036.206
[info]   CI (99.9%): [12894391.939, 14704473.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   727.189 ±(99.9%) 62.615 MB/sec [Average]
[info]   (min, avg, max) = (701.909, 727.189, 744.498), stdev = 16.261
[info]   CI (99.9%): [664.575, 789.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   82.936 ±(99.9%) 7.304 B/op [Average]
[info]   (min, avg, max) = (81.683, 82.936, 86.276), stdev = 1.897
[info]   CI (99.9%): [75.632, 90.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   661.035 ±(99.9%) 5.714 MB/sec [Average]
[info]   (min, avg, max) = (658.921, 661.035, 662.794), stdev = 1.484
[info]   CI (99.9%): [655.321, 666.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   75.401 ±(99.9%) 5.346 B/op [Average]
[info]   (min, avg, max) = (73.738, 75.401, 77.131), stdev = 1.388
[info]   CI (99.9%): [70.055, 80.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.600 ±(99.9%) 5.006 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.600, 2.925), stdev = 1.300
[info]   CI (99.9%): [≈ 0, 5.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.070 ±(99.9%) 0.583 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.070, 0.340), stdev = 0.151
[info]   CI (99.9%): [≈ 0, 0.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 1.65% complete, ETA 01:27:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1539906.375 ops/s
[info] # Warmup Iteration   2: 16245095.131 ops/s
[info] # Warmup Iteration   3: 16557981.364 ops/s
[info] Iteration   1: 16794022.677 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 16750592.695 ops/s
[info]                  ·gc.alloc.rate:      4.421 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.415 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 16787283.998 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 16803175.078 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 16800869.404 ops/s
[info]                  ·gc.alloc.rate:      0.552 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.052 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc":
[info]   16787188.770 ±(99.9%) 82333.256 ops/s [Average]
[info]   (min, avg, max) = (16750592.695, 16787188.770, 16803175.078), stdev = 21381.685
[info]   CI (99.9%): [16704855.515, 16869522.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.995 ±(99.9%) 7.433 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.995, 4.421), stdev = 1.930
[info]   CI (99.9%): [≈ 0, 8.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.093 ±(99.9%) 0.698 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.093, 0.415), stdev = 0.181
[info]   CI (99.9%): [≈ 0, 0.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson
[info] # Run progress: 1.88% complete, ETA 01:27:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1454.484 ops/s
[info] # Warmup Iteration   2: 239362.826 ops/s
[info] # Warmup Iteration   3: 645769.993 ops/s
[info] Iteration   1: 643810.393 ops/s
[info]                  ·gc.alloc.rate:                   1976.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              4831.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4809.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.206 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 647472.405 ops/s
[info]                  ·gc.alloc.rate:                   1991.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              4839.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4813.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.708 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 657168.765 ops/s
[info]                  ·gc.alloc.rate:               2026.501 MB/sec
[info]                  ·gc.alloc.rate.norm:          4853.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1991.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4768.532 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 651796.713 ops/s
[info]                  ·gc.alloc.rate:                   2011.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              4857.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1669.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4031.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 631179.848 ops/s
[info]                  ·gc.alloc.rate:                   1963.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              4894.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5024.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson":
[info]   646285.625 ±(99.9%) 37754.702 ops/s [Average]
[info]   (min, avg, max) = (631179.848, 646285.625, 657168.765), stdev = 9804.776
[info]   CI (99.9%): [608530.923, 684040.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1993.772 ±(99.9%) 98.763 MB/sec [Average]
[info]   (min, avg, max) = (1963.134, 1993.772, 2026.501), stdev = 25.648
[info]   CI (99.9%): [1895.010, 2092.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4855.454 ±(99.9%) 93.745 B/op [Average]
[info]   (min, avg, max) = (4831.785, 4855.454, 4894.996), stdev = 24.345
[info]   CI (99.9%): [4761.710, 4949.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1924.718 ±(99.9%) 553.059 MB/sec [Average]
[info]   (min, avg, max) = (1669.720, 1924.718, 2015.142), stdev = 143.628
[info]   CI (99.9%): [1371.659, 2477.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4689.580 ±(99.9%) 1467.415 B/op [Average]
[info]   (min, avg, max) = (4031.809, 4689.580, 5024.676), stdev = 381.083
[info]   CI (99.9%): [3222.165, 6156.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.333 ±(99.9%) 2.155 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.333, 1.312), stdev = 0.560
[info]   CI (99.9%): [≈ 0, 2.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.814 ±(99.9%) 5.267 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.814, 3.206), stdev = 1.368
[info]   CI (99.9%): [≈ 0, 6.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 11.000), stdev = 1.517
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce
[info] # Run progress: 2.12% complete, ETA 01:27:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108099.832 ops/s
[info] # Warmup Iteration   2: 1759284.867 ops/s
[info] # Warmup Iteration   3: 1901568.378 ops/s
[info] Iteration   1: 2034299.340 ops/s
[info]                  ·gc.alloc.rate:                   2820.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              2181.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2626.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2032.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1986653.591 ops/s
[info]                  ·gc.alloc.rate:                   2783.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              2204.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2971.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2354.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1986361.410 ops/s
[info]                  ·gc.alloc.rate:                   2771.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              2195.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2671.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2116.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1994696.606 ops/s
[info]                  ·gc.alloc.rate:                   2770.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              2185.728 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2355.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1858.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 2021180.044 ops/s
[info]                  ·gc.alloc.rate:               2828.981 MB/sec
[info]                  ·gc.alloc.rate.norm:          2200.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3042.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2367.412 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce":
[info]   2004638.198 ±(99.9%) 84137.635 ops/s [Average]
[info]   (min, avg, max) = (1986361.410, 2004638.198, 2034299.340), stdev = 21850.277
[info]   CI (99.9%): [1920500.563, 2088775.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate":
[info]   2794.813 ±(99.9%) 107.018 MB/sec [Average]
[info]   (min, avg, max) = (2770.281, 2794.813, 2828.981), stdev = 27.792
[info]   CI (99.9%): [2687.795, 2901.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2193.827 ±(99.9%) 37.927 B/op [Average]
[info]   (min, avg, max) = (2181.802, 2193.827, 2204.928), stdev = 9.850
[info]   CI (99.9%): [2155.900, 2231.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2733.591 ±(99.9%) 1073.236 MB/sec [Average]
[info]   (min, avg, max) = (2355.351, 2733.591, 3042.907), stdev = 278.716
[info]   CI (99.9%): [1660.356, 3806.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2145.701 ±(99.9%) 836.775 B/op [Average]
[info]   (min, avg, max) = (1858.352, 2145.701, 2367.412), stdev = 217.308
[info]   CI (99.9%): [1308.926, 2982.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.405 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.250), stdev = 0.105
[info]   CI (99.9%): [≈ 0, 0.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.313 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.049, 0.193), stdev = 0.081
[info]   CI (99.9%): [≈ 0, 0.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 9.000), stdev = 0.837
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.200, 12.000), stdev = 1.304
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava
[info] # Run progress: 2.35% complete, ETA 01:26:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.615 ops/s
[info] # Warmup Iteration   2: 8609063.010 ops/s
[info] # Warmup Iteration   3: 9144919.058 ops/s
[info] Iteration   1: 9758559.747 ops/s
[info]                  ·gc.alloc.rate:                   1232.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              198.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     209.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 9774879.411 ops/s
[info]                  ·gc.alloc.rate:               1230.142 MB/sec
[info]                  ·gc.alloc.rate.norm:          198.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 157.722 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 9566758.718 ops/s
[info]                  ·gc.alloc.rate:                   1212.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              199.465 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.616 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.759 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 9830503.304 ops/s
[info]                  ·gc.alloc.rate:                   1230.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              196.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 9871279.913 ops/s
[info]                  ·gc.alloc.rate:                   1243.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              198.149 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava":
[info]   9760396.219 ±(99.9%) 451194.651 ops/s [Average]
[info]   (min, avg, max) = (9566758.718, 9760396.219, 9871279.913), stdev = 117173.818
[info]   CI (99.9%): [9309201.568, 10211590.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1229.899 ±(99.9%) 41.724 MB/sec [Average]
[info]   (min, avg, max) = (1212.949, 1229.899, 1243.137), stdev = 10.835
[info]   CI (99.9%): [1188.176, 1271.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   198.283 ±(99.9%) 3.526 B/op [Average]
[info]   (min, avg, max) = (196.991, 198.283, 199.465), stdev = 0.916
[info]   CI (99.9%): [194.757, 201.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1171.093 ±(99.9%) 682.770 MB/sec [Average]
[info]   (min, avg, max) = (974.162, 1171.093, 1303.185), stdev = 177.313
[info]   CI (99.9%): [488.323, 1853.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   188.955 ±(99.9%) 114.518 B/op [Average]
[info]   (min, avg, max) = (155.276, 188.955, 214.304), stdev = 29.740
[info]   CI (99.9%): [74.437, 303.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.941 ±(99.9%) 7.911 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.941, 4.616), stdev = 2.055
[info]   CI (99.9%): [≈ 0, 8.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.155 ±(99.9%) 1.301 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.155, 0.759), stdev = 0.338
[info]   CI (99.9%): [≈ 0, 1.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 12.000), stdev = 2.915
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala
[info] # Run progress: 2.59% complete, ETA 01:27:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 128993.124 ops/s
[info] # Warmup Iteration   2: 2973961.873 ops/s
[info] # Warmup Iteration   3: 3209924.147 ops/s
[info] Iteration   1: 3246174.718 ops/s
[info]                  ·gc.alloc.rate:                   2017.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              977.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     953.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.978 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 3198264.003 ops/s
[info]                  ·gc.alloc.rate:                   2003.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              985.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     962.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 3154989.596 ops/s
[info]                  ·gc.alloc.rate:                   1986.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              990.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     981.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3306276.648 ops/s
[info]                  ·gc.alloc.rate:                   2078.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              989.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     946.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3227400.566 ops/s
[info]                  ·gc.alloc.rate:                   2032.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              990.719 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2005.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     977.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala":
[info]   3226621.106 ±(99.9%) 216657.801 ops/s [Average]
[info]   (min, avg, max) = (3154989.596, 3226621.106, 3306276.648), stdev = 56265.343
[info]   CI (99.9%): [3009963.305, 3443278.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2023.503 ±(99.9%) 135.554 MB/sec [Average]
[info]   (min, avg, max) = (1986.203, 2023.503, 2078.641), stdev = 35.203
[info]   CI (99.9%): [1887.949, 2159.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   986.880 ±(99.9%) 21.405 B/op [Average]
[info]   (min, avg, max) = (977.644, 986.880, 990.811), stdev = 5.559
[info]   CI (99.9%): [965.475, 1008.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1977.138 ±(99.9%) 75.461 MB/sec [Average]
[info]   (min, avg, max) = (1955.844, 1977.138, 2005.617), stdev = 19.597
[info]   CI (99.9%): [1901.676, 2052.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   964.430 ±(99.9%) 58.876 B/op [Average]
[info]   (min, avg, max) = (946.227, 964.430, 981.966), stdev = 15.290
[info]   CI (99.9%): [905.554, 1023.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.846 ±(99.9%) 6.967 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.846, 4.082), stdev = 1.809
[info]   CI (99.9%): [≈ 0, 7.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.410 ±(99.9%) 3.376 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.410, 1.978), stdev = 0.877
[info]   CI (99.9%): [≈ 0, 3.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 16.000), stdev = 3.391
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala
[info] # Run progress: 2.82% complete, ETA 01:26:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3654191.257 ops/s
[info] # Warmup Iteration   2: 12623290.255 ops/s
[info] # Warmup Iteration   3: 13050743.626 ops/s
[info] Iteration   1: 13442749.955 ops/s
[info]                  ·gc.alloc.rate:                   1767.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              206.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     233.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.329 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 13633305.769 ops/s
[info]                  ·gc.alloc.rate:                   1783.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              205.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     191.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 13348632.150 ops/s
[info]                  ·gc.alloc.rate:                   1766.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     195.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 13252089.827 ops/s
[info]                  ·gc.alloc.rate:               1745.126 MB/sec
[info]                  ·gc.alloc.rate.norm:          207.253 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1664.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 197.659 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 13106526.253 ops/s
[info]                  ·gc.alloc.rate:               1736.562 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.531 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1673.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 200.907 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala":
[info]   13356660.791 ±(99.9%) 764114.228 ops/s [Average]
[info]   (min, avg, max) = (13106526.253, 13356660.791, 13633305.769), stdev = 198438.038
[info]   CI (99.9%): [12592546.563, 14120775.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1759.812 ±(99.9%) 72.217 MB/sec [Average]
[info]   (min, avg, max) = (1736.562, 1759.812, 1783.104), stdev = 18.754
[info]   CI (99.9%): [1687.595, 1832.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   207.365 ±(99.9%) 4.111 B/op [Average]
[info]   (min, avg, max) = (205.847, 207.365, 208.531), stdev = 1.068
[info]   CI (99.9%): [203.254, 211.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1730.138 ±(99.9%) 575.152 MB/sec [Average]
[info]   (min, avg, max) = (1658.045, 1730.138, 1997.105), stdev = 149.365
[info]   CI (99.9%): [1154.986, 2305.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   203.849 ±(99.9%) 65.870 B/op [Average]
[info]   (min, avg, max) = (191.410, 203.849, 233.820), stdev = 17.106
[info]   CI (99.9%): [137.979, 269.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.591 ±(99.9%) 4.780 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.591, 2.810), stdev = 1.241
[info]   CI (99.9%): [≈ 0, 5.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.069 ±(99.9%) 0.560 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.069, 0.329), stdev = 0.145
[info]   CI (99.9%): [≈ 0, 0.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 13.000), stdev = 2.915
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson
[info] # Run progress: 3.06% complete, ETA 01:26:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9876.536 ops/s
[info] # Warmup Iteration   2: 246302.539 ops/s
[info] # Warmup Iteration   3: 596711.489 ops/s
[info] Iteration   1: 1066949.390 ops/s
[info]                  ·gc.alloc.rate:                   2481.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              3660.214 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2301.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3395.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.211 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 1152983.387 ops/s
[info]                  ·gc.alloc.rate:                   2563.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              3499.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2649.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3616.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.227 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1158486.944 ops/s
[info]                  ·gc.alloc.rate:                   2557.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              3474.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2334.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3171.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.226 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1160920.676 ops/s
[info]                  ·gc.alloc.rate:                   2609.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              3537.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2687.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3643.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1171157.462 ops/s
[info]                  ·gc.alloc.rate:               2619.011 MB/sec
[info]                  ·gc.alloc.rate.norm:          3518.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2364.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3177.020 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson":
[info]   1142099.572 ±(99.9%) 163744.622 ops/s [Average]
[info]   (min, avg, max) = (1066949.390, 1142099.572, 1171157.462), stdev = 42523.958
[info]   CI (99.9%): [978354.950, 1305844.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2566.081 ±(99.9%) 210.093 MB/sec [Average]
[info]   (min, avg, max) = (2481.379, 2566.081, 2619.011), stdev = 54.561
[info]   CI (99.9%): [2355.988, 2776.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   3537.912 ±(99.9%) 278.154 B/op [Average]
[info]   (min, avg, max) = (3474.344, 3537.912, 3660.214), stdev = 72.236
[info]   CI (99.9%): [3259.758, 3816.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2467.671 ±(99.9%) 713.474 MB/sec [Average]
[info]   (min, avg, max) = (2301.634, 2467.671, 2687.926), stdev = 185.287
[info]   CI (99.9%): [1754.198, 3181.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3400.859 ±(99.9%) 878.184 B/op [Average]
[info]   (min, avg, max) = (3171.947, 3400.859, 3643.996), stdev = 228.062
[info]   CI (99.9%): [2522.675, 4279.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.375 ±(99.9%) 2.437 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.375, 1.499), stdev = 0.633
[info]   CI (99.9%): [≈ 0, 2.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.544 ±(99.9%) 3.609 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.544, 2.211), stdev = 0.937
[info]   CI (99.9%): [≈ 0, 4.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.400, 14.000), stdev = 1.673
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce
[info] # Run progress: 3.29% complete, ETA 01:26:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 274175.421 ops/s
[info] # Warmup Iteration   2: 2363327.750 ops/s
[info] # Warmup Iteration   3: 2401485.562 ops/s
[info] Iteration   1: 2407815.864 ops/s
[info]                  ·gc.alloc.rate:                   2105.754 MB/sec
[info]                  ·gc.alloc.rate.norm:              1376.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1291.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.327 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 2460007.138 ops/s
[info]                  ·gc.alloc.rate:                   2152.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              1377.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1971.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1261.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2451930.429 ops/s
[info]                  ·gc.alloc.rate:                   2188.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              1404.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2315.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1486.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 2449337.277 ops/s
[info]                  ·gc.alloc.rate:                   2167.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              1392.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1285.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 2388770.235 ops/s
[info]                  ·gc.alloc.rate:               2119.975 MB/sec
[info]                  ·gc.alloc.rate.norm:          1396.748 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2014.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1327.250 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce":
[info]   2431572.188 ±(99.9%) 120774.219 ops/s [Average]
[info]   (min, avg, max) = (2388770.235, 2431572.188, 2460007.138), stdev = 31364.681
[info]   CI (99.9%): [2310797.970, 2552346.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2146.812 ±(99.9%) 130.248 MB/sec [Average]
[info]   (min, avg, max) = (2105.754, 2146.812, 2188.053), stdev = 33.825
[info]   CI (99.9%): [2016.564, 2277.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1389.547 ±(99.9%) 47.740 B/op [Average]
[info]   (min, avg, max) = (1376.351, 1389.547, 1404.546), stdev = 12.398
[info]   CI (99.9%): [1341.807, 1437.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2055.786 ±(99.9%) 562.078 MB/sec [Average]
[info]   (min, avg, max) = (1971.779, 2055.786, 2315.010), stdev = 145.970
[info]   CI (99.9%): [1493.708, 2617.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1330.511 ±(99.9%) 346.802 B/op [Average]
[info]   (min, avg, max) = (1261.522, 1330.511, 1486.041), stdev = 90.063
[info]   CI (99.9%): [983.709, 1677.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.779 ±(99.9%) 6.005 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.779, 3.560), stdev = 1.559
[info]   CI (99.9%): [≈ 0, 6.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.508 ±(99.9%) 3.926 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.508, 2.327), stdev = 1.020
[info]   CI (99.9%): [≈ 0, 4.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 11.000), stdev = 1.789
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava
[info] # Run progress: 3.53% complete, ETA 01:26:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.613 ops/s
[info] # Warmup Iteration   2: 18543275.846 ops/s
[info] # Warmup Iteration   3: 18627561.524 ops/s
[info] Iteration   1: 19865907.580 ops/s
[info]                  ·gc.alloc.rate:                   623.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 19625410.478 ops/s
[info]                  ·gc.alloc.rate:               629.799 MB/sec
[info]                  ·gc.alloc.rate.norm:          50.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52.033 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 19987272.869 ops/s
[info]                  ·gc.alloc.rate:                   616.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.543 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 19542386.486 ops/s
[info]                  ·gc.alloc.rate:               615.080 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.525 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52.415 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 19631950.185 ops/s
[info]                  ·gc.alloc.rate:                   616.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava":
[info]   19730585.520 ±(99.9%) 721443.728 ops/s [Average]
[info]   (min, avg, max) = (19542386.486, 19730585.520, 19987272.869), stdev = 187356.645
[info]   CI (99.9%): [19009141.791, 20452029.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   620.187 ±(99.9%) 24.288 MB/sec [Average]
[info]   (min, avg, max) = (615.080, 620.187, 629.799), stdev = 6.308
[info]   CI (99.9%): [595.899, 644.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   49.467 ±(99.9%) 2.669 B/op [Average]
[info]   (min, avg, max) = (48.543, 49.467, 50.492), stdev = 0.693
[info]   CI (99.9%): [46.797, 52.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   584.892 ±(99.9%) 559.862 MB/sec [Average]
[info]   (min, avg, max) = (324.823, 584.892, 652.169), stdev = 145.394
[info]   CI (99.9%): [25.030, 1144.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   46.719 ±(99.9%) 45.554 B/op [Average]
[info]   (min, avg, max) = (25.571, 46.719, 52.415), stdev = 11.830
[info]   CI (99.9%): [1.166, 92.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.013 ±(99.9%) 0.060 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.037), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.005 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 7.000), stdev = 1.517
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala
[info] # Run progress: 3.76% complete, ETA 01:26:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 477577.243 ops/s
[info] # Warmup Iteration   2: 6234192.312 ops/s
[info] # Warmup Iteration   3: 6307171.695 ops/s
[info] Iteration   1: 6351441.483 ops/s
[info]                  ·gc.alloc.rate:                   1801.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              446.449 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     487.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.841 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.952 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 6201627.253 ops/s
[info]                  ·gc.alloc.rate:                   1759.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              446.443 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     414.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 6329852.141 ops/s
[info]                  ·gc.alloc.rate:                   1801.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              447.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     406.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6104996.966 ops/s
[info]                  ·gc.alloc.rate:                   1740.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              448.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     425.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 6297502.919 ops/s
[info]                  ·gc.alloc.rate:                   1808.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              451.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     497.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala":
[info]   6257084.152 ±(99.9%) 394752.715 ops/s [Average]
[info]   (min, avg, max) = (6104996.966, 6257084.152, 6351441.483), stdev = 102516.026
[info]   CI (99.9%): [5862331.438, 6651836.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1782.475 ±(99.9%) 117.463 MB/sec [Average]
[info]   (min, avg, max) = (1740.704, 1782.475, 1808.674), stdev = 30.505
[info]   CI (99.9%): [1665.012, 1899.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   448.273 ±(99.9%) 8.442 B/op [Average]
[info]   (min, avg, max) = (446.443, 448.273, 451.770), stdev = 2.192
[info]   CI (99.9%): [439.831, 456.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1776.087 ±(99.9%) 721.497 MB/sec [Average]
[info]   (min, avg, max) = (1632.767, 1776.087, 1993.628), stdev = 187.370
[info]   CI (99.9%): [1054.591, 2497.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   446.401 ±(99.9%) 165.690 B/op [Average]
[info]   (min, avg, max) = (406.954, 446.401, 497.968), stdev = 43.029
[info]   CI (99.9%): [280.711, 612.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.793 ±(99.9%) 6.561 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.793, 3.841), stdev = 1.704
[info]   CI (99.9%): [≈ 0, 7.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.197 ±(99.9%) 1.625 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.197, 0.952), stdev = 0.422
[info]   CI (99.9%): [≈ 0, 1.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 16.000), stdev = 4.087
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala
[info] # Run progress: 4.00% complete, ETA 01:25:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4459201.731 ops/s
[info] # Warmup Iteration   2: 27654878.055 ops/s
[info] # Warmup Iteration   3: 28073518.002 ops/s
[info] Iteration   1: 28332935.323 ops/s
[info]                  ·gc.alloc.rate:                   890.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 27668119.007 ops/s
[info]                  ·gc.alloc.rate:               865.694 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37.647 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 27038999.660 ops/s
[info]                  ·gc.alloc.rate:                   850.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 27996509.616 ops/s
[info]                  ·gc.alloc.rate:                   879.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.206 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 27643987.015 ops/s
[info]                  ·gc.alloc.rate:                   869.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.494 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala":
[info]   27736110.124 ±(99.9%) 1849793.266 ops/s [Average]
[info]   (min, avg, max) = (27038999.660, 27736110.124, 28332935.323), stdev = 480385.437
[info]   CI (99.9%): [25886316.858, 29585903.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   871.343 ±(99.9%) 58.176 MB/sec [Average]
[info]   (min, avg, max) = (850.704, 871.343, 890.796), stdev = 15.108
[info]   CI (99.9%): [813.167, 929.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   49.427 ±(99.9%) 0.447 B/op [Average]
[info]   (min, avg, max) = (49.227, 49.427, 49.516), stdev = 0.116
[info]   CI (99.9%): [48.980, 49.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   859.838 ±(99.9%) 692.759 MB/sec [Average]
[info]   (min, avg, max) = (662.054, 859.838, 993.906), stdev = 179.907
[info]   CI (99.9%): [167.079, 1552.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   48.814 ±(99.9%) 40.072 B/op [Average]
[info]   (min, avg, max) = (37.299, 48.814, 57.851), stdev = 10.407
[info]   CI (99.9%): [8.742, 88.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.666 ±(99.9%) 5.467 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.666, 3.206), stdev = 1.420
[info]   CI (99.9%): [≈ 0, 6.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.037 ±(99.9%) 0.307 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.180), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 8.000), stdev = 1.517
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 4.24% complete, ETA 01:25:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9017056.944 ops/s
[info] # Warmup Iteration   2: 31699646.152 ops/s
[info] # Warmup Iteration   3: 31702933.458 ops/s
[info] Iteration   1: 31631007.536 ops/s
[info]                  ·gc.alloc.rate:      1.866 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.093 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 31676371.737 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 31719352.445 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 31691884.321 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 31681915.428 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc":
[info]   31680106.293 ±(99.9%) 123384.303 ops/s [Average]
[info]   (min, avg, max) = (31631007.536, 31680106.293, 31719352.445), stdev = 32042.512
[info]   CI (99.9%): [31556721.990, 31803490.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.373 ±(99.9%) 3.212 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.373, 1.866), stdev = 0.834
[info]   CI (99.9%): [≈ 0, 3.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.019 ±(99.9%) 0.160 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.019, 0.093), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson
[info] # Run progress: 4.47% complete, ETA 01:25:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18636.554 ops/s
[info] # Warmup Iteration   2: 1527151.266 ops/s
[info] # Warmup Iteration   3: 1768370.353 ops/s
[info] Iteration   1: 1810721.895 ops/s
[info]                  ·gc.alloc.rate:                   3057.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              2657.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2932.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2548.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.181 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 1711932.830 ops/s
[info]                  ·gc.alloc.rate:                        2919.938 MB/sec
[info]                  ·gc.alloc.rate.norm:                   2683.565 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.019 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.017 B/op
[info]                  ·gc.churn.Metaspace:                   0.055 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:               2975.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          2734.363 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.525 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             2.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      0.230 B/op
[info]                  ·gc.count:                             11.000 counts
[info]                  ·gc.time:                              64.000 ms
[info] Iteration   3: 1820602.135 ops/s
[info]                  ·gc.alloc.rate:                   3090.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              2671.268 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3009.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2601.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1825946.821 ops/s
[info]                  ·gc.alloc.rate:                   3100.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              2672.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3036.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2617.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1826877.960 ops/s
[info]                  ·gc.alloc.rate:                   3101.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              2672.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3049.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2627.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson":
[info]   1799216.328 ±(99.9%) 189503.182 ops/s [Average]
[info]   (min, avg, max) = (1711932.830, 1799216.328, 1826877.960), stdev = 49213.375
[info]   CI (99.9%): [1609713.146, 1988719.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   3054.077 ±(99.9%) 296.937 MB/sec [Average]
[info]   (min, avg, max) = (2919.938, 3054.077, 3101.996), stdev = 77.114
[info]   CI (99.9%): [2757.139, 3351.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2671.430 ±(99.9%) 35.684 B/op [Average]
[info]   (min, avg, max) = (2657.501, 2671.430, 2683.565), stdev = 9.267
[info]   CI (99.9%): [2635.747, 2707.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.032 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.019), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm":
[info]   0.003 ±(99.9%) 0.030 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.Metaspace":
[info]   0.011 ±(99.9%) 0.095 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.055), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.Metaspace.norm":
[info]   0.010 ±(99.9%) 0.087 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.050), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   3000.679 ±(99.9%) 183.685 MB/sec [Average]
[info]   (min, avg, max) = (2932.375, 3000.679, 3049.914), stdev = 47.702
[info]   CI (99.9%): [2816.994, 3184.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2625.820 ±(99.9%) 261.098 B/op [Average]
[info]   (min, avg, max) = (2548.743, 2625.820, 2734.363), stdev = 67.806
[info]   CI (99.9%): [2364.722, 2886.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen":
[info]   0.505 ±(99.9%) 4.349 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.505, 2.525), stdev = 1.129
[info]   CI (99.9%): [≈ 0, 4.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm":
[info]   0.464 ±(99.9%) 3.997 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.464, 2.321), stdev = 1.038
[info]   CI (99.9%): [≈ 0, 4.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.129 ±(99.9%) 0.360 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.129, 0.250), stdev = 0.094
[info]   CI (99.9%): [≈ 0, 0.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.114 ±(99.9%) 0.330 B/op [Average]
[info]   (min, avg, max) = (0.036, 0.114, 0.230), stdev = 0.086
[info]   CI (99.9%): [≈ 0, 0.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.count":
[info]   47.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 11.000), stdev = 0.894
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.time":
[info]   113.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 22.600, 64.000), stdev = 23.147
[info]   CI (99.9%): [113.000, 113.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 4.71% complete, ETA 01:25:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67306.727 ops/s
[info] # Warmup Iteration   2: 303100.040 ops/s
[info] # Warmup Iteration   3: 306103.869 ops/s
[info] Iteration   1: 303851.903 ops/s
[info]                  ·gc.alloc.rate:                   1847.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              9570.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8560.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.435 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.791 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 314890.383 ops/s
[info]                  ·gc.alloc.rate:                   1929.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              9644.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9861.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.040 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 316624.671 ops/s
[info]                  ·gc.alloc.rate:               1959.377 MB/sec
[info]                  ·gc.alloc.rate.norm:          9739.923 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1980.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9844.494 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 315383.571 ops/s
[info]                  ·gc.alloc.rate:                   1939.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              9680.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8295.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 313256.632 ops/s
[info]                  ·gc.alloc.rate:                   1941.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              9754.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10089.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce":
[info]   312801.432 ±(99.9%) 19817.690 ops/s [Average]
[info]   (min, avg, max) = (303851.903, 312801.432, 316624.671), stdev = 5146.591
[info]   CI (99.9%): [292983.742, 332619.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1923.625 ±(99.9%) 168.765 MB/sec [Average]
[info]   (min, avg, max) = (1847.578, 1923.625, 1959.377), stdev = 43.828
[info]   CI (99.9%): [1754.860, 2092.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9677.984 ±(99.9%) 288.265 B/op [Average]
[info]   (min, avg, max) = (9570.173, 9677.984, 9754.325), stdev = 74.862
[info]   CI (99.9%): [9389.719, 9966.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1855.372 ±(99.9%) 697.383 MB/sec [Average]
[info]   (min, avg, max) = (1652.669, 1855.372, 2008.126), stdev = 181.108
[info]   CI (99.9%): [1157.989, 2552.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9330.427 ±(99.9%) 3213.448 B/op [Average]
[info]   (min, avg, max) = (8295.833, 9330.427, 10089.316), stdev = 834.522
[info]   CI (99.9%): [6116.980, 12543.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.737 ±(99.9%) 5.816 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.737, 3.435), stdev = 1.510
[info]   CI (99.9%): [≈ 0, 6.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.808 ±(99.9%) 30.144 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.808, 17.791), stdev = 7.828
[info]   CI (99.9%): [≈ 0, 33.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 11.000), stdev = 1.643
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.94% complete, ETA 01:25:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 112324.669 ops/s
[info] # Warmup Iteration   2: 444554.851 ops/s
[info] # Warmup Iteration   3: 477307.503 ops/s
[info] Iteration   1: 491851.048 ops/s
[info]                  ·gc.alloc.rate:                   646.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              2067.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.393 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2080.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 477663.937 ops/s
[info]                  ·gc.alloc.rate:                   625.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              2057.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2139.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 480152.463 ops/s
[info]                  ·gc.alloc.rate:               622.707 MB/sec
[info]                  ·gc.alloc.rate.norm:          2041.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1068.826 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 479147.895 ops/s
[info]                  ·gc.alloc.rate:                   628.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2146.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 478338.992 ops/s
[info]                  ·gc.alloc.rate:               630.543 MB/sec
[info]                  ·gc.alloc.rate.norm:          2074.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2154.551 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala":
[info]   481430.867 ±(99.9%) 22713.570 ops/s [Average]
[info]   (min, avg, max) = (477663.937, 481430.867, 491851.048), stdev = 5898.642
[info]   CI (99.9%): [458717.297, 504144.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   630.724 ±(99.9%) 35.840 MB/sec [Average]
[info]   (min, avg, max) = (622.707, 630.724, 646.478), stdev = 9.308
[info]   CI (99.9%): [594.883, 666.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   2061.065 ±(99.9%) 48.712 B/op [Average]
[info]   (min, avg, max) = (2041.132, 2061.065, 2074.232), stdev = 12.650
[info]   CI (99.9%): [2012.353, 2109.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   587.048 ±(99.9%) 561.816 MB/sec [Average]
[info]   (min, avg, max) = (326.077, 587.048, 654.959), stdev = 145.902
[info]   CI (99.9%): [25.232, 1148.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1917.993 ±(99.9%) 1831.367 B/op [Average]
[info]   (min, avg, max) = (1068.826, 1917.993, 2154.551), stdev = 475.600
[info]   CI (99.9%): [86.626, 3749.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.263 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.068, 0.137), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 8.000), stdev = 1.949
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.18% complete, ETA 01:24:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 705283.173 ops/s
[info] # Warmup Iteration   2: 1257928.999 ops/s
[info] # Warmup Iteration   3: 1296688.486 ops/s
[info] Iteration   1: 1308627.318 ops/s
[info]                  ·gc.alloc.rate:                   905.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              1088.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1194.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1298048.929 ops/s
[info]                  ·gc.alloc.rate:                   880.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              1067.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     804.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1298719.673 ops/s
[info]                  ·gc.alloc.rate:                   898.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              1089.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1206.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.602 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.153 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1280231.126 ops/s
[info]                  ·gc.alloc.rate:                   872.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.149 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     815.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.691 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1276179.058 ops/s
[info]                  ·gc.alloc.rate:                   883.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              1088.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1223.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.231 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala":
[info]   1292361.221 ±(99.9%) 52599.269 ops/s [Average]
[info]   (min, avg, max) = (1276179.058, 1292361.221, 1308627.318), stdev = 13659.863
[info]   CI (99.9%): [1239761.952, 1344960.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   888.012 ±(99.9%) 52.505 MB/sec [Average]
[info]   (min, avg, max) = (872.192, 888.012, 905.340), stdev = 13.635
[info]   CI (99.9%): [835.507, 940.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1081.331 ±(99.9%) 40.202 B/op [Average]
[info]   (min, avg, max) = (1067.880, 1081.331, 1089.036), stdev = 10.440
[info]   CI (99.9%): [1041.129, 1121.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   861.610 ±(99.9%) 696.369 MB/sec [Average]
[info]   (min, avg, max) = (663.487, 861.610, 996.009), stdev = 180.845
[info]   CI (99.9%): [165.241, 1557.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1048.878 ±(99.9%) 840.528 B/op [Average]
[info]   (min, avg, max) = (804.479, 1048.878, 1223.222), stdev = 218.282
[info]   CI (99.9%): [208.350, 1889.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.687 ±(99.9%) 4.204 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.687, 2.602), stdev = 1.092
[info]   CI (99.9%): [≈ 0, 4.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.835 ±(99.9%) 5.091 B/op [Average]
[info]   (min, avg, max) = (0.050, 0.835, 3.153), stdev = 1.322
[info]   CI (99.9%): [≈ 0, 5.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 9.000), stdev = 2.828
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 5.41% complete, ETA 01:24:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9886.823 ops/s
[info] # Warmup Iteration   2: 94973.115 ops/s
[info] # Warmup Iteration   3: 111199.812 ops/s
[info] Iteration   1: 115612.001 ops/s
[info]                  ·gc.alloc.rate:                   3656.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              49762.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3611.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49151.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.267 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 114279.434 ops/s
[info]                  ·gc.alloc.rate:                   3630.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              49992.409 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3329.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45859.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 115204.282 ops/s
[info]                  ·gc.alloc.rate:                   3674.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              50195.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3706.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50633.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.138 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 113425.225 ops/s
[info]                  ·gc.alloc.rate:                   3607.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              50057.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3388.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47017.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.867 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 114661.150 ops/s
[info]                  ·gc.alloc.rate:               3645.468 MB/sec
[info]                  ·gc.alloc.rate.norm:          50038.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3397.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46632.637 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson":
[info]   114636.418 ±(99.9%) 3261.287 ops/s [Average]
[info]   (min, avg, max) = (113425.225, 114636.418, 115612.001), stdev = 846.946
[info]   CI (99.9%): [111375.131, 117897.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3642.791 ±(99.9%) 98.239 MB/sec [Average]
[info]   (min, avg, max) = (3607.476, 3642.791, 3674.292), stdev = 25.512
[info]   CI (99.9%): [3544.553, 3741.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   50009.150 ±(99.9%) 606.607 B/op [Average]
[info]   (min, avg, max) = (49762.120, 50009.150, 50195.701), stdev = 157.534
[info]   CI (99.9%): [49402.543, 50615.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3486.776 ±(99.9%) 627.214 MB/sec [Average]
[info]   (min, avg, max) = (3329.947, 3486.776, 3706.359), stdev = 162.886
[info]   CI (99.9%): [2859.561, 4113.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   47858.984 ±(99.9%) 7599.251 B/op [Average]
[info]   (min, avg, max) = (45859.891, 47858.984, 50633.776), stdev = 1973.501
[info]   CI (99.9%): [40259.733, 55458.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.250 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.167), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.912 ±(99.9%) 3.396 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.912, 2.267), stdev = 0.882
[info]   CI (99.9%): [≈ 0, 4.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   52.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.400, 11.000), stdev = 0.548
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.000, 15.000), stdev = 1.000
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 5.65% complete, ETA 01:24:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 117005.880 ops/s
[info] # Warmup Iteration   2: 319108.683 ops/s
[info] # Warmup Iteration   3: 332386.130 ops/s
[info] Iteration   1: 341119.820 ops/s
[info]                  ·gc.alloc.rate:               1180.917 MB/sec
[info]                  ·gc.alloc.rate.norm:          5446.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6088.385 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 343701.455 ops/s
[info]                  ·gc.alloc.rate:                   1178.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              5396.441 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4540.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.832 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.964 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 332563.071 ops/s
[info]                  ·gc.alloc.rate:                   1161.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              5494.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6240.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.547 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 338563.146 ops/s
[info]                  ·gc.alloc.rate:               1161.259 MB/sec
[info]                  ·gc.alloc.rate.norm:          5398.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:      985.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4580.125 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 349044.016 ops/s
[info]                  ·gc.alloc.rate:               1223.092 MB/sec
[info]                  ·gc.alloc.rate.norm:          5515.281 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5929.317 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce":
[info]   340998.302 ±(99.9%) 23512.463 ops/s [Average]
[info]   (min, avg, max) = (332563.071, 340998.302, 349044.016), stdev = 6106.112
[info]   CI (99.9%): [317485.838, 364510.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1181.045 ±(99.9%) 97.406 MB/sec [Average]
[info]   (min, avg, max) = (1161.171, 1181.045, 1223.092), stdev = 25.296
[info]   CI (99.9%): [1083.639, 1278.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5450.306 ±(99.9%) 209.237 B/op [Average]
[info]   (min, avg, max) = (5396.441, 5450.306, 5515.281), stdev = 54.338
[info]   CI (99.9%): [5241.069, 5659.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1186.158 ±(99.9%) 694.734 MB/sec [Average]
[info]   (min, avg, max) = (985.271, 1186.158, 1319.978), stdev = 180.420
[info]   CI (99.9%): [491.424, 1880.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5475.781 ±(99.9%) 3246.212 B/op [Average]
[info]   (min, avg, max) = (4540.512, 5475.781, 6240.567), stdev = 843.031
[info]   CI (99.9%): [2229.569, 8721.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.716 ±(99.9%) 4.722 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.716, 2.832), stdev = 1.226
[info]   CI (99.9%): [≈ 0, 5.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.302 ±(99.9%) 21.623 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.302, 12.964), stdev = 5.615
[info]   CI (99.9%): [≈ 0, 24.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 11.000), stdev = 2.683
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.88% complete, ETA 01:24:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 318675.765 ops/s
[info] # Warmup Iteration   2: 863419.247 ops/s
[info] # Warmup Iteration   3: 872687.453 ops/s
[info] Iteration   1: 886567.074 ops/s
[info]                  ·gc.alloc.rate:                   661.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              1174.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1155.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 880265.434 ops/s
[info]                  ·gc.alloc.rate:               656.596 MB/sec
[info]                  ·gc.alloc.rate.norm:          1173.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1167.186 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 910169.232 ops/s
[info]                  ·gc.alloc.rate:                   673.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              1163.925 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1130.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 868096.199 ops/s
[info]                  ·gc.alloc.rate:                   645.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              1171.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1187.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 890807.520 ops/s
[info]                  ·gc.alloc.rate:                   656.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1159.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.540 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.253 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala":
[info]   887181.092 ±(99.9%) 59468.519 ops/s [Average]
[info]   (min, avg, max) = (868096.199, 887181.092, 910169.232), stdev = 15443.785
[info]   CI (99.9%): [827712.573, 946649.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   658.739 ±(99.9%) 37.825 MB/sec [Average]
[info]   (min, avg, max) = (645.934, 658.739, 673.112), stdev = 9.823
[info]   CI (99.9%): [620.915, 696.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1168.618 ±(99.9%) 24.286 B/op [Average]
[info]   (min, avg, max) = (1160.074, 1168.618, 1174.040), stdev = 6.307
[info]   CI (99.9%): [1144.332, 1192.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   653.773 ±(99.9%) 7.513 MB/sec [Average]
[info]   (min, avg, max) = (651.143, 653.773, 656.274), stdev = 1.951
[info]   CI (99.9%): [646.260, 661.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1160.037 ±(99.9%) 78.813 B/op [Average]
[info]   (min, avg, max) = (1130.558, 1160.037, 1187.208), stdev = 20.467
[info]   CI (99.9%): [1081.224, 1238.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.733 ±(99.9%) 6.042 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.733, 3.540), stdev = 1.569
[info]   CI (99.9%): [≈ 0, 6.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.294 ±(99.9%) 10.674 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.294, 6.253), stdev = 2.772
[info]   CI (99.9%): [≈ 0, 11.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.12% complete, ETA 01:24:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1131476.429 ops/s
[info] # Warmup Iteration   2: 2255569.499 ops/s
[info] # Warmup Iteration   3: 2477987.409 ops/s
[info] Iteration   1: 2506754.895 ops/s
[info]                  ·gc.alloc.rate:               1189.106 MB/sec
[info]                  ·gc.alloc.rate.norm:          746.400 B/op
[info]                  ·gc.churn.PS_Eden_Space:      994.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 624.027 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 2527318.758 ops/s
[info]                  ·gc.alloc.rate:                   1209.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     826.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.853 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.776 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2553592.263 ops/s
[info]                  ·gc.alloc.rate:                   1219.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              751.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     611.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2544887.536 ops/s
[info]                  ·gc.alloc.rate:                   1222.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              755.994 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     815.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.116 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2492103.606 ops/s
[info]                  ·gc.alloc.rate:                   1192.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     625.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala":
[info]   2524931.412 ±(99.9%) 98801.874 ops/s [Average]
[info]   (min, avg, max) = (2492103.606, 2524931.412, 2553592.263), stdev = 25658.533
[info]   CI (99.9%): [2426129.537, 2623733.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1206.679 ±(99.9%) 59.126 MB/sec [Average]
[info]   (min, avg, max) = (1189.106, 1206.679, 1222.455), stdev = 15.355
[info]   CI (99.9%): [1147.553, 1265.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   752.028 ±(99.9%) 13.477 B/op [Average]
[info]   (min, avg, max) = (746.400, 752.028, 755.994), stdev = 3.500
[info]   CI (99.9%): [738.551, 765.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1124.798 ±(99.9%) 699.233 MB/sec [Average]
[info]   (min, avg, max) = (990.590, 1124.798, 1328.296), stdev = 181.589
[info]   CI (99.9%): [425.565, 1824.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   700.690 ±(99.9%) 424.606 B/op [Average]
[info]   (min, avg, max) = (611.349, 700.690, 826.773), stdev = 110.269
[info]   CI (99.9%): [276.084, 1125.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.666 ±(99.9%) 4.728 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.666, 2.853), stdev = 1.228
[info]   CI (99.9%): [≈ 0, 5.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.414 ±(99.9%) 2.943 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.414, 1.776), stdev = 0.764
[info]   CI (99.9%): [≈ 0, 3.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 10.000), stdev = 2.608
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 6.35% complete, ETA 01:24:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1591408.644 ops/s
[info] # Warmup Iteration   2: 2647057.318 ops/s
[info] # Warmup Iteration   3: 2931480.547 ops/s
[info] Iteration   1: 2930820.859 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2931053.334 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2917804.177 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2919014.583 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2918105.022 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2923359.595 ±(99.9%) 26693.075 ops/s [Average]
[info]   (min, avg, max) = (2917804.177, 2923359.595, 2931053.334), stdev = 6932.107
[info]   CI (99.9%): [2896666.520, 2950052.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 6.59% complete, ETA 01:23:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 126953.767 ops/s
[info] # Warmup Iteration   2: 460616.439 ops/s
[info] # Warmup Iteration   3: 463638.276 ops/s
[info] Iteration   1: 491466.845 ops/s
[info]                  ·gc.alloc.rate:               730.374 MB/sec
[info]                  ·gc.alloc.rate.norm:          2338.393 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2099.217 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 491820.881 ops/s
[info]                  ·gc.alloc.rate:                   727.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              2327.543 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2093.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 492273.755 ops/s
[info]                  ·gc.alloc.rate:               728.177 MB/sec
[info]                  ·gc.alloc.rate.norm:          2327.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2087.252 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 487793.591 ops/s
[info]                  ·gc.alloc.rate:                   742.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              2394.695 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3167.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 489654.491 ops/s
[info]                  ·gc.alloc.rate:                   729.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2107.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.543 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson":
[info]   490601.913 ±(99.9%) 7155.707 ops/s [Average]
[info]   (min, avg, max) = (487793.591, 490601.913, 492273.755), stdev = 1858.314
[info]   CI (99.9%): [483446.206, 497757.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   731.535 ±(99.9%) 23.832 MB/sec [Average]
[info]   (min, avg, max) = (727.373, 731.535, 742.418), stdev = 6.189
[info]   CI (99.9%): [707.703, 755.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2346.564 ±(99.9%) 107.136 B/op [Average]
[info]   (min, avg, max) = (2327.543, 2346.564, 2394.695), stdev = 27.823
[info]   CI (99.9%): [2239.428, 2453.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   720.097 ±(99.9%) 563.527 MB/sec [Average]
[info]   (min, avg, max) = (652.883, 720.097, 981.880), stdev = 146.346
[info]   CI (99.9%): [156.570, 1283.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2310.997 ±(99.9%) 1843.035 B/op [Average]
[info]   (min, avg, max) = (2087.252, 2310.997, 3167.088), stdev = 478.630
[info]   CI (99.9%): [467.962, 4154.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.171 ±(99.9%) 1.337 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.171, 0.791), stdev = 0.347
[info]   CI (99.9%): [≈ 0, 1.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.549 ±(99.9%) 4.297 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.549, 2.543), stdev = 1.116
[info]   CI (99.9%): [≈ 0, 4.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 6.82% complete, ETA 01:23:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5650.491 ops/s
[info] # Warmup Iteration   2: 15961.612 ops/s
[info] # Warmup Iteration   3: 17661.558 ops/s
[info] Iteration   1: 17193.943 ops/s
[info]                  ·gc.alloc.rate:                   1368.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              125269.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121277.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.811 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 16914.513 ops/s
[info]                  ·gc.alloc.rate:                   1380.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              128439.400 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123223.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 333.162 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 17479.142 ops/s
[info]                  ·gc.alloc.rate:                   1396.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              125733.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118521.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.623 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 17414.535 ops/s
[info]                  ·gc.alloc.rate:                   1402.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              126750.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119023.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.881 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 17732.119 ops/s
[info]                  ·gc.alloc.rate:                   1424.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              126451.765 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117303.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.238 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce":
[info]   17346.850 ±(99.9%) 1188.113 ops/s [Average]
[info]   (min, avg, max) = (16914.513, 17346.850, 17732.119), stdev = 308.549
[info]   CI (99.9%): [16158.737, 18534.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate":
[info]   1394.597 ±(99.9%) 82.437 MB/sec [Average]
[info]   (min, avg, max) = (1368.973, 1394.597, 1424.777), stdev = 21.409
[info]   CI (99.9%): [1312.160, 1477.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   126528.958 ±(99.9%) 4686.231 B/op [Average]
[info]   (min, avg, max) = (125269.598, 126528.958, 128439.400), stdev = 1216.999
[info]   CI (99.9%): [121842.727, 131215.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1320.926 ±(99.9%) 16.037 MB/sec [Average]
[info]   (min, avg, max) = (1316.278, 1320.926, 1325.352), stdev = 4.165
[info]   CI (99.9%): [1304.890, 1336.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   119869.885 ±(99.9%) 9102.276 B/op [Average]
[info]   (min, avg, max) = (117303.343, 119869.885, 123223.331), stdev = 2363.832
[info]   CI (99.9%): [110767.609, 128972.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.762 ±(99.9%) 6.069 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.762, 3.581), stdev = 1.576
[info]   CI (99.9%): [≈ 0, 6.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   70.743 ±(99.9%) 564.972 B/op [Average]
[info]   (min, avg, max) = (1.881, 70.743, 333.162), stdev = 146.722
[info]   CI (99.9%): [≈ 0, 635.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 13.000), stdev = 3.362
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.06% complete, ETA 01:23:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10834.544 ops/s
[info] # Warmup Iteration   2: 35221.114 ops/s
[info] # Warmup Iteration   3: 37038.906 ops/s
[info] Iteration   1: 36790.697 ops/s
[info]                  ·gc.alloc.rate:               1032.870 MB/sec
[info]                  ·gc.alloc.rate.norm:          44172.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 42090.085 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 36958.170 ops/s
[info]                  ·gc.alloc.rate:                   1017.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              43334.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41983.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.886 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 36006.206 ops/s
[info]                  ·gc.alloc.rate:                   986.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              43120.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43179.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.643 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 159.231 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 36256.470 ops/s
[info]                  ·gc.alloc.rate:                   999.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              43366.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42620.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.493 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 37284.831 ops/s
[info]                  ·gc.alloc.rate:                   1024.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              43246.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41334.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.879 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala":
[info]   36659.275 ±(99.9%) 2007.033 ops/s [Average]
[info]   (min, avg, max) = (36006.206, 36659.275, 37284.831), stdev = 521.220
[info]   CI (99.9%): [34652.241, 38666.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1012.143 ±(99.9%) 73.009 MB/sec [Average]
[info]   (min, avg, max) = (986.513, 1012.143, 1032.870), stdev = 18.960
[info]   CI (99.9%): [939.134, 1085.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   43447.938 ±(99.9%) 1602.367 B/op [Average]
[info]   (min, avg, max) = (43120.217, 43447.938, 44172.479), stdev = 416.130
[info]   CI (99.9%): [41845.571, 45050.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   983.841 ±(99.9%) 13.013 MB/sec [Average]
[info]   (min, avg, max) = (979.219, 983.841, 987.879), stdev = 3.380
[info]   CI (99.9%): [970.828, 996.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   42241.849 ±(99.9%) 2679.133 B/op [Average]
[info]   (min, avg, max) = (41334.550, 42241.849, 43179.913), stdev = 695.762
[info]   CI (99.9%): [39562.716, 44920.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.845 ±(99.9%) 6.086 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.845, 3.643), stdev = 1.581
[info]   CI (99.9%): [≈ 0, 6.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   36.898 ±(99.9%) 266.090 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 36.898, 159.231), stdev = 69.103
[info]   CI (99.9%): [≈ 0, 302.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 10.000), stdev = 2.881
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.29% complete, ETA 01:23:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19517.115 ops/s
[info] # Warmup Iteration   2: 40768.370 ops/s
[info] # Warmup Iteration   3: 43981.896 ops/s
[info] Iteration   1: 45523.559 ops/s
[info]                  ·gc.alloc.rate:               622.808 MB/sec
[info]                  ·gc.alloc.rate.norm:          21533.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11410.331 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 44876.354 ops/s
[info]                  ·gc.alloc.rate:               624.155 MB/sec
[info]                  ·gc.alloc.rate.norm:          21889.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23175.532 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 44943.117 ops/s
[info]                  ·gc.alloc.rate:                   621.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              21777.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23187.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.729 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 45194.274 ops/s
[info]                  ·gc.alloc.rate:                   628.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              21882.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23082.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.725 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 45597.383 ops/s
[info]                  ·gc.alloc.rate:                   626.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              21623.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22901.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.719 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala":
[info]   45226.937 ±(99.9%) 1262.142 ops/s [Average]
[info]   (min, avg, max) = (44876.354, 45226.937, 45597.383), stdev = 327.774
[info]   CI (99.9%): [43964.795, 46489.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   624.782 ±(99.9%) 10.275 MB/sec [Average]
[info]   (min, avg, max) = (621.972, 624.782, 628.399), stdev = 2.668
[info]   CI (99.9%): [614.506, 635.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   21741.249 ±(99.9%) 609.865 B/op [Average]
[info]   (min, avg, max) = (21533.096, 21741.249, 21889.343), stdev = 158.380
[info]   CI (99.9%): [21131.384, 22351.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   595.906 ±(99.9%) 572.345 MB/sec [Average]
[info]   (min, avg, max) = (330.024, 595.906, 663.589), stdev = 148.636
[info]   CI (99.9%): [23.562, 1168.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   20751.337 ±(99.9%) 20112.063 B/op [Average]
[info]   (min, avg, max) = (11410.331, 20751.337, 23187.643), stdev = 5223.039
[info]   CI (99.9%): [639.274, 40863.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.434 ±(99.9%) 1.527 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.434, 0.729), stdev = 0.397
[info]   CI (99.9%): [≈ 0, 1.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.095
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 7.53% complete, ETA 01:23:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2392.028 ops/s
[info] # Warmup Iteration   2: 24686.186 ops/s
[info] # Warmup Iteration   3: 28831.189 ops/s
[info] Iteration   1: 28677.123 ops/s
[info]                  ·gc.alloc.rate:                   1449.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              79535.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90086.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.143 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 29242.541 ops/s
[info]                  ·gc.alloc.rate:                   1490.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              80218.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70631.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.435 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 238.651 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 29737.521 ops/s
[info]                  ·gc.alloc.rate:                   1490.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              78877.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68957.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.203 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 30225.951 ops/s
[info]                  ·gc.alloc.rate:                   1523.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              79349.563 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84964.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.168 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 29786.965 ops/s
[info]                  ·gc.alloc.rate:                   1515.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              80048.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86652.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.294 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson":
[info]   29534.020 ±(99.9%) 2280.831 ops/s [Average]
[info]   (min, avg, max) = (28677.123, 29534.020, 30225.951), stdev = 592.324
[info]   CI (99.9%): [27253.190, 31814.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1494.060 ±(99.9%) 112.240 MB/sec [Average]
[info]   (min, avg, max) = (1449.231, 1494.060, 1523.823), stdev = 29.148
[info]   CI (99.9%): [1381.820, 1606.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   79605.841 ±(99.9%) 2083.957 B/op [Average]
[info]   (min, avg, max) = (78877.602, 79605.841, 80218.011), stdev = 541.197
[info]   CI (99.9%): [77521.884, 81689.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1505.971 ±(99.9%) 696.736 MB/sec [Average]
[info]   (min, avg, max) = (1302.953, 1505.971, 1641.487), stdev = 180.940
[info]   CI (99.9%): [809.236, 2202.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   80258.729 ±(99.9%) 37531.760 B/op [Average]
[info]   (min, avg, max) = (68957.894, 80258.729, 90086.864), stdev = 9746.879
[info]   CI (99.9%): [42726.969, 117790.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.920 ±(99.9%) 7.567 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.920, 4.435), stdev = 1.965
[info]   CI (99.9%): [≈ 0, 8.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   49.492 ±(99.9%) 407.190 B/op [Average]
[info]   (min, avg, max) = (1.143, 49.492, 238.651), stdev = 105.746
[info]   CI (99.9%): [≈ 0, 456.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.600, 18.000), stdev = 4.827
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 7.76% complete, ETA 01:22:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7277.790 ops/s
[info] # Warmup Iteration   2: 24334.749 ops/s
[info] # Warmup Iteration   3: 24965.038 ops/s
[info] Iteration   1: 24986.147 ops/s
[info]                  ·gc.alloc.rate:                   1812.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              114184.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104064.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 234.722 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 24837.170 ops/s
[info]                  ·gc.alloc.rate:                   1821.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              115433.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104051.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.638 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 25197.570 ops/s
[info]                  ·gc.alloc.rate:                   1822.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              113802.713 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123364.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.901 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 25303.593 ops/s
[info]                  ·gc.alloc.rate:                   1834.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              114139.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103088.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.474 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 25340.106 ops/s
[info]                  ·gc.alloc.rate:                   1865.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              115815.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124457.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.293 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce":
[info]   25132.917 ±(99.9%) 828.661 ops/s [Average]
[info]   (min, avg, max) = (24837.170, 25132.917, 25340.106), stdev = 215.201
[info]   CI (99.9%): [24304.256, 25961.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1831.452 ±(99.9%) 79.393 MB/sec [Average]
[info]   (min, avg, max) = (1812.885, 1831.452, 1865.545), stdev = 20.618
[info]   CI (99.9%): [1752.059, 1910.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   114675.148 ±(99.9%) 3424.172 B/op [Average]
[info]   (min, avg, max) = (113802.713, 114675.148, 115815.374), stdev = 889.247
[info]   CI (99.9%): [111250.976, 118099.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1786.316 ±(99.9%) 717.328 MB/sec [Average]
[info]   (min, avg, max) = (1642.132, 1786.316, 2004.745), stdev = 186.288
[info]   CI (99.9%): [1068.988, 2503.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   111805.138 ±(99.9%) 42606.107 B/op [Average]
[info]   (min, avg, max) = (103088.358, 111805.138, 124457.113), stdev = 11064.671
[info]   CI (99.9%): [69199.031, 154411.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.791 ±(99.9%) 6.320 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.791, 3.727), stdev = 1.641
[info]   CI (99.9%): [≈ 0, 7.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   49.806 ±(99.9%) 398.115 B/op [Average]
[info]   (min, avg, max) = (1.293, 49.806, 234.722), stdev = 103.389
[info]   CI (99.9%): [≈ 0, 447.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 12.000), stdev = 2.074
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.00% complete, ETA 01:22:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8306.844 ops/s
[info] # Warmup Iteration   2: 22101.134 ops/s
[info] # Warmup Iteration   3: 24500.011 ops/s
[info] Iteration   1: 24279.118 ops/s
[info]                  ·gc.alloc.rate:                   1541.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              99947.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106295.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.290 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 213.217 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 24761.920 ops/s
[info]                  ·gc.alloc.rate:                   1576.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              100191.610 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83073.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.896 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 24133.513 ops/s
[info]                  ·gc.alloc.rate:                   1548.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              100993.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106325.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.006 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 24770.576 ops/s
[info]                  ·gc.alloc.rate:                   1601.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              101722.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104180.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.323 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 24895.898 ops/s
[info]                  ·gc.alloc.rate:               1596.423 MB/sec
[info]                  ·gc.alloc.rate.norm:          100921.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1321.671 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 83552.544 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala":
[info]   24568.205 ±(99.9%) 1303.532 ops/s [Average]
[info]   (min, avg, max) = (24133.513, 24568.205, 24895.898), stdev = 338.523
[info]   CI (99.9%): [23264.673, 25871.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1572.905 ±(99.9%) 103.689 MB/sec [Average]
[info]   (min, avg, max) = (1541.996, 1572.905, 1601.035), stdev = 26.928
[info]   CI (99.9%): [1469.216, 1676.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   100755.335 ±(99.9%) 2715.808 B/op [Average]
[info]   (min, avg, max) = (99947.720, 100755.335, 101722.529), stdev = 705.287
[info]   CI (99.9%): [98039.527, 103471.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1507.765 ±(99.9%) 680.248 MB/sec [Average]
[info]   (min, avg, max) = (1307.077, 1507.765, 1639.931), stdev = 176.658
[info]   CI (99.9%): [827.517, 2188.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   96685.532 ±(99.9%) 47130.587 B/op [Average]
[info]   (min, avg, max) = (83073.132, 96685.532, 106325.963), stdev = 12239.664
[info]   CI (99.9%): [49554.945, 143816.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.899 ±(99.9%) 5.330 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.899, 3.290), stdev = 1.384
[info]   CI (99.9%): [≈ 0, 6.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   58.088 ±(99.9%) 345.435 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 58.088, 213.217), stdev = 89.708
[info]   CI (99.9%): [≈ 0, 403.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 16.000), stdev = 4.278
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.24% complete, ETA 01:22:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12827.287 ops/s
[info] # Warmup Iteration   2: 24249.736 ops/s
[info] # Warmup Iteration   3: 26923.514 ops/s
[info] Iteration   1: 27421.772 ops/s
[info]                  ·gc.alloc.rate:                   1617.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              92835.994 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76236.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 148.153 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 27176.803 ops/s
[info]                  ·gc.alloc.rate:                   1622.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              93941.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95710.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.661 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 27574.350 ops/s
[info]                  ·gc.alloc.rate:                   1650.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              94199.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94101.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.188 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 26765.002 ops/s
[info]                  ·gc.alloc.rate:               1605.175 MB/sec
[info]                  ·gc.alloc.rate.norm:          94386.178 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1655.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 97356.580 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 27532.450 ops/s
[info]                  ·gc.alloc.rate:               1636.686 MB/sec
[info]                  ·gc.alloc.rate.norm:          93553.071 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1331.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76103.252 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala":
[info]   27294.075 ±(99.9%) 1284.861 ops/s [Average]
[info]   (min, avg, max) = (26765.002, 27294.075, 27574.350), stdev = 333.674
[info]   CI (99.9%): [26009.214, 28578.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1626.399 ±(99.9%) 67.493 MB/sec [Average]
[info]   (min, avg, max) = (1605.175, 1626.399, 1650.404), stdev = 17.528
[info]   CI (99.9%): [1558.906, 1693.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   93783.340 ±(99.9%) 2367.788 B/op [Average]
[info]   (min, avg, max) = (92835.994, 93783.340, 94386.178), stdev = 614.907
[info]   CI (99.9%): [91415.552, 96151.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1523.368 ±(99.9%) 680.317 MB/sec [Average]
[info]   (min, avg, max) = (1328.298, 1523.368, 1655.691), stdev = 176.676
[info]   CI (99.9%): [843.051, 2203.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   87901.730 ±(99.9%) 41477.049 B/op [Average]
[info]   (min, avg, max) = (76103.252, 87901.730, 97356.580), stdev = 10771.458
[info]   CI (99.9%): [46424.680, 129378.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.716 ±(99.9%) 4.330 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.716, 2.581), stdev = 1.124
[info]   CI (99.9%): [≈ 0, 5.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   41.200 ±(99.9%) 248.611 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41.200, 148.153), stdev = 64.563
[info]   CI (99.9%): [≈ 0, 289.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 11.000), stdev = 1.949
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 8.47% complete, ETA 01:22:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11857.176 ops/s
[info] # Warmup Iteration   2: 24535.212 ops/s
[info] # Warmup Iteration   3: 27252.097 ops/s
[info] Iteration   1: 27371.589 ops/s
[info]                  ·gc.alloc.rate:                   1558.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              89598.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95339.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 152.020 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 27338.589 ops/s
[info]                  ·gc.alloc.rate:                   1563.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              90033.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76007.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.730 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 27577.496 ops/s
[info]                  ·gc.alloc.rate:               1597.784 MB/sec
[info]                  ·gc.alloc.rate.norm:          91185.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1646.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 93939.210 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 27527.613 ops/s
[info]                  ·gc.alloc.rate:               1595.632 MB/sec
[info]                  ·gc.alloc.rate.norm:          91230.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1651.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 94449.151 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 27650.760 ops/s
[info]                  ·gc.alloc.rate:               1589.885 MB/sec
[info]                  ·gc.alloc.rate.norm:          90481.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1329.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75643.071 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc":
[info]   27493.209 ±(99.9%) 515.931 ops/s [Average]
[info]   (min, avg, max) = (27338.589, 27493.209, 27650.760), stdev = 133.986
[info]   CI (99.9%): [26977.278, 28009.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1581.150 ±(99.9%) 71.308 MB/sec [Average]
[info]   (min, avg, max) = (1558.487, 1581.150, 1597.784), stdev = 18.519
[info]   CI (99.9%): [1509.842, 1652.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   90506.023 ±(99.9%) 2745.504 B/op [Average]
[info]   (min, avg, max) = (89598.370, 90506.023, 91230.168), stdev = 712.999
[info]   CI (99.9%): [87760.519, 93251.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1521.153 ±(99.9%) 690.764 MB/sec [Average]
[info]   (min, avg, max) = (1320.314, 1521.153, 1658.341), stdev = 179.389
[info]   CI (99.9%): [830.390, 2211.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   87075.624 ±(99.9%) 39596.360 B/op [Average]
[info]   (min, avg, max) = (75643.071, 87075.624, 95339.020), stdev = 10283.049
[info]   CI (99.9%): [47479.264, 126671.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.712 ±(99.9%) 4.431 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.712, 2.644), stdev = 1.151
[info]   CI (99.9%): [≈ 0, 5.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   40.950 ±(99.9%) 254.739 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 40.950, 152.020), stdev = 66.155
[info]   CI (99.9%): [≈ 0, 295.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 14.000), stdev = 3.493
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 8.71% complete, ETA 01:22:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2415.927 ops/s
[info] # Warmup Iteration   2: 6809.465 ops/s
[info] # Warmup Iteration   3: 7883.412 ops/s
[info] Iteration   1: 7832.354 ops/s
[info]                  ·gc.alloc.rate:                   1174.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              236035.477 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     265289.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.731 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 7862.642 ops/s
[info]                  ·gc.alloc.rate:                   1160.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              232194.930 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198474.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.561 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 512.521 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 7879.567 ops/s
[info]                  ·gc.alloc.rate:                   1173.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              234380.646 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262942.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 270.226 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 7897.312 ops/s
[info]                  ·gc.alloc.rate:                   1181.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              235344.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     195935.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.335 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 7889.773 ops/s
[info]                  ·gc.alloc.rate:               1187.380 MB/sec
[info]                  ·gc.alloc.rate.norm:          236838.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1311.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 261612.537 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson":
[info]   7872.330 ±(99.9%) 99.536 ops/s [Average]
[info]   (min, avg, max) = (7832.354, 7872.330, 7897.312), stdev = 25.849
[info]   CI (99.9%): [7772.794, 7971.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1175.434 ±(99.9%) 38.994 MB/sec [Average]
[info]   (min, avg, max) = (1160.289, 1175.434, 1187.380), stdev = 10.127
[info]   CI (99.9%): [1136.440, 1214.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   234958.841 ±(99.9%) 6892.390 B/op [Average]
[info]   (min, avg, max) = (232194.930, 234958.841, 236838.766), stdev = 1789.932
[info]   CI (99.9%): [228066.451, 241851.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1184.733 ±(99.9%) 693.058 MB/sec [Average]
[info]   (min, avg, max) = (983.461, 1184.733, 1320.281), stdev = 179.985
[info]   CI (99.9%): [491.675, 1877.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   236850.982 ±(99.9%) 139494.965 B/op [Average]
[info]   (min, avg, max) = (195935.964, 236850.982, 265289.460), stdev = 36226.400
[info]   CI (99.9%): [97356.016, 376345.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.837 ±(99.9%) 4.275 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.837, 2.561), stdev = 1.110
[info]   CI (99.9%): [≈ 0, 5.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   167.363 ±(99.9%) 855.247 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 167.363, 512.521), stdev = 222.105
[info]   CI (99.9%): [≈ 0, 1022.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 14.000), stdev = 4.301
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 8.94% complete, ETA 01:21:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5816.551 ops/s
[info] # Warmup Iteration   2: 16198.051 ops/s
[info] # Warmup Iteration   3: 17782.405 ops/s
[info] Iteration   1: 17989.336 ops/s
[info]                  ·gc.alloc.rate:                   1637.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              143275.992 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145000.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 224.014 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 17389.542 ops/s
[info]                  ·gc.alloc.rate:                   1605.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              145300.718 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149090.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107.387 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 17494.273 ops/s
[info]                  ·gc.alloc.rate:               1612.898 MB/sec
[info]                  ·gc.alloc.rate.norm:          145099.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1643.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 147896.078 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 17445.749 ops/s
[info]                  ·gc.alloc.rate:               1614.998 MB/sec
[info]                  ·gc.alloc.rate.norm:          145631.658 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1321.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119165.924 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 17683.685 ops/s
[info]                  ·gc.alloc.rate:               1633.676 MB/sec
[info]                  ·gc.alloc.rate.norm:          145362.879 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1661.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 147835.817 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce":
[info]   17600.517 ±(99.9%) 938.973 ops/s [Average]
[info]   (min, avg, max) = (17389.542, 17600.517, 17989.336), stdev = 243.848
[info]   CI (99.9%): [16661.544, 18539.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1621.000 ±(99.9%) 53.462 MB/sec [Average]
[info]   (min, avg, max) = (1605.781, 1621.000, 1637.647), stdev = 13.884
[info]   CI (99.9%): [1567.538, 1674.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   144934.211 ±(99.9%) 3643.708 B/op [Average]
[info]   (min, avg, max) = (143275.992, 144934.211, 145631.658), stdev = 946.259
[info]   CI (99.9%): [141290.502, 148577.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1586.396 ±(99.9%) 570.850 MB/sec [Average]
[info]   (min, avg, max) = (1321.504, 1586.396, 1661.468), stdev = 148.248
[info]   CI (99.9%): [1015.546, 2157.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   141797.824 ±(99.9%) 49059.451 B/op [Average]
[info]   (min, avg, max) = (119165.924, 141797.824, 149090.349), stdev = 12740.584
[info]   CI (99.9%): [92738.372, 190857.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.749 ±(99.9%) 4.372 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.749, 2.560), stdev = 1.135
[info]   CI (99.9%): [≈ 0, 5.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   66.280 ±(99.9%) 383.854 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 66.280, 224.014), stdev = 99.686
[info]   CI (99.9%): [≈ 0, 450.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 15.000), stdev = 3.847
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.18% complete, ETA 01:21:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10902.571 ops/s
[info] # Warmup Iteration   2: 39020.591 ops/s
[info] # Warmup Iteration   3: 41364.196 ops/s
[info] Iteration   1: 40889.936 ops/s
[info]                  ·gc.alloc.rate:                   1188.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              45715.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50435.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.404 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 41623.495 ops/s
[info]                  ·gc.alloc.rate:                   1169.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              44192.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37277.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 114.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 43013.757 ops/s
[info]                  ·gc.alloc.rate:                   1224.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              44799.246 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47918.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.177 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 42997.800 ops/s
[info]                  ·gc.alloc.rate:               1214.846 MB/sec
[info]                  ·gc.alloc.rate.norm:          44466.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35794.567 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 42900.186 ops/s
[info]                  ·gc.alloc.rate:                   1220.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              44758.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47945.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.764 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala":
[info]   42285.035 ±(99.9%) 3753.843 ops/s [Average]
[info]   (min, avg, max) = (40889.936, 42285.035, 43013.757), stdev = 974.861
[info]   CI (99.9%): [38531.192, 46038.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1203.313 ±(99.9%) 91.603 MB/sec [Average]
[info]   (min, avg, max) = (1169.033, 1203.313, 1224.398), stdev = 23.789
[info]   CI (99.9%): [1111.711, 1294.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   44786.520 ±(99.9%) 2212.202 B/op [Average]
[info]   (min, avg, max) = (44192.301, 44786.520, 45715.875), stdev = 574.502
[info]   CI (99.9%): [42574.317, 46998.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1178.302 ±(99.9%) 690.076 MB/sec [Average]
[info]   (min, avg, max) = (977.927, 1178.302, 1310.842), stdev = 179.211
[info]   CI (99.9%): [488.226, 1868.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   43874.279 ±(99.9%) 26171.660 B/op [Average]
[info]   (min, avg, max) = (35794.567, 43874.279, 50435.236), stdev = 6796.697
[info]   CI (99.9%): [17702.619, 70045.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.862 ±(99.9%) 5.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.862, 3.019), stdev = 1.310
[info]   CI (99.9%): [≈ 0, 5.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   32.295 ±(99.9%) 190.294 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 32.295, 114.130), stdev = 49.419
[info]   CI (99.9%): [≈ 0, 222.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 14.000), stdev = 4.147
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.41% complete, ETA 01:21:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34488.475 ops/s
[info] # Warmup Iteration   2: 63975.243 ops/s
[info] # Warmup Iteration   3: 63828.364 ops/s
[info] Iteration   1: 64483.890 ops/s
[info]                  ·gc.alloc.rate:                   740.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              18073.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16127.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.508 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 66603.177 ops/s
[info]                  ·gc.alloc.rate:               760.058 MB/sec
[info]                  ·gc.alloc.rate.norm:          17958.368 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15646.394 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 67242.994 ops/s
[info]                  ·gc.alloc.rate:                   762.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              17846.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15529.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.487 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 67264.131 ops/s
[info]                  ·gc.alloc.rate:                   769.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              17998.503 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23301.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58.449 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 67810.465 ops/s
[info]                  ·gc.alloc.rate:                   773.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              17960.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15398.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.146 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala":
[info]   66680.932 ±(99.9%) 5007.658 ops/s [Average]
[info]   (min, avg, max) = (64483.890, 66680.932, 67810.465), stdev = 1300.473
[info]   CI (99.9%): [61673.273, 71688.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   761.260 ±(99.9%) 49.407 MB/sec [Average]
[info]   (min, avg, max) = (740.507, 761.260, 773.853), stdev = 12.831
[info]   CI (99.9%): [711.852, 810.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   17967.329 ±(99.9%) 316.792 B/op [Average]
[info]   (min, avg, max) = (17846.032, 17967.329, 18073.437), stdev = 82.270
[info]   CI (99.9%): [17650.537, 18284.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   729.215 ±(99.9%) 574.523 MB/sec [Average]
[info]   (min, avg, max) = (660.796, 729.215, 996.108), stdev = 149.202
[info]   CI (99.9%): [154.693, 1303.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   17200.760 ±(99.9%) 13175.489 B/op [Average]
[info]   (min, avg, max) = (15398.636, 17200.760, 23301.689), stdev = 3421.633
[info]   CI (99.9%): [4025.272, 30376.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.595 ±(99.9%) 4.157 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.595, 2.499), stdev = 1.080
[info]   CI (99.9%): [≈ 0, 4.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   13.918 ±(99.9%) 97.246 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.918, 58.449), stdev = 25.255
[info]   CI (99.9%): [≈ 0, 111.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 8.000), stdev = 1.817
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 9.65% complete, ETA 01:21:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3067.744 ops/s
[info] # Warmup Iteration   2: 26246.399 ops/s
[info] # Warmup Iteration   3: 32866.253 ops/s
[info] Iteration   1: 32921.982 ops/s
[info]                  ·gc.alloc.rate:                   2158.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              103123.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94103.383 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.771 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.821 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 32491.522 ops/s
[info]                  ·gc.alloc.rate:                   2147.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              104021.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96155.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.008 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 32512.773 ops/s
[info]                  ·gc.alloc.rate:               2170.245 MB/sec
[info]                  ·gc.alloc.rate.norm:          105051.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2336.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113086.784 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 32908.271 ops/s
[info]                  ·gc.alloc.rate:                   2184.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              104439.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96440.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.987 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 32737.460 ops/s
[info]                  ·gc.alloc.rate:               2170.430 MB/sec
[info]                  ·gc.alloc.rate.norm:          104460.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2023.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 97389.274 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson":
[info]   32714.401 ±(99.9%) 797.409 ops/s [Average]
[info]   (min, avg, max) = (32491.522, 32714.401, 32921.982), stdev = 207.084
[info]   CI (99.9%): [31916.993, 33511.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2166.209 ±(99.9%) 54.202 MB/sec [Average]
[info]   (min, avg, max) = (2147.569, 2166.209, 2184.762), stdev = 14.076
[info]   CI (99.9%): [2112.007, 2220.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   104219.437 ±(99.9%) 2749.131 B/op [Average]
[info]   (min, avg, max) = (103123.777, 104219.437, 105051.780), stdev = 713.941
[info]   CI (99.9%): [101470.306, 106968.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2066.321 ±(99.9%) 587.411 MB/sec [Average]
[info]   (min, avg, max) = (1969.271, 2066.321, 2336.238), stdev = 152.549
[info]   CI (99.9%): [1478.910, 2653.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   99434.972 ±(99.9%) 29746.574 B/op [Average]
[info]   (min, avg, max) = (94103.383, 99434.972, 113086.784), stdev = 7725.091
[info]   CI (99.9%): [69688.398, 129181.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.171 ±(99.9%) 1.295 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.171, 0.771), stdev = 0.336
[info]   CI (99.9%): [≈ 0, 1.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.163 ±(99.9%) 61.867 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.163, 36.821), stdev = 16.067
[info]   CI (99.9%): [≈ 0, 70.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.400, 11.000), stdev = 0.894
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.88% complete, ETA 01:21:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8876.320 ops/s
[info] # Warmup Iteration   2: 26484.042 ops/s
[info] # Warmup Iteration   3: 26407.209 ops/s
[info] Iteration   1: 26178.135 ops/s
[info]                  ·gc.alloc.rate:                   1675.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              100751.075 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98802.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 207.757 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 26458.493 ops/s
[info]                  ·gc.alloc.rate:                   1710.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              101724.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97317.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.480 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 27146.559 ops/s
[info]                  ·gc.alloc.rate:               1753.868 MB/sec
[info]                  ·gc.alloc.rate.norm:          101678.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1637.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 94928.357 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 27013.096 ops/s
[info]                  ·gc.alloc.rate:               1753.213 MB/sec
[info]                  ·gc.alloc.rate.norm:          102046.804 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1978.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 115171.716 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 26332.915 ops/s
[info]                  ·gc.alloc.rate:                   1693.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              101245.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79508.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.733 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala":
[info]   26625.840 ±(99.9%) 1651.029 ops/s [Average]
[info]   (min, avg, max) = (26178.135, 26625.840, 27146.559), stdev = 428.767
[info]   CI (99.9%): [24974.810, 28276.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1717.390 ±(99.9%) 135.350 MB/sec [Average]
[info]   (min, avg, max) = (1675.851, 1717.390, 1753.868), stdev = 35.150
[info]   CI (99.9%): [1582.040, 1852.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   101489.234 ±(99.9%) 1931.082 B/op [Average]
[info]   (min, avg, max) = (100751.075, 101489.234, 102046.804), stdev = 501.496
[info]   CI (99.9%): [99558.152, 103420.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1645.162 ±(99.9%) 883.465 MB/sec [Average]
[info]   (min, avg, max) = (1330.266, 1645.162, 1978.706), stdev = 229.433
[info]   CI (99.9%): [761.697, 2528.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   97145.490 ±(99.9%) 48848.191 B/op [Average]
[info]   (min, avg, max) = (79508.155, 97145.490, 115171.716), stdev = 12685.720
[info]   CI (99.9%): [48297.300, 145993.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.799 ±(99.9%) 5.770 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.799, 3.456), stdev = 1.498
[info]   CI (99.9%): [≈ 0, 6.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   47.994 ±(99.9%) 346.937 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 47.994, 207.757), stdev = 90.098
[info]   CI (99.9%): [≈ 0, 394.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 14.000), stdev = 3.209
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 10.12% complete, ETA 01:20:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16764.517 ops/s
[info] # Warmup Iteration   2: 32258.793 ops/s
[info] # Warmup Iteration   3: 34205.114 ops/s
[info] Iteration   1: 33731.494 ops/s
[info]                  ·gc.alloc.rate:                   1547.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              72198.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77362.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.540 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 118.499 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 33951.395 ops/s
[info]                  ·gc.alloc.rate:                   1519.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              70404.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61268.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.742 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 34532.656 ops/s
[info]                  ·gc.alloc.rate:                   1546.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              70479.364 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75160.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.693 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 34223.065 ops/s
[info]                  ·gc.alloc.rate:                   1551.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              71351.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76077.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.872 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 34602.577 ops/s
[info]                  ·gc.alloc.rate:               1568.989 MB/sec
[info]                  ·gc.alloc.rate.norm:          71360.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1330.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60504.674 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala":
[info]   34208.237 ±(99.9%) 1433.328 ops/s [Average]
[info]   (min, avg, max) = (33731.494, 34208.237, 34602.577), stdev = 372.231
[info]   CI (99.9%): [32774.909, 35641.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1546.671 ±(99.9%) 69.055 MB/sec [Average]
[info]   (min, avg, max) = (1519.019, 1546.671, 1568.989), stdev = 17.933
[info]   CI (99.9%): [1477.616, 1615.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   71158.828 ±(99.9%) 2848.698 B/op [Average]
[info]   (min, avg, max) = (70404.479, 71158.828, 72198.411), stdev = 739.798
[info]   CI (99.9%): [68310.129, 74007.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1522.746 ±(99.9%) 691.433 MB/sec [Average]
[info]   (min, avg, max) = (1321.906, 1522.746, 1658.070), stdev = 179.563
[info]   CI (99.9%): [831.313, 2214.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   70074.850 ±(99.9%) 32454.667 B/op [Average]
[info]   (min, avg, max) = (60504.674, 70074.850, 77362.629), stdev = 8428.374
[info]   CI (99.9%): [37620.183, 102529.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.695 ±(99.9%) 4.136 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.695, 2.540), stdev = 1.074
[info]   CI (99.9%): [≈ 0, 4.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   32.361 ±(99.9%) 193.047 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 32.361, 118.499), stdev = 50.134
[info]   CI (99.9%): [≈ 0, 225.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 14.000), stdev = 3.768
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 10.35% complete, ETA 01:20:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16084.301 ops/s
[info] # Warmup Iteration   2: 33282.932 ops/s
[info] # Warmup Iteration   3: 34569.793 ops/s
[info] Iteration   1: 34429.811 ops/s
[info]                  ·gc.alloc.rate:                   1503.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              68725.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75731.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.519 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 115.142 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 34874.861 ops/s
[info]                  ·gc.alloc.rate:                   1504.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              67887.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59583.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.853 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.517 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 34934.338 ops/s
[info]                  ·gc.alloc.rate:                   1515.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              68240.640 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74186.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.876 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 34991.823 ops/s
[info]                  ·gc.alloc.rate:                   1524.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              68552.141 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59455.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.936 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 34914.926 ops/s
[info]                  ·gc.alloc.rate:               1521.301 MB/sec
[info]                  ·gc.alloc.rate.norm:          68566.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1328.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59874.017 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   34829.152 ±(99.9%) 874.795 ops/s [Average]
[info]   (min, avg, max) = (34429.811, 34829.152, 34991.823), stdev = 227.181
[info]   CI (99.9%): [33954.357, 35703.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1513.720 ±(99.9%) 36.686 MB/sec [Average]
[info]   (min, avg, max) = (1503.447, 1513.720, 1524.149), stdev = 9.527
[info]   CI (99.9%): [1477.034, 1550.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   68394.710 ±(99.9%) 1284.153 B/op [Average]
[info]   (min, avg, max) = (67887.820, 68394.710, 68725.953), stdev = 333.490
[info]   CI (99.9%): [67110.557, 69678.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1454.954 ±(99.9%) 693.083 MB/sec [Average]
[info]   (min, avg, max) = (1320.302, 1454.954, 1656.696), stdev = 179.991
[info]   CI (99.9%): [761.870, 2148.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   65766.312 ±(99.9%) 32387.098 B/op [Average]
[info]   (min, avg, max) = (59455.958, 65766.312, 75731.335), stdev = 8410.826
[info]   CI (99.9%): [33379.214, 98153.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.687 ±(99.9%) 4.181 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.687, 2.519), stdev = 1.086
[info]   CI (99.9%): [≈ 0, 4.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   31.294 ±(99.9%) 191.074 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 31.294, 115.142), stdev = 49.621
[info]   CI (99.9%): [≈ 0, 222.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 13.000), stdev = 3.564
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 10.59% complete, ETA 01:20:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 62737.674 ops/s
[info] # Warmup Iteration   2: 307397.301 ops/s
[info] # Warmup Iteration   3: 319921.771 ops/s
[info] Iteration   1: 333467.571 ops/s
[info]                  ·gc.alloc.rate:                   1884.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              8890.579 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9369.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.899 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 331986.357 ops/s
[info]                  ·gc.alloc.rate:                   1861.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              8823.623 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7794.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.987 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 328914.938 ops/s
[info]                  ·gc.alloc.rate:                   1878.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              8989.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9465.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 331641.497 ops/s
[info]                  ·gc.alloc.rate:                   1887.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              8958.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7870.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 335492.017 ops/s
[info]                  ·gc.alloc.rate:                   1924.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              9022.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2005.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9406.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce":
[info]   332300.476 ±(99.9%) 9341.847 ops/s [Average]
[info]   (min, avg, max) = (328914.938, 332300.476, 335492.017), stdev = 2426.048
[info]   CI (99.9%): [322958.629, 341642.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1887.253 ±(99.9%) 88.463 MB/sec [Average]
[info]   (min, avg, max) = (1861.474, 1887.253, 1924.180), stdev = 22.973
[info]   CI (99.9%): [1798.791, 1975.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   8937.144 ±(99.9%) 308.336 B/op [Average]
[info]   (min, avg, max) = (8823.623, 8937.144, 9022.937), stdev = 80.074
[info]   CI (99.9%): [8628.808, 9245.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1854.454 ±(99.9%) 715.291 MB/sec [Average]
[info]   (min, avg, max) = (1644.303, 1854.454, 2005.943), stdev = 185.759
[info]   CI (99.9%): [1139.162, 2569.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8781.043 ±(99.9%) 3339.642 B/op [Average]
[info]   (min, avg, max) = (7794.202, 8781.043, 9465.397), stdev = 867.294
[info]   CI (99.9%): [5441.401, 12120.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.770 ±(99.9%) 6.059 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.770, 3.581), stdev = 1.573
[info]   CI (99.9%): [≈ 0, 6.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.636 ±(99.9%) 28.587 B/op [Average]
[info]   (min, avg, max) = (0.098, 3.636, 16.899), stdev = 7.424
[info]   CI (99.9%): [≈ 0, 32.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 13.000), stdev = 2.608
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 10.82% complete, ETA 01:20:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.643 ops/s
[info] # Warmup Iteration   2: 1458690.062 ops/s
[info] # Warmup Iteration   3: 1488700.934 ops/s
[info] Iteration   1: 1528932.152 ops/s
[info]                  ·gc.alloc.rate:               493.712 MB/sec
[info]                  ·gc.alloc.rate.norm:          508.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 667.879 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 1523031.913 ops/s
[info]                  ·gc.alloc.rate:               487.000 MB/sec
[info]                  ·gc.alloc.rate.norm:          503.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 335.584 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 1521229.249 ops/s
[info]                  ·gc.alloc.rate:                   499.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              516.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     672.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.024 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1533796.487 ops/s
[info]                  ·gc.alloc.rate:                   490.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              502.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     333.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1462038.972 ops/s
[info]                  ·gc.alloc.rate:                   487.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              524.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     701.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava":
[info]   1513805.755 ±(99.9%) 113061.937 ops/s [Average]
[info]   (min, avg, max) = (1462038.972, 1513805.755, 1533796.487), stdev = 29361.826
[info]   CI (99.9%): [1400743.817, 1626867.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   491.601 ±(99.9%) 19.703 MB/sec [Average]
[info]   (min, avg, max) = (487.000, 491.601, 499.469), stdev = 5.117
[info]   CI (99.9%): [471.898, 511.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   511.148 ±(99.9%) 36.441 B/op [Average]
[info]   (min, avg, max) = (502.869, 511.148, 524.932), stdev = 9.464
[info]   CI (99.9%): [474.707, 547.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   520.098 ±(99.9%) 686.091 MB/sec [Average]
[info]   (min, avg, max) = (324.744, 520.098, 651.639), stdev = 178.176
[info]   CI (99.9%): [≈ 0, 1206.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   542.136 ±(99.9%) 731.262 B/op [Average]
[info]   (min, avg, max) = (333.580, 542.136, 701.320), stdev = 189.906
[info]   CI (99.9%): [≈ 0, 1273.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.040 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.024), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.024), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.06% complete, ETA 01:20:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 148055.263 ops/s
[info] # Warmup Iteration   2: 636787.575 ops/s
[info] # Warmup Iteration   3: 672911.312 ops/s
[info] Iteration   1: 671445.528 ops/s
[info]                  ·gc.alloc.rate:               559.494 MB/sec
[info]                  ·gc.alloc.rate.norm:          1311.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1527.109 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 676305.414 ops/s
[info]                  ·gc.alloc.rate:               551.769 MB/sec
[info]                  ·gc.alloc.rate.norm:          1284.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 759.609 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 680791.820 ops/s
[info]                  ·gc.alloc.rate:                   569.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              1315.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1510.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 680634.878 ops/s
[info]                  ·gc.alloc.rate:                   564.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              1305.245 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1514.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 679399.550 ops/s
[info]                  ·gc.alloc.rate:               557.326 MB/sec
[info]                  ·gc.alloc.rate.norm:          1290.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 759.233 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala":
[info]   677715.438 ±(99.9%) 15175.083 ops/s [Average]
[info]   (min, avg, max) = (671445.528, 677715.438, 680791.820), stdev = 3940.921
[info]   CI (99.9%): [662540.355, 692890.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   560.431 ±(99.9%) 25.597 MB/sec [Average]
[info]   (min, avg, max) = (551.769, 560.431, 569.076), stdev = 6.647
[info]   CI (99.9%): [534.834, 586.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1301.388 ±(99.9%) 51.839 B/op [Average]
[info]   (min, avg, max) = (1284.036, 1301.388, 1315.544), stdev = 13.462
[info]   CI (99.9%): [1249.549, 1353.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   522.834 ±(99.9%) 688.025 MB/sec [Average]
[info]   (min, avg, max) = (326.415, 522.834, 654.848), stdev = 178.678
[info]   CI (99.9%): [≈ 0, 1210.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1214.175 ±(99.9%) 1598.700 B/op [Average]
[info]   (min, avg, max) = (759.233, 1214.175, 1527.109), stdev = 415.177
[info]   CI (99.9%): [≈ 0, 2812.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.166 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.096), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 1.095
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.29% complete, ETA 01:19:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 992335.181 ops/s
[info] # Warmup Iteration   2: 1852971.125 ops/s
[info] # Warmup Iteration   3: 1822720.673 ops/s
[info] Iteration   1: 1791723.076 ops/s
[info]                  ·gc.alloc.rate:               351.870 MB/sec
[info]                  ·gc.alloc.rate.norm:          309.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 224.697 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1801872.247 ops/s
[info]                  ·gc.alloc.rate:               356.325 MB/sec
[info]                  ·gc.alloc.rate.norm:          311.242 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 287.725 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1840200.390 ops/s
[info]                  ·gc.alloc.rate:               374.307 MB/sec
[info]                  ·gc.alloc.rate.norm:          320.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 281.740 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1870976.171 ops/s
[info]                  ·gc.alloc.rate:               377.362 MB/sec
[info]                  ·gc.alloc.rate.norm:          317.436 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 277.655 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 1803304.069 ops/s
[info]                  ·gc.alloc.rate:               375.467 MB/sec
[info]                  ·gc.alloc.rate.norm:          327.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 288.081 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala":
[info]   1821615.191 ±(99.9%) 127719.183 ops/s [Average]
[info]   (min, avg, max) = (1791723.076, 1821615.191, 1870976.171), stdev = 33168.266
[info]   CI (99.9%): [1693896.008, 1949334.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   367.066 ±(99.9%) 46.179 MB/sec [Average]
[info]   (min, avg, max) = (351.870, 367.066, 377.362), stdev = 11.993
[info]   CI (99.9%): [320.887, 413.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   317.121 ±(99.9%) 28.560 B/op [Average]
[info]   (min, avg, max) = (309.096, 317.121, 327.702), stdev = 7.417
[info]   CI (99.9%): [288.560, 345.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   314.952 ±(99.9%) 127.353 MB/sec [Average]
[info]   (min, avg, max) = (255.791, 314.952, 330.071), stdev = 33.073
[info]   CI (99.9%): [187.599, 442.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   271.980 ±(99.9%) 103.149 B/op [Average]
[info]   (min, avg, max) = (224.697, 271.980, 288.081), stdev = 26.787
[info]   CI (99.9%): [168.831, 375.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 11.53% complete, ETA 01:19:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5303.295 ops/s
[info] # Warmup Iteration   2: 83940.098 ops/s
[info] # Warmup Iteration   3: 95601.616 ops/s
[info] Iteration   1: 98567.640 ops/s
[info]                  ·gc.alloc.rate:                   3303.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              52744.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3267.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52167.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.665 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 98703.757 ops/s
[info]                  ·gc.alloc.rate:                   3330.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              53102.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3312.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52818.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.332 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 98469.689 ops/s
[info]                  ·gc.alloc.rate:                   3310.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              52907.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3019.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48264.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.665 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 98165.595 ops/s
[info]                  ·gc.alloc.rate:                   3303.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              52959.195 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3041.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48759.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.667 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 99159.297 ops/s
[info]                  ·gc.alloc.rate:               3347.964 MB/sec
[info]                  ·gc.alloc.rate.norm:          53137.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3393.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 53854.053 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson":
[info]   98613.196 ±(99.9%) 1400.921 ops/s [Average]
[info]   (min, avg, max) = (98165.595, 98613.196, 99159.297), stdev = 363.815
[info]   CI (99.9%): [97212.275, 100014.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3318.956 ±(99.9%) 75.643 MB/sec [Average]
[info]   (min, avg, max) = (3303.196, 3318.956, 3347.964), stdev = 19.644
[info]   CI (99.9%): [3243.313, 3394.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52970.342 ±(99.9%) 610.479 B/op [Average]
[info]   (min, avg, max) = (52744.685, 52970.342, 53137.969), stdev = 158.539
[info]   CI (99.9%): [52359.863, 53580.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3206.705 ±(99.9%) 644.179 MB/sec [Average]
[info]   (min, avg, max) = (3019.573, 3206.705, 3393.081), stdev = 167.291
[info]   CI (99.9%): [2562.525, 3850.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   51172.828 ±(99.9%) 9659.438 B/op [Average]
[info]   (min, avg, max) = (48264.607, 51172.828, 53854.053), stdev = 2508.526
[info]   CI (99.9%): [41513.390, 60832.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.466 ±(99.9%) 1.147 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.466, 0.667), stdev = 0.298
[info]   CI (99.9%): [≈ 0, 1.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.600, 14.000), stdev = 1.140
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 11.76% complete, ETA 01:19:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 116703.879 ops/s
[info] # Warmup Iteration   2: 331242.239 ops/s
[info] # Warmup Iteration   3: 353990.224 ops/s
[info] Iteration   1: 350347.930 ops/s
[info]                  ·gc.alloc.rate:                   1200.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              5388.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4449.903 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 350035.704 ops/s
[info]                  ·gc.alloc.rate:                   1213.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              5455.974 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5951.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.666 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 353132.299 ops/s
[info]                  ·gc.alloc.rate:                   1217.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              5422.597 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4405.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.484 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 356694.629 ops/s
[info]                  ·gc.alloc.rate:                   1235.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              5449.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5807.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.276 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 364647.042 ops/s
[info]                  ·gc.alloc.rate:                   1275.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              5504.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5692.876 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.809 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce":
[info]   354971.521 ±(99.9%) 23240.432 ops/s [Average]
[info]   (min, avg, max) = (350035.704, 354971.521, 364647.042), stdev = 6035.466
[info]   CI (99.9%): [331731.088, 378211.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1228.279 ±(99.9%) 112.613 MB/sec [Average]
[info]   (min, avg, max) = (1200.006, 1228.279, 1275.454), stdev = 29.245
[info]   CI (99.9%): [1115.666, 1340.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5444.242 ±(99.9%) 165.958 B/op [Average]
[info]   (min, avg, max) = (5388.419, 5444.242, 5504.921), stdev = 43.099
[info]   CI (99.9%): [5278.284, 5610.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1187.852 ±(99.9%) 695.644 MB/sec [Average]
[info]   (min, avg, max) = (988.949, 1187.852, 1323.615), stdev = 180.656
[info]   CI (99.9%): [492.209, 1883.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5261.647 ±(99.9%) 2952.462 B/op [Average]
[info]   (min, avg, max) = (4405.931, 5261.647, 5951.606), stdev = 766.745
[info]   CI (99.9%): [2309.184, 8214.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.733 ±(99.9%) 4.985 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.733, 3.039), stdev = 1.295
[info]   CI (99.9%): [≈ 0, 5.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.284 ±(99.9%) 22.436 B/op [Average]
[info]   (min, avg, max) = (0.187, 3.284, 13.666), stdev = 5.826
[info]   CI (99.9%): [≈ 0, 25.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 12.00% complete, ETA 01:19:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.814 ops/s
[info] # Warmup Iteration   2: 1437635.230 ops/s
[info] # Warmup Iteration   3: 1507297.543 ops/s
[info] Iteration   1: 1572820.010 ops/s
[info]                  ·gc.alloc.rate:                   760.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              761.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     975.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1562031.171 ops/s
[info]                  ·gc.alloc.rate:               746.021 MB/sec
[info]                  ·gc.alloc.rate.norm:          751.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 656.444 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 1556297.744 ops/s
[info]                  ·gc.alloc.rate:                   745.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     660.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.030 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1568044.534 ops/s
[info]                  ·gc.alloc.rate:                   740.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              742.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     655.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1514753.561 ops/s
[info]                  ·gc.alloc.rate:                   725.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     680.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.544 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava":
[info]   1554789.404 ±(99.9%) 89447.487 ops/s [Average]
[info]   (min, avg, max) = (1514753.561, 1554789.404, 1572820.010), stdev = 23229.228
[info]   CI (99.9%): [1465341.917, 1644236.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   743.604 ±(99.9%) 48.557 MB/sec [Average]
[info]   (min, avg, max) = (725.703, 743.604, 760.777), stdev = 12.610
[info]   CI (99.9%): [695.047, 792.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   752.682 ±(99.9%) 25.290 B/op [Average]
[info]   (min, avg, max) = (742.918, 752.682, 761.272), stdev = 6.568
[info]   CI (99.9%): [727.392, 777.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   717.619 ±(99.9%) 554.648 MB/sec [Average]
[info]   (min, avg, max) = (651.513, 717.619, 975.276), stdev = 144.040
[info]   CI (99.9%): [162.971, 1272.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   725.761 ±(99.9%) 539.844 B/op [Average]
[info]   (min, avg, max) = (655.916, 725.761, 975.911), stdev = 140.196
[info]   CI (99.9%): [185.917, 1265.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.885 ±(99.9%) 7.512 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.885, 4.375), stdev = 1.951
[info]   CI (99.9%): [≈ 0, 8.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.919 ±(99.9%) 7.804 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.919, 4.544), stdev = 2.027
[info]   CI (99.9%): [≈ 0, 8.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 9.000), stdev = 1.304
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.24% complete, ETA 01:19:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 450313.768 ops/s
[info] # Warmup Iteration   2: 1003311.875 ops/s
[info] # Warmup Iteration   3: 1031467.299 ops/s
[info] Iteration   1: 1049793.993 ops/s
[info]                  ·gc.alloc.rate:                   759.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              1137.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     983.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1041463.439 ops/s
[info]                  ·gc.alloc.rate:                   755.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              1141.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     992.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1034740.013 ops/s
[info]                  ·gc.alloc.rate:                   746.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              1136.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1001.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1038956.347 ops/s
[info]                  ·gc.alloc.rate:                   761.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              1153.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1497.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.915 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.415 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1052386.251 ops/s
[info]                  ·gc.alloc.rate:                   763.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              1141.608 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     984.280 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.996 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala":
[info]   1043468.009 ±(99.9%) 28563.917 ops/s [Average]
[info]   (min, avg, max) = (1034740.013, 1043468.009, 1052386.251), stdev = 7417.958
[info]   CI (99.9%): [1014904.092, 1072031.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   757.280 ±(99.9%) 24.859 MB/sec [Average]
[info]   (min, avg, max) = (746.982, 757.280, 763.363), stdev = 6.456
[info]   CI (99.9%): [732.421, 782.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1142.078 ±(99.9%) 25.666 B/op [Average]
[info]   (min, avg, max) = (1136.183, 1142.078, 1153.211), stdev = 6.665
[info]   CI (99.9%): [1116.412, 1167.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   723.659 ±(99.9%) 570.471 MB/sec [Average]
[info]   (min, avg, max) = (656.453, 723.659, 988.673), stdev = 148.150
[info]   CI (99.9%): [153.188, 1294.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1091.846 ±(99.9%) 873.757 B/op [Average]
[info]   (min, avg, max) = (983.718, 1091.846, 1497.561), stdev = 226.912
[info]   CI (99.9%): [218.089, 1965.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.729 ±(99.9%) 4.827 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.729, 2.915), stdev = 1.254
[info]   CI (99.9%): [≈ 0, 5.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.101 ±(99.9%) 7.312 B/op [Average]
[info]   (min, avg, max) = (0.031, 1.101, 4.415), stdev = 1.899
[info]   CI (99.9%): [≈ 0, 8.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 9.000), stdev = 2.168
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.47% complete, ETA 01:18:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1142002.585 ops/s
[info] # Warmup Iteration   2: 2581345.994 ops/s
[info] # Warmup Iteration   3: 2732551.592 ops/s
[info] Iteration   1: 2763021.643 ops/s
[info]                  ·gc.alloc.rate:                   1308.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     755.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 2751298.837 ops/s
[info]                  ·gc.alloc.rate:                   1311.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              750.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     759.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.144 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.798 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2763016.976 ops/s
[info]                  ·gc.alloc.rate:               1321.781 MB/sec
[info]                  ·gc.alloc.rate.norm:          752.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 752.079 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 2802346.770 ops/s
[info]                  ·gc.alloc.rate:               1348.435 MB/sec
[info]                  ·gc.alloc.rate.norm:          757.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 741.509 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 2791050.822 ops/s
[info]                  ·gc.alloc.rate:                   1343.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              757.646 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     747.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala":
[info]   2774147.010 ±(99.9%) 82825.905 ops/s [Average]
[info]   (min, avg, max) = (2751298.837, 2774147.010, 2802346.770), stdev = 21509.625
[info]   CI (99.9%): [2691321.104, 2856972.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1326.665 ±(99.9%) 71.058 MB/sec [Average]
[info]   (min, avg, max) = (1308.021, 1326.665, 1348.435), stdev = 18.454
[info]   CI (99.9%): [1255.607, 1397.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   752.625 ±(99.9%) 20.245 B/op [Average]
[info]   (min, avg, max) = (745.049, 752.625, 757.646), stdev = 5.258
[info]   CI (99.9%): [732.380, 772.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1323.727 ±(99.9%) 12.312 MB/sec [Average]
[info]   (min, avg, max) = (1320.293, 1323.727, 1327.065), stdev = 3.197
[info]   CI (99.9%): [1311.415, 1336.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   751.025 ±(99.9%) 26.341 B/op [Average]
[info]   (min, avg, max) = (741.509, 751.025, 759.103), stdev = 6.841
[info]   CI (99.9%): [724.684, 777.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.641 ±(99.9%) 5.387 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.641, 3.144), stdev = 1.399
[info]   CI (99.9%): [≈ 0, 6.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.367 ±(99.9%) 3.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.367, 1.798), stdev = 0.800
[info]   CI (99.9%): [≈ 0, 3.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 10.000), stdev = 2.302
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 12.71% complete, ETA 01:18:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1874726.253 ops/s
[info] # Warmup Iteration   2: 3170050.795 ops/s
[info] # Warmup Iteration   3: 3242511.517 ops/s
[info] Iteration   1: 3241681.166 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3242980.863 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3245238.315 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3238345.545 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3211564.735 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   3235962.125 ±(99.9%) 53388.422 ops/s [Average]
[info]   (min, avg, max) = (3211564.735, 3235962.125, 3245238.315), stdev = 13864.804
[info]   CI (99.9%): [3182573.702, 3289350.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 12.94% complete, ETA 01:18:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 119437.804 ops/s
[info] # Warmup Iteration   2: 579228.965 ops/s
[info] # Warmup Iteration   3: 564037.898 ops/s
[info] Iteration   1: 597122.969 ops/s
[info]                  ·gc.alloc.rate:               696.110 MB/sec
[info]                  ·gc.alloc.rate.norm:          1834.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1728.544 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 601142.483 ops/s
[info]                  ·gc.alloc.rate:                   698.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              1829.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1719.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 576757.730 ops/s
[info]                  ·gc.alloc.rate:               670.233 MB/sec
[info]                  ·gc.alloc.rate.norm:          1828.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1795.065 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 601137.801 ops/s
[info]                  ·gc.alloc.rate:                   690.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              1807.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1724.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 603875.068 ops/s
[info]                  ·gc.alloc.rate:                   692.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              1803.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1719.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.373 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.789 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson":
[info]   596007.210 ±(99.9%) 42461.298 ops/s [Average]
[info]   (min, avg, max) = (576757.730, 596007.210, 603875.068), stdev = 11027.064
[info]   CI (99.9%): [553545.912, 638468.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   689.570 ±(99.9%) 43.579 MB/sec [Average]
[info]   (min, avg, max) = (670.233, 689.570, 698.969), stdev = 11.317
[info]   CI (99.9%): [645.992, 733.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1821.003 ±(99.9%) 54.765 B/op [Average]
[info]   (min, avg, max) = (1803.708, 1821.003, 1834.760), stdev = 14.222
[info]   CI (99.9%): [1766.238, 1875.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   657.822 ±(99.9%) 6.166 MB/sec [Average]
[info]   (min, avg, max) = (655.811, 657.822, 659.888), stdev = 1.601
[info]   CI (99.9%): [651.656, 663.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1737.542 ±(99.9%) 124.673 B/op [Average]
[info]   (min, avg, max) = (1719.566, 1737.542, 1795.065), stdev = 32.377
[info]   CI (99.9%): [1612.869, 1862.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.691 ±(99.9%) 5.773 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.691, 3.373), stdev = 1.499
[info]   CI (99.9%): [≈ 0, 6.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.801 ±(99.9%) 15.043 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.801, 8.789), stdev = 3.907
[info]   CI (99.9%): [≈ 0, 16.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 13.18% complete, ETA 01:18:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34083.134 ops/s
[info] # Warmup Iteration   2: 138407.974 ops/s
[info] # Warmup Iteration   3: 154488.552 ops/s
[info] Iteration   1: 156212.842 ops/s
[info]                  ·gc.alloc.rate:                   1968.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              19828.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19999.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.686 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.122 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 155761.304 ops/s
[info]                  ·gc.alloc.rate:                   1975.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              19943.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19897.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.260 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 160683.634 ops/s
[info]                  ·gc.alloc.rate:                   2035.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              19932.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16161.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 159872.979 ops/s
[info]                  ·gc.alloc.rate:                   2039.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              20074.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1994.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19634.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.205 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 159684.664 ops/s
[info]                  ·gc.alloc.rate:               2038.334 MB/sec
[info]                  ·gc.alloc.rate.norm:          20085.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2009.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19802.292 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce":
[info]   158443.084 ±(99.9%) 8774.930 ops/s [Average]
[info]   (min, avg, max) = (155761.304, 158443.084, 160683.634), stdev = 2278.821
[info]   CI (99.9%): [149668.154, 167218.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate":
[info]   2011.366 ±(99.9%) 138.228 MB/sec [Average]
[info]   (min, avg, max) = (1968.974, 2011.366, 2039.089), stdev = 35.897
[info]   CI (99.9%): [1873.138, 2149.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   19973.110 ±(99.9%) 414.126 B/op [Average]
[info]   (min, avg, max) = (19828.762, 19973.110, 20085.653), stdev = 107.547
[info]   CI (99.9%): [19558.983, 20387.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1922.152 ±(99.9%) 588.281 MB/sec [Average]
[info]   (min, avg, max) = (1650.016, 1922.152, 2009.578), stdev = 152.775
[info]   CI (99.9%): [1333.871, 2510.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19099.160 ±(99.9%) 6345.221 B/op [Average]
[info]   (min, avg, max) = (16161.249, 19099.160, 19999.849), stdev = 1647.834
[info]   CI (99.9%): [12753.938, 25444.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.771 ±(99.9%) 6.279 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.771, 3.686), stdev = 1.631
[info]   CI (99.9%): [≈ 0, 7.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7.758 ±(99.9%) 63.237 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.758, 37.122), stdev = 16.422
[info]   CI (99.9%): [≈ 0, 70.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 12.000), stdev = 2.049
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.41% complete, ETA 01:18:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123424.190 ops/s
[info] # Warmup Iteration   2: 425993.865 ops/s
[info] # Warmup Iteration   3: 446790.481 ops/s
[info] Iteration   1: 447842.116 ops/s
[info]                  ·gc.alloc.rate:               369.325 MB/sec
[info]                  ·gc.alloc.rate.norm:          1297.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 898.986 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 446798.053 ops/s
[info]                  ·gc.alloc.rate:               370.107 MB/sec
[info]                  ·gc.alloc.rate.norm:          1303.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1148.617 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 451235.279 ops/s
[info]                  ·gc.alloc.rate:               372.866 MB/sec
[info]                  ·gc.alloc.rate.norm:          1300.350 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1137.289 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 449977.098 ops/s
[info]                  ·gc.alloc.rate:                   372.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              1302.629 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1142.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 449581.521 ops/s
[info]                  ·gc.alloc.rate:                   373.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              1308.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1143.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala":
[info]   449086.813 ±(99.9%) 6790.941 ops/s [Average]
[info]   (min, avg, max) = (446798.053, 449086.813, 451235.279), stdev = 1763.586
[info]   CI (99.9%): [442295.872, 455877.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   371.684 ±(99.9%) 7.217 MB/sec [Average]
[info]   (min, avg, max) = (369.325, 371.684, 373.697), stdev = 1.874
[info]   CI (99.9%): [364.467, 378.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1302.488 ±(99.9%) 14.751 B/op [Average]
[info]   (min, avg, max) = (1297.927, 1302.488, 1308.196), stdev = 3.831
[info]   CI (99.9%): [1287.738, 1317.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   312.315 ±(99.9%) 121.644 MB/sec [Average]
[info]   (min, avg, max) = (255.807, 312.315, 326.756), stdev = 31.590
[info]   CI (99.9%): [190.671, 433.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1094.313 ±(99.9%) 420.742 B/op [Average]
[info]   (min, avg, max) = (898.986, 1094.313, 1148.617), stdev = 109.265
[info]   CI (99.9%): [673.571, 1515.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.154 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.073), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.65% complete, ETA 01:17:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 761286.072 ops/s
[info] # Warmup Iteration   2: 1258051.583 ops/s
[info] # Warmup Iteration   3: 1273580.650 ops/s
[info] Iteration   1: 1271343.703 ops/s
[info]                  ·gc.alloc.rate:               254.122 MB/sec
[info]                  ·gc.alloc.rate.norm:          314.595 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 316.663 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1272007.815 ops/s
[info]                  ·gc.alloc.rate:               269.268 MB/sec
[info]                  ·gc.alloc.rate.norm:          333.121 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 316.503 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1275411.715 ops/s
[info]                  ·gc.alloc.rate:      246.348 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1271389.119 ops/s
[info]                  ·gc.alloc.rate:               255.928 MB/sec
[info]                  ·gc.alloc.rate.norm:          316.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 408.177 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 1271100.307 ops/s
[info]                  ·gc.alloc.rate:                   252.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     408.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala":
[info]   1272250.532 ±(99.9%) 6925.642 ops/s [Average]
[info]   (min, avg, max) = (1271100.307, 1272250.532, 1275411.715), stdev = 1798.567
[info]   CI (99.9%): [1265324.890, 1279176.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   255.640 ±(99.9%) 32.452 MB/sec [Average]
[info]   (min, avg, max) = (246.348, 255.640, 269.268), stdev = 8.428
[info]   CI (99.9%): [223.188, 288.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   316.243 ±(99.9%) 40.864 B/op [Average]
[info]   (min, avg, max) = (304.000, 316.243, 333.121), stdev = 10.612
[info]   CI (99.9%): [275.379, 357.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   234.221 ±(99.9%) 523.883 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 234.221, 329.747), stdev = 136.051
[info]   CI (99.9%): [≈ 0, 758.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   289.925 ±(99.9%) 648.551 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 289.925, 408.284), stdev = 168.427
[info]   CI (99.9%): [≈ 0, 938.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.089 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 13.88% complete, ETA 01:17:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4335.256 ops/s
[info] # Warmup Iteration   2: 71099.273 ops/s
[info] # Warmup Iteration   3: 77822.594 ops/s
[info] Iteration   1: 78828.390 ops/s
[info]                  ·gc.alloc.rate:               3149.722 MB/sec
[info]                  ·gc.alloc.rate.norm:          62886.627 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2937.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58651.736 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   2: 80596.920 ops/s
[info]                  ·gc.alloc.rate:                   3246.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              63400.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3308.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64613.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.407 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 80956.687 ops/s
[info]                  ·gc.alloc.rate:                   3255.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              63296.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3017.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58658.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.809 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 80663.730 ops/s
[info]                  ·gc.alloc.rate:               3240.025 MB/sec
[info]                  ·gc.alloc.rate.norm:          63219.337 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3039.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59312.773 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   5: 80314.381 ops/s
[info]                  ·gc.alloc.rate:                   3197.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              62651.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3052.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59811.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.408 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson":
[info]   80272.022 ±(99.9%) 3229.510 ops/s [Average]
[info]   (min, avg, max) = (78828.390, 80272.022, 80956.687), stdev = 838.694
[info]   CI (99.9%): [77042.511, 83501.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3217.997 ±(99.9%) 170.308 MB/sec [Average]
[info]   (min, avg, max) = (3149.722, 3217.997, 3255.915), stdev = 44.229
[info]   CI (99.9%): [3047.689, 3388.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63090.901 ±(99.9%) 1202.377 B/op [Average]
[info]   (min, avg, max) = (62651.126, 63090.901, 63400.928), stdev = 312.253
[info]   CI (99.9%): [61888.524, 64293.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3071.253 ±(99.9%) 539.513 MB/sec [Average]
[info]   (min, avg, max) = (2937.615, 3071.253, 3308.792), stdev = 140.110
[info]   CI (99.9%): [2531.740, 3610.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   60209.648 ±(99.9%) 9662.519 B/op [Average]
[info]   (min, avg, max) = (58651.736, 60209.648, 64613.210), stdev = 2509.325
[info]   CI (99.9%): [50547.129, 69872.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.325 ±(99.9%) 1.305 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.325, 0.809), stdev = 0.339
[info]   CI (99.9%): [≈ 0, 1.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.count":
[info]   46.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 12.600, 14.000), stdev = 0.894
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 14.12% complete, ETA 01:17:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113718.811 ops/s
[info] # Warmup Iteration   2: 291723.427 ops/s
[info] # Warmup Iteration   3: 304570.303 ops/s
[info] Iteration   1: 307620.202 ops/s
[info]                  ·gc.alloc.rate:                   1727.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              8835.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8455.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.508 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 300124.201 ops/s
[info]                  ·gc.alloc.rate:                   1691.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              8867.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8624.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.747 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 295912.868 ops/s
[info]                  ·gc.alloc.rate:               1681.484 MB/sec
[info]                  ·gc.alloc.rate.norm:          8943.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1645.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8752.984 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 307923.847 ops/s
[info]                  ·gc.alloc.rate:               1748.126 MB/sec
[info]                  ·gc.alloc.rate.norm:          8933.740 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1655.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8459.471 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 304873.736 ops/s
[info]                  ·gc.alloc.rate:               1732.153 MB/sec
[info]                  ·gc.alloc.rate.norm:          8942.397 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1666.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8604.103 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce":
[info]   303290.971 ±(99.9%) 19932.035 ops/s [Average]
[info]   (min, avg, max) = (295912.868, 303290.971, 307923.847), stdev = 5176.286
[info]   CI (99.9%): [283358.935, 323223.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1716.041 ±(99.9%) 109.259 MB/sec [Average]
[info]   (min, avg, max) = (1681.484, 1716.041, 1748.126), stdev = 28.374
[info]   CI (99.9%): [1606.782, 1825.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   8904.401 ±(99.9%) 192.161 B/op [Average]
[info]   (min, avg, max) = (8835.342, 8904.401, 8943.252), stdev = 49.904
[info]   CI (99.9%): [8712.240, 9096.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1653.130 ±(99.9%) 33.740 MB/sec [Average]
[info]   (min, avg, max) = (1645.062, 1653.130, 1666.625), stdev = 8.762
[info]   CI (99.9%): [1619.390, 1686.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8579.422 ±(99.9%) 481.469 B/op [Average]
[info]   (min, avg, max) = (8455.571, 8579.422, 8752.984), stdev = 125.036
[info]   CI (99.9%): [8097.953, 9060.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.712 ±(99.9%) 5.442 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.712, 3.227), stdev = 1.413
[info]   CI (99.9%): [≈ 0, 6.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.651 ±(99.9%) 27.829 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.651, 16.508), stdev = 7.227
[info]   CI (99.9%): [≈ 0, 31.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 12.000), stdev = 2.510
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.35% complete, ETA 01:17:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 732974.380 ops/s
[info] # Warmup Iteration   2: 1720703.787 ops/s
[info] # Warmup Iteration   3: 1841873.874 ops/s
[info] Iteration   1: 1844644.718 ops/s
[info]                  ·gc.alloc.rate:                   981.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              837.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     838.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1884969.997 ops/s
[info]                  ·gc.alloc.rate:                   1002.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              837.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     823.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1934149.457 ops/s
[info]                  ·gc.alloc.rate:                   1032.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              839.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     803.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.693 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1890866.604 ops/s
[info]                  ·gc.alloc.rate:                   997.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              830.368 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     818.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.347 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1927214.861 ops/s
[info]                  ·gc.alloc.rate:               1014.218 MB/sec
[info]                  ·gc.alloc.rate.norm:          828.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 801.313 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala":
[info]   1896369.127 ±(99.9%) 139029.644 ops/s [Average]
[info]   (min, avg, max) = (1844644.718, 1896369.127, 1934149.457), stdev = 36105.557
[info]   CI (99.9%): [1757339.483, 2035398.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1005.626 ±(99.9%) 73.071 MB/sec [Average]
[info]   (min, avg, max) = (981.414, 1005.626, 1032.220), stdev = 18.976
[info]   CI (99.9%): [932.554, 1078.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   834.551 ±(99.9%) 19.199 B/op [Average]
[info]   (min, avg, max) = (828.247, 834.551, 839.969), stdev = 4.986
[info]   CI (99.9%): [815.352, 853.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   984.462 ±(99.9%) 9.977 MB/sec [Average]
[info]   (min, avg, max) = (981.236, 984.462, 987.888), stdev = 2.591
[info]   CI (99.9%): [974.485, 994.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   817.203 ±(99.9%) 58.646 B/op [Average]
[info]   (min, avg, max) = (801.313, 817.203, 838.625), stdev = 15.230
[info]   CI (99.9%): [758.558, 875.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.762 ±(99.9%) 5.523 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.762, 3.310), stdev = 1.434
[info]   CI (99.9%): [≈ 0, 6.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.622 ±(99.9%) 4.492 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.622, 2.693), stdev = 1.166
[info]   CI (99.9%): [≈ 0, 5.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 9.000), stdev = 2.881
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.59% complete, ETA 01:17:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1419092.351 ops/s
[info] # Warmup Iteration   2: 2575152.709 ops/s
[info] # Warmup Iteration   3: 2811332.519 ops/s
[info] Iteration   1: 2775850.849 ops/s
[info]                  ·gc.alloc.rate:                   770.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              437.149 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     374.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2829433.549 ops/s
[info]                  ·gc.alloc.rate:                   781.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              434.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     368.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2823909.242 ops/s
[info]                  ·gc.alloc.rate:                   790.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.337 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     553.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2855990.827 ops/s
[info]                  ·gc.alloc.rate:                   789.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              435.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     365.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.491 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2839269.663 ops/s
[info]                  ·gc.alloc.rate:                   783.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              434.378 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     367.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.335 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala":
[info]   2824890.826 ±(99.9%) 115527.022 ops/s [Average]
[info]   (min, avg, max) = (2775850.849, 2824890.826, 2855990.827), stdev = 30002.001
[info]   CI (99.9%): [2709363.804, 2940417.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   783.289 ±(99.9%) 30.020 MB/sec [Average]
[info]   (min, avg, max) = (770.974, 783.289, 790.228), stdev = 7.796
[info]   CI (99.9%): [753.269, 813.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   436.400 ±(99.9%) 9.378 B/op [Average]
[info]   (min, avg, max) = (434.378, 436.400, 440.337), stdev = 2.435
[info]   CI (99.9%): [427.022, 445.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   728.526 ±(99.9%) 571.631 MB/sec [Average]
[info]   (min, avg, max) = (660.781, 728.526, 994.077), stdev = 148.451
[info]   CI (99.9%): [156.895, 1300.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   405.918 ±(99.9%) 318.878 B/op [Average]
[info]   (min, avg, max) = (365.632, 405.918, 553.927), stdev = 82.812
[info]   CI (99.9%): [87.040, 724.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.687 ±(99.9%) 4.446 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.687, 2.706), stdev = 1.155
[info]   CI (99.9%): [≈ 0, 5.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.379 ±(99.9%) 2.450 B/op [Average]
[info]   (min, avg, max) = (0.023, 0.379, 1.491), stdev = 0.636
[info]   CI (99.9%): [≈ 0, 2.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 9.000), stdev = 2.168
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 14.82% complete, ETA 01:16:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1316748.829 ops/s
[info] # Warmup Iteration   2: 2822279.717 ops/s
[info] # Warmup Iteration   3: 3055825.392 ops/s
[info] Iteration   1: 3064247.456 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3046414.415 ops/s
[info]                  ·gc.alloc.rate:      3.741 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.932 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3063307.847 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3057691.100 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2985527.800 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc":
[info]   3043437.724 ±(99.9%) 127616.251 ops/s [Average]
[info]   (min, avg, max) = (2985527.800, 3043437.724, 3064247.456), stdev = 33141.535
[info]   CI (99.9%): [2915821.472, 3171053.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.749 ±(99.9%) 6.442 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.749, 3.741), stdev = 1.673
[info]   CI (99.9%): [≈ 0, 7.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.387 ±(99.9%) 3.327 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.387, 1.932), stdev = 0.864
[info]   CI (99.9%): [≈ 0, 3.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 15.06% complete, ETA 01:16:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13711.693 ops/s
[info] # Warmup Iteration   2: 44694.382 ops/s
[info] # Warmup Iteration   3: 48520.931 ops/s
[info] Iteration   1: 49399.910 ops/s
[info]                  ·gc.alloc.rate:                   2214.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              70543.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62860.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.129 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 49472.599 ops/s
[info]                  ·gc.alloc.rate:                   2211.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              70323.478 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62642.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.662 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 49546.860 ops/s
[info]                  ·gc.alloc.rate:               2241.687 MB/sec
[info]                  ·gc.alloc.rate.norm:          71206.934 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2315.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 73562.193 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 49471.411 ops/s
[info]                  ·gc.alloc.rate:                   2247.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              71456.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2003.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63714.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.662 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 49381.121 ops/s
[info]                  ·gc.alloc.rate:               2255.354 MB/sec
[info]                  ·gc.alloc.rate.norm:          71879.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2353.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75007.471 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson":
[info]   49454.380 ±(99.9%) 254.757 ops/s [Average]
[info]   (min, avg, max) = (49381.121, 49454.380, 49546.860), stdev = 66.160
[info]   CI (99.9%): [49199.623, 49709.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2233.892 ±(99.9%) 77.160 MB/sec [Average]
[info]   (min, avg, max) = (2211.030, 2233.892, 2255.354), stdev = 20.038
[info]   CI (99.9%): [2156.732, 2311.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   71081.800 ±(99.9%) 2478.420 B/op [Average]
[info]   (min, avg, max) = (70323.478, 71081.800, 71879.095), stdev = 643.638
[info]   CI (99.9%): [68603.380, 73560.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2123.132 ±(99.9%) 747.120 MB/sec [Average]
[info]   (min, avg, max) = (1969.519, 2123.132, 2353.514), stdev = 194.025
[info]   CI (99.9%): [1376.012, 2870.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   67557.428 ±(99.9%) 23779.636 B/op [Average]
[info]   (min, avg, max) = (62642.037, 67557.428, 75007.471), stdev = 6175.496
[info]   CI (99.9%): [43777.792, 91337.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.254 ±(99.9%) 2.097 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.254, 1.228), stdev = 0.545
[info]   CI (99.9%): [≈ 0, 2.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.091 ±(99.9%) 66.824 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.091, 39.129), stdev = 17.354
[info]   CI (99.9%): [≈ 0, 74.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 13.000), stdev = 1.924
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 15.29% complete, ETA 01:16:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37838.725 ops/s
[info] # Warmup Iteration   2: 222849.325 ops/s
[info] # Warmup Iteration   3: 232924.253 ops/s
[info] Iteration   1: 241309.061 ops/s
[info]                  ·gc.alloc.rate:                   2626.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              17131.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2629.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17153.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.530 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 243752.900 ops/s
[info]                  ·gc.alloc.rate:                   2687.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              17348.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2640.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17046.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 240735.109 ops/s
[info]                  ·gc.alloc.rate:                   2657.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              17367.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2668.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17442.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 243449.882 ops/s
[info]                  ·gc.alloc.rate:                   2673.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              17283.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2353.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15214.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 239572.026 ops/s
[info]                  ·gc.alloc.rate:               2647.576 MB/sec
[info]                  ·gc.alloc.rate.norm:          17386.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2705.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17765.391 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce":
[info]   241763.795 ±(99.9%) 6906.584 ops/s [Average]
[info]   (min, avg, max) = (239572.026, 241763.795, 243752.900), stdev = 1793.618
[info]   CI (99.9%): [234857.212, 248670.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2658.565 ±(99.9%) 90.508 MB/sec [Average]
[info]   (min, avg, max) = (2626.602, 2658.565, 2687.570), stdev = 23.505
[info]   CI (99.9%): [2568.057, 2749.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   17303.572 ±(99.9%) 399.458 B/op [Average]
[info]   (min, avg, max) = (17131.360, 17303.572, 17386.590), stdev = 103.738
[info]   CI (99.9%): [16904.114, 17703.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2599.675 ±(99.9%) 541.576 MB/sec [Average]
[info]   (min, avg, max) = (2353.540, 2599.675, 2705.259), stdev = 140.646
[info]   CI (99.9%): [2058.099, 3141.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   16924.334 ±(99.9%) 3833.505 B/op [Average]
[info]   (min, avg, max) = (15214.978, 16924.334, 17765.391), stdev = 995.549
[info]   CI (99.9%): [13090.830, 20757.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.125 ±(99.9%) 0.898 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.125, 0.541), stdev = 0.233
[info]   CI (99.9%): [≈ 0, 1.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.814 ±(99.9%) 5.858 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.814, 3.530), stdev = 1.521
[info]   CI (99.9%): [≈ 0, 6.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.400, 11.000), stdev = 0.894
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.53% complete, ETA 01:16:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 137374.418 ops/s
[info] # Warmup Iteration   2: 361185.310 ops/s
[info] # Warmup Iteration   3: 377120.727 ops/s
[info] Iteration   1: 380152.580 ops/s
[info]                  ·gc.alloc.rate:                   1945.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              8055.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8165.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.913 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.202 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 378530.298 ops/s
[info]                  ·gc.alloc.rate:                   1949.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              8107.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6814.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 386232.535 ops/s
[info]                  ·gc.alloc.rate:                   2007.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              8180.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8051.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.679 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 364328.062 ops/s
[info]                  ·gc.alloc.rate:                   1899.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              8205.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8610.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 378524.656 ops/s
[info]                  ·gc.alloc.rate:               1958.284 MB/sec
[info]                  ·gc.alloc.rate.norm:          8141.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1672.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6953.650 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala":
[info]   377553.626 ±(99.9%) 30978.566 ops/s [Average]
[info]   (min, avg, max) = (364328.062, 377553.626, 386232.535), stdev = 8045.035
[info]   CI (99.9%): [346575.060, 408532.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1952.234 ±(99.9%) 148.066 MB/sec [Average]
[info]   (min, avg, max) = (1899.606, 1952.234, 2007.560), stdev = 38.452
[info]   CI (99.9%): [1804.168, 2100.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   8138.239 ±(99.9%) 229.132 B/op [Average]
[info]   (min, avg, max) = (8055.736, 8138.239, 8205.754), stdev = 59.505
[info]   CI (99.9%): [7909.107, 8367.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1850.612 ±(99.9%) 686.863 MB/sec [Average]
[info]   (min, avg, max) = (1639.176, 1850.612, 1993.239), stdev = 178.376
[info]   CI (99.9%): [1163.749, 2537.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   7719.204 ±(99.9%) 3048.858 B/op [Average]
[info]   (min, avg, max) = (6814.888, 7719.204, 8610.218), stdev = 791.779
[info]   CI (99.9%): [4670.345, 10768.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.828 ±(99.9%) 6.645 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.828, 3.913), stdev = 1.726
[info]   CI (99.9%): [≈ 0, 7.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.429 ±(99.9%) 27.513 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.429, 16.202), stdev = 7.145
[info]   CI (99.9%): [≈ 0, 30.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 11.000), stdev = 1.924
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.76% complete, ETA 01:16:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1234720.855 ops/s
[info] # Warmup Iteration   2: 2194551.612 ops/s
[info] # Warmup Iteration   3: 2256204.624 ops/s
[info] Iteration   1: 2285164.792 ops/s
[info]                  ·gc.alloc.rate:                   823.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              567.310 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     683.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2290579.058 ops/s
[info]                  ·gc.alloc.rate:               807.655 MB/sec
[info]                  ·gc.alloc.rate.norm:          554.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 455.423 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 2295657.074 ops/s
[info]                  ·gc.alloc.rate:                   807.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              553.678 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     455.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2292190.957 ops/s
[info]                  ·gc.alloc.rate:                   819.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              562.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     684.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.801 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2301829.579 ops/s
[info]                  ·gc.alloc.rate:                   822.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              562.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     452.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala":
[info]   2293084.292 ±(99.9%) 23806.509 ops/s [Average]
[info]   (min, avg, max) = (2285164.792, 2293084.292, 2301829.579), stdev = 6182.475
[info]   CI (99.9%): [2269277.783, 2316890.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   816.098 ±(99.9%) 30.458 MB/sec [Average]
[info]   (min, avg, max) = (807.601, 816.098, 823.705), stdev = 7.910
[info]   CI (99.9%): [785.640, 846.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   560.135 ±(99.9%) 21.972 B/op [Average]
[info]   (min, avg, max) = (553.678, 560.135, 567.310), stdev = 5.706
[info]   CI (99.9%): [538.164, 582.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   795.646 ±(99.9%) 699.783 MB/sec [Average]
[info]   (min, avg, max) = (662.151, 795.646, 996.888), stdev = 181.731
[info]   CI (99.9%): [95.862, 1495.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   546.273 ±(99.9%) 484.309 B/op [Average]
[info]   (min, avg, max) = (452.740, 546.273, 684.499), stdev = 125.773
[info]   CI (99.9%): [61.964, 1030.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.562 ±(99.9%) 4.442 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.562, 2.623), stdev = 1.154
[info]   CI (99.9%): [≈ 0, 5.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.386 ±(99.9%) 3.050 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.386, 1.801), stdev = 0.792
[info]   CI (99.9%): [≈ 0, 3.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 8.000), stdev = 2.191
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 16.00% complete, ETA 01:15:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4250.391 ops/s
[info] # Warmup Iteration   2: 67940.194 ops/s
[info] # Warmup Iteration   3: 84382.620 ops/s
[info] Iteration   1: 88319.640 ops/s
[info]                  ·gc.alloc.rate:                   3451.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              61501.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3316.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59106.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.081 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 87928.218 ops/s
[info]                  ·gc.alloc.rate:                   3483.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              62345.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3353.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60021.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.373 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 88456.191 ops/s
[info]                  ·gc.alloc.rate:                   3504.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              62361.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3378.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60106.583 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.370 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 85786.456 ops/s
[info]                  ·gc.alloc.rate:               3390.209 MB/sec
[info]                  ·gc.alloc.rate.norm:          62198.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3052.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56010.254 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   5: 88187.133 ops/s
[info]                  ·gc.alloc.rate:               3496.246 MB/sec
[info]                  ·gc.alloc.rate.norm:          62392.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3398.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60643.147 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson":
[info]   87735.528 ±(99.9%) 4262.100 ops/s [Average]
[info]   (min, avg, max) = (85786.456, 87735.528, 88456.191), stdev = 1106.854
[info]   CI (99.9%): [83473.428, 91997.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3465.155 ±(99.9%) 179.386 MB/sec [Average]
[info]   (min, avg, max) = (3390.209, 3465.155, 3504.967), stdev = 46.586
[info]   CI (99.9%): [3285.769, 3644.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   62159.718 ±(99.9%) 1445.751 B/op [Average]
[info]   (min, avg, max) = (61501.523, 62159.718, 62392.099), stdev = 375.457
[info]   CI (99.9%): [60713.967, 63605.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3299.903 ±(99.9%) 544.336 MB/sec [Average]
[info]   (min, avg, max) = (3052.932, 3299.903, 3398.240), stdev = 141.362
[info]   CI (99.9%): [2755.567, 3844.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   59177.560 ±(99.9%) 7141.928 B/op [Average]
[info]   (min, avg, max) = (56010.254, 59177.560, 60643.147), stdev = 1854.736
[info]   CI (99.9%): [52035.632, 66319.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.379 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.229), stdev = 0.098
[info]   CI (99.9%): [≈ 0, 0.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.965 ±(99.9%) 6.745 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.965, 4.081), stdev = 1.752
[info]   CI (99.9%): [≈ 0, 7.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.400, 15.000), stdev = 1.140
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 16.24% complete, ETA 01:15:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 97627.246 ops/s
[info] # Warmup Iteration   2: 239424.073 ops/s
[info] # Warmup Iteration   3: 256498.322 ops/s
[info] Iteration   1: 261419.057 ops/s
[info]                  ·gc.alloc.rate:                   2098.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              12626.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11906.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.517 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 261737.766 ops/s
[info]                  ·gc.alloc.rate:                   2119.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              12746.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11876.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.250 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 256166.099 ops/s
[info]                  ·gc.alloc.rate:               2083.621 MB/sec
[info]                  ·gc.alloc.rate.norm:          12801.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1986.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12204.785 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 257460.095 ops/s
[info]                  ·gc.alloc.rate:                   2094.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              12805.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2002.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12238.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 257825.365 ops/s
[info]                  ·gc.alloc.rate:                   2098.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              12808.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12304.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce":
[info]   258921.677 ±(99.9%) 9645.574 ops/s [Average]
[info]   (min, avg, max) = (256166.099, 258921.677, 261737.766), stdev = 2504.925
[info]   CI (99.9%): [249276.103, 268567.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2098.933 ±(99.9%) 50.352 MB/sec [Average]
[info]   (min, avg, max) = (2083.621, 2098.933, 2119.713), stdev = 13.076
[info]   CI (99.9%): [2048.581, 2149.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12757.708 ±(99.9%) 299.118 B/op [Average]
[info]   (min, avg, max) = (12626.582, 12757.708, 12808.935), stdev = 77.680
[info]   CI (99.9%): [12458.590, 13056.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1991.618 ±(99.9%) 65.631 MB/sec [Average]
[info]   (min, avg, max) = (1975.118, 1991.618, 2015.761), stdev = 17.044
[info]   CI (99.9%): [1925.987, 2057.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   12106.402 ±(99.9%) 768.023 B/op [Average]
[info]   (min, avg, max) = (11876.718, 12106.402, 12304.949), stdev = 199.453
[info]   CI (99.9%): [11338.379, 12874.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.233 ±(99.9%) 1.830 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.233, 1.083), stdev = 0.475
[info]   CI (99.9%): [≈ 0, 2.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.404 ±(99.9%) 11.011 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.404, 6.517), stdev = 2.859
[info]   CI (99.9%): [≈ 0, 12.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.47% complete, ETA 01:15:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 658481.183 ops/s
[info] # Warmup Iteration   2: 1478219.164 ops/s
[info] # Warmup Iteration   3: 1564415.291 ops/s
[info] Iteration   1: 1561098.285 ops/s
[info]                  ·gc.alloc.rate:                   944.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              952.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     991.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1556820.527 ops/s
[info]                  ·gc.alloc.rate:                   937.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              947.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     996.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1581934.085 ops/s
[info]                  ·gc.alloc.rate:                   944.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              939.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     655.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1534482.793 ops/s
[info]                  ·gc.alloc.rate:                   930.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              953.925 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1011.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.598 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1496290.950 ops/s
[info]                  ·gc.alloc.rate:               912.720 MB/sec
[info]                  ·gc.alloc.rate.norm:          959.617 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1033.499 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala":
[info]   1546125.328 ±(99.9%) 125365.779 ops/s [Average]
[info]   (min, avg, max) = (1496290.950, 1546125.328, 1581934.085), stdev = 32557.095
[info]   CI (99.9%): [1420759.549, 1671491.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   933.946 ±(99.9%) 51.422 MB/sec [Average]
[info]   (min, avg, max) = (912.720, 933.946, 944.950), stdev = 13.354
[info]   CI (99.9%): [882.524, 985.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   950.708 ±(99.9%) 28.610 B/op [Average]
[info]   (min, avg, max) = (939.865, 950.708, 959.617), stdev = 7.430
[info]   CI (99.9%): [922.097, 979.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   919.586 ±(99.9%) 561.358 MB/sec [Average]
[info]   (min, avg, max) = (658.815, 919.586, 986.551), stdev = 145.783
[info]   CI (99.9%): [358.228, 1480.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   937.820 ±(99.9%) 611.047 B/op [Average]
[info]   (min, avg, max) = (655.452, 937.820, 1033.499), stdev = 158.687
[info]   CI (99.9%): [326.773, 1548.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.749 ±(99.9%) 5.058 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.749, 3.060), stdev = 1.314
[info]   CI (99.9%): [≈ 0, 5.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.749 ±(99.9%) 5.029 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.749, 3.044), stdev = 1.306
[info]   CI (99.9%): [≈ 0, 5.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.775
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.71% complete, ETA 01:15:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1668169.126 ops/s
[info] # Warmup Iteration   2: 2675806.213 ops/s
[info] # Warmup Iteration   3: 2769787.581 ops/s
[info] Iteration   1: 2809059.059 ops/s
[info]                  ·gc.alloc.rate:                   984.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              551.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     556.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2810235.285 ops/s
[info]                  ·gc.alloc.rate:                   975.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              546.133 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     371.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2797011.268 ops/s
[info]                  ·gc.alloc.rate:                   979.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     560.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.488 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2832108.924 ops/s
[info]                  ·gc.alloc.rate:                   990.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     551.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2789098.935 ops/s
[info]                  ·gc.alloc.rate:               982.427 MB/sec
[info]                  ·gc.alloc.rate.norm:          554.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 558.606 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala":
[info]   2807502.694 ±(99.9%) 62805.769 ops/s [Average]
[info]   (min, avg, max) = (2789098.935, 2807502.694, 2832108.924), stdev = 16310.459
[info]   CI (99.9%): [2744696.925, 2870308.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   982.340 ±(99.9%) 22.180 MB/sec [Average]
[info]   (min, avg, max) = (975.167, 982.340, 990.556), stdev = 5.760
[info]   CI (99.9%): [960.160, 1004.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   550.649 ±(99.9%) 11.331 B/op [Average]
[info]   (min, avg, max) = (546.133, 550.649, 554.295), stdev = 2.943
[info]   CI (99.9%): [539.318, 561.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   926.966 ±(99.9%) 568.644 MB/sec [Average]
[info]   (min, avg, max) = (662.824, 926.966, 995.978), stdev = 147.675
[info]   CI (99.9%): [358.322, 1495.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   519.651 ±(99.9%) 319.786 B/op [Average]
[info]   (min, avg, max) = (371.208, 519.651, 560.379), stdev = 83.047
[info]   CI (99.9%): [199.865, 839.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.620 ±(99.9%) 4.395 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.620, 2.644), stdev = 1.141
[info]   CI (99.9%): [≈ 0, 5.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.349 ±(99.9%) 2.473 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.349, 1.488), stdev = 0.642
[info]   CI (99.9%): [≈ 0, 2.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 8.000), stdev = 1.789
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 16.94% complete, ETA 01:14:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1542393.887 ops/s
[info] # Warmup Iteration   2: 3008888.669 ops/s
[info] # Warmup Iteration   3: 3169569.211 ops/s
[info] Iteration   1: 3168162.199 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3171456.541 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3170912.822 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3170036.804 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3171714.322 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3170456.538 ±(99.9%) 5523.489 ops/s [Average]
[info]   (min, avg, max) = (3168162.199, 3170456.538, 3171714.322), stdev = 1434.433
[info]   CI (99.9%): [3164933.048, 3175980.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 17.18% complete, ETA 01:14:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82943.229 ops/s
[info] # Warmup Iteration   2: 351571.123 ops/s
[info] # Warmup Iteration   3: 372513.402 ops/s
[info] Iteration   1: 394570.581 ops/s
[info]                  ·gc.alloc.rate:                   2518.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              10044.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2284.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9113.685 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.574 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 389101.853 ops/s
[info]                  ·gc.alloc.rate:                   2524.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              10209.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2623.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10612.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 380536.892 ops/s
[info]                  ·gc.alloc.rate:               2459.346 MB/sec
[info]                  ·gc.alloc.rate.norm:          10171.721 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2322.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9605.796 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 384305.765 ops/s
[info]                  ·gc.alloc.rate:                   2483.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              10172.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2345.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9605.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.341 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 380242.908 ops/s
[info]                  ·gc.alloc.rate:                   2459.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              10180.671 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2360.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9768.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson":
[info]   385751.600 ±(99.9%) 23472.189 ops/s [Average]
[info]   (min, avg, max) = (380242.908, 385751.600, 394570.581), stdev = 6095.653
[info]   CI (99.9%): [362279.411, 409223.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2489.046 ±(99.9%) 119.517 MB/sec [Average]
[info]   (min, avg, max) = (2459.346, 2489.046, 2524.084), stdev = 31.038
[info]   CI (99.9%): [2369.529, 2608.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   10155.690 ±(99.9%) 246.028 B/op [Average]
[info]   (min, avg, max) = (10044.726, 10155.690, 10209.220), stdev = 63.893
[info]   CI (99.9%): [9909.661, 10401.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2387.376 ±(99.9%) 520.431 MB/sec [Average]
[info]   (min, avg, max) = (2284.856, 2387.376, 2623.731), stdev = 135.154
[info]   CI (99.9%): [1866.945, 2907.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9741.305 ±(99.9%) 2100.232 B/op [Average]
[info]   (min, avg, max) = (9113.685, 9741.305, 10612.267), stdev = 545.423
[info]   CI (99.9%): [7641.073, 11841.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.162 ±(99.9%) 1.047 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.162, 0.645), stdev = 0.272
[info]   CI (99.9%): [≈ 0, 1.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.652 ±(99.9%) 4.171 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.652, 2.574), stdev = 1.083
[info]   CI (99.9%): [≈ 0, 4.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.400, 11.000), stdev = 1.140
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 17.41% complete, ETA 01:14:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7736.187 ops/s
[info] # Warmup Iteration   2: 22783.710 ops/s
[info] # Warmup Iteration   3: 25781.114 ops/s
[info] Iteration   1: 25516.329 ops/s
[info]                  ·gc.alloc.rate:                   1638.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              101008.919 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102269.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 163.070 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 25743.972 ops/s
[info]                  ·gc.alloc.rate:                   1659.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              101444.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100826.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 75.080 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 26232.426 ops/s
[info]                  ·gc.alloc.rate:                   1682.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              100920.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98714.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.498 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 25823.512 ops/s
[info]                  ·gc.alloc.rate:                   1675.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              102137.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100704.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.537 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 26323.918 ops/s
[info]                  ·gc.alloc.rate:                   1708.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              102099.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99425.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.734 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce":
[info]   25928.032 ±(99.9%) 1311.035 ops/s [Average]
[info]   (min, avg, max) = (25516.329, 25928.032, 26323.918), stdev = 340.472
[info]   CI (99.9%): [24616.997, 27239.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate":
[info]   1672.868 ±(99.9%) 100.825 MB/sec [Average]
[info]   (min, avg, max) = (1638.266, 1672.868, 1708.449), stdev = 26.184
[info]   CI (99.9%): [1572.043, 1773.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   101522.160 ±(99.9%) 2231.643 B/op [Average]
[info]   (min, avg, max) = (100920.480, 101522.160, 102137.306), stdev = 579.551
[info]   CI (99.9%): [99290.517, 103753.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1653.928 ±(99.9%) 28.014 MB/sec [Average]
[info]   (min, avg, max) = (1645.579, 1653.928, 1663.698), stdev = 7.275
[info]   CI (99.9%): [1625.914, 1681.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   100387.968 ±(99.9%) 5292.483 B/op [Average]
[info]   (min, avg, max) = (98714.896, 100387.968, 102269.031), stdev = 1374.441
[info]   CI (99.9%): [95095.484, 105680.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 4.424 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.804, 2.645), stdev = 1.149
[info]   CI (99.9%): [≈ 0, 5.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   49.384 ±(99.9%) 272.700 B/op [Average]
[info]   (min, avg, max) = (2.498, 49.384, 163.070), stdev = 70.819
[info]   CI (99.9%): [≈ 0, 322.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 15.000), stdev = 3.391
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 17.65% complete, ETA 01:14:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.773 ops/s
[info] # Warmup Iteration   2: 80276.557 ops/s
[info] # Warmup Iteration   3: 93399.764 ops/s
[info] Iteration   1: 97090.728 ops/s
[info]                  ·gc.alloc.rate:                   947.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              15353.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15788.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.558 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 97285.143 ops/s
[info]                  ·gc.alloc.rate:                   950.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              15369.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15799.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.043 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.703 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 96293.128 ops/s
[info]                  ·gc.alloc.rate:                   935.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              15288.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16010.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.458 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 93195.676 ops/s
[info]                  ·gc.alloc.rate:                   905.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              15284.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16543.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.242 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.635 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 93784.131 ops/s
[info]                  ·gc.alloc.rate:                   909.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              15267.175 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10910.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.096 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava":
[info]   95529.761 ±(99.9%) 7355.610 ops/s [Average]
[info]   (min, avg, max) = (93195.676, 95529.761, 97285.143), stdev = 1910.229
[info]   CI (99.9%): [88174.151, 102885.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   929.552 ±(99.9%) 80.928 MB/sec [Average]
[info]   (min, avg, max) = (905.064, 929.552, 950.296), stdev = 21.017
[info]   CI (99.9%): [848.624, 1010.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   15312.724 ±(99.9%) 175.850 B/op [Average]
[info]   (min, avg, max) = (15267.175, 15312.724, 15369.779), stdev = 45.668
[info]   CI (99.9%): [15136.874, 15488.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   912.048 ±(99.9%) 563.791 MB/sec [Average]
[info]   (min, avg, max) = (650.166, 912.048, 979.596), stdev = 146.415
[info]   CI (99.9%): [348.257, 1475.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   15010.416 ±(99.9%) 8903.688 B/op [Average]
[info]   (min, avg, max) = (10910.556, 15010.416, 16543.082), stdev = 2312.260
[info]   CI (99.9%): [6106.728, 23914.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.895 ±(99.9%) 7.207 MB/sec [Average]
[info]   (min, avg, max) = (0.028, 0.895, 4.242), stdev = 1.872
[info]   CI (99.9%): [≈ 0, 8.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   15.090 ±(99.9%) 121.745 B/op [Average]
[info]   (min, avg, max) = (0.458, 15.090, 71.635), stdev = 31.617
[info]   CI (99.9%): [≈ 0, 136.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 9.000), stdev = 2.683
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.88% complete, ETA 01:14:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11849.249 ops/s
[info] # Warmup Iteration   2: 61034.844 ops/s
[info] # Warmup Iteration   3: 63108.298 ops/s
[info] Iteration   1: 67421.013 ops/s
[info]                  ·gc.alloc.rate:                   1209.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              28228.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22968.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.972 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 67218.332 ops/s
[info]                  ·gc.alloc.rate:                   1203.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              28180.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30788.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.522 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 67700.782 ops/s
[info]                  ·gc.alloc.rate:                   1216.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              28269.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30444.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.293 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 66808.460 ops/s
[info]                  ·gc.alloc.rate:                   1203.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              28362.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23068.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.981 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 67103.789 ops/s
[info]                  ·gc.alloc.rate:                   1224.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              28715.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30654.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.488 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala":
[info]   67250.475 ±(99.9%) 1291.240 ops/s [Average]
[info]   (min, avg, max) = (66808.460, 67250.475, 67700.782), stdev = 335.331
[info]   CI (99.9%): [65959.235, 68541.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1211.492 ±(99.9%) 34.011 MB/sec [Average]
[info]   (min, avg, max) = (1203.617, 1211.492, 1224.398), stdev = 8.832
[info]   CI (99.9%): [1177.481, 1245.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   28351.402 ±(99.9%) 825.622 B/op [Average]
[info]   (min, avg, max) = (28180.967, 28351.402, 28715.971), stdev = 214.411
[info]   CI (99.9%): [27525.781, 29177.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1179.003 ±(99.9%) 694.028 MB/sec [Average]
[info]   (min, avg, max) = (979.270, 1179.003, 1314.971), stdev = 180.237
[info]   CI (99.9%): [484.975, 1873.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   27584.923 ±(99.9%) 16059.216 B/op [Average]
[info]   (min, avg, max) = (22968.556, 27584.923, 30788.175), stdev = 4170.527
[info]   CI (99.9%): [11525.708, 43644.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 5.393 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.858, 3.268), stdev = 1.401
[info]   CI (99.9%): [≈ 0, 6.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   20.051 ±(99.9%) 126.265 B/op [Average]
[info]   (min, avg, max) = (0.488, 20.051, 76.522), stdev = 32.791
[info]   CI (99.9%): [≈ 0, 146.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 13.000), stdev = 3.564
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.12% complete, ETA 01:13:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45468.044 ops/s
[info] # Warmup Iteration   2: 135168.226 ops/s
[info] # Warmup Iteration   3: 135804.483 ops/s
[info] Iteration   1: 137421.704 ops/s
[info]                  ·gc.alloc.rate:               957.470 MB/sec
[info]                  ·gc.alloc.rate.norm:          10964.999 B/op
[info]                  ·gc.churn.PS_Eden_Space:      992.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11371.360 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 133871.057 ops/s
[info]                  ·gc.alloc.rate:                   934.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              10987.801 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7800.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.245 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 138379.362 ops/s
[info]                  ·gc.alloc.rate:                   959.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              10912.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11326.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.938 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 137900.467 ops/s
[info]                  ·gc.alloc.rate:                   956.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              10914.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11350.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.315 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 136011.023 ops/s
[info]                  ·gc.alloc.rate:                   946.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              10953.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11446.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.686 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala":
[info]   136716.722 ±(99.9%) 7010.510 ops/s [Average]
[info]   (min, avg, max) = (133871.057, 136716.722, 138379.362), stdev = 1820.607
[info]   CI (99.9%): [129706.212, 143727.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   950.917 ±(99.9%) 39.963 MB/sec [Average]
[info]   (min, avg, max) = (934.614, 950.917, 959.438), stdev = 10.378
[info]   CI (99.9%): [910.954, 990.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10946.602 ±(99.9%) 125.652 B/op [Average]
[info]   (min, avg, max) = (10912.800, 10946.602, 10987.801), stdev = 32.632
[info]   CI (99.9%): [10820.949, 11072.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   927.252 ±(99.9%) 567.865 MB/sec [Average]
[info]   (min, avg, max) = (663.482, 927.252, 995.831), stdev = 147.473
[info]   CI (99.9%): [359.387, 1495.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10659.209 ±(99.9%) 6156.584 B/op [Average]
[info]   (min, avg, max) = (7800.238, 10659.209, 11446.831), stdev = 1598.845
[info]   CI (99.9%): [4502.626, 16815.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.670 ±(99.9%) 4.011 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.670, 2.456), stdev = 1.042
[info]   CI (99.9%): [≈ 0, 4.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.637 ±(99.9%) 45.601 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.637, 27.938), stdev = 11.842
[info]   CI (99.9%): [≈ 0, 53.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 9.000), stdev = 2.510
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 18.35% complete, ETA 01:13:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3328.603 ops/s
[info] # Warmup Iteration   2: 32905.392 ops/s
[info] # Warmup Iteration   3: 36546.119 ops/s
[info] Iteration   1: 36845.422 ops/s
[info]                  ·gc.alloc.rate:                   1838.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              78503.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70280.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.248 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 181.392 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 36744.525 ops/s
[info]                  ·gc.alloc.rate:                   1838.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              78722.696 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83890.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.917 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 37350.888 ops/s
[info]                  ·gc.alloc.rate:                   1878.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              79147.450 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68911.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.877 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 36460.527 ops/s
[info]                  ·gc.alloc.rate:                   1848.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              79810.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85404.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.797 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 36570.753 ops/s
[info]                  ·gc.alloc.rate:               1844.436 MB/sec
[info]                  ·gc.alloc.rate.norm:          79376.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1663.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 71597.413 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson":
[info]   36794.423 ±(99.9%) 1328.693 ops/s [Average]
[info]   (min, avg, max) = (36460.527, 36794.423, 37350.888), stdev = 345.057
[info]   CI (99.9%): [35465.730, 38123.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1849.788 ±(99.9%) 63.691 MB/sec [Average]
[info]   (min, avg, max) = (1838.614, 1849.788, 1878.358), stdev = 16.540
[info]   CI (99.9%): [1786.097, 1913.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   79112.208 ±(99.9%) 2001.325 B/op [Average]
[info]   (min, avg, max) = (78503.988, 79112.208, 79810.736), stdev = 519.738
[info]   CI (99.9%): [77110.883, 81113.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1776.589 ±(99.9%) 677.556 MB/sec [Average]
[info]   (min, avg, max) = (1635.432, 1776.589, 1978.450), stdev = 175.959
[info]   CI (99.9%): [1099.033, 2454.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   76016.898 ±(99.9%) 30626.857 B/op [Average]
[info]   (min, avg, max) = (68911.395, 76016.898, 85404.380), stdev = 7953.698
[info]   CI (99.9%): [45390.041, 106643.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.904 ±(99.9%) 7.207 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.904, 4.248), stdev = 1.872
[info]   CI (99.9%): [≈ 0, 8.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   38.597 ±(99.9%) 307.679 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 38.597, 181.392), stdev = 79.903
[info]   CI (99.9%): [≈ 0, 346.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 14.000), stdev = 2.864
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 18.59% complete, ETA 01:13:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8838.621 ops/s
[info] # Warmup Iteration   2: 31412.502 ops/s
[info] # Warmup Iteration   3: 31550.764 ops/s
[info] Iteration   1: 31572.174 ops/s
[info]                  ·gc.alloc.rate:               520.755 MB/sec
[info]                  ·gc.alloc.rate.norm:          25959.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32676.678 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 31206.333 ops/s
[info]                  ·gc.alloc.rate:               513.505 MB/sec
[info]                  ·gc.alloc.rate.norm:          25896.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16563.536 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 29879.914 ops/s
[info]                  ·gc.alloc.rate:               495.226 MB/sec
[info]                  ·gc.alloc.rate.norm:          26078.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34630.902 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 31815.075 ops/s
[info]                  ·gc.alloc.rate:                   517.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              25585.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16278.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.030 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 31776.913 ops/s
[info]                  ·gc.alloc.rate:                   522.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              25899.499 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32630.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce":
[info]   31250.082 ±(99.9%) 3092.397 ops/s [Average]
[info]   (min, avg, max) = (29879.914, 31250.082, 31815.075), stdev = 803.086
[info]   CI (99.9%): [28157.684, 34342.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate":
[info]   513.956 ±(99.9%) 42.609 MB/sec [Average]
[info]   (min, avg, max) = (495.226, 513.956, 522.963), stdev = 11.065
[info]   CI (99.9%): [471.348, 556.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   25884.097 ±(99.9%) 702.488 B/op [Average]
[info]   (min, avg, max) = (25585.554, 25884.097, 26078.681), stdev = 182.434
[info]   CI (99.9%): [25181.609, 26586.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   525.918 ±(99.9%) 692.947 MB/sec [Average]
[info]   (min, avg, max) = (328.435, 525.918, 658.883), stdev = 179.956
[info]   CI (99.9%): [≈ 0, 1218.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   26556.087 ±(99.9%) 35763.764 B/op [Average]
[info]   (min, avg, max) = (16278.450, 26556.087, 34630.902), stdev = 9287.736
[info]   CI (99.9%): [≈ 0, 62319.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.412 ±(99.9%) 2.173 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.412, 1.031), stdev = 0.564
[info]   CI (99.9%): [≈ 0, 2.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.82% complete, ETA 01:13:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8886.017 ops/s
[info] # Warmup Iteration   2: 30414.003 ops/s
[info] # Warmup Iteration   3: 31474.663 ops/s
[info] Iteration   1: 31305.325 ops/s
[info]                  ·gc.alloc.rate:               389.549 MB/sec
[info]                  ·gc.alloc.rate.norm:          19583.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12860.210 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 32090.980 ops/s
[info]                  ·gc.alloc.rate:               403.468 MB/sec
[info]                  ·gc.alloc.rate.norm:          19788.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16074.136 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 32159.128 ops/s
[info]                  ·gc.alloc.rate:                   416.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              20373.797 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32095.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 31888.174 ops/s
[info]                  ·gc.alloc.rate:               401.427 MB/sec
[info]                  ·gc.alloc.rate.norm:          19811.242 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16192.383 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 32029.400 ops/s
[info]                  ·gc.alloc.rate:               402.901 MB/sec
[info]                  ·gc.alloc.rate.norm:          19789.362 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16136.470 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala":
[info]   31894.602 ±(99.9%) 1325.535 ops/s [Average]
[info]   (min, avg, max) = (31305.325, 31894.602, 32159.128), stdev = 344.237
[info]   CI (99.9%): [30569.066, 33220.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   402.734 ±(99.9%) 36.576 MB/sec [Average]
[info]   (min, avg, max) = (389.549, 402.734, 416.327), stdev = 9.499
[info]   CI (99.9%): [366.159, 439.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   19869.118 ±(99.9%) 1143.555 B/op [Average]
[info]   (min, avg, max) = (19583.103, 19869.118, 20373.797), stdev = 296.978
[info]   CI (99.9%): [18725.562, 21012.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   379.209 ±(99.9%) 607.587 MB/sec [Average]
[info]   (min, avg, max) = (255.817, 379.209, 655.856), stdev = 157.788
[info]   CI (99.9%): [≈ 0, 986.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   18671.761 ±(99.9%) 29407.451 B/op [Average]
[info]   (min, avg, max) = (12860.210, 18671.761, 32095.606), stdev = 7637.022
[info]   CI (99.9%): [≈ 0, 48079.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.204 ±(99.9%) 1.754 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.204, 1.019), stdev = 0.456
[info]   CI (99.9%): [≈ 0, 1.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 7.000), stdev = 1.732
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.06% complete, ETA 01:13:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16986.544 ops/s
[info] # Warmup Iteration   2: 33900.481 ops/s
[info] # Warmup Iteration   3: 34242.858 ops/s
[info] Iteration   1: 31993.899 ops/s
[info]                  ·gc.alloc.rate:               447.621 MB/sec
[info]                  ·gc.alloc.rate.norm:          22019.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:      585.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28787.588 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 34330.125 ops/s
[info]                  ·gc.alloc.rate:                   420.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              19297.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15101.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.909 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 33818.453 ops/s
[info]                  ·gc.alloc.rate:               424.321 MB/sec
[info]                  ·gc.alloc.rate.norm:          19739.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15376.924 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 34402.024 ops/s
[info]                  ·gc.alloc.rate:               419.461 MB/sec
[info]                  ·gc.alloc.rate.norm:          19189.677 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15115.927 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 34119.756 ops/s
[info]                  ·gc.alloc.rate:                   429.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              19820.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30543.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.960 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala":
[info]   33732.851 ±(99.9%) 3843.661 ops/s [Average]
[info]   (min, avg, max) = (31993.899, 33732.851, 34402.024), stdev = 998.187
[info]   CI (99.9%): [29889.191, 37576.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   428.406 ±(99.9%) 44.040 MB/sec [Average]
[info]   (min, avg, max) = (419.461, 428.406, 447.621), stdev = 11.437
[info]   CI (99.9%): [384.366, 472.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   20013.280 ±(99.9%) 4444.367 B/op [Average]
[info]   (min, avg, max) = (19189.677, 20013.280, 22019.667), stdev = 1154.188
[info]   CI (99.9%): [15568.912, 24457.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   447.543 ±(99.9%) 627.909 MB/sec [Average]
[info]   (min, avg, max) = (329.414, 447.543, 662.137), stdev = 163.066
[info]   CI (99.9%): [≈ 0, 1075.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   20984.990 ±(99.9%) 30609.103 B/op [Average]
[info]   (min, avg, max) = (15101.376, 20984.990, 30543.137), stdev = 7949.087
[info]   CI (99.9%): [≈ 0, 51594.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.574 ±(99.9%) 3.289 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.574, 1.909), stdev = 0.854
[info]   CI (99.9%): [≈ 0, 3.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.414
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 19.29% complete, ETA 01:12:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13987.519 ops/s
[info] # Warmup Iteration   2: 32219.837 ops/s
[info] # Warmup Iteration   3: 34188.346 ops/s
[info] Iteration   1: 33175.647 ops/s
[info]                  ·gc.alloc.rate:               397.497 MB/sec
[info]                  ·gc.alloc.rate.norm:          18857.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12135.418 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 34388.574 ops/s
[info]                  ·gc.alloc.rate:               384.727 MB/sec
[info]                  ·gc.alloc.rate.norm:          17607.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15091.592 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 34630.129 ops/s
[info]                  ·gc.alloc.rate:               383.218 MB/sec
[info]                  ·gc.alloc.rate.norm:          17416.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14985.712 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 34423.889 ops/s
[info]                  ·gc.alloc.rate:                   390.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              17847.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30212.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.904 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 34247.163 ops/s
[info]                  ·gc.alloc.rate:                   384.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              17659.131 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15215.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.957 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc":
[info]   34173.080 ±(99.9%) 2210.851 ops/s [Average]
[info]   (min, avg, max) = (33175.647, 34173.080, 34630.129), stdev = 574.151
[info]   CI (99.9%): [31962.229, 36383.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   388.047 ±(99.9%) 23.100 MB/sec [Average]
[info]   (min, avg, max) = (383.218, 388.047, 397.497), stdev = 5.999
[info]   CI (99.9%): [364.948, 411.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   17877.580 ±(99.9%) 2190.019 B/op [Average]
[info]   (min, avg, max) = (17416.266, 17877.580, 18857.230), stdev = 568.741
[info]   CI (99.9%): [15687.561, 20067.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   381.494 ±(99.9%) 614.480 MB/sec [Average]
[info]   (min, avg, max) = (255.806, 381.494, 661.079), stdev = 159.579
[info]   CI (99.9%): [≈ 0, 995.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   17528.129 ±(99.9%) 27749.017 B/op [Average]
[info]   (min, avg, max) = (12135.418, 17528.129, 30212.536), stdev = 7206.332
[info]   CI (99.9%): [≈ 0, 45277.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.572 ±(99.9%) 3.280 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.572, 1.904), stdev = 0.852
[info]   CI (99.9%): [≈ 0, 3.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 19.53% complete, ETA 01:12:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1937.095 ops/s
[info] # Warmup Iteration   2: 12977.910 ops/s
[info] # Warmup Iteration   3: 15291.368 ops/s
[info] Iteration   1: 15433.290 ops/s
[info]                  ·gc.alloc.rate:                   1132.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              115471.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101209.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.245 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 15574.316 ops/s
[info]                  ·gc.alloc.rate:                   1135.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              114753.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100361.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.103 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 15429.929 ops/s
[info]                  ·gc.alloc.rate:                   1142.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              116534.299 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     134800.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.976 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 405.539 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 15510.171 ops/s
[info]                  ·gc.alloc.rate:                   1139.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              115583.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99903.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.337 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 15487.606 ops/s
[info]                  ·gc.alloc.rate:                   1157.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              117639.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     133288.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.115 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce":
[info]   15487.063 ±(99.9%) 230.261 ops/s [Average]
[info]   (min, avg, max) = (15429.929, 15487.063, 15574.316), stdev = 59.798
[info]   CI (99.9%): [15256.802, 15717.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate":
[info]   1141.606 ±(99.9%) 37.866 MB/sec [Average]
[info]   (min, avg, max) = (1132.687, 1141.606, 1157.942), stdev = 9.834
[info]   CI (99.9%): [1103.740, 1179.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   115996.470 ±(99.9%) 4296.294 B/op [Average]
[info]   (min, avg, max) = (114753.257, 115996.470, 117639.312), stdev = 1115.734
[info]   CI (99.9%): [111700.176, 120292.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1120.852 ±(99.9%) 688.905 MB/sec [Average]
[info]   (min, avg, max) = (984.571, 1120.852, 1321.539), stdev = 178.906
[info]   CI (99.9%): [431.947, 1809.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   113912.712 ±(99.9%) 70819.678 B/op [Average]
[info]   (min, avg, max) = (99903.006, 113912.712, 134800.414), stdev = 18391.645
[info]   CI (99.9%): [43093.034, 184732.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.824 ±(99.9%) 6.784 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.824, 3.976), stdev = 1.762
[info]   CI (99.9%): [≈ 0, 7.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   84.068 ±(99.9%) 692.024 B/op [Average]
[info]   (min, avg, max) = (2.103, 84.068, 405.539), stdev = 179.716
[info]   CI (99.9%): [≈ 0, 776.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 10.000), stdev = 2.408
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.76% complete, ETA 01:12:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3454.532 ops/s
[info] # Warmup Iteration   2: 14195.518 ops/s
[info] # Warmup Iteration   3: 14966.125 ops/s
[info] Iteration   1: 15401.552 ops/s
[info]                  ·gc.alloc.rate:                   1003.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              102520.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100677.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.254 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 15298.244 ops/s
[info]                  ·gc.alloc.rate:               993.332 MB/sec
[info]                  ·gc.alloc.rate.norm:          102164.772 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 101561.312 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 15723.840 ops/s
[info]                  ·gc.alloc.rate:                   1023.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              102440.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98943.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.853 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 385.677 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 15647.058 ops/s
[info]                  ·gc.alloc.rate:                   1011.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              101738.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98827.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.688 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 15435.627 ops/s
[info]                  ·gc.alloc.rate:                   1011.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              103101.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99906.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.122 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala":
[info]   15501.264 ±(99.9%) 684.137 ops/s [Average]
[info]   (min, avg, max) = (15298.244, 15501.264, 15723.840), stdev = 177.668
[info]   CI (99.9%): [14817.127, 16185.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1008.560 ±(99.9%) 42.958 MB/sec [Average]
[info]   (min, avg, max) = (993.332, 1008.560, 1023.465), stdev = 11.156
[info]   CI (99.9%): [965.602, 1051.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   102393.198 ±(99.9%) 1926.463 B/op [Average]
[info]   (min, avg, max) = (101738.618, 102393.198, 103101.848), stdev = 500.296
[info]   CI (99.9%): [100466.735, 104319.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   984.736 ±(99.9%) 13.657 MB/sec [Average]
[info]   (min, avg, max) = (979.887, 984.736, 988.527), stdev = 3.547
[info]   CI (99.9%): [971.079, 998.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   99983.367 ±(99.9%) 4472.179 B/op [Average]
[info]   (min, avg, max) = (98827.450, 99983.367, 101561.312), stdev = 1161.411
[info]   CI (99.9%): [95511.189, 104455.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 6.474 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.858, 3.853), stdev = 1.681
[info]   CI (99.9%): [≈ 0, 7.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   85.948 ±(99.9%) 647.933 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 85.948, 385.677), stdev = 168.266
[info]   CI (99.9%): [≈ 0, 733.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 10.000), stdev = 2.881
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.00% complete, ETA 01:12:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44627.670 ops/s
[info] # Warmup Iteration   2: 99731.972 ops/s
[info] # Warmup Iteration   3: 101626.827 ops/s
[info] Iteration   1: 103905.174 ops/s
[info]                  ·gc.alloc.rate:                   275.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              4174.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3874.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.315 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 103472.198 ops/s
[info]                  ·gc.alloc.rate:               279.673 MB/sec
[info]                  ·gc.alloc.rate.norm:          4253.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3890.782 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 103742.323 ops/s
[info]                  ·gc.alloc.rate:               278.510 MB/sec
[info]                  ·gc.alloc.rate.norm:          4225.082 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5007.367 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 104245.008 ops/s
[info]                  ·gc.alloc.rate:                   282.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              4261.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4983.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.314 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 104949.334 ops/s
[info]                  ·gc.alloc.rate:      273.182 MB/sec
[info]                  ·gc.alloc.rate.norm: 4096.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala":
[info]   104062.807 ±(99.9%) 2191.407 ops/s [Average]
[info]   (min, avg, max) = (103472.198, 104062.807, 104949.334), stdev = 569.101
[info]   CI (99.9%): [101871.401, 106254.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   277.886 ±(99.9%) 13.659 MB/sec [Average]
[info]   (min, avg, max) = (273.182, 277.886, 282.348), stdev = 3.547
[info]   CI (99.9%): [264.227, 291.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4202.271 ±(99.9%) 263.999 B/op [Average]
[info]   (min, avg, max) = (4096.004, 4202.271, 4261.915), stdev = 68.560
[info]   CI (99.9%): [3938.272, 4466.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   234.386 ±(99.9%) 524.398 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 234.386, 330.143), stdev = 136.184
[info]   CI (99.9%): [≈ 0, 758.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3551.215 ±(99.9%) 7938.864 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3551.215, 5007.367), stdev = 2061.698
[info]   CI (99.9%): [≈ 0, 11490.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.126 ±(99.9%) 0.664 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.126, 0.315), stdev = 0.172
[info]   CI (99.9%): [≈ 0, 0.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 20.24% complete, ETA 01:12:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1608.996 ops/s
[info] # Warmup Iteration   2: 11658.658 ops/s
[info] # Warmup Iteration   3: 13568.620 ops/s
[info] Iteration   1: 13455.762 ops/s
[info]                  ·gc.alloc.rate:                   1311.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              153375.476 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     154037.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.305 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 13638.657 ops/s
[info]                  ·gc.alloc.rate:                   1322.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              152639.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114142.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 465.987 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 13692.751 ops/s
[info]                  ·gc.alloc.rate:                   1327.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              152556.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150365.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.598 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 13699.860 ops/s
[info]                  ·gc.alloc.rate:               1333.121 MB/sec
[info]                  ·gc.alloc.rate.norm:          153143.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1302.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 149676.323 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 13938.338 ops/s
[info]                  ·gc.alloc.rate:               1369.183 MB/sec
[info]                  ·gc.alloc.rate.norm:          154551.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1308.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 147647.564 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson":
[info]   13685.073 ±(99.9%) 664.609 ops/s [Average]
[info]   (min, avg, max) = (13455.762, 13685.073, 13938.338), stdev = 172.597
[info]   CI (99.9%): [13020.464, 14349.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1332.789 ±(99.9%) 84.101 MB/sec [Average]
[info]   (min, avg, max) = (1311.472, 1332.789, 1369.183), stdev = 21.841
[info]   CI (99.9%): [1248.688, 1416.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   153253.179 ±(99.9%) 3088.618 B/op [Average]
[info]   (min, avg, max) = (152556.534, 153253.179, 154551.144), stdev = 802.104
[info]   CI (99.9%): [150164.561, 156341.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1245.116 ±(99.9%) 551.250 MB/sec [Average]
[info]   (min, avg, max) = (989.190, 1245.116, 1317.131), stdev = 143.158
[info]   CI (99.9%): [693.866, 1796.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   143173.860 ±(99.9%) 63121.030 B/op [Average]
[info]   (min, avg, max) = (114142.747, 143173.860, 154037.357), stdev = 16392.331
[info]   CI (99.9%): [80052.830, 206294.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.933 ±(99.9%) 6.747 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.933, 4.038), stdev = 1.752
[info]   CI (99.9%): [≈ 0, 7.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   107.578 ±(99.9%) 778.518 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 107.578, 465.987), stdev = 202.179
[info]   CI (99.9%): [≈ 0, 886.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 15.000), stdev = 3.975
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 20.47% complete, ETA 01:11:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16550.591 ops/s
[info] # Warmup Iteration   2: 41334.271 ops/s
[info] # Warmup Iteration   3: 45060.939 ops/s
[info] Iteration   1: 44646.444 ops/s
[info]                  ·gc.alloc.rate:               1156.929 MB/sec
[info]                  ·gc.alloc.rate.norm:          40781.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46563.199 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   2: 44916.251 ops/s
[info]                  ·gc.alloc.rate:                   1136.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              39833.388 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34779.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 94.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 44825.559 ops/s
[info]                  ·gc.alloc.rate:                   1135.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              39878.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34777.903 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.275 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 45316.338 ops/s
[info]                  ·gc.alloc.rate:               1165.336 MB/sec
[info]                  ·gc.alloc.rate.norm:          40460.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45622.449 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 45401.409 ops/s
[info]                  ·gc.alloc.rate:               1161.958 MB/sec
[info]                  ·gc.alloc.rate.norm:          40279.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:      985.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34163.581 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce":
[info]   45021.200 ±(99.9%) 1249.825 ops/s [Average]
[info]   (min, avg, max) = (44646.444, 45021.200, 45401.409), stdev = 324.576
[info]   CI (99.9%): [43771.375, 46271.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1151.361 ±(99.9%) 54.230 MB/sec [Average]
[info]   (min, avg, max) = (1135.789, 1151.361, 1165.336), stdev = 14.083
[info]   CI (99.9%): [1097.131, 1205.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   40246.738 ±(99.9%) 1539.259 B/op [Average]
[info]   (min, avg, max) = (39833.388, 40246.738, 40781.567), stdev = 399.741
[info]   CI (99.9%): [38707.479, 41785.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1120.709 ±(99.9%) 691.789 MB/sec [Average]
[info]   (min, avg, max) = (985.540, 1120.709, 1320.948), stdev = 179.655
[info]   CI (99.9%): [428.920, 1812.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   39181.232 ±(99.9%) 24348.149 B/op [Average]
[info]   (min, avg, max) = (34163.581, 39181.232, 46563.199), stdev = 6323.137
[info]   CI (99.9%): [14833.083, 63529.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.749 ±(99.9%) 4.528 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.749, 2.685), stdev = 1.176
[info]   CI (99.9%): [≈ 0, 5.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   26.274 ±(99.9%) 158.670 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 26.274, 94.096), stdev = 41.206
[info]   CI (99.9%): [≈ 0, 184.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 12.000), stdev = 3.564
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.71% complete, ETA 01:11:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21221.273 ops/s
[info] # Warmup Iteration   2: 58694.443 ops/s
[info] # Warmup Iteration   3: 61852.604 ops/s
[info] Iteration   1: 63321.633 ops/s
[info]                  ·gc.alloc.rate:                   1110.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              27575.296 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24503.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.552 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 63276.325 ops/s
[info]                  ·gc.alloc.rate:                   1108.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              27583.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24571.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.553 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 63208.063 ops/s
[info]                  ·gc.alloc.rate:                   1119.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              27872.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32775.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 92.838 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 63495.857 ops/s
[info]                  ·gc.alloc.rate:               1117.368 MB/sec
[info]                  ·gc.alloc.rate.norm:          27693.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24354.385 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 63376.619 ops/s
[info]                  ·gc.alloc.rate:               1122.465 MB/sec
[info]                  ·gc.alloc.rate.norm:          27867.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24400.107 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala":
[info]   63335.700 ±(99.9%) 418.903 ops/s [Average]
[info]   (min, avg, max) = (63208.063, 63335.700, 63495.857), stdev = 108.788
[info]   CI (99.9%): [62916.796, 63754.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1115.674 ±(99.9%) 22.868 MB/sec [Average]
[info]   (min, avg, max) = (1108.972, 1115.674, 1122.465), stdev = 5.939
[info]   CI (99.9%): [1092.806, 1138.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   27718.571 ±(99.9%) 562.417 B/op [Average]
[info]   (min, avg, max) = (27575.296, 27718.571, 27872.776), stdev = 146.058
[info]   CI (99.9%): [27156.154, 28280.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1051.235 ±(99.9%) 571.056 MB/sec [Average]
[info]   (min, avg, max) = (982.647, 1051.235, 1316.494), stdev = 148.302
[info]   CI (99.9%): [480.179, 1622.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   26121.112 ±(99.9%) 14328.426 B/op [Average]
[info]   (min, avg, max) = (24354.385, 26121.112, 32775.775), stdev = 3721.047
[info]   CI (99.9%): [11792.687, 40449.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.771 ±(99.9%) 6.369 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.771, 3.729), stdev = 1.654
[info]   CI (99.9%): [≈ 0, 7.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   19.189 ±(99.9%) 158.564 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 19.189, 92.838), stdev = 41.178
[info]   CI (99.9%): [≈ 0, 177.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 10.000), stdev = 2.588
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.94% complete, ETA 01:11:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92106.663 ops/s
[info] # Warmup Iteration   2: 157463.584 ops/s
[info] # Warmup Iteration   3: 169655.855 ops/s
[info] Iteration   1: 174137.416 ops/s
[info]                  ·gc.alloc.rate:                   284.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              2572.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2311.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 172649.305 ops/s
[info]                  ·gc.alloc.rate:               292.534 MB/sec
[info]                  ·gc.alloc.rate.norm:          2666.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2331.815 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 173772.781 ops/s
[info]                  ·gc.alloc.rate:               286.840 MB/sec
[info]                  ·gc.alloc.rate.norm:          2597.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2983.468 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 174120.010 ops/s
[info]                  ·gc.alloc.rate:               288.085 MB/sec
[info]                  ·gc.alloc.rate.norm:          2604.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2977.575 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 173303.836 ops/s
[info]                  ·gc.alloc.rate:                   283.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              2577.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2997.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.567 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala":
[info]   173596.670 ±(99.9%) 2420.521 ops/s [Average]
[info]   (min, avg, max) = (172649.305, 173596.670, 174137.416), stdev = 628.601
[info]   CI (99.9%): [171176.149, 176017.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   287.195 ±(99.9%) 13.198 MB/sec [Average]
[info]   (min, avg, max) = (283.871, 287.195, 292.534), stdev = 3.427
[info]   CI (99.9%): [273.997, 300.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2603.725 ±(99.9%) 144.801 B/op [Average]
[info]   (min, avg, max) = (2572.347, 2603.725, 2666.714), stdev = 37.604
[info]   CI (99.9%): [2458.923, 2748.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   300.109 ±(99.9%) 155.729 MB/sec [Average]
[info]   (min, avg, max) = (255.796, 300.109, 330.075), stdev = 40.442
[info]   CI (99.9%): [144.380, 455.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2720.442 ±(99.9%) 1401.680 B/op [Average]
[info]   (min, avg, max) = (2311.867, 2720.442, 2997.487), stdev = 364.012
[info]   CI (99.9%): [1318.762, 4122.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.151 ±(99.9%) 0.949 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.151, 0.567), stdev = 0.246
[info]   CI (99.9%): [≈ 0, 1.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 21.18% complete, ETA 01:11:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89509.917 ops/s
[info] # Warmup Iteration   2: 179334.407 ops/s
[info] # Warmup Iteration   3: 185042.575 ops/s
[info] Iteration   1: 185103.331 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 185479.830 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 185403.028 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 185133.962 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 185310.633 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc":
[info]   185286.157 ±(99.9%) 633.767 ops/s [Average]
[info]   (min, avg, max) = (185103.331, 185286.157, 185479.830), stdev = 164.587
[info]   CI (99.9%): [184652.390, 185919.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.003 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 21.41% complete, ETA 01:10:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19338.241 ops/s
[info] # Warmup Iteration   2: 52405.245 ops/s
[info] # Warmup Iteration   3: 56700.750 ops/s
[info] Iteration   1: 57925.637 ops/s
[info]                  ·gc.alloc.rate:               1122.372 MB/sec
[info]                  ·gc.alloc.rate.norm:          30489.507 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26886.332 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 57762.897 ops/s
[info]                  ·gc.alloc.rate:                   1125.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              30660.136 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36001.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 75.437 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 58390.454 ops/s
[info]                  ·gc.alloc.rate:                   1133.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              30546.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26644.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.104 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 58482.753 ops/s
[info]                  ·gc.alloc.rate:                   1133.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              30487.687 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26460.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.241 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 58581.800 ops/s
[info]                  ·gc.alloc.rate:                   1142.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              30695.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35230.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.559 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson":
[info]   58228.708 ±(99.9%) 1393.974 ops/s [Average]
[info]   (min, avg, max) = (57762.897, 58228.708, 58581.800), stdev = 362.011
[info]   CI (99.9%): [56834.734, 59622.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1131.467 ±(99.9%) 30.372 MB/sec [Average]
[info]   (min, avg, max) = (1122.372, 1131.467, 1142.789), stdev = 7.888
[info]   CI (99.9%): [1101.095, 1161.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   30575.958 ±(99.9%) 372.735 B/op [Average]
[info]   (min, avg, max) = (30487.687, 30575.958, 30695.489), stdev = 96.798
[info]   CI (99.9%): [30203.223, 30948.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1119.038 ±(99.9%) 695.276 MB/sec [Average]
[info]   (min, avg, max) = (983.353, 1119.038, 1321.922), stdev = 180.561
[info]   CI (99.9%): [423.762, 1814.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   30244.548 ±(99.9%) 18918.673 B/op [Average]
[info]   (min, avg, max) = (26460.450, 30244.548, 36001.013), stdev = 4913.119
[info]   CI (99.9%): [11325.874, 49163.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 4.646 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.820, 2.770), stdev = 1.207
[info]   CI (99.9%): [≈ 0, 5.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   22.268 ±(99.9%) 126.436 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22.268, 75.437), stdev = 32.835
[info]   CI (99.9%): [≈ 0, 148.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 12.000), stdev = 3.271
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 21.65% complete, ETA 01:10:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14366.344 ops/s
[info] # Warmup Iteration   2: 89410.908 ops/s
[info] # Warmup Iteration   3: 94721.351 ops/s
[info] Iteration   1: 96539.446 ops/s
[info]                  ·gc.alloc.rate:                   2130.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              34735.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32123.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.955 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64.481 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 94757.905 ops/s
[info]                  ·gc.alloc.rate:                   2096.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              34827.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32617.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.458 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 95668.820 ops/s
[info]                  ·gc.alloc.rate:                   2150.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              35378.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2307.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37966.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.342 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 96755.351 ops/s
[info]                  ·gc.alloc.rate:                   2160.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              35142.885 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32487.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.016 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 96225.065 ops/s
[info]                  ·gc.alloc.rate:               2150.565 MB/sec
[info]                  ·gc.alloc.rate.norm:          35172.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2012.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32911.692 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce":
[info]   95989.317 ±(99.9%) 3082.994 ops/s [Average]
[info]   (min, avg, max) = (94757.905, 95989.317, 96755.351), stdev = 800.644
[info]   CI (99.9%): [92906.323, 99072.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   2137.816 ±(99.9%) 97.435 MB/sec [Average]
[info]   (min, avg, max) = (2096.923, 2137.816, 2160.475), stdev = 25.303
[info]   CI (99.9%): [2040.382, 2235.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   35051.269 ±(99.9%) 1018.147 B/op [Average]
[info]   (min, avg, max) = (34735.632, 35051.269, 35378.054), stdev = 264.410
[info]   CI (99.9%): [34033.122, 36069.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2050.334 ±(99.9%) 559.488 MB/sec [Average]
[info]   (min, avg, max) = (1963.857, 2050.334, 2307.849), stdev = 145.297
[info]   CI (99.9%): [1490.847, 2609.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   33621.327 ±(99.9%) 9416.616 B/op [Average]
[info]   (min, avg, max) = (32123.867, 33621.327, 37966.552), stdev = 2445.465
[info]   CI (99.9%): [24204.711, 43037.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.849 ±(99.9%) 6.693 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.849, 3.955), stdev = 1.738
[info]   CI (99.9%): [≈ 0, 7.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   13.859 ±(99.9%) 109.091 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.859, 64.481), stdev = 28.331
[info]   CI (99.9%): [≈ 0, 122.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.000, 11.000), stdev = 1.225
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.88% complete, ETA 01:10:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30382.803 ops/s
[info] # Warmup Iteration   2: 107638.614 ops/s
[info] # Warmup Iteration   3: 116419.267 ops/s
[info] Iteration   1: 123854.207 ops/s
[info]                  ·gc.alloc.rate:                   1750.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              22234.131 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1974.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25074.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.165 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.908 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 126859.206 ops/s
[info]                  ·gc.alloc.rate:                   1791.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              22219.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20264.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.583 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 125189.058 ops/s
[info]                  ·gc.alloc.rate:               1781.127 MB/sec
[info]                  ·gc.alloc.rate.norm:          22390.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1634.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20550.626 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 126041.768 ops/s
[info]                  ·gc.alloc.rate:               1800.224 MB/sec
[info]                  ·gc.alloc.rate.norm:          22479.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1645.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20545.961 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 124597.904 ops/s
[info]                  ·gc.alloc.rate:                   1794.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              22659.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1992.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25159.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala":
[info]   125308.429 ±(99.9%) 4546.595 ops/s [Average]
[info]   (min, avg, max) = (123854.207, 125308.429, 126859.206), stdev = 1180.736
[info]   CI (99.9%): [120761.834, 129855.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1783.572 ±(99.9%) 76.181 MB/sec [Average]
[info]   (min, avg, max) = (1750.414, 1783.572, 1800.224), stdev = 19.784
[info]   CI (99.9%): [1707.390, 1859.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   22396.722 ±(99.9%) 704.391 B/op [Average]
[info]   (min, avg, max) = (22219.514, 22396.722, 22659.605), stdev = 182.928
[info]   CI (99.9%): [21692.331, 23101.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1776.104 ±(99.9%) 728.407 MB/sec [Average]
[info]   (min, avg, max) = (1634.109, 1776.104, 1992.278), stdev = 189.165
[info]   CI (99.9%): [1047.697, 2504.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   22318.944 ±(99.9%) 9845.574 B/op [Average]
[info]   (min, avg, max) = (20264.574, 22318.944, 25159.227), stdev = 2556.864
[info]   CI (99.9%): [12473.370, 32164.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.879 ±(99.9%) 7.082 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.879, 4.165), stdev = 1.839
[info]   CI (99.9%): [≈ 0, 7.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.151 ±(99.9%) 89.983 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.151, 52.908), stdev = 23.368
[info]   CI (99.9%): [≈ 0, 101.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.000, 21.000), stdev = 6.164
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.12% complete, ETA 01:10:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 55955.385 ops/s
[info] # Warmup Iteration   2: 160173.917 ops/s
[info] # Warmup Iteration   3: 161271.974 ops/s
[info] Iteration   1: 164615.244 ops/s
[info]                  ·gc.alloc.rate:                   1531.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              14637.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12686.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.561 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.481 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 165859.174 ops/s
[info]                  ·gc.alloc.rate:                   1556.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              14768.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15692.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.321 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 167873.923 ops/s
[info]                  ·gc.alloc.rate:                   1580.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              14822.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15469.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.952 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 167984.965 ops/s
[info]                  ·gc.alloc.rate:                   1582.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              14826.382 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12407.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.390 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 167251.942 ops/s
[info]                  ·gc.alloc.rate:                   1589.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              14955.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1664.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15658.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.784 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala":
[info]   166717.050 ±(99.9%) 5575.333 ops/s [Average]
[info]   (min, avg, max) = (164615.244, 166717.050, 167984.965), stdev = 1447.896
[info]   CI (99.9%): [161141.717, 172292.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1568.197 ±(99.9%) 92.937 MB/sec [Average]
[info]   (min, avg, max) = (1531.292, 1568.197, 1589.384), stdev = 24.136
[info]   CI (99.9%): [1475.259, 1661.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   14802.115 ±(99.9%) 441.596 B/op [Average]
[info]   (min, avg, max) = (14637.682, 14802.115, 14955.279), stdev = 114.681
[info]   CI (99.9%): [14360.518, 15243.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1523.940 ±(99.9%) 696.367 MB/sec [Average]
[info]   (min, avg, max) = (1324.619, 1523.940, 1664.092), stdev = 180.844
[info]   CI (99.9%): [827.573, 2220.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   14382.873 ±(99.9%) 6472.792 B/op [Average]
[info]   (min, avg, max) = (12407.115, 14382.873, 15692.703), stdev = 1680.963
[info]   CI (99.9%): [7910.081, 20855.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.712 ±(99.9%) 4.093 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.712, 2.561), stdev = 1.063
[info]   CI (99.9%): [≈ 0, 4.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.785 ±(99.9%) 39.157 B/op [Average]
[info]   (min, avg, max) = (0.390, 6.785, 24.481), stdev = 10.169
[info]   CI (99.9%): [≈ 0, 45.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 11.000), stdev = 2.191
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 22.35% complete, ETA 01:10:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2243.054 ops/s
[info] # Warmup Iteration   2: 40280.717 ops/s
[info] # Warmup Iteration   3: 52196.243 ops/s
[info] Iteration   1: 54692.370 ops/s
[info]                  ·gc.alloc.rate:                   2926.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              84215.731 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2976.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85664.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.758 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 55166.619 ops/s
[info]                  ·gc.alloc.rate:                   2986.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              85150.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3008.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85803.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.594 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 53484.059 ops/s
[info]                  ·gc.alloc.rate:                   2885.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              84901.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2695.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79310.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.613 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 55008.825 ops/s
[info]                  ·gc.alloc.rate:                   2966.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              84863.267 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2708.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77495.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.382 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 52873.836 ops/s
[info]                  ·gc.alloc.rate:               2875.797 MB/sec
[info]                  ·gc.alloc.rate.norm:          85600.097 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3054.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 90933.957 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson":
[info]   54245.142 ±(99.9%) 3894.710 ops/s [Average]
[info]   (min, avg, max) = (52873.836, 54245.142, 55166.619), stdev = 1011.444
[info]   CI (99.9%): [50350.432, 58139.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2927.956 ±(99.9%) 186.245 MB/sec [Average]
[info]   (min, avg, max) = (2875.797, 2927.956, 2986.020), stdev = 48.367
[info]   CI (99.9%): [2741.711, 3114.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   84946.116 ±(99.9%) 1936.579 B/op [Average]
[info]   (min, avg, max) = (84215.731, 84946.116, 85600.097), stdev = 502.924
[info]   CI (99.9%): [83009.536, 86882.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2888.945 ±(99.9%) 666.288 MB/sec [Average]
[info]   (min, avg, max) = (2695.330, 2888.945, 3054.992), stdev = 173.033
[info]   CI (99.9%): [2222.657, 3555.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   83841.615 ±(99.9%) 20938.887 B/op [Average]
[info]   (min, avg, max) = (77495.820, 83841.615, 90933.957), stdev = 5437.762
[info]   CI (99.9%): [62902.728, 104780.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.204 ±(99.9%) 1.493 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.204, 0.895), stdev = 0.388
[info]   CI (99.9%): [≈ 0, 1.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.869 ±(99.9%) 42.949 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.869, 25.758), stdev = 11.154
[info]   CI (99.9%): [≈ 0, 48.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.count":
[info]   43.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 9.000), stdev = 0.548
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.200, 14.000), stdev = 1.095
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 22.59% complete, ETA 01:09:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54635.818 ops/s
[info] # Warmup Iteration   2: 170059.715 ops/s
[info] # Warmup Iteration   3: 171654.554 ops/s
[info] Iteration   1: 172015.115 ops/s
[info]                  ·gc.alloc.rate:                   1153.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              10550.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12061.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 173339.955 ops/s
[info]                  ·gc.alloc.rate:                   1151.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              10457.356 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9002.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.407 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 172088.200 ops/s
[info]                  ·gc.alloc.rate:                   1141.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              10443.587 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9044.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.237 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 175619.174 ops/s
[info]                  ·gc.alloc.rate:                   1184.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              10614.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11772.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.119 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 177921.810 ops/s
[info]                  ·gc.alloc.rate:               1193.176 MB/sec
[info]                  ·gc.alloc.rate.norm:          10554.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:      986.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8726.937 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce":
[info]   174196.851 ±(99.9%) 9786.806 ops/s [Average]
[info]   (min, avg, max) = (172015.115, 174196.851, 177921.810), stdev = 2541.602
[info]   CI (99.9%): [164410.045, 183983.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1164.883 ±(99.9%) 86.511 MB/sec [Average]
[info]   (min, avg, max) = (1141.893, 1164.883, 1193.176), stdev = 22.467
[info]   CI (99.9%): [1078.372, 1251.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10523.870 ±(99.9%) 276.596 B/op [Average]
[info]   (min, avg, max) = (10443.587, 10523.870, 10614.261), stdev = 71.831
[info]   CI (99.9%): [10247.274, 10800.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1119.823 ±(99.9%) 689.557 MB/sec [Average]
[info]   (min, avg, max) = (986.613, 1119.823, 1318.290), stdev = 179.076
[info]   CI (99.9%): [430.266, 1809.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10121.694 ±(99.9%) 6341.163 B/op [Average]
[info]   (min, avg, max) = (8726.937, 10121.694, 12061.845), stdev = 1646.780
[info]   CI (99.9%): [3780.531, 16462.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.704 ±(99.9%) 5.013 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.704, 3.019), stdev = 1.302
[info]   CI (99.9%): [≈ 0, 5.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.391 ±(99.9%) 45.508 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.391, 27.407), stdev = 11.818
[info]   CI (99.9%): [≈ 0, 51.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 11.000), stdev = 2.881
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.82% complete, ETA 01:09:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 137722.787 ops/s
[info] # Warmup Iteration   2: 525442.308 ops/s
[info] # Warmup Iteration   3: 530354.739 ops/s
[info] Iteration   1: 534178.266 ops/s
[info]                  ·gc.alloc.rate:                   551.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              1626.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     961.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.622 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.672 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 535844.101 ops/s
[info]                  ·gc.alloc.rate:                   557.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              1637.876 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1913.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 537119.976 ops/s
[info]                  ·gc.alloc.rate:               564.044 MB/sec
[info]                  ·gc.alloc.rate.norm:          1652.718 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1901.118 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 540484.932 ops/s
[info]                  ·gc.alloc.rate:               555.209 MB/sec
[info]                  ·gc.alloc.rate.norm:          1616.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 944.654 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 537569.708 ops/s
[info]                  ·gc.alloc.rate:               558.240 MB/sec
[info]                  ·gc.alloc.rate.norm:          1634.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1901.594 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala":
[info]   537039.397 ±(99.9%) 8984.105 ops/s [Average]
[info]   (min, avg, max) = (534178.266, 537039.397, 540484.932), stdev = 2333.143
[info]   CI (99.9%): [528055.292, 546023.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   557.428 ±(99.9%) 17.233 MB/sec [Average]
[info]   (min, avg, max) = (551.892, 557.428, 564.044), stdev = 4.475
[info]   CI (99.9%): [540.195, 574.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1633.525 ±(99.9%) 52.111 B/op [Average]
[info]   (min, avg, max) = (1616.515, 1633.525, 1652.718), stdev = 13.533
[info]   CI (99.9%): [1581.413, 1685.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   520.160 ±(99.9%) 684.533 MB/sec [Average]
[info]   (min, avg, max) = (324.452, 520.160, 651.634), stdev = 177.771
[info]   CI (99.9%): [≈ 0, 1204.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1524.526 ±(99.9%) 2008.573 B/op [Average]
[info]   (min, avg, max) = (944.654, 1524.526, 1913.549), stdev = 521.620
[info]   CI (99.9%): [≈ 0, 3533.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.729 ±(99.9%) 6.229 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.729, 3.622), stdev = 1.618
[info]   CI (99.9%): [≈ 0, 6.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.147 ±(99.9%) 18.352 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.147, 10.672), stdev = 4.766
[info]   CI (99.9%): [≈ 0, 20.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.06% complete, ETA 01:09:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 436528.400 ops/s
[info] # Warmup Iteration   2: 677043.219 ops/s
[info] # Warmup Iteration   3: 717561.201 ops/s
[info] Iteration   1: 718187.816 ops/s
[info]                  ·gc.alloc.rate:               560.664 MB/sec
[info]                  ·gc.alloc.rate.norm:          1228.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 722.629 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 723543.364 ops/s
[info]                  ·gc.alloc.rate:               576.013 MB/sec
[info]                  ·gc.alloc.rate.norm:          1252.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1436.010 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 701968.415 ops/s
[info]                  ·gc.alloc.rate:                   558.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              1251.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1481.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 700962.137 ops/s
[info]                  ·gc.alloc.rate:               550.464 MB/sec
[info]                  ·gc.alloc.rate.norm:          1235.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 743.377 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 698252.141 ops/s
[info]                  ·gc.alloc.rate:                   550.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              1241.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1493.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala":
[info]   708582.774 ±(99.9%) 44098.782 ops/s [Average]
[info]   (min, avg, max) = (698252.141, 708582.774, 723543.364), stdev = 11452.314
[info]   CI (99.9%): [664483.993, 752681.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   559.276 ±(99.9%) 39.998 MB/sec [Average]
[info]   (min, avg, max) = (550.464, 559.276, 576.013), stdev = 10.387
[info]   CI (99.9%): [519.278, 599.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1241.971 ±(99.9%) 39.757 B/op [Average]
[info]   (min, avg, max) = (1228.413, 1241.971, 1252.401), stdev = 10.325
[info]   CI (99.9%): [1202.214, 1281.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   528.972 ±(99.9%) 697.764 MB/sec [Average]
[info]   (min, avg, max) = (329.817, 528.972, 662.489), stdev = 181.207
[info]   CI (99.9%): [≈ 0, 1226.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1175.367 ±(99.9%) 1557.402 B/op [Average]
[info]   (min, avg, max) = (722.629, 1175.367, 1493.148), stdev = 404.452
[info]   CI (99.9%): [≈ 0, 2732.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.037 ±(99.9%) 0.234 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.140), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 6.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 23.29% complete, ETA 01:09:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 488300.009 ops/s
[info] # Warmup Iteration   2: 739764.782 ops/s
[info] # Warmup Iteration   3: 770575.034 ops/s
[info] Iteration   1: 770274.519 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 772323.539 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 773066.336 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 774156.222 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 774975.582 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   772959.240 ±(99.9%) 6974.268 ops/s [Average]
[info]   (min, avg, max) = (770274.519, 772959.240, 774975.582), stdev = 1811.195
[info]   CI (99.9%): [765984.971, 779933.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 23.53% complete, ETA 01:09:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49381.617 ops/s
[info] # Warmup Iteration   2: 303901.134 ops/s
[info] # Warmup Iteration   3: 314928.626 ops/s
[info] Iteration   1: 333041.889 ops/s
[info]                  ·gc.alloc.rate:                   944.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              4465.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4586.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 320804.967 ops/s
[info]                  ·gc.alloc.rate:                   900.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              4416.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3170.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 332086.182 ops/s
[info]                  ·gc.alloc.rate:                   942.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              4466.256 B/op
[info]                  ·gc.churn.PS_Eden_Space:          972.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4607.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 330599.321 ops/s
[info]                  ·gc.alloc.rate:                   943.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              4491.863 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4650.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 321524.064 ops/s
[info]                  ·gc.alloc.rate:                   912.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              4462.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4807.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson":
[info]   327611.284 ±(99.9%) 22928.698 ops/s [Average]
[info]   (min, avg, max) = (320804.967, 327611.284, 333041.889), stdev = 5954.510
[info]   CI (99.9%): [304682.586, 350539.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   928.667 ±(99.9%) 80.474 MB/sec [Average]
[info]   (min, avg, max) = (900.447, 928.667, 944.972), stdev = 20.899
[info]   CI (99.9%): [848.192, 1009.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4460.591 ±(99.9%) 104.501 B/op [Average]
[info]   (min, avg, max) = (4416.878, 4460.591, 4491.863), stdev = 27.139
[info]   CI (99.9%): [4356.089, 4565.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   909.733 ±(99.9%) 567.420 MB/sec [Average]
[info]   (min, avg, max) = (646.261, 909.733, 982.547), stdev = 147.357
[info]   CI (99.9%): [342.312, 1477.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4364.665 ±(99.9%) 2593.063 B/op [Average]
[info]   (min, avg, max) = (3170.046, 4364.665, 4807.977), stdev = 673.410
[info]   CI (99.9%): [1771.601, 6957.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.161 ±(99.9%) 0.357 B/op [Average]
[info]   (min, avg, max) = (0.098, 0.161, 0.306), stdev = 0.093
[info]   CI (99.9%): [≈ 0, 0.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 23.76% complete, ETA 01:08:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11098.544 ops/s
[info] # Warmup Iteration   2: 31680.235 ops/s
[info] # Warmup Iteration   3: 37025.685 ops/s
[info] Iteration   1: 36832.128 ops/s
[info]                  ·gc.alloc.rate:                   1888.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              80674.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70764.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 156.559 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 38143.293 ops/s
[info]                  ·gc.alloc.rate:                   1940.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              80060.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81524.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.295 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 38223.684 ops/s
[info]                  ·gc.alloc.rate:                   1948.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              80220.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81545.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.714 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 38324.688 ops/s
[info]                  ·gc.alloc.rate:                   1960.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              80519.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68264.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.274 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 37611.573 ops/s
[info]                  ·gc.alloc.rate:                   1917.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              80245.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83959.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.098 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce":
[info]   37827.073 ±(99.9%) 2390.248 ops/s [Average]
[info]   (min, avg, max) = (36832.128, 37827.073, 38324.688), stdev = 620.740
[info]   CI (99.9%): [35436.825, 40217.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate":
[info]   1931.126 ±(99.9%) 110.245 MB/sec [Average]
[info]   (min, avg, max) = (1888.253, 1931.126, 1960.750), stdev = 28.630
[info]   CI (99.9%): [1820.881, 2041.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   80344.016 ±(99.9%) 953.874 B/op [Average]
[info]   (min, avg, max) = (80060.390, 80344.016, 80674.708), stdev = 247.718
[info]   CI (99.9%): [79390.141, 81297.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1856.341 ±(99.9%) 694.054 MB/sec [Average]
[info]   (min, avg, max) = (1656.302, 1856.341, 2006.513), stdev = 180.244
[info]   CI (99.9%): [1162.288, 2550.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   77211.874 ±(99.9%) 27534.980 B/op [Average]
[info]   (min, avg, max) = (68264.672, 77211.874, 83959.670), stdev = 7150.747
[info]   CI (99.9%): [49676.894, 104746.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.812 ±(99.9%) 6.142 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.812, 3.664), stdev = 1.595
[info]   CI (99.9%): [≈ 0, 6.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   34.588 ±(99.9%) 262.621 B/op [Average]
[info]   (min, avg, max) = (1.714, 34.588, 156.559), stdev = 68.202
[info]   CI (99.9%): [≈ 0, 297.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 12.000), stdev = 2.000
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 24.00% complete, ETA 01:08:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.695 ops/s
[info] # Warmup Iteration   2: 271787.437 ops/s
[info] # Warmup Iteration   3: 296378.381 ops/s
[info] Iteration   1: 295143.805 ops/s
[info]                  ·gc.alloc.rate:               313.422 MB/sec
[info]                  ·gc.alloc.rate.norm:          1671.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1733.501 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 299557.418 ops/s
[info]                  ·gc.alloc.rate:                   317.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              1667.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1707.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.216 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.151 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 298666.322 ops/s
[info]                  ·gc.alloc.rate:                   319.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              1685.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1706.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.878 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 298609.584 ops/s
[info]                  ·gc.alloc.rate:               319.801 MB/sec
[info]                  ·gc.alloc.rate.norm:          1685.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1706.303 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 298878.596 ops/s
[info]                  ·gc.alloc.rate:               318.801 MB/sec
[info]                  ·gc.alloc.rate.norm:          1678.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1697.752 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava":
[info]   298171.145 ±(99.9%) 6676.303 ops/s [Average]
[info]   (min, avg, max) = (295143.805, 298171.145, 299557.418), stdev = 1733.815
[info]   CI (99.9%): [291494.842, 304847.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   317.863 ±(99.9%) 10.236 MB/sec [Average]
[info]   (min, avg, max) = (313.422, 317.863, 319.804), stdev = 2.658
[info]   CI (99.9%): [307.627, 328.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1677.714 ±(99.9%) 30.609 B/op [Average]
[info]   (min, avg, max) = (1667.886, 1677.714, 1685.369), stdev = 7.949
[info]   CI (99.9%): [1647.105, 1708.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   324.026 ±(99.9%) 4.301 MB/sec [Average]
[info]   (min, avg, max) = (322.417, 324.026, 325.110), stdev = 1.117
[info]   CI (99.9%): [319.726, 328.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1710.310 ±(99.9%) 52.204 B/op [Average]
[info]   (min, avg, max) = (1697.752, 1710.310, 1733.501), stdev = 13.557
[info]   CI (99.9%): [1658.106, 1762.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.877 ±(99.9%) 7.195 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.877, 4.216), stdev = 1.868
[info]   CI (99.9%): [≈ 0, 8.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   4.606 ±(99.9%) 37.795 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.606, 22.151), stdev = 9.815
[info]   CI (99.9%): [≈ 0, 42.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.24% complete, ETA 01:08:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30276.059 ops/s
[info] # Warmup Iteration   2: 98826.791 ops/s
[info] # Warmup Iteration   3: 112247.858 ops/s
[info] Iteration   1: 117697.747 ops/s
[info]                  ·gc.alloc.rate:                   1409.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              18844.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17583.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.278 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 117387.513 ops/s
[info]                  ·gc.alloc.rate:                   1401.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              18785.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17648.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.956 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.030 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 114654.298 ops/s
[info]                  ·gc.alloc.rate:                   1393.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              19121.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22439.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.286 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 117142.601 ops/s
[info]                  ·gc.alloc.rate:               1408.978 MB/sec
[info]                  ·gc.alloc.rate.norm:          18930.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1306.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17559.650 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 118620.429 ops/s
[info]                  ·gc.alloc.rate:               1433.469 MB/sec
[info]                  ·gc.alloc.rate.norm:          19018.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17438.261 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala":
[info]   117100.518 ±(99.9%) 5690.276 ops/s [Average]
[info]   (min, avg, max) = (114654.298, 117100.518, 118620.429), stdev = 1477.747
[info]   CI (99.9%): [111410.242, 122790.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1409.179 ±(99.9%) 58.221 MB/sec [Average]
[info]   (min, avg, max) = (1393.025, 1409.179, 1433.469), stdev = 15.120
[info]   CI (99.9%): [1350.958, 1467.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   18939.932 ±(99.9%) 517.687 B/op [Average]
[info]   (min, avg, max) = (18785.274, 18939.932, 19121.305), stdev = 134.442
[info]   CI (99.9%): [18422.245, 19457.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1377.493 ±(99.9%) 554.001 MB/sec [Average]
[info]   (min, avg, max) = (1306.975, 1377.493, 1634.777), stdev = 143.872
[info]   CI (99.9%): [823.492, 1931.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   18533.972 ±(99.9%) 8412.486 B/op [Average]
[info]   (min, avg, max) = (17438.261, 18533.972, 22439.702), stdev = 2184.696
[info]   CI (99.9%): [10121.486, 26946.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 6.688 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.858, 3.956), stdev = 1.737
[info]   CI (99.9%): [≈ 0, 7.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.519 ±(99.9%) 89.630 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.519, 53.030), stdev = 23.277
[info]   CI (99.9%): [≈ 0, 101.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 15.000), stdev = 4.159
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.47% complete, ETA 01:08:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 272472.675 ops/s
[info] # Warmup Iteration   2: 538068.779 ops/s
[info] # Warmup Iteration   3: 534061.087 ops/s
[info] Iteration   1: 535250.896 ops/s
[info]                  ·gc.alloc.rate:               354.404 MB/sec
[info]                  ·gc.alloc.rate.norm:          1042.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 752.160 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 533005.400 ops/s
[info]                  ·gc.alloc.rate:               355.693 MB/sec
[info]                  ·gc.alloc.rate.norm:          1050.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 972.690 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 543232.100 ops/s
[info]                  ·gc.alloc.rate:               362.851 MB/sec
[info]                  ·gc.alloc.rate.norm:          1051.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 954.328 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 544923.744 ops/s
[info]                  ·gc.alloc.rate:               363.367 MB/sec
[info]                  ·gc.alloc.rate.norm:          1049.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 953.330 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 545240.277 ops/s
[info]                  ·gc.alloc.rate:               365.298 MB/sec
[info]                  ·gc.alloc.rate.norm:          1054.504 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 952.782 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala":
[info]   540330.483 ±(99.9%) 22210.785 ops/s [Average]
[info]   (min, avg, max) = (533005.400, 540330.483, 545240.277), stdev = 5768.070
[info]   CI (99.9%): [518119.699, 562541.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   360.323 ±(99.9%) 18.951 MB/sec [Average]
[info]   (min, avg, max) = (354.404, 360.323, 365.298), stdev = 4.921
[info]   CI (99.9%): [341.372, 379.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1049.427 ±(99.9%) 17.579 B/op [Average]
[info]   (min, avg, max) = (1042.104, 1049.427, 1054.504), stdev = 4.565
[info]   CI (99.9%): [1031.848, 1067.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   314.980 ±(99.9%) 127.401 MB/sec [Average]
[info]   (min, avg, max) = (255.798, 314.980, 330.207), stdev = 33.086
[info]   CI (99.9%): [187.579, 442.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   917.058 ±(99.9%) 356.404 B/op [Average]
[info]   (min, avg, max) = (752.160, 917.058, 972.690), stdev = 92.557
[info]   CI (99.9%): [560.654, 1273.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 24.71% complete, ETA 01:08:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2972.718 ops/s
[info] # Warmup Iteration   2: 35526.341 ops/s
[info] # Warmup Iteration   3: 41058.370 ops/s
[info] Iteration   1: 41336.760 ops/s
[info]                  ·gc.alloc.rate:                   2068.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              78729.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74925.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.394 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 167.244 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 42081.915 ops/s
[info]                  ·gc.alloc.rate:                   2066.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              77274.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1956.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73157.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.336 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 41162.580 ops/s
[info]                  ·gc.alloc.rate:                   2029.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              77608.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75265.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.796 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 41556.433 ops/s
[info]                  ·gc.alloc.rate:                   2076.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              78630.901 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75258.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.154 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 41866.097 ops/s
[info]                  ·gc.alloc.rate:               2090.638 MB/sec
[info]                  ·gc.alloc.rate.norm:          78588.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2005.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75377.669 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson":
[info]   41600.757 ±(99.9%) 1447.935 ops/s [Average]
[info]   (min, avg, max) = (41162.580, 41600.757, 42081.915), stdev = 376.024
[info]   CI (99.9%): [40152.822, 43048.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2066.241 ±(99.9%) 86.620 MB/sec [Average]
[info]   (min, avg, max) = (2029.839, 2066.241, 2090.638), stdev = 22.495
[info]   CI (99.9%): [1979.621, 2152.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   78166.619 ±(99.9%) 2595.568 B/op [Average]
[info]   (min, avg, max) = (77274.931, 78166.619, 78729.948), stdev = 674.061
[info]   CI (99.9%): [75571.051, 80762.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1977.087 ±(99.9%) 74.100 MB/sec [Average]
[info]   (min, avg, max) = (1956.144, 1977.087, 2005.218), stdev = 19.244
[info]   CI (99.9%): [1902.987, 2051.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   74797.108 ±(99.9%) 3588.140 B/op [Average]
[info]   (min, avg, max) = (73157.914, 74797.108, 75377.669), stdev = 931.829
[info]   CI (99.9%): [71208.968, 78385.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.912 ±(99.9%) 7.495 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.912, 4.394), stdev = 1.947
[info]   CI (99.9%): [≈ 0, 8.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   34.706 ±(99.9%) 285.339 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 34.706, 167.244), stdev = 74.102
[info]   CI (99.9%): [≈ 0, 320.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.800, 15.000), stdev = 3.033
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 24.94% complete, ETA 01:07:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21725.095 ops/s
[info] # Warmup Iteration   2: 72191.675 ops/s
[info] # Warmup Iteration   3: 71438.436 ops/s
[info] Iteration   1: 75234.865 ops/s
[info]                  ·gc.alloc.rate:                   614.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              12858.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13754.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.435 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 74185.942 ops/s
[info]                  ·gc.alloc.rate:                   607.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              12896.823 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13962.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.442 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 74789.830 ops/s
[info]                  ·gc.alloc.rate:                   613.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              12913.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13877.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.876 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 75506.037 ops/s
[info]                  ·gc.alloc.rate:                   614.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              12814.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13760.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.868 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 75736.638 ops/s
[info]                  ·gc.alloc.rate:               607.305 MB/sec
[info]                  ·gc.alloc.rate.norm:          12618.214 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6866.014 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce":
[info]   75090.662 ±(99.9%) 2373.410 ops/s [Average]
[info]   (min, avg, max) = (74185.942, 75090.662, 75736.638), stdev = 616.367
[info]   CI (99.9%): [72717.252, 77464.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate":
[info]   611.716 ±(99.9%) 14.570 MB/sec [Average]
[info]   (min, avg, max) = (607.305, 611.716, 614.948), stdev = 3.784
[info]   CI (99.9%): [597.146, 626.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12820.060 ±(99.9%) 458.729 B/op [Average]
[info]   (min, avg, max) = (12618.214, 12820.060, 12913.003), stdev = 119.131
[info]   CI (99.9%): [12361.331, 13278.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   593.215 ±(99.9%) 565.624 MB/sec [Average]
[info]   (min, avg, max) = (330.456, 593.215, 660.363), stdev = 146.891
[info]   CI (99.9%): [27.591, 1158.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   12444.212 ±(99.9%) 12012.140 B/op [Average]
[info]   (min, avg, max) = (6866.014, 12444.212, 13962.736), stdev = 3119.515
[info]   CI (99.9%): [432.072, 24456.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.524 ±(99.9%) 1.403 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.524, 0.876), stdev = 0.364
[info]   CI (99.9%): [≈ 0, 1.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 25.18% complete, ETA 01:07:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.843 ops/s
[info] # Warmup Iteration   2: 79157.388 ops/s
[info] # Warmup Iteration   3: 85760.292 ops/s
[info] Iteration   1: 86797.642 ops/s
[info]                  ·gc.alloc.rate:                   507.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              9199.662 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11777.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.479 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 87156.774 ops/s
[info]                  ·gc.alloc.rate:               502.679 MB/sec
[info]                  ·gc.alloc.rate.norm:          9077.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5870.332 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 87435.746 ops/s
[info]                  ·gc.alloc.rate:                   513.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              9232.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11714.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 88091.851 ops/s
[info]                  ·gc.alloc.rate:               508.851 MB/sec
[info]                  ·gc.alloc.rate.norm:          9089.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5819.934 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 87555.927 ops/s
[info]                  ·gc.alloc.rate:               511.901 MB/sec
[info]                  ·gc.alloc.rate.norm:          9200.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11723.091 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava":
[info]   87407.588 ±(99.9%) 1852.671 ops/s [Average]
[info]   (min, avg, max) = (86797.642, 87407.588, 88091.851), stdev = 481.133
[info]   CI (99.9%): [85554.917, 89260.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   508.769 ±(99.9%) 15.790 MB/sec [Average]
[info]   (min, avg, max) = (502.679, 508.769, 513.056), stdev = 4.101
[info]   CI (99.9%): [492.979, 524.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   9159.952 ±(99.9%) 273.874 B/op [Average]
[info]   (min, avg, max) = (9077.217, 9159.952, 9232.513), stdev = 71.124
[info]   CI (99.9%): [8886.078, 9433.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   520.726 ±(99.9%) 686.458 MB/sec [Average]
[info]   (min, avg, max) = (325.088, 520.726, 652.256), stdev = 178.271
[info]   CI (99.9%): [≈ 0, 1207.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   9381.005 ±(99.9%) 12429.623 B/op [Average]
[info]   (min, avg, max) = (5819.934, 9381.005, 11777.274), stdev = 3227.934
[info]   CI (99.9%): [≈ 0, 21810.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.026), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.114 ±(99.9%) 0.800 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.114, 0.479), stdev = 0.208
[info]   CI (99.9%): [≈ 0, 0.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.342
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.41% complete, ETA 01:07:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26299.624 ops/s
[info] # Warmup Iteration   2: 74894.897 ops/s
[info] # Warmup Iteration   3: 75655.104 ops/s
[info] Iteration   1: 76136.854 ops/s
[info]                  ·gc.alloc.rate:                   456.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              9446.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6747.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.430 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 75063.843 ops/s
[info]                  ·gc.alloc.rate:               449.692 MB/sec
[info]                  ·gc.alloc.rate.norm:          9427.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6844.126 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 76224.800 ops/s
[info]                  ·gc.alloc.rate:                   466.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              9638.732 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13507.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.430 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 76501.021 ops/s
[info]                  ·gc.alloc.rate:                   461.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              9501.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6742.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.428 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 76248.461 ops/s
[info]                  ·gc.alloc.rate:               458.892 MB/sec
[info]                  ·gc.alloc.rate.norm:          9472.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6765.361 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala":
[info]   76034.996 ±(99.9%) 2154.543 ops/s [Average]
[info]   (min, avg, max) = (75063.843, 76034.996, 76501.021), stdev = 559.528
[info]   CI (99.9%): [73880.453, 78189.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   458.883 ±(99.9%) 24.545 MB/sec [Average]
[info]   (min, avg, max) = (449.692, 458.883, 466.974), stdev = 6.374
[info]   CI (99.9%): [434.338, 483.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   9497.265 ±(99.9%) 323.194 B/op [Average]
[info]   (min, avg, max) = (9427.125, 9497.265, 9638.732), stdev = 83.932
[info]   CI (99.9%): [9174.071, 9820.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   392.563 ±(99.9%) 563.623 MB/sec [Average]
[info]   (min, avg, max) = (326.428, 392.563, 654.397), stdev = 146.371
[info]   CI (99.9%): [≈ 0, 956.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   8121.438 ±(99.9%) 11594.528 B/op [Average]
[info]   (min, avg, max) = (6742.725, 8121.438, 13507.295), stdev = 3011.062
[info]   CI (99.9%): [≈ 0, 19715.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.258 ±(99.9%) 0.906 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.258, 0.430), stdev = 0.235
[info]   CI (99.9%): [≈ 0, 1.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 6.000), stdev = 1.342
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.65% complete, ETA 01:07:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49152.035 ops/s
[info] # Warmup Iteration   2: 83352.677 ops/s
[info] # Warmup Iteration   3: 85068.960 ops/s
[info] Iteration   1: 86585.574 ops/s
[info]                  ·gc.alloc.rate:               510.381 MB/sec
[info]                  ·gc.alloc.rate.norm:          9276.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11987.324 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 86377.791 ops/s
[info]                  ·gc.alloc.rate:               502.642 MB/sec
[info]                  ·gc.alloc.rate.norm:          9158.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6020.091 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 87044.641 ops/s
[info]                  ·gc.alloc.rate:               514.188 MB/sec
[info]                  ·gc.alloc.rate.norm:          9296.622 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11954.646 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 87024.489 ops/s
[info]                  ·gc.alloc.rate:               500.925 MB/sec
[info]                  ·gc.alloc.rate.norm:          9059.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5981.571 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 86857.006 ops/s
[info]                  ·gc.alloc.rate:                   507.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              9186.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12009.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.754 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala":
[info]   86777.900 ±(99.9%) 1114.845 ops/s [Average]
[info]   (min, avg, max) = (86377.791, 86777.900, 87044.641), stdev = 289.522
[info]   CI (99.9%): [85663.056, 87892.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   507.034 ±(99.9%) 21.001 MB/sec [Average]
[info]   (min, avg, max) = (500.925, 507.034, 514.188), stdev = 5.454
[info]   CI (99.9%): [486.033, 528.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   9195.513 ±(99.9%) 369.435 B/op [Average]
[info]   (min, avg, max) = (9059.429, 9195.513, 9296.622), stdev = 95.941
[info]   CI (99.9%): [8826.078, 9564.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   528.945 ±(99.9%) 697.328 MB/sec [Average]
[info]   (min, avg, max) = (330.403, 528.945, 662.881), stdev = 181.094
[info]   CI (99.9%): [≈ 0, 1226.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9590.699 ±(99.9%) 12619.230 B/op [Average]
[info]   (min, avg, max) = (5981.571, 9590.699, 12009.866), stdev = 3277.174
[info]   CI (99.9%): [≈ 0, 22209.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.151 ±(99.9%) 1.299 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.151, 0.754), stdev = 0.337
[info]   CI (99.9%): [≈ 0, 1.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 25.88% complete, ETA 01:06:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46989.217 ops/s
[info] # Warmup Iteration   2: 82476.342 ops/s
[info] # Warmup Iteration   3: 86011.741 ops/s
[info] Iteration   1: 87526.672 ops/s
[info]                  ·gc.alloc.rate:               443.209 MB/sec
[info]                  ·gc.alloc.rate.norm:          7969.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:      585.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10528.641 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 87762.578 ops/s
[info]                  ·gc.alloc.rate:               435.384 MB/sec
[info]                  ·gc.alloc.rate.norm:          7806.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5913.359 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 87328.350 ops/s
[info]                  ·gc.alloc.rate:                   440.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              7932.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5954.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.750 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 88063.809 ops/s
[info]                  ·gc.alloc.rate:               452.229 MB/sec
[info]                  ·gc.alloc.rate.norm:          8082.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11815.796 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 88540.885 ops/s
[info]                  ·gc.alloc.rate:                   439.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              7818.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5879.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.370 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc":
[info]   87844.459 ±(99.9%) 1833.797 ops/s [Average]
[info]   (min, avg, max) = (87328.350, 87844.459, 88540.885), stdev = 476.231
[info]   CI (99.9%): [86010.662, 89678.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   442.177 ±(99.9%) 24.164 MB/sec [Average]
[info]   (min, avg, max) = (435.384, 442.177, 452.229), stdev = 6.275
[info]   CI (99.9%): [418.013, 466.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   7921.898 ±(99.9%) 439.524 B/op [Average]
[info]   (min, avg, max) = (7806.847, 7921.898, 8082.220), stdev = 114.143
[info]   CI (99.9%): [7482.374, 8361.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   447.530 ±(99.9%) 626.490 MB/sec [Average]
[info]   (min, avg, max) = (329.785, 447.530, 661.136), stdev = 162.697
[info]   CI (99.9%): [≈ 0, 1074.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   8018.302 ±(99.9%) 11224.568 B/op [Average]
[info]   (min, avg, max) = (5879.102, 8018.302, 11815.796), stdev = 2914.985
[info]   CI (99.9%): [≈ 0, 19242.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.224 ±(99.9%) 1.290 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.224, 0.750), stdev = 0.335
[info]   CI (99.9%): [≈ 0, 1.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 6.000), stdev = 2.049
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 26.12% complete, ETA 01:06:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1280.510 ops/s
[info] # Warmup Iteration   2: 7745.926 ops/s
[info] # Warmup Iteration   3: 9642.737 ops/s
[info] Iteration   1: 9300.433 ops/s
[info]                  ·gc.alloc.rate:                   1562.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              264323.316 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     280236.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.665 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 450.903 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 9381.672 ops/s
[info]                  ·gc.alloc.rate:                   1567.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              262836.245 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221382.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 192.075 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 9712.635 ops/s
[info]                  ·gc.alloc.rate:                   1618.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              262285.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     266056.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.475 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 9703.613 ops/s
[info]                  ·gc.alloc.rate:               1644.447 MB/sec
[info]                  ·gc.alloc.rate.norm:          266720.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1645.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 266816.943 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 9633.355 ops/s
[info]                  ·gc.alloc.rate:               1633.433 MB/sec
[info]                  ·gc.alloc.rate.norm:          266853.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1656.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 270605.524 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce":
[info]   9546.342 ±(99.9%) 739.550 ops/s [Average]
[info]   (min, avg, max) = (9300.433, 9546.342, 9712.635), stdev = 192.059
[info]   CI (99.9%): [8806.792, 10285.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate":
[info]   1605.185 ±(99.9%) 146.806 MB/sec [Average]
[info]   (min, avg, max) = (1562.265, 1605.185, 1644.447), stdev = 38.125
[info]   CI (99.9%): [1458.379, 1751.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   264603.808 ±(99.9%) 8195.946 B/op [Average]
[info]   (min, avg, max) = (262285.227, 264603.808, 266853.702), stdev = 2128.461
[info]   CI (99.9%): [256407.862, 272799.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1583.931 ±(99.9%) 568.813 MB/sec [Average]
[info]   (min, avg, max) = (1319.941, 1583.931, 1656.398), stdev = 147.719
[info]   CI (99.9%): [1015.117, 2152.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   261019.550 ±(99.9%) 88046.056 B/op [Average]
[info]   (min, avg, max) = (221382.187, 261019.550, 280236.501), stdev = 22865.281
[info]   CI (99.9%): [172973.495, 349065.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.812 ±(99.9%) 4.382 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.812, 2.665), stdev = 1.138
[info]   CI (99.9%): [≈ 0, 5.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   136.691 ±(99.9%) 741.744 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 136.691, 450.903), stdev = 192.629
[info]   CI (99.9%): [≈ 0, 878.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 17.000), stdev = 4.472
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.35% complete, ETA 01:06:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1000.556 ops/s
[info] # Warmup Iteration   2: 7984.647 ops/s
[info] # Warmup Iteration   3: 9540.776 ops/s
[info] Iteration   1: 9529.335 ops/s
[info]                  ·gc.alloc.rate:               1506.546 MB/sec
[info]                  ·gc.alloc.rate.norm:          248818.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1644.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 271522.985 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     18.000 ms
[info] Iteration   2: 9504.005 ops/s
[info]                  ·gc.alloc.rate:                   1488.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              246506.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217745.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.066 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 673.293 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 9512.832 ops/s
[info]                  ·gc.alloc.rate:                   1509.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              249805.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     270024.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.440 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 9405.551 ops/s
[info]                  ·gc.alloc.rate:               1494.215 MB/sec
[info]                  ·gc.alloc.rate.norm:          249954.512 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1308.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 218810.959 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 9635.268 ops/s
[info]                  ·gc.alloc.rate:               1542.615 MB/sec
[info]                  ·gc.alloc.rate.norm:          251973.872 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1644.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 268617.363 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala":
[info]   9517.398 ±(99.9%) 314.870 ops/s [Average]
[info]   (min, avg, max) = (9405.551, 9517.398, 9635.268), stdev = 81.771
[info]   CI (99.9%): [9202.528, 9832.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1508.378 ±(99.9%) 80.959 MB/sec [Average]
[info]   (min, avg, max) = (1488.634, 1508.378, 1542.615), stdev = 21.025
[info]   CI (99.9%): [1427.419, 1589.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   249411.781 ±(99.9%) 7654.124 B/op [Average]
[info]   (min, avg, max) = (246506.786, 249411.781, 251973.872), stdev = 1987.752
[info]   CI (99.9%): [241757.656, 257065.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1508.721 ±(99.9%) 693.607 MB/sec [Average]
[info]   (min, avg, max) = (1308.040, 1508.721, 1644.508), stdev = 180.128
[info]   CI (99.9%): [815.113, 2202.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   249344.228 ±(99.9%) 109282.580 B/op [Average]
[info]   (min, avg, max) = (217745.532, 249344.228, 271522.985), stdev = 28380.339
[info]   CI (99.9%): [140061.648, 358626.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.892 ±(99.9%) 6.863 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.892, 4.066), stdev = 1.782
[info]   CI (99.9%): [≈ 0, 7.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   147.746 ±(99.9%) 1136.528 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 147.746, 673.293), stdev = 295.153
[info]   CI (99.9%): [≈ 0, 1284.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 18.000), stdev = 5.119
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.59% complete, ETA 01:06:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74535.903 ops/s
[info] # Warmup Iteration   2: 147652.427 ops/s
[info] # Warmup Iteration   3: 145737.921 ops/s
[info] Iteration   1: 151274.334 ops/s
[info]                  ·gc.alloc.rate:                   401.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              4178.428 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2661.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.433 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 148268.770 ops/s
[info]                  ·gc.alloc.rate:                   407.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              4328.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7014.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.663 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 151707.009 ops/s
[info]                  ·gc.alloc.rate:                   402.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              4175.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3431.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 150893.861 ops/s
[info]                  ·gc.alloc.rate:               405.206 MB/sec
[info]                  ·gc.alloc.rate.norm:          4225.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3449.857 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 151771.391 ops/s
[info]                  ·gc.alloc.rate:               401.966 MB/sec
[info]                  ·gc.alloc.rate.norm:          4168.155 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3433.379 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala":
[info]   150783.073 ±(99.9%) 5582.027 ops/s [Average]
[info]   (min, avg, max) = (148268.770, 150783.073, 151771.391), stdev = 1449.635
[info]   CI (99.9%): [145201.046, 156365.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   403.828 ±(99.9%) 10.268 MB/sec [Average]
[info]   (min, avg, max) = (401.633, 403.828, 407.875), stdev = 2.667
[info]   CI (99.9%): [393.560, 414.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4215.184 ±(99.9%) 259.656 B/op [Average]
[info]   (min, avg, max) = (4168.155, 4215.184, 4328.834), stdev = 67.432
[info]   CI (99.9%): [3955.528, 4474.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   381.889 ±(99.9%) 613.573 MB/sec [Average]
[info]   (min, avg, max) = (255.805, 381.889, 660.931), stdev = 159.343
[info]   CI (99.9%): [≈ 0, 995.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3998.094 ±(99.9%) 6621.164 B/op [Average]
[info]   (min, avg, max) = (2661.290, 3998.094, 7014.548), stdev = 1719.495
[info]   CI (99.9%): [≈ 0, 10619.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.262 ±(99.9%) 1.105 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.262, 0.663), stdev = 0.287
[info]   CI (99.9%): [≈ 0, 1.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 26.82% complete, ETA 01:06:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 785.395 ops/s
[info] # Warmup Iteration   2: 4828.618 ops/s
[info] # Warmup Iteration   3: 5368.759 ops/s
[info] Iteration   1: 5682.675 ops/s
[info]                  ·gc.alloc.rate:                   1483.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              410913.326 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     364345.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.765 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 5857.616 ops/s
[info]                  ·gc.alloc.rate:                   1527.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              410281.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     440799.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1163.885 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 5903.020 ops/s
[info]                  ·gc.alloc.rate:                   1541.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              410671.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     347571.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 99.902 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 5859.366 ops/s
[info]                  ·gc.alloc.rate:               1549.821 MB/sec
[info]                  ·gc.alloc.rate.norm:          416284.958 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1633.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 438680.831 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 5895.534 ops/s
[info]                  ·gc.alloc.rate:               1553.491 MB/sec
[info]                  ·gc.alloc.rate.norm:          414598.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 351007.126 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson":
[info]   5839.642 ±(99.9%) 347.047 ops/s [Average]
[info]   (min, avg, max) = (5682.675, 5839.642, 5903.020), stdev = 90.127
[info]   CI (99.9%): [5492.595, 6186.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1531.126 ±(99.9%) 109.140 MB/sec [Average]
[info]   (min, avg, max) = (1483.659, 1531.126, 1553.491), stdev = 28.343
[info]   CI (99.9%): [1421.986, 1640.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   412549.832 ±(99.9%) 10458.092 B/op [Average]
[info]   (min, avg, max) = (410281.016, 412549.832, 416284.958), stdev = 2715.933
[info]   CI (99.9%): [402091.741, 423007.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1441.889 ±(99.9%) 686.946 MB/sec [Average]
[info]   (min, avg, max) = (1304.260, 1441.889, 1641.250), stdev = 178.398
[info]   CI (99.9%): [754.942, 2128.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   388480.796 ±(99.9%) 181814.267 B/op [Average]
[info]   (min, avg, max) = (347571.686, 388480.796, 440799.230), stdev = 47216.588
[info]   CI (99.9%): [206666.529, 570295.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.946 ±(99.9%) 7.318 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.946, 4.334), stdev = 1.900
[info]   CI (99.9%): [≈ 0, 8.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   253.910 ±(99.9%) 1965.610 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 253.910, 1163.885), stdev = 510.463
[info]   CI (99.9%): [≈ 0, 2219.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 16.000), stdev = 4.087
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 27.06% complete, ETA 01:05:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8490.614 ops/s
[info] # Warmup Iteration   2: 19313.654 ops/s
[info] # Warmup Iteration   3: 20042.984 ops/s
[info] Iteration   1: 20241.723 ops/s
[info]                  ·gc.alloc.rate:                   1556.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              121053.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102967.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 234.693 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 20162.283 ops/s
[info]                  ·gc.alloc.rate:                   1576.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              123024.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128478.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.853 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66.618 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 19885.538 ops/s
[info]                  ·gc.alloc.rate:               1546.016 MB/sec
[info]                  ·gc.alloc.rate.norm:          122361.461 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 103992.969 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 20352.707 ops/s
[info]                  ·gc.alloc.rate:               1602.664 MB/sec
[info]                  ·gc.alloc.rate.norm:          123934.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1648.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 127466.168 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 20095.967 ops/s
[info]                  ·gc.alloc.rate:                   1584.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              124052.548 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130009.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.630 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce":
[info]   20147.644 ±(99.9%) 673.825 ops/s [Average]
[info]   (min, avg, max) = (19885.538, 20147.644, 20352.707), stdev = 174.990
[info]   CI (99.9%): [19473.819, 20821.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1573.283 ±(99.9%) 86.346 MB/sec [Average]
[info]   (min, avg, max) = (1546.016, 1573.283, 1602.664), stdev = 22.424
[info]   CI (99.9%): [1486.937, 1659.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   122885.309 ±(99.9%) 4759.537 B/op [Average]
[info]   (min, avg, max) = (121053.682, 122885.309, 124052.548), stdev = 1236.037
[info]   CI (99.9%): [118125.772, 127644.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1518.670 ±(99.9%) 701.905 MB/sec [Average]
[info]   (min, avg, max) = (1313.933, 1518.670, 1660.733), stdev = 182.282
[info]   CI (99.9%): [816.765, 2220.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   118582.807 ±(99.9%) 53220.999 B/op [Average]
[info]   (min, avg, max) = (102967.107, 118582.807, 130009.025), stdev = 13821.324
[info]   CI (99.9%): [65361.808, 171803.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.779 ±(99.9%) 5.024 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.779, 3.019), stdev = 1.305
[info]   CI (99.9%): [≈ 0, 5.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   60.588 ±(99.9%) 390.640 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 60.588, 234.693), stdev = 101.448
[info]   CI (99.9%): [≈ 0, 451.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 10.000), stdev = 1.817
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.29% complete, ETA 01:05:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6604.426 ops/s
[info] # Warmup Iteration   2: 22824.245 ops/s
[info] # Warmup Iteration   3: 23563.578 ops/s
[info] Iteration   1: 23513.410 ops/s
[info]                  ·gc.alloc.rate:                   1592.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              106564.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110444.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.151 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 210.849 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 23887.369 ops/s
[info]                  ·gc.alloc.rate:                   1617.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              106515.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108096.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.860 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 23796.078 ops/s
[info]                  ·gc.alloc.rate:               1628.168 MB/sec
[info]                  ·gc.alloc.rate.norm:          107684.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1638.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 108342.720 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 23937.907 ops/s
[info]                  ·gc.alloc.rate:               1626.464 MB/sec
[info]                  ·gc.alloc.rate.norm:          106923.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1317.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 86589.313 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 23674.384 ops/s
[info]                  ·gc.alloc.rate:               1622.586 MB/sec
[info]                  ·gc.alloc.rate.norm:          107848.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1657.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 110202.778 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala":
[info]   23761.830 ±(99.9%) 659.391 ops/s [Average]
[info]   (min, avg, max) = (23513.410, 23761.830, 23937.907), stdev = 171.242
[info]   CI (99.9%): [23102.438, 24421.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1617.333 ±(99.9%) 56.141 MB/sec [Average]
[info]   (min, avg, max) = (1592.396, 1617.333, 1628.168), stdev = 14.580
[info]   CI (99.9%): [1561.192, 1673.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   107107.273 ±(99.9%) 2406.954 B/op [Average]
[info]   (min, avg, max) = (106515.004, 107107.273, 107848.935), stdev = 625.078
[info]   CI (99.9%): [104700.319, 109514.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1580.942 ±(99.9%) 568.640 MB/sec [Average]
[info]   (min, avg, max) = (1317.148, 1580.942, 1657.999), stdev = 147.674
[info]   CI (99.9%): [1012.302, 2149.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   104735.167 ±(99.9%) 39272.618 B/op [Average]
[info]   (min, avg, max) = (86589.313, 104735.167, 110444.476), stdev = 10198.974
[info]   CI (99.9%): [65462.549, 144007.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.797 ±(99.9%) 5.254 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.797, 3.151), stdev = 1.364
[info]   CI (99.9%): [≈ 0, 6.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   53.142 ±(99.9%) 351.584 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 53.142, 210.849), stdev = 91.305
[info]   CI (99.9%): [≈ 0, 404.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 15.000), stdev = 3.899
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.53% complete, ETA 01:05:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89096.554 ops/s
[info] # Warmup Iteration   2: 132180.969 ops/s
[info] # Warmup Iteration   3: 135320.043 ops/s
[info] Iteration   1: 134721.578 ops/s
[info]                  ·gc.alloc.rate:                   313.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              3660.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5976.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 134851.216 ops/s
[info]                  ·gc.alloc.rate:               307.269 MB/sec
[info]                  ·gc.alloc.rate.norm:          3586.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3852.372 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 135066.856 ops/s
[info]                  ·gc.alloc.rate:      299.853 MB/sec
[info]                  ·gc.alloc.rate.norm: 3494.105 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 134410.958 ops/s
[info]                  ·gc.alloc.rate:               307.104 MB/sec
[info]                  ·gc.alloc.rate.norm:          3595.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3864.924 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 134574.074 ops/s
[info]                  ·gc.alloc.rate:               308.568 MB/sec
[info]                  ·gc.alloc.rate.norm:          3608.671 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3864.167 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala":
[info]   134724.936 ±(99.9%) 970.731 ops/s [Average]
[info]   (min, avg, max) = (134410.958, 134724.936, 135066.856), stdev = 252.096
[info]   CI (99.9%): [133754.205, 135695.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   307.236 ±(99.9%) 18.680 MB/sec [Average]
[info]   (min, avg, max) = (299.853, 307.236, 313.387), stdev = 4.851
[info]   CI (99.9%): [288.556, 325.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3589.104 ±(99.9%) 232.464 B/op [Average]
[info]   (min, avg, max) = (3494.105, 3589.104, 3660.620), stdev = 60.370
[info]   CI (99.9%): [3356.640, 3821.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   300.443 ±(99.9%) 714.001 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 300.443, 511.648), stdev = 185.424
[info]   CI (99.9%): [≈ 0, 1014.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3511.588 ±(99.9%) 8341.827 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3511.588, 5976.477), stdev = 2166.346
[info]   CI (99.9%): [≈ 0, 11853.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.419 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.049, 0.243), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 6.000), stdev = 2.121
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 27.76% complete, ETA 01:05:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 98877.104 ops/s
[info] # Warmup Iteration   2: 138145.821 ops/s
[info] # Warmup Iteration   3: 140620.467 ops/s
[info] Iteration   1: 140577.035 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 133479.163 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 139158.694 ops/s
[info]                  ·gc.alloc.rate:      15.844 MB/sec
[info]                  ·gc.alloc.rate.norm: 179.190 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 140435.353 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 140354.645 ops/s
[info]                  ·gc.alloc.rate:      0.321 MB/sec
[info]                  ·gc.alloc.rate.norm: 3.599 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc":
[info]   138800.978 ±(99.9%) 11661.972 ops/s [Average]
[info]   (min, avg, max) = (133479.163, 138800.978, 140577.035), stdev = 3028.577
[info]   CI (99.9%): [127139.006, 150462.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   3.233 ±(99.9%) 27.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 3.233, 15.844), stdev = 7.051
[info]   CI (99.9%): [≈ 0, 30.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   36.560 ±(99.9%) 307.081 B/op [Average]
[info]   (min, avg, max) = (0.003, 36.560, 179.190), stdev = 79.748
[info]   CI (99.9%): [≈ 0, 343.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 28.00% complete, ETA 01:05:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9835.357 ops/s
[info] # Warmup Iteration   2: 21063.923 ops/s
[info] # Warmup Iteration   3: 22774.286 ops/s
[info] Iteration   1: 22667.640 ops/s
[info]                  ·gc.alloc.rate:                   1566.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              108755.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91902.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.126 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 216.958 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 23343.158 ops/s
[info]                  ·gc.alloc.rate:                   1634.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              110219.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110849.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.758 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 23365.617 ops/s
[info]                  ·gc.alloc.rate:                   1621.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              109217.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110466.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.011 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 23536.184 ops/s
[info]                  ·gc.alloc.rate:                   1624.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              108587.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110265.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.392 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 23531.608 ops/s
[info]                  ·gc.alloc.rate:                   1635.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              109376.303 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     111001.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.392 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson":
[info]   23288.842 ±(99.9%) 1381.476 ops/s [Average]
[info]   (min, avg, max) = (22667.640, 23288.842, 23536.184), stdev = 358.765
[info]   CI (99.9%): [21907.365, 24670.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1616.485 ±(99.9%) 109.717 MB/sec [Average]
[info]   (min, avg, max) = (1566.756, 1616.485, 1635.410), stdev = 28.493
[info]   CI (99.9%): [1506.768, 1726.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   109231.196 ±(99.9%) 2464.503 B/op [Average]
[info]   (min, avg, max) = (108587.589, 109231.196, 110219.493), stdev = 640.024
[info]   CI (99.9%): [106766.693, 111695.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1583.381 ±(99.9%) 559.129 MB/sec [Average]
[info]   (min, avg, max) = (1323.967, 1583.381, 1659.707), stdev = 145.204
[info]   CI (99.9%): [1024.252, 2142.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   106896.841 ±(99.9%) 32296.355 B/op [Average]
[info]   (min, avg, max) = (91902.453, 106896.841, 111001.322), stdev = 8387.261
[info]   CI (99.9%): [74600.486, 139193.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.837 ±(99.9%) 5.135 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.837, 3.126), stdev = 1.334
[info]   CI (99.9%): [≈ 0, 5.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   57.702 ±(99.9%) 356.523 B/op [Average]
[info]   (min, avg, max) = (1.392, 57.702, 216.958), stdev = 92.588
[info]   CI (99.9%): [≈ 0, 414.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 12.000), stdev = 2.510
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 28.24% complete, ETA 01:04:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36199.249 ops/s
[info] # Warmup Iteration   2: 114744.334 ops/s
[info] # Warmup Iteration   3: 119217.626 ops/s
[info] Iteration   1: 123035.918 ops/s
[info]                  ·gc.alloc.rate:                   1739.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              22251.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21183.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42.606 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 123720.287 ops/s
[info]                  ·gc.alloc.rate:                   1756.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              22335.866 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20947.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.237 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 123276.227 ops/s
[info]                  ·gc.alloc.rate:               1769.291 MB/sec
[info]                  ·gc.alloc.rate.norm:          22588.824 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1977.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25241.685 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 124099.766 ops/s
[info]                  ·gc.alloc.rate:                   1781.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              22587.677 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21023.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 124382.010 ops/s
[info]                  ·gc.alloc.rate:                   1785.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              22591.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1667.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21102.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce":
[info]   123702.842 ±(99.9%) 2149.052 ops/s [Average]
[info]   (min, avg, max) = (123035.918, 123702.842, 124382.010), stdev = 558.102
[info]   CI (99.9%): [121553.790, 125851.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1766.525 ±(99.9%) 72.078 MB/sec [Average]
[info]   (min, avg, max) = (1739.776, 1766.525, 1785.405), stdev = 18.718
[info]   CI (99.9%): [1694.447, 1838.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   22471.088 ±(99.9%) 634.599 B/op [Average]
[info]   (min, avg, max) = (22251.257, 22471.088, 22591.816), stdev = 164.803
[info]   CI (99.9%): [21836.489, 23105.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1721.348 ±(99.9%) 551.172 MB/sec [Average]
[info]   (min, avg, max) = (1647.494, 1721.348, 1977.079), stdev = 143.138
[info]   CI (99.9%): [1170.176, 2272.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   21899.918 ±(99.9%) 7201.363 B/op [Average]
[info]   (min, avg, max) = (20947.962, 21899.918, 25241.685), stdev = 1870.171
[info]   CI (99.9%): [14698.554, 29101.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.741 ±(99.9%) 5.601 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.741, 3.331), stdev = 1.455
[info]   CI (99.9%): [≈ 0, 6.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.474 ±(99.9%) 71.641 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.474, 42.606), stdev = 18.605
[info]   CI (99.9%): [≈ 0, 81.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 13.000), stdev = 2.828
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 28.47% complete, ETA 01:04:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.810 ops/s
[info] # Warmup Iteration   2: 507468.872 ops/s
[info] # Warmup Iteration   3: 559298.479 ops/s
[info] Iteration   1: 551367.249 ops/s
[info]                  ·gc.alloc.rate:               580.286 MB/sec
[info]                  ·gc.alloc.rate.norm:          1656.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 927.918 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 535375.087 ops/s
[info]                  ·gc.alloc.rate:                   577.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              1697.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1915.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 553193.448 ops/s
[info]                  ·gc.alloc.rate:                   592.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              1685.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1855.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 553704.794 ops/s
[info]                  ·gc.alloc.rate:                   591.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              1682.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1855.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 557943.938 ops/s
[info]                  ·gc.alloc.rate:                   586.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              1654.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     922.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava":
[info]   550316.903 ±(99.9%) 33474.317 ops/s [Average]
[info]   (min, avg, max) = (535375.087, 550316.903, 557943.938), stdev = 8693.174
[info]   CI (99.9%): [516842.586, 583791.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   585.663 ±(99.9%) 25.995 MB/sec [Average]
[info]   (min, avg, max) = (577.355, 585.663, 592.292), stdev = 6.751
[info]   CI (99.9%): [559.667, 611.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1674.971 ±(99.9%) 73.016 B/op [Average]
[info]   (min, avg, max) = (1654.120, 1674.971, 1697.240), stdev = 18.962
[info]   CI (99.9%): [1601.956, 1747.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   521.784 ±(99.9%) 687.833 MB/sec [Average]
[info]   (min, avg, max) = (325.119, 521.784, 653.016), stdev = 178.628
[info]   CI (99.9%): [≈ 0, 1209.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1495.393 ±(99.9%) 2006.172 B/op [Average]
[info]   (min, avg, max) = (922.678, 1495.393, 1915.261), stdev = 520.997
[info]   CI (99.9%): [≈ 0, 3501.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.013 ±(99.9%) 0.060 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.039), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.170 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.036, 0.110), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.71% complete, ETA 01:04:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 83194.262 ops/s
[info] # Warmup Iteration   2: 325827.101 ops/s
[info] # Warmup Iteration   3: 334104.900 ops/s
[info] Iteration   1: 349198.832 ops/s
[info]                  ·gc.alloc.rate:               500.516 MB/sec
[info]                  ·gc.alloc.rate.norm:          2255.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1471.193 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 345734.039 ops/s
[info]                  ·gc.alloc.rate:                   505.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              2302.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2974.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.379 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 332802.559 ops/s
[info]                  ·gc.alloc.rate:               479.572 MB/sec
[info]                  ·gc.alloc.rate.norm:          2267.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1546.823 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 347044.605 ops/s
[info]                  ·gc.alloc.rate:               512.041 MB/sec
[info]                  ·gc.alloc.rate.norm:          2322.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2972.575 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 348697.942 ops/s
[info]                  ·gc.alloc.rate:                   500.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              2259.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1480.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala":
[info]   344695.596 ±(99.9%) 26140.346 ops/s [Average]
[info]   (min, avg, max) = (332802.559, 344695.596, 349198.832), stdev = 6788.565
[info]   CI (99.9%): [318555.250, 370835.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   499.706 ±(99.9%) 47.025 MB/sec [Average]
[info]   (min, avg, max) = (479.572, 499.706, 512.041), stdev = 12.212
[info]   CI (99.9%): [452.682, 546.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   2281.584 ±(99.9%) 112.539 B/op [Average]
[info]   (min, avg, max) = (2255.972, 2281.584, 2322.117), stdev = 29.226
[info]   CI (99.9%): [2169.046, 2394.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   458.117 ±(99.9%) 690.375 MB/sec [Average]
[info]   (min, avg, max) = (326.403, 458.117, 655.472), stdev = 179.288
[info]   CI (99.9%): [≈ 0, 1148.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2089.258 ±(99.9%) 3111.116 B/op [Average]
[info]   (min, avg, max) = (1471.193, 2089.258, 2974.912), stdev = 807.947
[info]   CI (99.9%): [≈ 0, 5200.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.095 ±(99.9%) 0.632 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.095, 0.379), stdev = 0.164
[info]   CI (99.9%): [≈ 0, 0.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 7.000), stdev = 2.191
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.94% complete, ETA 01:04:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 406916.972 ops/s
[info] # Warmup Iteration   2: 756903.628 ops/s
[info] # Warmup Iteration   3: 718558.898 ops/s
[info] Iteration   1: 737617.025 ops/s
[info]                  ·gc.alloc.rate:                   486.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              1037.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     703.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 740353.189 ops/s
[info]                  ·gc.alloc.rate:                   502.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              1068.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1403.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 769941.590 ops/s
[info]                  ·gc.alloc.rate:                   511.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              1045.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     675.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 755145.937 ops/s
[info]                  ·gc.alloc.rate:               510.278 MB/sec
[info]                  ·gc.alloc.rate.norm:          1063.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1380.083 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 764297.332 ops/s
[info]                  ·gc.alloc.rate:                   506.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              1041.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     682.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala":
[info]   753471.015 ±(99.9%) 54955.067 ops/s [Average]
[info]   (min, avg, max) = (737617.025, 753471.015, 769941.590), stdev = 14271.656
[info]   CI (99.9%): [698515.947, 808426.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   503.422 ±(99.9%) 39.212 MB/sec [Average]
[info]   (min, avg, max) = (486.363, 503.422, 511.678), stdev = 10.183
[info]   CI (99.9%): [464.210, 542.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1051.347 ±(99.9%) 51.967 B/op [Average]
[info]   (min, avg, max) = (1037.604, 1051.347, 1068.200), stdev = 13.496
[info]   CI (99.9%): [999.380, 1103.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   462.893 ±(99.9%) 697.559 MB/sec [Average]
[info]   (min, avg, max) = (329.794, 462.893, 662.432), stdev = 181.154
[info]   CI (99.9%): [≈ 0, 1160.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   968.976 ±(99.9%) 1486.861 B/op [Average]
[info]   (min, avg, max) = (675.418, 968.976, 1403.347), stdev = 386.133
[info]   CI (99.9%): [≈ 0, 2455.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.043 ±(99.9%) 0.117 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.043, 0.086), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 5.000), stdev = 1.517
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 29.18% complete, ETA 01:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5315.772 ops/s
[info] # Warmup Iteration   2: 59640.855 ops/s
[info] # Warmup Iteration   3: 72241.519 ops/s
[info] Iteration   1: 75924.205 ops/s
[info]                  ·gc.alloc.rate:                   3116.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              64609.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2940.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60952.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.589 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 74740.719 ops/s
[info]                  ·gc.alloc.rate:                   3098.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              65219.718 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2972.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62563.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.438 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 76615.114 ops/s
[info]                  ·gc.alloc.rate:                   3174.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              65203.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3010.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61842.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.428 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 76022.341 ops/s
[info]                  ·gc.alloc.rate:                   3152.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              65266.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3035.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62851.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.862 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 74552.191 ops/s
[info]                  ·gc.alloc.rate:               3093.249 MB/sec
[info]                  ·gc.alloc.rate.norm:          65298.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3050.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 64390.810 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson":
[info]   75570.914 ±(99.9%) 3414.924 ops/s [Average]
[info]   (min, avg, max) = (74552.191, 75570.914, 76615.114), stdev = 886.845
[info]   CI (99.9%): [72155.990, 78985.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3127.031 ±(99.9%) 134.989 MB/sec [Average]
[info]   (min, avg, max) = (3093.249, 3127.031, 3174.038), stdev = 35.056
[info]   CI (99.9%): [2992.042, 3262.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   65119.475 ±(99.9%) 1107.220 B/op [Average]
[info]   (min, avg, max) = (64609.544, 65119.475, 65298.248), stdev = 287.541
[info]   CI (99.9%): [64012.255, 66226.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3001.856 ±(99.9%) 174.646 MB/sec [Average]
[info]   (min, avg, max) = (2940.346, 3001.856, 3050.262), stdev = 45.355
[info]   CI (99.9%): [2827.210, 3176.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   62520.087 ±(99.9%) 4919.502 B/op [Average]
[info]   (min, avg, max) = (60952.321, 62520.087, 64390.810), stdev = 1277.579
[info]   CI (99.9%): [57600.585, 67439.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.863 ±(99.9%) 3.896 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.863, 2.589), stdev = 1.012
[info]   CI (99.9%): [≈ 0, 4.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.count":
[info]   45.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.000, 9.000), stdev = 0.001
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.800, 16.000), stdev = 1.924
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 29.41% complete, ETA 01:03:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71725.569 ops/s
[info] # Warmup Iteration   2: 181721.185 ops/s
[info] # Warmup Iteration   3: 196364.863 ops/s
[info] Iteration   1: 200970.613 ops/s
[info]                  ·gc.alloc.rate:                   1461.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              11445.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10230.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 201369.351 ops/s
[info]                  ·gc.alloc.rate:                   1478.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              11547.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12833.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.488 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 201350.452 ops/s
[info]                  ·gc.alloc.rate:                   1470.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              11495.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10340.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.325 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 200881.798 ops/s
[info]                  ·gc.alloc.rate:                   1481.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              11604.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10433.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.326 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 200901.127 ops/s
[info]                  ·gc.alloc.rate:                   1494.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              11709.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13114.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce":
[info]   201094.668 ±(99.9%) 941.319 ops/s [Average]
[info]   (min, avg, max) = (200881.798, 201094.668, 201369.351), stdev = 244.458
[info]   CI (99.9%): [200153.349, 202035.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1477.253 ±(99.9%) 47.725 MB/sec [Average]
[info]   (min, avg, max) = (1461.539, 1477.253, 1494.756), stdev = 12.394
[info]   CI (99.9%): [1429.528, 1524.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   11560.456 ±(99.9%) 393.074 B/op [Average]
[info]   (min, avg, max) = (11445.643, 11560.456, 11709.275), stdev = 102.080
[info]   CI (99.9%): [11167.382, 11953.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1455.574 ±(99.9%) 715.099 MB/sec [Average]
[info]   (min, avg, max) = (1306.358, 1455.574, 1674.125), stdev = 185.709
[info]   CI (99.9%): [740.475, 2170.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11390.519 ±(99.9%) 5586.610 B/op [Average]
[info]   (min, avg, max) = (10230.391, 11390.519, 13114.376), stdev = 1450.825
[info]   CI (99.9%): [5803.909, 16977.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.293 ±(99.9%) 0.524 B/op [Average]
[info]   (min, avg, max) = (0.163, 0.293, 0.488), stdev = 0.136
[info]   CI (99.9%): [≈ 0, 0.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 1.000
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 29.65% complete, ETA 01:03:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.839 ops/s
[info] # Warmup Iteration   2: 612080.478 ops/s
[info] # Warmup Iteration   3: 639965.017 ops/s
[info] Iteration   1: 647966.358 ops/s
[info]                  ·gc.alloc.rate:               358.890 MB/sec
[info]                  ·gc.alloc.rate.norm:          871.739 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 621.335 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 646771.711 ops/s
[info]                  ·gc.alloc.rate:                   369.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              900.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1582.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 648730.827 ops/s
[info]                  ·gc.alloc.rate:               359.636 MB/sec
[info]                  ·gc.alloc.rate.norm:          872.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 790.302 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 649551.243 ops/s
[info]                  ·gc.alloc.rate:               365.637 MB/sec
[info]                  ·gc.alloc.rate.norm:          885.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 789.301 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 648864.396 ops/s
[info]                  ·gc.alloc.rate:                   360.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              875.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     790.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava":
[info]   648376.907 ±(99.9%) 4078.401 ops/s [Average]
[info]   (min, avg, max) = (646771.711, 648376.907, 649551.243), stdev = 1059.148
[info]   CI (99.9%): [644298.506, 652455.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   363.006 ±(99.9%) 17.965 MB/sec [Average]
[info]   (min, avg, max) = (358.890, 363.006, 369.909), stdev = 4.665
[info]   CI (99.9%): [345.041, 380.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   881.174 ±(99.9%) 46.286 B/op [Average]
[info]   (min, avg, max) = (871.739, 881.174, 900.124), stdev = 12.020
[info]   CI (99.9%): [834.888, 927.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   376.710 ±(99.9%) 600.165 MB/sec [Average]
[info]   (min, avg, max) = (255.800, 376.710, 650.192), stdev = 155.861
[info]   CI (99.9%): [≈ 0, 976.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   914.798 ±(99.9%) 1463.860 B/op [Average]
[info]   (min, avg, max) = (621.335, 914.798, 1582.154), stdev = 380.160
[info]   CI (99.9%): [≈ 0, 2378.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.174 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.101), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 6.000), stdev = 1.483
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.88% complete, ETA 01:03:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 275303.069 ops/s
[info] # Warmup Iteration   2: 624629.558 ops/s
[info] # Warmup Iteration   3: 626948.014 ops/s
[info] Iteration   1: 651290.819 ops/s
[info]                  ·gc.alloc.rate:                   493.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              1191.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     789.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 648722.546 ops/s
[info]                  ·gc.alloc.rate:                   511.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              1241.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1587.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 653762.512 ops/s
[info]                  ·gc.alloc.rate:                   497.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              1196.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     788.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 651608.022 ops/s
[info]                  ·gc.alloc.rate:                   503.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              1217.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1583.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 659776.106 ops/s
[info]                  ·gc.alloc.rate:               498.681 MB/sec
[info]                  ·gc.alloc.rate.norm:          1189.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 783.406 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala":
[info]   653032.001 ±(99.9%) 16067.781 ops/s [Average]
[info]   (min, avg, max) = (648722.546, 653032.001, 659776.106), stdev = 4172.752
[info]   CI (99.9%): [636964.220, 669099.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   500.910 ±(99.9%) 27.612 MB/sec [Average]
[info]   (min, avg, max) = (493.041, 500.910, 511.651), stdev = 7.171
[info]   CI (99.9%): [473.299, 528.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1207.233 ±(99.9%) 84.722 B/op [Average]
[info]   (min, avg, max) = (1189.554, 1207.233, 1241.286), stdev = 22.002
[info]   CI (99.9%): [1122.510, 1291.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   458.468 ±(99.9%) 690.259 MB/sec [Average]
[info]   (min, avg, max) = (326.750, 458.468, 655.481), stdev = 179.258
[info]   CI (99.9%): [≈ 0, 1148.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1106.297 ±(99.9%) 1683.209 B/op [Average]
[info]   (min, avg, max) = (783.406, 1106.297, 1587.084), stdev = 437.124
[info]   CI (99.9%): [≈ 0, 2789.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.050 ±(99.9%) 0.136 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.100), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 7.000), stdev = 1.949
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.12% complete, ETA 01:03:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 618611.231 ops/s
[info] # Warmup Iteration   2: 1045883.936 ops/s
[info] # Warmup Iteration   3: 1092049.002 ops/s
[info] Iteration   1: 1114505.793 ops/s
[info]                  ·gc.alloc.rate:               628.076 MB/sec
[info]                  ·gc.alloc.rate.norm:          886.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 931.303 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 1113516.200 ops/s
[info]                  ·gc.alloc.rate:                   629.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              889.406 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     934.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1116153.884 ops/s
[info]                  ·gc.alloc.rate:               619.193 MB/sec
[info]                  ·gc.alloc.rate.norm:          872.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 466.394 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1112377.143 ops/s
[info]                  ·gc.alloc.rate:                   619.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              876.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     936.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1114334.815 ops/s
[info]                  ·gc.alloc.rate:               619.909 MB/sec
[info]                  ·gc.alloc.rate.norm:          875.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 936.103 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala":
[info]   1114177.567 ±(99.9%) 5348.522 ops/s [Average]
[info]   (min, avg, max) = (1112377.143, 1114177.567, 1116153.884), stdev = 1388.994
[info]   CI (99.9%): [1108829.045, 1119526.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   623.171 ±(99.9%) 19.376 MB/sec [Average]
[info]   (min, avg, max) = (619.193, 623.171, 629.240), stdev = 5.032
[info]   CI (99.9%): [603.796, 642.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   880.258 ±(99.9%) 28.445 B/op [Average]
[info]   (min, avg, max) = (872.976, 880.258, 889.406), stdev = 7.387
[info]   CI (99.9%): [851.813, 908.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   595.207 ±(99.9%) 569.158 MB/sec [Average]
[info]   (min, avg, max) = (330.809, 595.207, 662.785), stdev = 147.808
[info]   CI (99.9%): [26.049, 1164.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   840.933 ±(99.9%) 806.265 B/op [Average]
[info]   (min, avg, max) = (466.394, 840.933, 936.841), stdev = 209.385
[info]   CI (99.9%): [34.668, 1647.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.124 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.059), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 30.35% complete, ETA 01:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 686941.787 ops/s
[info] # Warmup Iteration   2: 1117589.494 ops/s
[info] # Warmup Iteration   3: 1117286.382 ops/s
[info] Iteration   1: 1188359.757 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1180775.850 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1150170.381 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1185431.596 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1184673.493 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   1177882.215 ±(99.9%) 60554.738 ops/s [Average]
[info]   (min, avg, max) = (1150170.381, 1177882.215, 1188359.757), stdev = 15725.873
[info]   CI (99.9%): [1117327.477, 1238436.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 30.59% complete, ETA 01:02:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8844.381 ops/s
[info] # Warmup Iteration   2: 30872.669 ops/s
[info] # Warmup Iteration   3: 33370.422 ops/s
[info] Iteration   1: 33868.284 ops/s
[info]                  ·gc.alloc.rate:                   1935.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              89901.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91900.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 187.655 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 34016.665 ops/s
[info]                  ·gc.alloc.rate:                   1921.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              88904.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75816.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.963 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 33944.978 ops/s
[info]                  ·gc.alloc.rate:               1950.662 MB/sec
[info]                  ·gc.alloc.rate.norm:          90436.214 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1973.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 91481.315 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 34054.777 ops/s
[info]                  ·gc.alloc.rate:                   1957.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              90482.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91986.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.962 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 33795.153 ops/s
[info]                  ·gc.alloc.rate:               1932.045 MB/sec
[info]                  ·gc.alloc.rate.norm:          89936.698 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1672.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77849.811 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson":
[info]   33935.971 ±(99.9%) 408.961 ops/s [Average]
[info]   (min, avg, max) = (33795.153, 33935.971, 34054.777), stdev = 106.206
[info]   CI (99.9%): [33527.010, 34344.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1939.475 ±(99.9%) 56.130 MB/sec [Average]
[info]   (min, avg, max) = (1921.812, 1939.475, 1957.849), stdev = 14.577
[info]   CI (99.9%): [1883.345, 1995.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   89932.371 ±(99.9%) 2445.523 B/op [Average]
[info]   (min, avg, max) = (88904.711, 89932.371, 90482.359), stdev = 635.095
[info]   CI (99.9%): [87486.848, 92377.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1850.579 ±(99.9%) 687.185 MB/sec [Average]
[info]   (min, avg, max) = (1638.885, 1850.579, 1990.391), stdev = 178.460
[info]   CI (99.9%): [1163.394, 2537.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   85806.842 ±(99.9%) 31673.978 B/op [Average]
[info]   (min, avg, max) = (75816.270, 85806.842, 91986.292), stdev = 8225.632
[info]   CI (99.9%): [54132.864, 117480.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.816 ±(99.9%) 6.938 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.816, 4.039), stdev = 1.802
[info]   CI (99.9%): [≈ 0, 7.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   37.916 ±(99.9%) 322.329 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 37.916, 187.655), stdev = 83.708
[info]   CI (99.9%): [≈ 0, 360.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 14.000), stdev = 3.114
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 30.82% complete, ETA 01:02:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29465.524 ops/s
[info] # Warmup Iteration   2: 120596.323 ops/s
[info] # Warmup Iteration   3: 119745.931 ops/s
[info] Iteration   1: 125914.779 ops/s
[info]                  ·gc.alloc.rate:                   1603.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              20032.326 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20612.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.269 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.852 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 130431.019 ops/s
[info]                  ·gc.alloc.rate:                   1674.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              20200.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19781.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.787 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 130375.126 ops/s
[info]                  ·gc.alloc.rate:                   1679.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              20264.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19781.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.251 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 131207.046 ops/s
[info]                  ·gc.alloc.rate:               1696.711 MB/sec
[info]                  ·gc.alloc.rate.norm:          20353.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1647.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19764.928 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 129138.271 ops/s
[info]                  ·gc.alloc.rate:               1659.267 MB/sec
[info]                  ·gc.alloc.rate.norm:          20218.503 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1327.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16172.157 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce":
[info]   129413.248 ±(99.9%) 8052.745 ops/s [Average]
[info]   (min, avg, max) = (125914.779, 129413.248, 131207.046), stdev = 2091.272
[info]   CI (99.9%): [121360.503, 137465.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1662.485 ±(99.9%) 137.704 MB/sec [Average]
[info]   (min, avg, max) = (1603.145, 1662.485, 1696.711), stdev = 35.761
[info]   CI (99.9%): [1524.781, 1800.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20213.644 ±(99.9%) 451.867 B/op [Average]
[info]   (min, avg, max) = (20032.326, 20213.644, 20353.016), stdev = 117.348
[info]   CI (99.9%): [19761.777, 20665.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1580.622 ±(99.9%) 545.818 MB/sec [Average]
[info]   (min, avg, max) = (1327.197, 1580.622, 1649.573), stdev = 141.747
[info]   CI (99.9%): [1034.804, 2126.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19222.632 ±(99.9%) 6712.858 B/op [Average]
[info]   (min, avg, max) = (16172.157, 19222.632, 20612.477), stdev = 1743.308
[info]   CI (99.9%): [12509.774, 25935.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.787 ±(99.9%) 5.448 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.787, 3.269), stdev = 1.415
[info]   CI (99.9%): [≈ 0, 6.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.778 ±(99.9%) 68.113 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.778, 40.852), stdev = 17.689
[info]   CI (99.9%): [≈ 0, 77.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 17.000), stdev = 4.775
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.06% complete, ETA 01:02:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36620.260 ops/s
[info] # Warmup Iteration   2: 183859.142 ops/s
[info] # Warmup Iteration   3: 191804.325 ops/s
[info] Iteration   1: 200087.327 ops/s
[info]                  ·gc.alloc.rate:                   1228.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              9661.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10306.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 198407.381 ops/s
[info]                  ·gc.alloc.rate:                   1210.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              9603.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7817.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.435 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.247 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 205717.690 ops/s
[info]                  ·gc.alloc.rate:                   1259.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              9633.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10016.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.256 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 195319.747 ops/s
[info]                  ·gc.alloc.rate:               1194.319 MB/sec
[info]                  ·gc.alloc.rate.norm:          9623.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1304.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10509.968 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 194644.176 ops/s
[info]                  ·gc.alloc.rate:               1189.714 MB/sec
[info]                  ·gc.alloc.rate.norm:          9619.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:      980.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7928.293 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala":
[info]   198835.264 ±(99.9%) 17117.249 ops/s [Average]
[info]   (min, avg, max) = (194644.176, 198835.264, 205717.690), stdev = 4445.295
[info]   CI (99.9%): [181718.015, 215952.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1216.504 ±(99.9%) 109.054 MB/sec [Average]
[info]   (min, avg, max) = (1189.714, 1216.504, 1259.083), stdev = 28.321
[info]   CI (99.9%): [1107.450, 1325.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9628.277 ±(99.9%) 82.385 B/op [Average]
[info]   (min, avg, max) = (9603.439, 9628.277, 9661.177), stdev = 21.395
[info]   CI (99.9%): [9545.892, 9710.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1178.092 ±(99.9%) 685.692 MB/sec [Average]
[info]   (min, avg, max) = (980.561, 1178.092, 1310.872), stdev = 178.072
[info]   CI (99.9%): [492.400, 1863.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9315.958 ±(99.9%) 5118.592 B/op [Average]
[info]   (min, avg, max) = (7817.978, 9315.958, 10509.968), stdev = 1329.282
[info]   CI (99.9%): [4197.366, 14434.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.828 ±(99.9%) 5.724 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.828, 3.435), stdev = 1.486
[info]   CI (99.9%): [≈ 0, 6.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.533 ±(99.9%) 45.424 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.533, 27.247), stdev = 11.796
[info]   CI (99.9%): [≈ 0, 51.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 13.000), stdev = 3.962
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.29% complete, ETA 01:02:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 112189.816 ops/s
[info] # Warmup Iteration   2: 241107.724 ops/s
[info] # Warmup Iteration   3: 249327.442 ops/s
[info] Iteration   1: 250445.822 ops/s
[info]                  ·gc.alloc.rate:                   1347.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              8465.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8351.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 243284.825 ops/s
[info]                  ·gc.alloc.rate:                   1307.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              8457.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8592.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.998 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.392 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 244879.117 ops/s
[info]                  ·gc.alloc.rate:                   1305.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              8389.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6370.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.472 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 251427.056 ops/s
[info]                  ·gc.alloc.rate:                   1354.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              8480.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8275.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 249422.511 ops/s
[info]                  ·gc.alloc.rate:               1351.217 MB/sec
[info]                  ·gc.alloc.rate.norm:          8523.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1326.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8364.733 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala":
[info]   247891.866 ±(99.9%) 13838.849 ops/s [Average]
[info]   (min, avg, max) = (243284.825, 247891.866, 251427.056), stdev = 3593.905
[info]   CI (99.9%): [234053.017, 261730.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1333.156 ±(99.9%) 94.995 MB/sec [Average]
[info]   (min, avg, max) = (1305.297, 1333.156, 1354.822), stdev = 24.670
[info]   CI (99.9%): [1238.161, 1428.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   8463.196 ±(99.9%) 186.499 B/op [Average]
[info]   (min, avg, max) = (8389.445, 8463.196, 8523.190), stdev = 48.433
[info]   CI (99.9%): [8276.697, 8649.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1259.315 ±(99.9%) 577.266 MB/sec [Average]
[info]   (min, avg, max) = (991.185, 1259.315, 1328.977), stdev = 149.914
[info]   CI (99.9%): [682.049, 1836.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   7990.997 ±(99.9%) 3517.885 B/op [Average]
[info]   (min, avg, max) = (6370.574, 7990.997, 8592.907), stdev = 913.583
[info]   CI (99.9%): [4473.113, 11508.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.654 ±(99.9%) 5.059 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.654, 2.998), stdev = 1.314
[info]   CI (99.9%): [≈ 0, 5.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.225 ±(99.9%) 32.731 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.225, 19.392), stdev = 8.500
[info]   CI (99.9%): [≈ 0, 36.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 11.000), stdev = 2.702
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 31.53% complete, ETA 01:01:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2709.026 ops/s
[info] # Warmup Iteration   2: 52238.445 ops/s
[info] # Warmup Iteration   3: 67155.954 ops/s
[info] Iteration   1: 67068.241 ops/s
[info]                  ·gc.alloc.rate:                   2712.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              63638.860 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2643.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62028.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.517 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 68112.757 ops/s
[info]                  ·gc.alloc.rate:                   2711.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              62647.464 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2669.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61676.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.443 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 69068.711 ops/s
[info]                  ·gc.alloc.rate:                   2775.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              63250.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2690.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61307.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.372 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 68724.689 ops/s
[info]                  ·gc.alloc.rate:               2783.898 MB/sec
[info]                  ·gc.alloc.rate.norm:          63752.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2705.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61951.047 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   5: 69140.254 ops/s
[info]                  ·gc.alloc.rate:               2800.756 MB/sec
[info]                  ·gc.alloc.rate.norm:          63740.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2714.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61775.489 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson":
[info]   68422.930 ±(99.9%) 3309.110 ops/s [Average]
[info]   (min, avg, max) = (67068.241, 68422.930, 69140.254), stdev = 859.365
[info]   CI (99.9%): [65113.821, 71732.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2756.817 ±(99.9%) 162.233 MB/sec [Average]
[info]   (min, avg, max) = (2711.313, 2756.817, 2800.756), stdev = 42.132
[info]   CI (99.9%): [2594.583, 2919.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63406.023 ±(99.9%) 1812.088 B/op [Average]
[info]   (min, avg, max) = (62647.464, 63406.023, 63752.250), stdev = 470.594
[info]   CI (99.9%): [61593.935, 65218.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2684.629 ±(99.9%) 110.194 MB/sec [Average]
[info]   (min, avg, max) = (2643.492, 2684.629, 2714.394), stdev = 28.617
[info]   CI (99.9%): [2574.435, 2794.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   61747.839 ±(99.9%) 1088.534 B/op [Average]
[info]   (min, avg, max) = (61307.718, 61747.839, 62028.528), stdev = 282.689
[info]   CI (99.9%): [60659.305, 62836.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.208 ±(99.9%) 1.444 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.208, 0.874), stdev = 0.375
[info]   CI (99.9%): [≈ 0, 1.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.866 ±(99.9%) 33.913 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.866, 20.517), stdev = 8.807
[info]   CI (99.9%): [≈ 0, 38.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 11.200, 12.000), stdev = 0.447
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 31.76% complete, ETA 01:01:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 65869.316 ops/s
[info] # Warmup Iteration   2: 169268.744 ops/s
[info] # Warmup Iteration   3: 175445.058 ops/s
[info] Iteration   1: 170441.660 ops/s
[info]                  ·gc.alloc.rate:                   1138.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              10509.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9140.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.577 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 173587.751 ops/s
[info]                  ·gc.alloc.rate:                   1148.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              10413.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8992.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.479 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 180808.491 ops/s
[info]                  ·gc.alloc.rate:                   1210.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              10538.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11481.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.705 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 176652.107 ops/s
[info]                  ·gc.alloc.rate:                   1171.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              10437.675 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8777.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.371 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 175580.131 ops/s
[info]                  ·gc.alloc.rate:               1190.857 MB/sec
[info]                  ·gc.alloc.rate.norm:          10674.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11787.120 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce":
[info]   175414.028 ±(99.9%) 14753.595 ops/s [Average]
[info]   (min, avg, max) = (170441.660, 175414.028, 180808.491), stdev = 3831.462
[info]   CI (99.9%): [160660.434, 190167.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1171.960 ±(99.9%) 114.669 MB/sec [Average]
[info]   (min, avg, max) = (1138.131, 1171.960, 1210.680), stdev = 29.779
[info]   CI (99.9%): [1057.291, 1286.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10514.711 ±(99.9%) 396.608 B/op [Average]
[info]   (min, avg, max) = (10413.412, 10514.711, 10674.913), stdev = 102.998
[info]   CI (99.9%): [10118.103, 10911.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1120.199 ±(99.9%) 691.791 MB/sec [Average]
[info]   (min, avg, max) = (985.230, 1120.199, 1319.024), stdev = 179.656
[info]   CI (99.9%): [428.408, 1811.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10035.930 ±(99.9%) 5655.219 B/op [Average]
[info]   (min, avg, max) = (8777.749, 10035.930, 11787.120), stdev = 1468.642
[info]   CI (99.9%): [4380.711, 15691.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.737 ±(99.9%) 4.629 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.737, 2.810), stdev = 1.202
[info]   CI (99.9%): [≈ 0, 5.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.626 ±(99.9%) 41.964 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.626, 25.479), stdev = 10.898
[info]   CI (99.9%): [≈ 0, 48.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 10.000), stdev = 2.702
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.00% complete, ETA 01:01:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 222910.156 ops/s
[info] # Warmup Iteration   2: 628733.839 ops/s
[info] # Warmup Iteration   3: 675992.284 ops/s
[info] Iteration   1: 723075.356 ops/s
[info]                  ·gc.alloc.rate:               748.387 MB/sec
[info]                  ·gc.alloc.rate.norm:          1629.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1422.399 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 717291.804 ops/s
[info]                  ·gc.alloc.rate:                   755.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              1658.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2155.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 718193.871 ops/s
[info]                  ·gc.alloc.rate:               746.792 MB/sec
[info]                  ·gc.alloc.rate.norm:          1636.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1437.871 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 715279.642 ops/s
[info]                  ·gc.alloc.rate:                   737.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              1621.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1445.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 722953.457 ops/s
[info]                  ·gc.alloc.rate:                   750.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              1634.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1432.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.747 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.157 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala":
[info]   719358.826 ±(99.9%) 13477.723 ops/s [Average]
[info]   (min, avg, max) = (715279.642, 719358.826, 723075.356), stdev = 3500.122
[info]   CI (99.9%): [705881.103, 732836.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   747.794 ±(99.9%) 26.250 MB/sec [Average]
[info]   (min, avg, max) = (737.274, 747.794, 755.917), stdev = 6.817
[info]   CI (99.9%): [721.544, 774.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1635.984 ±(99.9%) 52.751 B/op [Average]
[info]   (min, avg, max) = (1621.987, 1635.984, 1658.390), stdev = 13.699
[info]   CI (99.9%): [1583.232, 1688.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   721.485 ±(99.9%) 562.329 MB/sec [Average]
[info]   (min, avg, max) = (653.469, 721.485, 982.702), stdev = 146.035
[info]   CI (99.9%): [159.156, 1283.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1578.851 ±(99.9%) 1242.614 B/op [Average]
[info]   (min, avg, max) = (1422.399, 1578.851, 2155.928), stdev = 322.703
[info]   CI (99.9%): [336.237, 2821.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.758 ±(99.9%) 6.435 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.758, 3.747), stdev = 1.671
[info]   CI (99.9%): [≈ 0, 7.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.650 ±(99.9%) 14.008 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.650, 8.157), stdev = 3.638
[info]   CI (99.9%): [≈ 0, 15.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 10.000), stdev = 1.924
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.24% complete, ETA 01:01:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 352375.826 ops/s
[info] # Warmup Iteration   2: 665466.074 ops/s
[info] # Warmup Iteration   3: 679619.370 ops/s
[info] Iteration   1: 695446.581 ops/s
[info]                  ·gc.alloc.rate:               553.672 MB/sec
[info]                  ·gc.alloc.rate.norm:          1252.655 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1491.009 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 705996.233 ops/s
[info]                  ·gc.alloc.rate:               562.520 MB/sec
[info]                  ·gc.alloc.rate.norm:          1253.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1473.155 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 708131.831 ops/s
[info]                  ·gc.alloc.rate:               553.356 MB/sec
[info]                  ·gc.alloc.rate.norm:          1229.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 734.403 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 701759.981 ops/s
[info]                  ·gc.alloc.rate:                   562.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              1261.922 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1484.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 692553.338 ops/s
[info]                  ·gc.alloc.rate:               545.084 MB/sec
[info]                  ·gc.alloc.rate.norm:          1238.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 752.406 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala":
[info]   700777.593 ±(99.9%) 25711.675 ops/s [Average]
[info]   (min, avg, max) = (692553.338, 700777.593, 708131.831), stdev = 6677.240
[info]   CI (99.9%): [675065.917, 726489.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   555.483 ±(99.9%) 28.476 MB/sec [Average]
[info]   (min, avg, max) = (545.084, 555.483, 562.783), stdev = 7.395
[info]   CI (99.9%): [527.007, 583.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1247.278 ±(99.9%) 50.087 B/op [Average]
[info]   (min, avg, max) = (1229.514, 1247.278, 1261.922), stdev = 13.007
[info]   CI (99.9%): [1197.192, 1297.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   528.723 ±(99.9%) 695.638 MB/sec [Average]
[info]   (min, avg, max) = (330.526, 528.723, 661.967), stdev = 180.655
[info]   CI (99.9%): [≈ 0, 1224.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1187.059 ±(99.9%) 1559.893 B/op [Average]
[info]   (min, avg, max) = (734.403, 1187.059, 1491.009), stdev = 405.099
[info]   CI (99.9%): [≈ 0, 2746.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.080 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.047), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 6.000), stdev = 1.949
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 32.47% complete, ETA 01:01:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 483090.547 ops/s
[info] # Warmup Iteration   2: 732885.414 ops/s
[info] # Warmup Iteration   3: 777767.800 ops/s
[info] Iteration   1: 777355.793 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 778985.008 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 779867.776 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 779676.593 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 780085.564 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   779194.147 ±(99.9%) 4263.811 ops/s [Average]
[info]   (min, avg, max) = (777355.793, 779194.147, 780085.564), stdev = 1107.298
[info]   CI (99.9%): [774930.336, 783457.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 32.71% complete, ETA 01:00:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34242.537 ops/s
[info] # Warmup Iteration   2: 328859.695 ops/s
[info] # Warmup Iteration   3: 343868.200 ops/s
[info] Iteration   1: 346547.619 ops/s
[info]                  ·gc.alloc.rate:               988.320 MB/sec
[info]                  ·gc.alloc.rate.norm:          4488.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:      971.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4412.442 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 345456.620 ops/s
[info]                  ·gc.alloc.rate:                   971.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              4425.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4453.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 352981.836 ops/s
[info]                  ·gc.alloc.rate:               1001.621 MB/sec
[info]                  ·gc.alloc.rate.norm:          4465.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4388.360 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 341473.741 ops/s
[info]                  ·gc.alloc.rate:                   969.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              4469.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4563.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.343 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 343748.780 ops/s
[info]                  ·gc.alloc.rate:               976.602 MB/sec
[info]                  ·gc.alloc.rate.norm:          4469.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:      995.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4555.339 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson":
[info]   346041.719 ±(99.9%) 16661.266 ops/s [Average]
[info]   (min, avg, max) = (341473.741, 346041.719, 352981.836), stdev = 4326.878
[info]   CI (99.9%): [329380.453, 362702.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   981.584 ±(99.9%) 51.319 MB/sec [Average]
[info]   (min, avg, max) = (969.880, 981.584, 1001.621), stdev = 13.327
[info]   CI (99.9%): [930.264, 1032.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4463.877 ±(99.9%) 88.350 B/op [Average]
[info]   (min, avg, max) = (4425.948, 4463.877, 4488.329), stdev = 22.944
[info]   CI (99.9%): [4375.526, 4552.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   983.819 ±(99.9%) 36.776 MB/sec [Average]
[info]   (min, avg, max) = (971.610, 983.819, 995.429), stdev = 9.551
[info]   CI (99.9%): [947.043, 1020.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4474.741 ±(99.9%) 311.902 B/op [Average]
[info]   (min, avg, max) = (4388.360, 4474.741, 4563.952), stdev = 81.000
[info]   CI (99.9%): [4162.840, 4786.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.486 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.291), stdev = 0.126
[info]   CI (99.9%): [≈ 0, 0.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.326 ±(99.9%) 2.241 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.326, 1.343), stdev = 0.582
[info]   CI (99.9%): [≈ 0, 2.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 32.94% complete, ETA 01:00:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1171.457 ops/s
[info] # Warmup Iteration   2: 9372.758 ops/s
[info] # Warmup Iteration   3: 11030.721 ops/s
[info] Iteration   1: 10902.728 ops/s
[info]                  ·gc.alloc.rate:               1386.771 MB/sec
[info]                  ·gc.alloc.rate.norm:          200168.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 190868.717 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   2: 11056.237 ops/s
[info]                  ·gc.alloc.rate:                   1395.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              198709.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     188227.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 527.465 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 11124.737 ops/s
[info]                  ·gc.alloc.rate:                   1416.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              200311.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     185835.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.284 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 10949.240 ops/s
[info]                  ·gc.alloc.rate:               1386.631 MB/sec
[info]                  ·gc.alloc.rate.norm:          199287.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1312.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 188613.470 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 11030.115 ops/s
[info]                  ·gc.alloc.rate:               1418.407 MB/sec
[info]                  ·gc.alloc.rate.norm:          202227.449 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1645.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 234651.022 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce":
[info]   11012.612 ±(99.9%) 338.288 ops/s [Average]
[info]   (min, avg, max) = (10902.728, 11012.612, 11124.737), stdev = 87.852
[info]   CI (99.9%): [10674.324, 11350.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1400.765 ±(99.9%) 59.735 MB/sec [Average]
[info]   (min, avg, max) = (1386.631, 1400.765, 1418.407), stdev = 15.513
[info]   CI (99.9%): [1341.030, 1460.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   200140.755 ±(99.9%) 5152.445 B/op [Average]
[info]   (min, avg, max) = (198709.189, 200140.755, 202227.449), stdev = 1338.074
[info]   CI (99.9%): [194988.311, 205293.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1383.315 ±(99.9%) 565.355 MB/sec [Average]
[info]   (min, avg, max) = (1312.362, 1383.315, 1645.823), stdev = 146.821
[info]   CI (99.9%): [817.960, 1948.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   197639.313 ±(99.9%) 79966.455 B/op [Average]
[info]   (min, avg, max) = (185835.524, 197639.313, 234651.022), stdev = 20767.034
[info]   CI (99.9%): [117672.858, 277605.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.795 ±(99.9%) 6.281 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.795, 3.706), stdev = 1.631
[info]   CI (99.9%): [≈ 0, 7.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   113.150 ±(99.9%) 894.126 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 113.150, 527.465), stdev = 232.202
[info]   CI (99.9%): [≈ 0, 1007.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 14.000), stdev = 3.507
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.18% complete, ETA 01:00:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1067.641 ops/s
[info] # Warmup Iteration   2: 8881.672 ops/s
[info] # Warmup Iteration   3: 10850.186 ops/s
[info] Iteration   1: 10815.117 ops/s
[info]                  ·gc.alloc.rate:               1267.595 MB/sec
[info]                  ·gc.alloc.rate.norm:          184448.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 191355.184 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   2: 10768.098 ops/s
[info]                  ·gc.alloc.rate:                   1247.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              182196.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144386.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.339 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 487.785 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 10906.998 ops/s
[info]                  ·gc.alloc.rate:                   1275.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              183904.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     189260.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 162.203 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 10451.104 ops/s
[info]                  ·gc.alloc.rate:               1222.300 MB/sec
[info]                  ·gc.alloc.rate.norm:          184054.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 196614.270 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 10819.800 ops/s
[info]                  ·gc.alloc.rate:               1277.794 MB/sec
[info]                  ·gc.alloc.rate.norm:          185861.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 190200.951 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala":
[info]   10752.224 ±(99.9%) 676.341 ops/s [Average]
[info]   (min, avg, max) = (10451.104, 10752.224, 10906.998), stdev = 175.644
[info]   CI (99.9%): [10075.883, 11428.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1257.969 ±(99.9%) 89.642 MB/sec [Average]
[info]   (min, avg, max) = (1222.300, 1257.969, 1277.794), stdev = 23.280
[info]   CI (99.9%): [1168.327, 1347.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   184092.900 ±(99.9%) 5052.276 B/op [Average]
[info]   (min, avg, max) = (182196.575, 184092.900, 185861.099), stdev = 1312.060
[info]   CI (99.9%): [179040.624, 189145.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1245.778 ±(99.9%) 554.427 MB/sec [Average]
[info]   (min, avg, max) = (988.298, 1245.778, 1315.061), stdev = 143.983
[info]   CI (99.9%): [691.352, 1800.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   182363.461 ±(99.9%) 82479.697 B/op [Average]
[info]   (min, avg, max) = (144386.092, 182363.461, 196614.270), stdev = 21419.715
[info]   CI (99.9%): [99883.764, 264843.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.893 ±(99.9%) 5.589 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.893, 3.339), stdev = 1.452
[info]   CI (99.9%): [≈ 0, 6.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   129.998 ±(99.9%) 816.270 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 129.998, 487.785), stdev = 211.983
[info]   CI (99.9%): [≈ 0, 946.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 14.000), stdev = 3.715
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.41% complete, ETA 01:00:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 104574.442 ops/s
[info] # Warmup Iteration   2: 260011.344 ops/s
[info] # Warmup Iteration   3: 268531.297 ops/s
[info] Iteration   1: 266027.103 ops/s
[info]                  ·gc.alloc.rate:                   1788.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              10583.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9816.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.956 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.488 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 275813.305 ops/s
[info]                  ·gc.alloc.rate:                   1852.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              10569.675 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9426.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.594 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 273263.118 ops/s
[info]                  ·gc.alloc.rate:                   1855.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              10689.397 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11448.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.360 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 275731.956 ops/s
[info]                  ·gc.alloc.rate:                   1859.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              10616.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1666.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9509.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.069 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 269555.094 ops/s
[info]                  ·gc.alloc.rate:               1820.199 MB/sec
[info]                  ·gc.alloc.rate.norm:          10627.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1674.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9778.401 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala":
[info]   272078.115 ±(99.9%) 16301.329 ops/s [Average]
[info]   (min, avg, max) = (266027.103, 272078.115, 275813.305), stdev = 4233.403
[info]   CI (99.9%): [255776.786, 288379.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1835.533 ±(99.9%) 117.514 MB/sec [Average]
[info]   (min, avg, max) = (1788.827, 1835.533, 1859.955), stdev = 30.518
[info]   CI (99.9%): [1718.020, 1953.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10617.159 ±(99.9%) 179.966 B/op [Average]
[info]   (min, avg, max) = (10569.675, 10617.159, 10689.397), stdev = 46.737
[info]   CI (99.9%): [10437.193, 10797.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1728.063 ±(99.9%) 559.720 MB/sec [Average]
[info]   (min, avg, max) = (1652.435, 1728.063, 1987.665), stdev = 145.357
[info]   CI (99.9%): [1168.344, 2287.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9996.032 ±(99.9%) 3192.358 B/op [Average]
[info]   (min, avg, max) = (9426.701, 9996.032, 11448.358), stdev = 829.045
[info]   CI (99.9%): [6803.674, 13188.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.662 ±(99.9%) 4.945 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.662, 2.956), stdev = 1.284
[info]   CI (99.9%): [≈ 0, 5.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.902 ±(99.9%) 29.283 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.902, 17.488), stdev = 7.605
[info]   CI (99.9%): [≈ 0, 33.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 10.000), stdev = 1.643
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 33.65% complete, ETA 00:59:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 933.407 ops/s
[info] # Warmup Iteration   2: 6587.562 ops/s
[info] # Warmup Iteration   3: 7953.337 ops/s
[info] Iteration   1: 7889.764 ops/s
[info]                  ·gc.alloc.rate:                   1418.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              282929.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262409.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.608 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 7899.995 ops/s
[info]                  ·gc.alloc.rate:                   1426.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              284144.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     327497.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.309 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 858.387 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 8000.871 ops/s
[info]                  ·gc.alloc.rate:                   1434.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              282170.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     256542.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.134 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 8291.925 ops/s
[info]                  ·gc.alloc.rate:               1498.851 MB/sec
[info]                  ·gc.alloc.rate.norm:          284419.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 247794.666 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 8338.684 ops/s
[info]                  ·gc.alloc.rate:               1520.830 MB/sec
[info]                  ·gc.alloc.rate.norm:          286940.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1641.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 309732.251 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson":
[info]   8084.248 ±(99.9%) 831.668 ops/s [Average]
[info]   (min, avg, max) = (7889.764, 8084.248, 8338.684), stdev = 215.982
[info]   CI (99.9%): [7252.579, 8915.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1459.795 ±(99.9%) 179.778 MB/sec [Average]
[info]   (min, avg, max) = (1418.435, 1459.795, 1520.830), stdev = 46.688
[info]   CI (99.9%): [1280.018, 1639.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   284121.186 ±(99.9%) 7011.722 B/op [Average]
[info]   (min, avg, max) = (282170.777, 284121.186, 286940.820), stdev = 1820.922
[info]   CI (99.9%): [277109.464, 291132.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1442.246 ±(99.9%) 705.217 MB/sec [Average]
[info]   (min, avg, max) = (1304.205, 1442.246, 1643.992), stdev = 183.143
[info]   CI (99.9%): [737.029, 2147.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   280795.392 ±(99.9%) 136598.880 B/op [Average]
[info]   (min, avg, max) = (247794.666, 280795.392, 327497.541), stdev = 35474.295
[info]   CI (99.9%): [144196.512, 417394.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.928 ±(99.9%) 7.288 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.928, 4.309), stdev = 1.893
[info]   CI (99.9%): [≈ 0, 8.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   184.826 ±(99.9%) 1451.948 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 184.826, 858.387), stdev = 377.066
[info]   CI (99.9%): [≈ 0, 1636.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.400, 16.000), stdev = 4.827
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 33.88% complete, ETA 00:59:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7941.024 ops/s
[info] # Warmup Iteration   2: 23879.847 ops/s
[info] # Warmup Iteration   3: 25250.319 ops/s
[info] Iteration   1: 25553.141 ops/s
[info]                  ·gc.alloc.rate:                   1346.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              82953.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81480.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.564 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 25852.620 ops/s
[info]                  ·gc.alloc.rate:                   1367.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              83236.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80538.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.498 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 212.903 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 26303.054 ops/s
[info]                  ·gc.alloc.rate:                   1396.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              83549.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78679.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.420 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 26412.851 ops/s
[info]                  ·gc.alloc.rate:                   1407.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              83855.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97879.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.240 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 26071.219 ops/s
[info]                  ·gc.alloc.rate:               1384.373 MB/sec
[info]                  ·gc.alloc.rate.norm:          83573.671 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1318.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79623.412 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce":
[info]   26038.577 ±(99.9%) 1335.739 ops/s [Average]
[info]   (min, avg, max) = (25553.141, 26038.577, 26412.851), stdev = 346.887
[info]   CI (99.9%): [24702.838, 27374.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1380.617 ±(99.9%) 92.443 MB/sec [Average]
[info]   (min, avg, max) = (1346.866, 1380.617, 1407.391), stdev = 24.007
[info]   CI (99.9%): [1288.173, 1473.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   83433.763 ±(99.9%) 1334.605 B/op [Average]
[info]   (min, avg, max) = (82953.283, 83433.763, 83855.571), stdev = 346.593
[info]   CI (99.9%): [82099.158, 84768.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1384.666 ±(99.9%) 555.708 MB/sec [Average]
[info]   (min, avg, max) = (1315.462, 1384.666, 1642.763), stdev = 144.316
[info]   CI (99.9%): [828.958, 1940.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   83640.064 ±(99.9%) 30913.000 B/op [Average]
[info]   (min, avg, max) = (78679.072, 83640.064, 97879.561), stdev = 8028.008
[info]   CI (99.9%): [52727.063, 114553.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.787 ±(99.9%) 5.865 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.787, 3.498), stdev = 1.523
[info]   CI (99.9%): [≈ 0, 6.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   47.825 ±(99.9%) 357.104 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 47.825, 212.903), stdev = 92.739
[info]   CI (99.9%): [≈ 0, 404.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 13.000), stdev = 3.194
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.12% complete, ETA 00:59:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7425.143 ops/s
[info] # Warmup Iteration   2: 30249.184 ops/s
[info] # Warmup Iteration   3: 33199.138 ops/s
[info] Iteration   1: 32645.901 ops/s
[info]                  ·gc.alloc.rate:                   1359.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              65520.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63440.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.793 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 32551.550 ops/s
[info]                  ·gc.alloc.rate:                   1361.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              65816.119 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63688.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 190.325 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 32003.472 ops/s
[info]                  ·gc.alloc.rate:               1339.088 MB/sec
[info]                  ·gc.alloc.rate.norm:          65841.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 64403.774 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 33573.907 ops/s
[info]                  ·gc.alloc.rate:               1409.429 MB/sec
[info]                  ·gc.alloc.rate.norm:          66060.175 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61361.322 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 32753.829 ops/s
[info]                  ·gc.alloc.rate:                   1376.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              66137.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63185.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.000 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala":
[info]   32705.732 ±(99.9%) 2175.325 ops/s [Average]
[info]   (min, avg, max) = (32003.472, 32705.732, 33573.907), stdev = 564.925
[info]   CI (99.9%): [30530.407, 34881.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1369.072 ±(99.9%) 100.793 MB/sec [Average]
[info]   (min, avg, max) = (1339.088, 1369.072, 1409.429), stdev = 26.176
[info]   CI (99.9%): [1268.279, 1469.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   65874.983 ±(99.9%) 930.469 B/op [Average]
[info]   (min, avg, max) = (65520.143, 65874.983, 66137.188), stdev = 241.640
[info]   CI (99.9%): [64944.514, 66805.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1313.458 ±(99.9%) 14.262 MB/sec [Average]
[info]   (min, avg, max) = (1309.177, 1313.458, 1317.331), stdev = 3.704
[info]   CI (99.9%): [1299.196, 1327.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   63215.838 ±(99.9%) 4358.610 B/op [Average]
[info]   (min, avg, max) = (61361.322, 63215.838, 64403.774), stdev = 1131.917
[info]   CI (99.9%): [58857.228, 67574.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.803 ±(99.9%) 6.746 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.803, 3.937), stdev = 1.752
[info]   CI (99.9%): [≈ 0, 7.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   38.824 ±(99.9%) 326.148 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 38.824, 190.325), stdev = 84.700
[info]   CI (99.9%): [≈ 0, 364.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 13.000), stdev = 3.391
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.35% complete, ETA 00:59:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 279525.167 ops/s
[info] # Warmup Iteration   2: 627733.427 ops/s
[info] # Warmup Iteration   3: 624006.307 ops/s
[info] Iteration   1: 632232.373 ops/s
[info]                  ·gc.alloc.rate:                   1163.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              2896.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2474.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 632284.867 ops/s
[info]                  ·gc.alloc.rate:                   1180.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              2936.863 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3304.589 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.860 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.115 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 622999.888 ops/s
[info]                  ·gc.alloc.rate:                   1155.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              2919.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2502.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.157 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 622939.800 ops/s
[info]                  ·gc.alloc.rate:               1149.888 MB/sec
[info]                  ·gc.alloc.rate.norm:          2905.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2499.363 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 625909.867 ops/s
[info]                  ·gc.alloc.rate:               1181.787 MB/sec
[info]                  ·gc.alloc.rate.norm:          2970.791 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3318.215 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala":
[info]   627273.359 ±(99.9%) 18123.450 ops/s [Average]
[info]   (min, avg, max) = (622939.800, 627273.359, 632284.867), stdev = 4706.602
[info]   CI (99.9%): [609149.909, 645396.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1166.248 ±(99.9%) 55.379 MB/sec [Average]
[info]   (min, avg, max) = (1149.888, 1166.248, 1181.787), stdev = 14.382
[info]   CI (99.9%): [1110.869, 1221.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2925.693 ±(99.9%) 113.620 B/op [Average]
[info]   (min, avg, max) = (2896.392, 2925.693, 2970.791), stdev = 29.507
[info]   CI (99.9%): [2812.073, 3039.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1124.398 ±(99.9%) 701.942 MB/sec [Average]
[info]   (min, avg, max) = (989.299, 1124.398, 1328.118), stdev = 182.292
[info]   CI (99.9%): [422.455, 1826.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2819.755 ±(99.9%) 1728.825 B/op [Average]
[info]   (min, avg, max) = (2474.156, 2819.755, 3318.215), stdev = 448.970
[info]   CI (99.9%): [1090.929, 4548.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.668 ±(99.9%) 4.778 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.668, 2.860), stdev = 1.241
[info]   CI (99.9%): [≈ 0, 5.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.665 ±(99.9%) 11.886 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.665, 7.115), stdev = 3.087
[info]   CI (99.9%): [≈ 0, 13.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 10.000), stdev = 2.510
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 34.59% complete, ETA 00:59:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 319284.101 ops/s
[info] # Warmup Iteration   2: 751222.159 ops/s
[info] # Warmup Iteration   3: 767682.913 ops/s
[info] Iteration   1: 769177.435 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 768612.011 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 770372.110 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 770996.017 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 772034.685 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   770238.452 ±(99.9%) 5304.004 ops/s [Average]
[info]   (min, avg, max) = (768612.011, 770238.452, 772034.685), stdev = 1377.433
[info]   CI (99.9%): [764934.447, 775542.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 34.82% complete, ETA 00:58:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6708.426 ops/s
[info] # Warmup Iteration   2: 22242.712 ops/s
[info] # Warmup Iteration   3: 27494.623 ops/s
[info] Iteration   1: 27312.588 ops/s
[info]                  ·gc.alloc.rate:                   1244.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              71736.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75923.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.399 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 27489.896 ops/s
[info]                  ·gc.alloc.rate:                   1260.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              72138.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75552.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 203.802 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 27052.269 ops/s
[info]                  ·gc.alloc.rate:                   1230.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              71571.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57240.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.332 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 27966.314 ops/s
[info]                  ·gc.alloc.rate:               1265.799 MB/sec
[info]                  ·gc.alloc.rate.norm:          71204.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1308.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 73623.740 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 27607.665 ops/s
[info]                  ·gc.alloc.rate:               1270.469 MB/sec
[info]                  ·gc.alloc.rate.norm:          72403.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 74692.149 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson":
[info]   27485.746 ±(99.9%) 1311.077 ops/s [Average]
[info]   (min, avg, max) = (27052.269, 27485.746, 27966.314), stdev = 340.482
[info]   CI (99.9%): [26174.670, 28796.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1254.285 ±(99.9%) 63.681 MB/sec [Average]
[info]   (min, avg, max) = (1230.233, 1254.285, 1270.469), stdev = 16.538
[info]   CI (99.9%): [1190.604, 1317.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   71810.775 ±(99.9%) 1815.603 B/op [Average]
[info]   (min, avg, max) = (71204.787, 71810.775, 72403.995), stdev = 471.506
[info]   CI (99.9%): [69995.172, 73626.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1248.109 ±(99.9%) 569.002 MB/sec [Average]
[info]   (min, avg, max) = (983.900, 1248.109, 1319.654), stdev = 147.768
[info]   CI (99.9%): [679.108, 1817.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   71406.363 ±(99.9%) 30683.857 B/op [Average]
[info]   (min, avg, max) = (57240.150, 71406.363, 75923.689), stdev = 7968.500
[info]   CI (99.9%): [40722.506, 102090.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.845 ±(99.9%) 5.932 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.845, 3.560), stdev = 1.540
[info]   CI (99.9%): [≈ 0, 6.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   48.507 ±(99.9%) 339.515 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.507, 203.802), stdev = 88.171
[info]   CI (99.9%): [≈ 0, 388.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 13.000), stdev = 3.782
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 35.06% complete, ETA 00:58:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3638.045 ops/s
[info] # Warmup Iteration   2: 26971.559 ops/s
[info] # Warmup Iteration   3: 31931.754 ops/s
[info] Iteration   1: 31956.708 ops/s
[info]                  ·gc.alloc.rate:                   1691.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              83306.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81508.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.622 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 178.388 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 31549.838 ops/s
[info]                  ·gc.alloc.rate:                   1695.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              84548.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82011.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.577 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 32012.403 ops/s
[info]                  ·gc.alloc.rate:                   1701.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              83668.934 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80697.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.070 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 32435.626 ops/s
[info]                  ·gc.alloc.rate:                   1733.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              84097.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80081.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.030 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 32002.307 ops/s
[info]                  ·gc.alloc.rate:                   1711.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              84168.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81721.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.048 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce":
[info]   31991.376 ±(99.9%) 1208.632 ops/s [Average]
[info]   (min, avg, max) = (31549.838, 31991.376, 32435.626), stdev = 313.878
[info]   CI (99.9%): [30782.744, 33200.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate":
[info]   1706.803 ±(99.9%) 64.702 MB/sec [Average]
[info]   (min, avg, max) = (1691.557, 1706.803, 1733.644), stdev = 16.803
[info]   CI (99.9%): [1642.100, 1771.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   83958.171 ±(99.9%) 1847.055 B/op [Average]
[info]   (min, avg, max) = (83306.903, 83958.171, 84548.726), stdev = 479.674
[info]   CI (99.9%): [82111.116, 85805.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1650.730 ±(99.9%) 31.403 MB/sec [Average]
[info]   (min, avg, max) = (1641.401, 1650.730, 1661.786), stdev = 8.155
[info]   CI (99.9%): [1619.327, 1682.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   81204.354 ±(99.9%) 3062.550 B/op [Average]
[info]   (min, avg, max) = (80081.598, 81204.354, 82011.902), stdev = 795.335
[info]   CI (99.9%): [78141.803, 84266.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 6.047 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.820, 3.622), stdev = 1.570
[info]   CI (99.9%): [≈ 0, 6.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   40.423 ±(99.9%) 297.758 B/op [Average]
[info]   (min, avg, max) = (2.048, 40.423, 178.388), stdev = 77.327
[info]   CI (99.9%): [≈ 0, 338.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 17.000), stdev = 4.472
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.29% complete, ETA 00:58:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3080.002 ops/s
[info] # Warmup Iteration   2: 28508.627 ops/s
[info] # Warmup Iteration   3: 33372.871 ops/s
[info] Iteration   1: 33051.932 ops/s
[info]                  ·gc.alloc.rate:               1478.448 MB/sec
[info]                  ·gc.alloc.rate.norm:          70398.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62582.142 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Iteration   2: 33435.301 ops/s
[info]                  ·gc.alloc.rate:                   1491.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              70172.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77355.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 203.917 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 33992.765 ops/s
[info]                  ·gc.alloc.rate:                   1494.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              69215.478 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60450.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.928 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 34076.586 ops/s
[info]                  ·gc.alloc.rate:                   1505.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              69504.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75515.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.846 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 33928.602 ops/s
[info]                  ·gc.alloc.rate:                   1511.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              70123.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61028.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.966 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala":
[info]   33697.037 ±(99.9%) 1689.245 ops/s [Average]
[info]   (min, avg, max) = (33051.932, 33697.037, 34076.586), stdev = 438.692
[info]   CI (99.9%): [32007.792, 35386.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1496.310 ±(99.9%) 49.759 MB/sec [Average]
[info]   (min, avg, max) = (1478.448, 1496.310, 1511.911), stdev = 12.922
[info]   CI (99.9%): [1446.551, 1546.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   69882.749 ±(99.9%) 1921.189 B/op [Average]
[info]   (min, avg, max) = (69215.478, 69882.749, 70398.266), stdev = 498.927
[info]   CI (99.9%): [67961.560, 71803.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1442.966 ±(99.9%) 691.267 MB/sec [Average]
[info]   (min, avg, max) = (1305.616, 1442.966, 1643.820), stdev = 179.520
[info]   CI (99.9%): [751.698, 2134.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   67386.496 ±(99.9%) 32047.900 B/op [Average]
[info]   (min, avg, max) = (60450.878, 67386.496, 77355.252), stdev = 8322.738
[info]   CI (99.9%): [35338.595, 99434.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.896 ±(99.9%) 7.400 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.896, 4.333), stdev = 1.922
[info]   CI (99.9%): [≈ 0, 8.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   42.131 ±(99.9%) 348.300 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 42.131, 203.917), stdev = 90.452
[info]   CI (99.9%): [≈ 0, 390.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 15.000), stdev = 4.494
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.53% complete, ETA 00:58:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 259934.256 ops/s
[info] # Warmup Iteration   2: 454583.341 ops/s
[info] # Warmup Iteration   3: 456809.080 ops/s
[info] Iteration   1: 478480.542 ops/s
[info]                  ·gc.alloc.rate:               1268.056 MB/sec
[info]                  ·gc.alloc.rate.norm:          4171.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:      996.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3277.724 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 472071.873 ops/s
[info]                  ·gc.alloc.rate:                   1268.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              4228.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4433.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.884 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 475079.715 ops/s
[info]                  ·gc.alloc.rate:                   1275.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              4226.108 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4387.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.759 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 480887.049 ops/s
[info]                  ·gc.alloc.rate:               1298.257 MB/sec
[info]                  ·gc.alloc.rate.norm:          4246.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4326.644 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 474145.240 ops/s
[info]                  ·gc.alloc.rate:               1277.619 MB/sec
[info]                  ·gc.alloc.rate.norm:          4240.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:      995.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3304.410 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala":
[info]   476132.884 ±(99.9%) 13568.437 ops/s [Average]
[info]   (min, avg, max) = (472071.873, 476132.884, 480887.049), stdev = 3523.680
[info]   CI (99.9%): [462564.447, 489701.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1277.748 ±(99.9%) 47.028 MB/sec [Average]
[info]   (min, avg, max) = (1268.056, 1277.748, 1298.257), stdev = 12.213
[info]   CI (99.9%): [1230.720, 1324.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4222.506 ±(99.9%) 115.062 B/op [Average]
[info]   (min, avg, max) = (4171.183, 4222.506, 4246.042), stdev = 29.881
[info]   CI (99.9%): [4107.444, 4337.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1193.950 ±(99.9%) 696.001 MB/sec [Average]
[info]   (min, avg, max) = (995.503, 1193.950, 1330.296), stdev = 180.749
[info]   CI (99.9%): [497.949, 1889.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3945.828 ±(99.9%) 2306.443 B/op [Average]
[info]   (min, avg, max) = (3277.724, 3945.828, 4433.030), stdev = 598.976
[info]   CI (99.9%): [1639.385, 6252.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.579 ±(99.9%) 4.508 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.579, 2.666), stdev = 1.171
[info]   CI (99.9%): [≈ 0, 5.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.928 ±(99.9%) 15.025 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.928, 8.884), stdev = 3.902
[info]   CI (99.9%): [≈ 0, 16.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 8.000), stdev = 1.924
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 35.76% complete, ETA 00:58:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1252.121 ops/s
[info] # Warmup Iteration   2: 14523.518 ops/s
[info] # Warmup Iteration   3: 17903.248 ops/s
[info] Iteration   1: 17906.293 ops/s
[info]                  ·gc.alloc.rate:                   1727.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              151869.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144597.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.129 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 362.889 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 18728.468 ops/s
[info]                  ·gc.alloc.rate:                   1808.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              151940.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137096.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.521 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.735 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 18279.261 ops/s
[info]                  ·gc.alloc.rate:               1767.019 MB/sec
[info]                  ·gc.alloc.rate.norm:          152075.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1630.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 140341.600 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 18585.512 ops/s
[info]                  ·gc.alloc.rate:                   1827.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              154786.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166808.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.763 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 18799.050 ops/s
[info]                  ·gc.alloc.rate:               1830.172 MB/sec
[info]                  ·gc.alloc.rate.norm:          153190.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1657.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 138733.727 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson":
[info]   18459.717 ±(99.9%) 1417.488 ops/s [Average]
[info]   (min, avg, max) = (17906.293, 18459.717, 18799.050), stdev = 368.117
[info]   CI (99.9%): [17042.229, 19877.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1792.369 ±(99.9%) 169.613 MB/sec [Average]
[info]   (min, avg, max) = (1727.918, 1792.369, 1830.172), stdev = 44.048
[info]   CI (99.9%): [1622.756, 1961.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   152772.608 ±(99.9%) 4803.579 B/op [Average]
[info]   (min, avg, max) = (151869.836, 152772.608, 154786.764), stdev = 1247.474
[info]   CI (99.9%): [147969.028, 157576.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1707.063 ±(99.9%) 567.359 MB/sec [Average]
[info]   (min, avg, max) = (1630.678, 1707.063, 1969.916), stdev = 147.341
[info]   CI (99.9%): [1139.704, 2274.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   145515.754 ±(99.9%) 47076.953 B/op [Average]
[info]   (min, avg, max) = (137096.932, 145515.754, 166808.652), stdev = 12225.735
[info]   CI (99.9%): [98438.801, 192592.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.934 ±(99.9%) 6.930 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.934, 4.129), stdev = 1.800
[info]   CI (99.9%): [≈ 0, 7.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   81.677 ±(99.9%) 609.596 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 81.677, 362.889), stdev = 158.310
[info]   CI (99.9%): [≈ 0, 691.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 17.000), stdev = 4.494
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 36.00% complete, ETA 00:57:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14378.791 ops/s
[info] # Warmup Iteration   2: 53419.950 ops/s
[info] # Warmup Iteration   3: 54085.436 ops/s
[info] Iteration   1: 56862.127 ops/s
[info]                  ·gc.alloc.rate:                   1735.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              48012.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45780.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 103.135 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 54494.687 ops/s
[info]                  ·gc.alloc.rate:                   1668.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              48192.739 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47463.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.006 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 55961.235 ops/s
[info]                  ·gc.alloc.rate:                   1712.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              48171.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46256.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.171 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 56564.322 ops/s
[info]                  ·gc.alloc.rate:               1750.187 MB/sec
[info]                  ·gc.alloc.rate.norm:          48690.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1653.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46004.483 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 57052.077 ops/s
[info]                  ·gc.alloc.rate:                   1764.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              48688.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45950.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.574 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce":
[info]   56186.890 ±(99.9%) 3974.482 ops/s [Average]
[info]   (min, avg, max) = (54494.687, 56186.890, 57052.077), stdev = 1032.160
[info]   CI (99.9%): [52212.407, 60161.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1726.351 ±(99.9%) 144.613 MB/sec [Average]
[info]   (min, avg, max) = (1668.714, 1726.351, 1764.961), stdev = 37.556
[info]   CI (99.9%): [1581.738, 1870.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   48351.099 ±(99.9%) 1219.215 B/op [Average]
[info]   (min, avg, max) = (48012.562, 48351.099, 48690.489), stdev = 316.626
[info]   CI (99.9%): [47131.884, 49570.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1652.386 ±(99.9%) 34.541 MB/sec [Average]
[info]   (min, avg, max) = (1643.452, 1652.386, 1665.699), stdev = 8.970
[info]   CI (99.9%): [1617.845, 1686.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   46290.932 ±(99.9%) 2607.545 B/op [Average]
[info]   (min, avg, max) = (45780.247, 46290.932, 47463.157), stdev = 677.171
[info]   CI (99.9%): [43683.387, 48898.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.779 ±(99.9%) 6.348 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.779, 3.727), stdev = 1.649
[info]   CI (99.9%): [≈ 0, 7.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   21.577 ±(99.9%) 175.612 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21.577, 103.135), stdev = 45.606
[info]   CI (99.9%): [≈ 0, 197.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 13.000), stdev = 2.793
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.24% complete, ETA 00:57:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33584.071 ops/s
[info] # Warmup Iteration   2: 146272.579 ops/s
[info] # Warmup Iteration   3: 154857.401 ops/s
[info] Iteration   1: 155949.610 ops/s
[info]                  ·gc.alloc.rate:                   1873.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              18911.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19940.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.259 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 157915.162 ops/s
[info]                  ·gc.alloc.rate:                   1923.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              19168.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19585.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 159575.436 ops/s
[info]                  ·gc.alloc.rate:               1935.081 MB/sec
[info]                  ·gc.alloc.rate.norm:          19078.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1645.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16218.615 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 151479.296 ops/s
[info]                  ·gc.alloc.rate:                   1855.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              19276.998 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1989.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20666.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 157793.520 ops/s
[info]                  ·gc.alloc.rate:               1916.326 MB/sec
[info]                  ·gc.alloc.rate.norm:          19113.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1670.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16660.358 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala":
[info]   156542.605 ±(99.9%) 11967.313 ops/s [Average]
[info]   (min, avg, max) = (151479.296, 156542.605, 159575.436), stdev = 3107.873
[info]   CI (99.9%): [144575.292, 168509.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1900.791 ±(99.9%) 132.319 MB/sec [Average]
[info]   (min, avg, max) = (1855.310, 1900.791, 1935.081), stdev = 34.363
[info]   CI (99.9%): [1768.472, 2033.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   19109.673 ±(99.9%) 516.019 B/op [Average]
[info]   (min, avg, max) = (18911.147, 19109.673, 19276.998), stdev = 134.008
[info]   CI (99.9%): [18593.654, 19625.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1849.099 ±(99.9%) 674.480 MB/sec [Average]
[info]   (min, avg, max) = (1645.016, 1849.099, 1989.024), stdev = 175.160
[info]   CI (99.9%): [1174.619, 2523.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   18614.230 ±(99.9%) 7813.463 B/op [Average]
[info]   (min, avg, max) = (16218.615, 18614.230, 20666.301), stdev = 2029.132
[info]   CI (99.9%): [10800.766, 26427.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.767 ±(99.9%) 6.510 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.767, 3.791), stdev = 1.691
[info]   CI (99.9%): [≈ 0, 7.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.737 ±(99.9%) 65.703 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.737, 38.259), stdev = 17.063
[info]   CI (99.9%): [≈ 0, 73.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 13.000), stdev = 2.702
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.47% complete, ETA 00:57:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 591077.124 ops/s
[info] # Warmup Iteration   2: 1120797.880 ops/s
[info] # Warmup Iteration   3: 1138802.080 ops/s
[info] Iteration   1: 1180531.114 ops/s
[info]                  ·gc.alloc.rate:                   1300.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              1732.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1325.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1176622.932 ops/s
[info]                  ·gc.alloc.rate:                   1302.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              1741.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1774.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.207 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1130157.918 ops/s
[info]                  ·gc.alloc.rate:                   1271.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              1770.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1837.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.377 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1177493.597 ops/s
[info]                  ·gc.alloc.rate:               1291.956 MB/sec
[info]                  ·gc.alloc.rate.norm:          1726.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1763.431 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1180186.546 ops/s
[info]                  ·gc.alloc.rate:                   1299.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              1732.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1764.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala":
[info]   1168998.421 ±(99.9%) 83857.950 ops/s [Average]
[info]   (min, avg, max) = (1130157.918, 1168998.421, 1180531.114), stdev = 21777.643
[info]   CI (99.9%): [1085140.472, 1252856.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1293.001 ±(99.9%) 48.877 MB/sec [Average]
[info]   (min, avg, max) = (1271.408, 1293.001, 1302.491), stdev = 12.693
[info]   CI (99.9%): [1244.124, 1341.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1740.820 ±(99.9%) 67.211 B/op [Average]
[info]   (min, avg, max) = (1726.943, 1740.820, 1770.565), stdev = 17.454
[info]   CI (99.9%): [1673.609, 1808.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1256.703 ±(99.9%) 563.551 MB/sec [Average]
[info]   (min, avg, max) = (994.954, 1256.703, 1326.647), stdev = 146.352
[info]   CI (99.9%): [693.152, 1820.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1693.076 ±(99.9%) 799.263 B/op [Average]
[info]   (min, avg, max) = (1325.888, 1693.076, 1837.774), stdev = 207.566
[info]   CI (99.9%): [893.814, 2492.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.701 ±(99.9%) 5.280 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.701, 3.146), stdev = 1.371
[info]   CI (99.9%): [≈ 0, 5.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.940 ±(99.9%) 7.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.940, 4.207), stdev = 1.832
[info]   CI (99.9%): [≈ 0, 7.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 9.000), stdev = 1.643
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 36.71% complete, ETA 00:57:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 729290.600 ops/s
[info] # Warmup Iteration   2: 1344538.859 ops/s
[info] # Warmup Iteration   3: 1385968.815 ops/s
[info] Iteration   1: 1384665.136 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1384558.647 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1385126.085 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1378325.970 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1379982.162 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc":
[info]   1382531.600 ±(99.9%) 12112.587 ops/s [Average]
[info]   (min, avg, max) = (1378325.970, 1382531.600, 1385126.085), stdev = 3145.600
[info]   CI (99.9%): [1370419.012, 1394644.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 36.94% complete, ETA 00:57:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18321.358 ops/s
[info] # Warmup Iteration   2: 63190.884 ops/s
[info] # Warmup Iteration   3: 66548.077 ops/s
[info] Iteration   1: 66604.811 ops/s
[info]                  ·gc.alloc.rate:                   1679.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              39693.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39069.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.768 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89.035 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 68324.426 ops/s
[info]                  ·gc.alloc.rate:                   1727.854 MB/sec
[info]                  ·gc.alloc.rate.norm:              39799.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37824.539 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.316 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 68040.100 ops/s
[info]                  ·gc.alloc.rate:                   1733.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              40093.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37974.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.482 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 66703.490 ops/s
[info]                  ·gc.alloc.rate:               1701.722 MB/sec
[info]                  ·gc.alloc.rate.norm:          40151.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1651.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38972.661 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 65870.283 ops/s
[info]                  ·gc.alloc.rate:               1682.120 MB/sec
[info]                  ·gc.alloc.rate.norm:          40191.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1663.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 39743.386 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson":
[info]   67108.622 ±(99.9%) 3991.166 ops/s [Average]
[info]   (min, avg, max) = (65870.283, 67108.622, 68324.426), stdev = 1036.493
[info]   CI (99.9%): [63117.456, 71099.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1705.020 ±(99.9%) 96.300 MB/sec [Average]
[info]   (min, avg, max) = (1679.875, 1705.020, 1733.529), stdev = 25.009
[info]   CI (99.9%): [1608.720, 1801.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   39985.892 ±(99.9%) 862.805 B/op [Average]
[info]   (min, avg, max) = (39693.830, 39985.892, 40191.058), stdev = 224.068
[info]   CI (99.9%): [39123.087, 40848.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1650.524 ±(99.9%) 34.478 MB/sec [Average]
[info]   (min, avg, max) = (1641.914, 1650.524, 1663.383), stdev = 8.954
[info]   CI (99.9%): [1616.046, 1685.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   38716.925 ±(99.9%) 3098.808 B/op [Average]
[info]   (min, avg, max) = (37824.539, 38716.925, 39743.386), stdev = 804.751
[info]   CI (99.9%): [35618.117, 41815.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.795 ±(99.9%) 6.406 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.795, 3.768), stdev = 1.664
[info]   CI (99.9%): [≈ 0, 7.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   18.767 ±(99.9%) 151.420 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18.767, 89.035), stdev = 39.323
[info]   CI (99.9%): [≈ 0, 170.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 14.000), stdev = 3.130
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 37.18% complete, ETA 00:56:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1738.369 ops/s
[info] # Warmup Iteration   2: 13971.620 ops/s
[info] # Warmup Iteration   3: 15417.794 ops/s
[info] Iteration   1: 16059.516 ops/s
[info]                  ·gc.alloc.rate:                   1452.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              142323.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     129382.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.080 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 15409.265 ops/s
[info]                  ·gc.alloc.rate:                   1402.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              143123.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     168163.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.930 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 401.137 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 16216.263 ops/s
[info]                  ·gc.alloc.rate:               1466.553 MB/sec
[info]                  ·gc.alloc.rate.norm:          142338.155 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 127233.342 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 16108.364 ops/s
[info]                  ·gc.alloc.rate:               1466.215 MB/sec
[info]                  ·gc.alloc.rate.norm:          143248.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1312.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 128216.419 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 15854.943 ops/s
[info]                  ·gc.alloc.rate:               1461.465 MB/sec
[info]                  ·gc.alloc.rate.norm:          145070.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1318.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 130857.101 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce":
[info]   15929.670 ±(99.9%) 1228.792 ops/s [Average]
[info]   (min, avg, max) = (15409.265, 15929.670, 16216.263), stdev = 319.113
[info]   CI (99.9%): [14700.879, 17158.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1449.732 ±(99.9%) 104.912 MB/sec [Average]
[info]   (min, avg, max) = (1402.087, 1449.732, 1466.553), stdev = 27.245
[info]   CI (99.9%): [1344.820, 1554.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   143220.776 ±(99.9%) 4312.663 B/op [Average]
[info]   (min, avg, max) = (142323.611, 143220.776, 145070.981), stdev = 1119.985
[info]   CI (99.9%): [138908.113, 147533.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1381.846 ±(99.9%) 571.803 MB/sec [Average]
[info]   (min, avg, max) = (1310.924, 1381.846, 1647.390), stdev = 148.495
[info]   CI (99.9%): [810.043, 1953.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   136770.626 ±(99.9%) 67775.338 B/op [Average]
[info]   (min, avg, max) = (127233.342, 136770.626, 168163.364), stdev = 17601.040
[info]   CI (99.9%): [68995.289, 204545.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.794 ±(99.9%) 6.750 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.794, 3.930), stdev = 1.753
[info]   CI (99.9%): [≈ 0, 7.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   81.043 ±(99.9%) 689.059 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 81.043, 401.137), stdev = 178.946
[info]   CI (99.9%): [≈ 0, 770.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 14.000), stdev = 4.099
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.41% complete, ETA 00:56:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2435.098 ops/s
[info] # Warmup Iteration   2: 14059.801 ops/s
[info] # Warmup Iteration   3: 16231.528 ops/s
[info] Iteration   1: 16107.548 ops/s
[info]                  ·gc.alloc.rate:               1330.717 MB/sec
[info]                  ·gc.alloc.rate.norm:          130019.855 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 128411.672 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   2: 16142.218 ops/s
[info]                  ·gc.alloc.rate:                   1326.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              129356.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128206.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 389.899 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 16530.085 ops/s
[info]                  ·gc.alloc.rate:                   1368.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              130263.934 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124380.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.678 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 16583.007 ops/s
[info]                  ·gc.alloc.rate:               1373.460 MB/sec
[info]                  ·gc.alloc.rate.norm:          130343.482 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 123888.132 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 16392.081 ops/s
[info]                  ·gc.alloc.rate:               1370.923 MB/sec
[info]                  ·gc.alloc.rate.norm:          131620.907 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 125867.494 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala":
[info]   16350.988 ±(99.9%) 840.211 ops/s [Average]
[info]   (min, avg, max) = (16107.548, 16350.988, 16583.007), stdev = 218.200
[info]   CI (99.9%): [15510.777, 17191.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1354.011 ±(99.9%) 89.306 MB/sec [Average]
[info]   (min, avg, max) = (1326.749, 1354.011, 1373.460), stdev = 23.193
[info]   CI (99.9%): [1264.704, 1443.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   130320.837 ±(99.9%) 3172.649 B/op [Average]
[info]   (min, avg, max) = (129356.006, 130320.837, 131620.907), stdev = 823.927
[info]   CI (99.9%): [127148.188, 133493.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1310.412 ±(99.9%) 16.844 MB/sec [Average]
[info]   (min, avg, max) = (1305.439, 1310.412, 1314.956), stdev = 4.374
[info]   CI (99.9%): [1293.568, 1327.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   126150.788 ±(99.9%) 8093.288 B/op [Average]
[info]   (min, avg, max) = (123888.132, 126150.788, 128411.672), stdev = 2101.801
[info]   CI (99.9%): [118057.500, 134244.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.875 ±(99.9%) 6.754 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.875, 3.999), stdev = 1.754
[info]   CI (99.9%): [≈ 0, 7.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   85.115 ±(99.9%) 658.761 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 85.115, 389.899), stdev = 171.078
[info]   CI (99.9%): [≈ 0, 743.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 14.000), stdev = 4.087
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.65% complete, ETA 00:56:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 290886.015 ops/s
[info] # Warmup Iteration   2: 630112.837 ops/s
[info] # Warmup Iteration   3: 671324.224 ops/s
[info] Iteration   1: 675974.569 ops/s
[info]                  ·gc.alloc.rate:                   1799.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              4189.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3863.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.081 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.173 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 680073.722 ops/s
[info]                  ·gc.alloc.rate:                   1834.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              4244.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1982.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4588.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 677501.885 ops/s
[info]                  ·gc.alloc.rate:                   1810.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              4205.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3849.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 676451.240 ops/s
[info]                  ·gc.alloc.rate:                   1813.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              4219.858 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3875.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 675937.806 ops/s
[info]                  ·gc.alloc.rate:                   1825.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              4249.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1675.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3900.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala":
[info]   677187.845 ±(99.9%) 6670.659 ops/s [Average]
[info]   (min, avg, max) = (675937.806, 677187.845, 680073.722), stdev = 1732.349
[info]   CI (99.9%): [670517.185, 683858.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1816.648 ±(99.9%) 52.001 MB/sec [Average]
[info]   (min, avg, max) = (1799.561, 1816.648, 1834.301), stdev = 13.504
[info]   CI (99.9%): [1764.648, 1868.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4221.710 ±(99.9%) 98.081 B/op [Average]
[info]   (min, avg, max) = (4189.637, 4221.710, 4249.116), stdev = 25.471
[info]   CI (99.9%): [4123.629, 4319.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1728.168 ±(99.9%) 548.378 MB/sec [Average]
[info]   (min, avg, max) = (1657.210, 1728.168, 1982.596), stdev = 142.412
[info]   CI (99.9%): [1179.791, 2276.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4015.516 ±(99.9%) 1234.525 B/op [Average]
[info]   (min, avg, max) = (3849.443, 4015.516, 4588.030), stdev = 320.602
[info]   CI (99.9%): [2780.991, 5250.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.654 ±(99.9%) 5.225 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.654, 3.081), stdev = 1.357
[info]   CI (99.9%): [≈ 0, 5.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.522 ±(99.9%) 12.166 B/op [Average]
[info]   (min, avg, max) = (0.097, 1.522, 7.173), stdev = 3.160
[info]   CI (99.9%): [≈ 0, 13.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 11.000), stdev = 1.643
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 37.88% complete, ETA 00:56:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1081.442 ops/s
[info] # Warmup Iteration   2: 10264.642 ops/s
[info] # Warmup Iteration   3: 12195.533 ops/s
[info] Iteration   1: 11977.127 ops/s
[info]                  ·gc.alloc.rate:                   1632.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              214572.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     216367.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 413.019 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 12574.392 ops/s
[info]                  ·gc.alloc.rate:                   1716.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              214797.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205012.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 179.772 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 12626.849 ops/s
[info]                  ·gc.alloc.rate:                   1747.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              217786.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1957.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     243939.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.595 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 12805.153 ops/s
[info]                  ·gc.alloc.rate:                   1765.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              216994.657 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     201699.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.676 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 12816.545 ops/s
[info]                  ·gc.alloc.rate:               1768.477 MB/sec
[info]                  ·gc.alloc.rate.norm:          217141.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1654.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 203130.928 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson":
[info]   12560.013 ±(99.9%) 1320.401 ops/s [Average]
[info]   (min, avg, max) = (11977.127, 12560.013, 12816.545), stdev = 342.904
[info]   CI (99.9%): [11239.612, 13880.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1726.217 ±(99.9%) 216.018 MB/sec [Average]
[info]   (min, avg, max) = (1632.985, 1726.217, 1768.477), stdev = 56.099
[info]   CI (99.9%): [1510.199, 1942.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   216258.450 ±(99.9%) 5657.016 B/op [Average]
[info]   (min, avg, max) = (214572.417, 216258.450, 217786.123), stdev = 1469.109
[info]   CI (99.9%): [210601.435, 221915.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1707.585 ±(99.9%) 539.185 MB/sec [Average]
[info]   (min, avg, max) = (1638.069, 1707.585, 1957.822), stdev = 140.025
[info]   CI (99.9%): [1168.400, 2246.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   214030.129 ±(99.9%) 68130.183 B/op [Average]
[info]   (min, avg, max) = (201699.616, 214030.129, 243939.844), stdev = 17693.192
[info]   CI (99.9%): [145899.946, 282160.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.933 ±(99.9%) 5.307 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.933, 3.143), stdev = 1.378
[info]   CI (99.9%): [≈ 0, 6.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   120.612 ±(99.9%) 694.803 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 120.612, 413.019), stdev = 180.438
[info]   CI (99.9%): [≈ 0, 815.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.800, 19.000), stdev = 4.817
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 38.12% complete, ETA 00:55:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16865.262 ops/s
[info] # Warmup Iteration   2: 41874.451 ops/s
[info] # Warmup Iteration   3: 43942.315 ops/s
[info] Iteration   1: 44776.793 ops/s
[info]                  ·gc.alloc.rate:                   1749.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              61489.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58115.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.185 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 111.951 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 44243.876 ops/s
[info]                  ·gc.alloc.rate:                   1745.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              62096.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70201.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.772 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 45005.622 ops/s
[info]                  ·gc.alloc.rate:                   1745.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              61053.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57598.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.912 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 45116.189 ops/s
[info]                  ·gc.alloc.rate:                   1777.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              61976.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57792.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.631 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 43554.703 ops/s
[info]                  ·gc.alloc.rate:                   1718.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              62070.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1667.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60252.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.504 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce":
[info]   44539.436 ±(99.9%) 2483.118 ops/s [Average]
[info]   (min, avg, max) = (43554.703, 44539.436, 45116.189), stdev = 644.858
[info]   CI (99.9%): [42056.319, 47022.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1747.367 ±(99.9%) 80.881 MB/sec [Average]
[info]   (min, avg, max) = (1718.114, 1747.367, 1777.370), stdev = 21.004
[info]   CI (99.9%): [1666.486, 1828.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   61737.371 ±(99.9%) 1749.867 B/op [Average]
[info]   (min, avg, max) = (61053.529, 61737.371, 62096.764), stdev = 454.435
[info]   CI (99.9%): [59987.505, 63487.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1719.908 ±(99.9%) 547.263 MB/sec [Average]
[info]   (min, avg, max) = (1647.094, 1719.908, 1973.789), stdev = 142.122
[info]   CI (99.9%): [1172.645, 2267.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   60791.725 ±(99.9%) 20664.085 B/op [Average]
[info]   (min, avg, max) = (57598.066, 60791.725, 70201.275), stdev = 5366.397
[info]   CI (99.9%): [40127.640, 81455.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.783 ±(99.9%) 5.220 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.783, 3.185), stdev = 1.356
[info]   CI (99.9%): [≈ 0, 6.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   27.554 ±(99.9%) 183.428 B/op [Average]
[info]   (min, avg, max) = (1.504, 27.554, 111.951), stdev = 47.636
[info]   CI (99.9%): [≈ 0, 210.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 13.000), stdev = 2.510
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.35% complete, ETA 00:55:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11039.894 ops/s
[info] # Warmup Iteration   2: 52580.144 ops/s
[info] # Warmup Iteration   3: 55429.195 ops/s
[info] Iteration   1: 55734.558 ops/s
[info]                  ·gc.alloc.rate:                   1704.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              48145.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46498.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.289 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 56562.057 ops/s
[info]                  ·gc.alloc.rate:                   1749.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              48661.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54679.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.798 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 56515.448 ops/s
[info]                  ·gc.alloc.rate:               1747.686 MB/sec
[info]                  ·gc.alloc.rate.norm:          48671.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1638.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45625.346 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 56245.834 ops/s
[info]                  ·gc.alloc.rate:                   1740.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              48696.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46140.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.582 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 55773.349 ops/s
[info]                  ·gc.alloc.rate:                   1727.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              48738.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46890.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.587 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala":
[info]   56166.249 ±(99.9%) 1522.910 ops/s [Average]
[info]   (min, avg, max) = (55734.558, 56166.249, 56562.057), stdev = 395.495
[info]   CI (99.9%): [54643.339, 57689.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1733.978 ±(99.9%) 70.882 MB/sec [Average]
[info]   (min, avg, max) = (1704.941, 1733.978, 1749.235), stdev = 18.408
[info]   CI (99.9%): [1663.096, 1804.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   48582.648 ±(99.9%) 948.569 B/op [Average]
[info]   (min, avg, max) = (48145.201, 48582.648, 48738.351), stdev = 246.340
[info]   CI (99.9%): [47634.079, 49531.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1712.344 ±(99.9%) 546.060 MB/sec [Average]
[info]   (min, avg, max) = (1638.319, 1712.344, 1965.575), stdev = 141.810
[info]   CI (99.9%): [1166.285, 2258.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   47967.215 ±(99.9%) 14560.672 B/op [Average]
[info]   (min, avg, max) = (45625.346, 47967.215, 54679.946), stdev = 3781.360
[info]   CI (99.9%): [33406.543, 62527.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 5.620 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.804, 3.374), stdev = 1.459
[info]   CI (99.9%): [≈ 0, 6.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   22.651 ±(99.9%) 158.736 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22.651, 95.289), stdev = 41.223
[info]   CI (99.9%): [≈ 0, 181.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 15.000), stdev = 3.633
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.59% complete, ETA 00:55:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 641913.886 ops/s
[info] # Warmup Iteration   2: 1265740.543 ops/s
[info] # Warmup Iteration   3: 1350894.189 ops/s
[info] Iteration   1: 1323107.491 ops/s
[info]                  ·gc.alloc.rate:                   1236.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              1470.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1576.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1352063.568 ops/s
[info]                  ·gc.alloc.rate:                   1270.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              1478.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1543.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.172 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.691 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1357153.106 ops/s
[info]                  ·gc.alloc.rate:                   1267.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              1469.367 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1147.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.338 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1344383.797 ops/s
[info]                  ·gc.alloc.rate:               1275.384 MB/sec
[info]                  ·gc.alloc.rate.norm:          1493.071 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1316.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1541.731 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 1357727.947 ops/s
[info]                  ·gc.alloc.rate:               1288.099 MB/sec
[info]                  ·gc.alloc.rate.norm:          1492.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1321.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1531.262 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala":
[info]   1346887.182 ±(99.9%) 55181.453 ops/s [Average]
[info]   (min, avg, max) = (1323107.491, 1346887.182, 1357727.947), stdev = 14330.448
[info]   CI (99.9%): [1291705.729, 1402068.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1267.423 ±(99.9%) 73.930 MB/sec [Average]
[info]   (min, avg, max) = (1236.201, 1267.423, 1288.099), stdev = 19.199
[info]   CI (99.9%): [1193.493, 1341.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1480.772 ±(99.9%) 44.742 B/op [Average]
[info]   (min, avg, max) = (1469.367, 1480.772, 1493.071), stdev = 11.619
[info]   CI (99.9%): [1436.030, 1525.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1256.001 ±(99.9%) 572.983 MB/sec [Average]
[info]   (min, avg, max) = (989.900, 1256.001, 1326.128), stdev = 148.802
[info]   CI (99.9%): [683.018, 1828.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1468.190 ±(99.9%) 692.509 B/op [Average]
[info]   (min, avg, max) = (1147.946, 1468.190, 1576.887), stdev = 179.842
[info]   CI (99.9%): [775.682, 2160.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.697 ±(99.9%) 5.349 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.697, 3.172), stdev = 1.389
[info]   CI (99.9%): [≈ 0, 6.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.811 ±(99.9%) 6.225 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.811, 3.691), stdev = 1.617
[info]   CI (99.9%): [≈ 0, 7.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 2.915
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 38.82% complete, ETA 00:55:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 823990.882 ops/s
[info] # Warmup Iteration   2: 1567406.728 ops/s
[info] # Warmup Iteration   3: 1578123.584 ops/s
[info] Iteration   1: 1577064.730 ops/s
[info]                  ·gc.alloc.rate:      0.303 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.302 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1577563.045 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1577623.889 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1578317.062 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1578165.483 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   1577746.842 ±(99.9%) 1939.314 ops/s [Average]
[info]   (min, avg, max) = (1577064.730, 1577746.842, 1578317.062), stdev = 503.634
[info]   CI (99.9%): [1575807.528, 1579686.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.061 ±(99.9%) 0.521 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.061, 0.303), stdev = 0.135
[info]   CI (99.9%): [≈ 0, 0.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.061 ±(99.9%) 0.520 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.061, 0.302), stdev = 0.135
[info]   CI (99.9%): [≈ 0, 0.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 39.06% complete, ETA 00:55:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1085.829 ops/s
[info] # Warmup Iteration   2: 3343.999 ops/s
[info] # Warmup Iteration   3: 3480.429 ops/s
[info] Iteration   1: 3638.484 ops/s
[info]                  ·gc.alloc.rate:               524.186 MB/sec
[info]                  ·gc.alloc.rate.norm:          226707.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 141913.625 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 3673.776 ops/s
[info]                  ·gc.alloc.rate:                   496.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              212880.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     281332.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.122 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.099 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3610.790 ops/s
[info]                  ·gc.alloc.rate:                   495.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              215949.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143264.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.072 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3597.624 ops/s
[info]                  ·gc.alloc.rate:                   495.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              216818.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     287855.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.105 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 3527.474 ops/s
[info]                  ·gc.alloc.rate:               482.307 MB/sec
[info]                  ·gc.alloc.rate.norm:          215143.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 146931.378 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson":
[info]   3609.630 ±(99.9%) 209.519 ops/s [Average]
[info]   (min, avg, max) = (3527.474, 3609.630, 3673.776), stdev = 54.411
[info]   CI (99.9%): [3400.111, 3819.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   498.925 ±(99.9%) 59.043 MB/sec [Average]
[info]   (min, avg, max) = (482.307, 498.925, 524.186), stdev = 15.333
[info]   CI (99.9%): [439.882, 557.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   217499.876 ±(99.9%) 20604.659 B/op [Average]
[info]   (min, avg, max) = (212880.394, 217499.876, 226707.040), stdev = 5350.964
[info]   CI (99.9%): [196895.217, 238104.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   460.221 ±(99.9%) 693.287 MB/sec [Average]
[info]   (min, avg, max) = (328.129, 460.221, 658.143), stdev = 180.044
[info]   CI (99.9%): [≈ 0, 1153.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   200259.558 ±(99.9%) 296664.777 B/op [Average]
[info]   (min, avg, max) = (141913.625, 200259.558, 287855.818), stdev = 77042.900
[info]   CI (99.9%): [≈ 0, 496924.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.196 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.122), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   14.055 ±(99.9%) 83.741 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14.055, 52.099), stdev = 21.747
[info]   CI (99.9%): [≈ 0, 97.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 7.000), stdev = 1.643
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 39.29% complete, ETA 00:54:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32450.109 ops/s
[info] # Warmup Iteration   2: 112486.904 ops/s
[info] # Warmup Iteration   3: 115602.254 ops/s
[info] Iteration   1: 122250.507 ops/s
[info]                  ·gc.alloc.rate:                   1922.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              24755.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25552.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.168 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 121219.497 ops/s
[info]                  ·gc.alloc.rate:                   1906.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              24757.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21362.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.351 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 124219.344 ops/s
[info]                  ·gc.alloc.rate:                   1979.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              25077.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25075.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 125328.218 ops/s
[info]                  ·gc.alloc.rate:                   2004.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              25163.610 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25046.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 122117.559 ops/s
[info]                  ·gc.alloc.rate:               1942.048 MB/sec
[info]                  ·gc.alloc.rate.norm:          25028.580 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1673.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21566.311 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce":
[info]   123027.025 ±(99.9%) 6504.734 ops/s [Average]
[info]   (min, avg, max) = (121219.497, 123027.025, 125328.218), stdev = 1689.259
[info]   CI (99.9%): [116522.291, 129531.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate":
[info]   1951.196 ±(99.9%) 155.379 MB/sec [Average]
[info]   (min, avg, max) = (1906.865, 1951.196, 2004.504), stdev = 40.351
[info]   CI (99.9%): [1795.817, 2106.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   24956.590 ±(99.9%) 727.390 B/op [Average]
[info]   (min, avg, max) = (24755.347, 24956.590, 25163.610), stdev = 188.901
[info]   CI (99.9%): [24229.200, 25683.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1855.643 ±(99.9%) 691.221 MB/sec [Average]
[info]   (min, avg, max) = (1645.396, 1855.643, 1995.164), stdev = 179.508
[info]   CI (99.9%): [1164.422, 2546.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   23720.597 ±(99.9%) 7972.479 B/op [Average]
[info]   (min, avg, max) = (21362.973, 23720.597, 25552.329), stdev = 2070.428
[info]   CI (99.9%): [15748.118, 31693.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.762 ±(99.9%) 6.248 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.762, 3.664), stdev = 1.623
[info]   CI (99.9%): [≈ 0, 7.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.809 ±(99.9%) 80.444 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.809, 47.168), stdev = 20.891
[info]   CI (99.9%): [≈ 0, 90.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 12.000), stdev = 2.280
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 39.53% complete, ETA 00:54:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.712 ops/s
[info] # Warmup Iteration   2: 346057.820 ops/s
[info] # Warmup Iteration   3: 379607.067 ops/s
[info] Iteration   1: 376011.744 ops/s
[info]                  ·gc.alloc.rate:                   769.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              3222.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2721.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 374743.320 ops/s
[info]                  ·gc.alloc.rate:                   777.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              3265.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4105.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.350 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 367584.412 ops/s
[info]                  ·gc.alloc.rate:               756.556 MB/sec
[info]                  ·gc.alloc.rate.norm:          3239.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2793.750 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 376693.926 ops/s
[info]                  ·gc.alloc.rate:                   774.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              3234.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2730.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 376813.768 ops/s
[info]                  ·gc.alloc.rate:                   780.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              3260.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2729.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.721 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.717 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava":
[info]   374369.434 ±(99.9%) 14944.708 ops/s [Average]
[info]   (min, avg, max) = (367584.412, 374369.434, 376813.768), stdev = 3881.093
[info]   CI (99.9%): [359424.726, 389314.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   771.838 ±(99.9%) 36.444 MB/sec [Average]
[info]   (min, avg, max) = (756.556, 771.838, 780.814), stdev = 9.464
[info]   CI (99.9%): [735.394, 808.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   3244.536 ±(99.9%) 70.345 B/op [Average]
[info]   (min, avg, max) = (3222.163, 3244.536, 3265.727), stdev = 18.268
[info]   CI (99.9%): [3174.191, 3314.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   717.512 ±(99.9%) 560.172 MB/sec [Average]
[info]   (min, avg, max) = (650.210, 717.512, 977.734), stdev = 145.475
[info]   CI (99.9%): [157.339, 1277.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   3016.123 ±(99.9%) 2347.937 B/op [Average]
[info]   (min, avg, max) = (2721.358, 3016.123, 4105.639), stdev = 609.752
[info]   CI (99.9%): [668.186, 5364.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.967 ±(99.9%) 8.083 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.967, 4.721), stdev = 2.099
[info]   CI (99.9%): [≈ 0, 9.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   4.037 ±(99.9%) 33.756 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.037, 19.717), stdev = 8.766
[info]   CI (99.9%): [≈ 0, 37.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 10.000), stdev = 1.789
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.76% complete, ETA 00:54:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79014.316 ops/s
[info] # Warmup Iteration   2: 259236.449 ops/s
[info] # Warmup Iteration   3: 252276.255 ops/s
[info] Iteration   1: 270845.365 ops/s
[info]                  ·gc.alloc.rate:                   608.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              3538.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3793.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 272970.761 ops/s
[info]                  ·gc.alloc.rate:               610.632 MB/sec
[info]                  ·gc.alloc.rate.norm:          3520.718 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3771.538 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 272768.131 ops/s
[info]                  ·gc.alloc.rate:                   614.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              3545.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3782.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 272405.110 ops/s
[info]                  ·gc.alloc.rate:               607.998 MB/sec
[info]                  ·gc.alloc.rate.norm:          3512.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3791.017 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 274088.975 ops/s
[info]                  ·gc.alloc.rate:               607.477 MB/sec
[info]                  ·gc.alloc.rate.norm:          3488.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1885.770 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala":
[info]   272615.668 ±(99.9%) 4514.573 ops/s [Average]
[info]   (min, avg, max) = (270845.365, 272615.668, 274088.975), stdev = 1172.420
[info]   CI (99.9%): [268101.095, 277130.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   609.947 ±(99.9%) 11.130 MB/sec [Average]
[info]   (min, avg, max) = (607.477, 609.947, 614.649), stdev = 2.891
[info]   CI (99.9%): [598.816, 621.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3521.250 ±(99.9%) 87.510 B/op [Average]
[info]   (min, avg, max) = (3488.180, 3521.250, 3545.643), stdev = 22.726
[info]   CI (99.9%): [3433.740, 3608.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   589.426 ±(99.9%) 561.874 MB/sec [Average]
[info]   (min, avg, max) = (328.413, 589.426, 656.130), stdev = 145.917
[info]   CI (99.9%): [27.552, 1151.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3404.793 ±(99.9%) 3269.980 B/op [Average]
[info]   (min, avg, max) = (1885.770, 3404.793, 3793.578), stdev = 849.204
[info]   CI (99.9%): [134.812, 6674.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.048 ±(99.9%) 0.254 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.048, 0.121), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 7.000), stdev = 1.732
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.00% complete, ETA 00:54:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 297358.698 ops/s
[info] # Warmup Iteration   2: 501465.723 ops/s
[info] # Warmup Iteration   3: 490804.359 ops/s
[info] Iteration   1: 490975.771 ops/s
[info]                  ·gc.alloc.rate:                   643.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              2061.696 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2116.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 501103.553 ops/s
[info]                  ·gc.alloc.rate:               660.072 MB/sec
[info]                  ·gc.alloc.rate.norm:          2073.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2077.585 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 515199.856 ops/s
[info]                  ·gc.alloc.rate:                   666.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              2034.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2023.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 500534.497 ops/s
[info]                  ·gc.alloc.rate:               645.009 MB/sec
[info]                  ·gc.alloc.rate.norm:          2028.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2085.142 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 495344.630 ops/s
[info]                  ·gc.alloc.rate:                   638.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              2027.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2110.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.540 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala":
[info]   500631.661 ±(99.9%) 35168.279 ops/s [Average]
[info]   (min, avg, max) = (490975.771, 500631.661, 515199.856), stdev = 9133.090
[info]   CI (99.9%): [465463.383, 535799.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   650.485 ±(99.9%) 45.929 MB/sec [Average]
[info]   (min, avg, max) = (638.179, 650.485, 666.032), stdev = 11.928
[info]   CI (99.9%): [604.556, 696.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   2044.996 ±(99.9%) 80.904 B/op [Average]
[info]   (min, avg, max) = (2027.605, 2044.996, 2073.085), stdev = 21.010
[info]   CI (99.9%): [1964.093, 2125.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   662.292 ±(99.9%) 5.928 MB/sec [Average]
[info]   (min, avg, max) = (660.136, 662.292, 664.144), stdev = 1.539
[info]   CI (99.9%): [656.364, 668.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2082.561 ±(99.9%) 141.183 B/op [Average]
[info]   (min, avg, max) = (2023.775, 2082.561, 2116.200), stdev = 36.665
[info]   CI (99.9%): [1941.378, 2223.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.525 ±(99.9%) 4.338 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.525, 2.540), stdev = 1.127
[info]   CI (99.9%): [≈ 0, 4.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.666 ±(99.9%) 13.785 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.666, 8.069), stdev = 3.580
[info]   CI (99.9%): [≈ 0, 15.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 40.24% complete, ETA 00:54:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9110.355 ops/s
[info] # Warmup Iteration   2: 63045.041 ops/s
[info] # Warmup Iteration   3: 71132.375 ops/s
[info] Iteration   1: 72870.313 ops/s
[info]                  ·gc.alloc.rate:                   3068.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              66253.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2939.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63463.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.450 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 72592.669 ops/s
[info]                  ·gc.alloc.rate:                   3072.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              66599.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2976.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64506.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.451 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 73549.748 ops/s
[info]                  ·gc.alloc.rate:                   3112.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              66587.661 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3014.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64480.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.445 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 73726.982 ops/s
[info]                  ·gc.alloc.rate:                   3122.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              66610.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3034.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64732.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.444 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 72386.777 ops/s
[info]                  ·gc.alloc.rate:                   3056.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              66436.577 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2712.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58955.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.810 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson":
[info]   73025.298 ±(99.9%) 2266.903 ops/s [Average]
[info]   (min, avg, max) = (72386.777, 73025.298, 73726.982), stdev = 588.707
[info]   CI (99.9%): [70758.395, 75292.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3086.553 ±(99.9%) 111.467 MB/sec [Average]
[info]   (min, avg, max) = (3056.842, 3086.553, 3122.063), stdev = 28.948
[info]   CI (99.9%): [2975.086, 3198.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   66497.661 ±(99.9%) 591.747 B/op [Average]
[info]   (min, avg, max) = (66253.795, 66497.661, 66610.619), stdev = 153.675
[info]   CI (99.9%): [65905.914, 67089.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2935.237 ±(99.9%) 499.224 MB/sec [Average]
[info]   (min, avg, max) = (2712.645, 2935.237, 3034.020), stdev = 129.647
[info]   CI (99.9%): [2436.013, 3434.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   63227.543 ±(99.9%) 9386.935 B/op [Average]
[info]   (min, avg, max) = (58955.877, 63227.543, 64732.171), stdev = 2437.757
[info]   CI (99.9%): [53840.607, 72614.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.720 ±(99.9%) 2.347 B/op [Average]
[info]   (min, avg, max) = (0.444, 0.720, 1.810), stdev = 0.610
[info]   CI (99.9%): [≈ 0, 3.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.count":
[info]   44.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.800, 9.000), stdev = 0.447
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.800, 13.000), stdev = 1.095
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 40.47% complete, ETA 00:53:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39103.192 ops/s
[info] # Warmup Iteration   2: 131084.497 ops/s
[info] # Warmup Iteration   3: 128858.444 ops/s
[info] Iteration   1: 134785.410 ops/s
[info]                  ·gc.alloc.rate:                   1192.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              13927.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15409.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.729 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 133377.864 ops/s
[info]                  ·gc.alloc.rate:                   1172.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              13834.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11704.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.936 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.635 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 134443.668 ops/s
[info]                  ·gc.alloc.rate:                   1180.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              13824.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15439.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.311 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 135554.710 ops/s
[info]                  ·gc.alloc.rate:                   1182.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              13722.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11439.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.450 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 136489.867 ops/s
[info]                  ·gc.alloc.rate:                   1217.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              14038.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15162.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.240 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce":
[info]   134930.304 ±(99.9%) 4511.173 ops/s [Average]
[info]   (min, avg, max) = (133377.864, 134930.304, 136489.867), stdev = 1171.537
[info]   CI (99.9%): [130419.131, 139441.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1189.228 ±(99.9%) 66.820 MB/sec [Average]
[info]   (min, avg, max) = (1172.787, 1189.228, 1217.540), stdev = 17.353
[info]   CI (99.9%): [1122.408, 1256.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   13869.497 ±(99.9%) 459.516 B/op [Average]
[info]   (min, avg, max) = (13722.252, 13869.497, 14038.572), stdev = 119.335
[info]   CI (99.9%): [13409.981, 14329.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1186.256 ±(99.9%) 694.193 MB/sec [Average]
[info]   (min, avg, max) = (985.389, 1186.256, 1319.669), stdev = 180.280
[info]   CI (99.9%): [492.063, 1880.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   13831.109 ±(99.9%) 7961.263 B/op [Average]
[info]   (min, avg, max) = (11439.011, 13831.109, 15439.960), stdev = 2067.515
[info]   CI (99.9%): [5869.847, 21792.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.754 ±(99.9%) 4.790 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.754, 2.936), stdev = 1.244
[info]   CI (99.9%): [≈ 0, 5.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   8.873 ±(99.9%) 56.530 B/op [Average]
[info]   (min, avg, max) = (0.240, 8.873, 34.635), stdev = 14.681
[info]   CI (99.9%): [≈ 0, 65.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 12.000), stdev = 3.130
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 40.71% complete, ETA 00:53:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.835 ops/s
[info] # Warmup Iteration   2: 196338.293 ops/s
[info] # Warmup Iteration   3: 203791.983 ops/s
[info] Iteration   1: 208778.416 ops/s
[info]                  ·gc.alloc.rate:      163.433 MB/sec
[info]                  ·gc.alloc.rate.norm: 1232.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 208009.415 ops/s
[info]                  ·gc.alloc.rate:               169.478 MB/sec
[info]                  ·gc.alloc.rate.norm:          1282.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1935.405 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 207998.971 ops/s
[info]                  ·gc.alloc.rate:                   169.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              1280.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1935.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.205 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 208639.951 ops/s
[info]                  ·gc.alloc.rate:      163.319 MB/sec
[info]                  ·gc.alloc.rate.norm: 1232.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 207948.540 ops/s
[info]                  ·gc.alloc.rate:                   172.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              1308.577 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2460.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava":
[info]   208275.059 ±(99.9%) 1540.161 ops/s [Average]
[info]   (min, avg, max) = (207948.540, 208275.059, 208778.416), stdev = 399.975
[info]   CI (99.9%): [206734.898, 209815.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   167.692 ±(99.9%) 16.174 MB/sec [Average]
[info]   (min, avg, max) = (163.319, 167.692, 172.944), stdev = 4.200
[info]   CI (99.9%): [151.518, 183.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   1267.173 ±(99.9%) 130.695 B/op [Average]
[info]   (min, avg, max) = (1232.002, 1267.173, 1308.577), stdev = 33.941
[info]   CI (99.9%): [1136.478, 1397.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   167.351 ±(99.9%) 598.285 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 167.351, 325.167), stdev = 155.373
[info]   CI (99.9%): [≈ 0, 765.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1266.267 ±(99.9%) 4526.942 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1266.267, 2460.369), stdev = 1175.632
[info]   CI (99.9%): [≈ 0, 5793.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.047 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.027), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.063 ±(99.9%) 0.357 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.063, 0.205), stdev = 0.093
[info]   CI (99.9%): [≈ 0, 0.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 4.000), stdev = 1.871
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.94% complete, ETA 00:53:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 190826.875 ops/s
[info] # Warmup Iteration   2: 420200.128 ops/s
[info] # Warmup Iteration   3: 417628.431 ops/s
[info] Iteration   1: 421563.248 ops/s
[info]                  ·gc.alloc.rate:               431.930 MB/sec
[info]                  ·gc.alloc.rate.norm:          1611.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:      582.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2174.850 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 427630.317 ops/s
[info]                  ·gc.alloc.rate:               426.195 MB/sec
[info]                  ·gc.alloc.rate.norm:          1568.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1202.560 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 427553.375 ops/s
[info]                  ·gc.alloc.rate:                   427.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              1573.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1205.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 424618.771 ops/s
[info]                  ·gc.alloc.rate:                   439.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              1629.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2428.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 424815.517 ops/s
[info]                  ·gc.alloc.rate:               424.479 MB/sec
[info]                  ·gc.alloc.rate.norm:          1572.563 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1214.181 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala":
[info]   425236.246 ±(99.9%) 9655.420 ops/s [Average]
[info]   (min, avg, max) = (421563.248, 425236.246, 427630.317), stdev = 2507.482
[info]   CI (99.9%): [415580.826, 434891.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   429.934 ±(99.9%) 23.392 MB/sec [Average]
[info]   (min, avg, max) = (424.479, 429.934, 439.615), stdev = 6.075
[info]   CI (99.9%): [406.542, 453.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1591.174 ±(99.9%) 106.352 B/op [Average]
[info]   (min, avg, max) = (1568.596, 1591.174, 1629.318), stdev = 27.619
[info]   CI (99.9%): [1484.822, 1697.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   443.976 ±(99.9%) 623.058 MB/sec [Average]
[info]   (min, avg, max) = (326.741, 443.976, 655.196), stdev = 161.806
[info]   CI (99.9%): [≈ 0, 1067.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1645.031 ±(99.9%) 2333.575 B/op [Average]
[info]   (min, avg, max) = (1202.560, 1645.031, 2428.311), stdev = 606.022
[info]   CI (99.9%): [≈ 0, 3978.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.264 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.153), stdev = 0.069
[info]   CI (99.9%): [≈ 0, 0.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 7.000), stdev = 1.949
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.18% complete, ETA 00:53:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 274215.932 ops/s
[info] # Warmup Iteration   2: 439280.555 ops/s
[info] # Warmup Iteration   3: 437271.508 ops/s
[info] Iteration   1: 469426.698 ops/s
[info]                  ·gc.alloc.rate:                   375.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              1257.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     857.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 466398.196 ops/s
[info]                  ·gc.alloc.rate:               375.560 MB/sec
[info]                  ·gc.alloc.rate.norm:          1267.260 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1112.747 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 458195.686 ops/s
[info]                  ·gc.alloc.rate:               368.068 MB/sec
[info]                  ·gc.alloc.rate.norm:          1263.925 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1132.688 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 458467.916 ops/s
[info]                  ·gc.alloc.rate:                   369.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              1268.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1134.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 454449.957 ops/s
[info]                  ·gc.alloc.rate:               379.092 MB/sec
[info]                  ·gc.alloc.rate.norm:          1312.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2289.810 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala":
[info]   461387.690 ±(99.9%) 24091.689 ops/s [Average]
[info]   (min, avg, max) = (454449.957, 461387.690, 469426.698), stdev = 6256.535
[info]   CI (99.9%): [437296.001, 485479.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   373.482 ±(99.9%) 17.483 MB/sec [Average]
[info]   (min, avg, max) = (368.068, 373.482, 379.092), stdev = 4.540
[info]   CI (99.9%): [355.999, 390.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1274.016 ±(99.9%) 85.206 B/op [Average]
[info]   (min, avg, max) = (1257.332, 1274.016, 1312.811), stdev = 22.128
[info]   CI (99.9%): [1188.810, 1359.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   381.424 ±(99.9%) 614.846 MB/sec [Average]
[info]   (min, avg, max) = (255.826, 381.424, 661.214), stdev = 159.673
[info]   CI (99.9%): [≈ 0, 996.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1305.434 ±(99.9%) 2166.129 B/op [Average]
[info]   (min, avg, max) = (857.616, 1305.434, 2289.810), stdev = 562.537
[info]   CI (99.9%): [≈ 0, 3471.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.149 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.071), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 41.41% complete, ETA 00:52:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 282625.387 ops/s
[info] # Warmup Iteration   2: 500313.058 ops/s
[info] # Warmup Iteration   3: 497345.497 ops/s
[info] Iteration   1: 501200.105 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 501345.590 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 501372.009 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 501128.400 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 501310.034 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc":
[info]   501271.228 ±(99.9%) 397.619 ops/s [Average]
[info]   (min, avg, max) = (501128.400, 501271.228, 501372.009), stdev = 103.260
[info]   CI (99.9%): [500873.609, 501668.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻³, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 41.65% complete, ETA 00:52:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5853.710 ops/s
[info] # Warmup Iteration   2: 25180.867 ops/s
[info] # Warmup Iteration   3: 28439.320 ops/s
[info] Iteration   1: 28321.987 ops/s
[info]                  ·gc.alloc.rate:                   1543.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              85761.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91693.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.873 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 159.641 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 28231.946 ops/s
[info]                  ·gc.alloc.rate:                   1545.754 MB/sec
[info]                  ·gc.alloc.rate.norm:              86131.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73383.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 67.312 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 28461.874 ops/s
[info]                  ·gc.alloc.rate:                   1570.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              86818.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90506.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.151 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 29155.061 ops/s
[info]                  ·gc.alloc.rate:               1613.895 MB/sec
[info]                  ·gc.alloc.rate.norm:          87123.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1642.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 88660.932 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 29344.311 ops/s
[info]                  ·gc.alloc.rate:               1611.291 MB/sec
[info]                  ·gc.alloc.rate.norm:          86418.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 70919.737 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson":
[info]   28703.036 ±(99.9%) 1964.247 ops/s [Average]
[info]   (min, avg, max) = (28231.946, 28703.036, 29344.311), stdev = 510.109
[info]   CI (99.9%): [26738.788, 30667.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1576.866 ±(99.9%) 131.952 MB/sec [Average]
[info]   (min, avg, max) = (1543.294, 1576.866, 1613.895), stdev = 34.268
[info]   CI (99.9%): [1444.914, 1708.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   86450.519 ±(99.9%) 2078.269 B/op [Average]
[info]   (min, avg, max) = (85761.235, 86450.519, 87123.048), stdev = 539.720
[info]   CI (99.9%): [84372.250, 88528.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1513.704 ±(99.9%) 682.428 MB/sec [Average]
[info]   (min, avg, max) = (1316.968, 1513.704, 1650.055), stdev = 177.224
[info]   CI (99.9%): [831.276, 2196.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   83032.897 ±(99.9%) 38620.690 B/op [Average]
[info]   (min, avg, max) = (70919.737, 83032.897, 91693.947), stdev = 10029.671
[info]   CI (99.9%): [44412.207, 121653.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 4.851 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.820, 2.873), stdev = 1.260
[info]   CI (99.9%): [≈ 0, 5.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   45.621 ±(99.9%) 269.621 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 45.621, 159.641), stdev = 70.020
[info]   CI (99.9%): [≈ 0, 315.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 17.000), stdev = 4.827
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 41.88% complete, ETA 00:52:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1130.936 ops/s
[info] # Warmup Iteration   2: 6834.515 ops/s
[info] # Warmup Iteration   3: 8144.108 ops/s
[info] Iteration   1: 7943.411 ops/s
[info]                  ·gc.alloc.rate:                   1137.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              225365.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     259471.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 7863.296 ops/s
[info]                  ·gc.alloc.rate:                   1110.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              222286.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196716.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.333 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 8078.490 ops/s
[info]                  ·gc.alloc.rate:                   1150.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              223911.265 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255794.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 8156.650 ops/s
[info]                  ·gc.alloc.rate:                   1153.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              222575.867 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     191170.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.146 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 8219.911 ops/s
[info]                  ·gc.alloc.rate:               1162.430 MB/sec
[info]                  ·gc.alloc.rate.norm:          222547.889 B/op
[info]                  ·gc.churn.PS_Eden_Space:      995.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 190534.243 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce":
[info]   8052.352 ±(99.9%) 568.695 ops/s [Average]
[info]   (min, avg, max) = (7863.296, 8052.352, 8219.911), stdev = 147.688
[info]   CI (99.9%): [7483.657, 8621.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1142.948 ±(99.9%) 77.427 MB/sec [Average]
[info]   (min, avg, max) = (1110.644, 1142.948, 1162.430), stdev = 20.108
[info]   CI (99.9%): [1065.521, 1220.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   223337.269 ±(99.9%) 5002.035 B/op [Average]
[info]   (min, avg, max) = (222286.125, 223337.269, 225365.201), stdev = 1299.013
[info]   CI (99.9%): [218335.234, 228339.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1118.593 ±(99.9%) 680.145 MB/sec [Average]
[info]   (min, avg, max) = (982.885, 1118.593, 1314.067), stdev = 176.632
[info]   CI (99.9%): [438.448, 1798.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   218737.314 ±(99.9%) 137128.216 B/op [Average]
[info]   (min, avg, max) = (190534.243, 218737.314, 259471.418), stdev = 35611.762
[info]   CI (99.9%): [81609.098, 355865.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.292 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.187), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   10.530 ±(99.9%) 56.294 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.530, 36.146), stdev = 14.619
[info]   CI (99.9%): [≈ 0, 66.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.12% complete, ETA 00:52:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1156.458 ops/s
[info] # Warmup Iteration   2: 6710.880 ops/s
[info] # Warmup Iteration   3: 7957.998 ops/s
[info] Iteration   1: 7980.103 ops/s
[info]                  ·gc.alloc.rate:                   1046.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              206436.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     193570.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.210 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 7972.386 ops/s
[info]                  ·gc.alloc.rate:                   1048.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              206950.326 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     194224.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.109 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 8024.075 ops/s
[info]                  ·gc.alloc.rate:                   1043.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              204624.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     193358.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 780.232 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 8072.418 ops/s
[info]                  ·gc.alloc.rate:                   1063.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              207149.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     254105.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97.234 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 8085.624 ops/s
[info]                  ·gc.alloc.rate:               1055.037 MB/sec
[info]                  ·gc.alloc.rate.norm:          205351.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 190214.046 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala":
[info]   8026.921 ±(99.9%) 199.065 ops/s [Average]
[info]   (min, avg, max) = (7972.386, 8026.921, 8085.624), stdev = 51.696
[info]   CI (99.9%): [7827.856, 8225.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1051.395 ±(99.9%) 30.456 MB/sec [Average]
[info]   (min, avg, max) = (1043.251, 1051.395, 1063.291), stdev = 7.909
[info]   CI (99.9%): [1020.939, 1081.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   206102.506 ±(99.9%) 4162.632 B/op [Average]
[info]   (min, avg, max) = (204624.484, 206102.506, 207149.181), stdev = 1081.022
[info]   CI (99.9%): [201939.874, 210265.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1046.613 ±(99.9%) 554.870 MB/sec [Average]
[info]   (min, avg, max) = (977.264, 1046.613, 1304.319), stdev = 144.098
[info]   CI (99.9%): [491.744, 1601.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   205094.569 ±(99.9%) 105669.470 B/op [Average]
[info]   (min, avg, max) = (190214.046, 205094.569, 254105.955), stdev = 27442.026
[info]   CI (99.9%): [99425.099, 310764.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.908 ±(99.9%) 6.657 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.908, 3.978), stdev = 1.729
[info]   CI (99.9%): [≈ 0, 7.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   177.957 ±(99.9%) 1305.756 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 177.957, 780.232), stdev = 339.101
[info]   CI (99.9%): [≈ 0, 1483.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 11.000), stdev = 2.702
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.35% complete, ETA 00:52:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 75804.334 ops/s
[info] # Warmup Iteration   2: 182495.721 ops/s
[info] # Warmup Iteration   3: 186969.113 ops/s
[info] Iteration   1: 187693.286 ops/s
[info]                  ·gc.alloc.rate:                   1626.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              13636.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11149.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.518 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 179687.401 ops/s
[info]                  ·gc.alloc.rate:                   1585.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              13884.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14481.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.188 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 182344.393 ops/s
[info]                  ·gc.alloc.rate:                   1581.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              13648.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14276.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.359 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 185398.032 ops/s
[info]                  ·gc.alloc.rate:                   1633.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              13867.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14100.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 187980.274 ops/s
[info]                  ·gc.alloc.rate:               1642.954 MB/sec
[info]                  ·gc.alloc.rate.norm:          13755.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1336.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11188.053 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala":
[info]   184620.677 ±(99.9%) 13729.420 ops/s [Average]
[info]   (min, avg, max) = (179687.401, 184620.677, 187980.274), stdev = 3565.487
[info]   CI (99.9%): [170891.257, 198350.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1613.992 ±(99.9%) 109.762 MB/sec [Average]
[info]   (min, avg, max) = (1581.332, 1613.992, 1642.954), stdev = 28.505
[info]   CI (99.9%): [1504.230, 1723.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   13758.465 ±(99.9%) 451.117 B/op [Average]
[info]   (min, avg, max) = (13636.352, 13758.465, 13884.440), stdev = 117.154
[info]   CI (99.9%): [13307.348, 14209.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1527.024 ±(99.9%) 682.295 MB/sec [Average]
[info]   (min, avg, max) = (1329.634, 1527.024, 1661.223), stdev = 177.190
[info]   CI (99.9%): [844.730, 2209.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   13039.190 ±(99.9%) 6595.346 B/op [Average]
[info]   (min, avg, max) = (11149.537, 13039.190, 14481.144), stdev = 1712.790
[info]   CI (99.9%): [6443.845, 19634.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.600 ±(99.9%) 4.507 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.600, 2.685), stdev = 1.170
[info]   CI (99.9%): [≈ 0, 5.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.048 ±(99.9%) 37.757 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.048, 22.518), stdev = 9.805
[info]   CI (99.9%): [≈ 0, 42.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 9.000), stdev = 1.225
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 42.59% complete, ETA 00:51:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 601.417 ops/s
[info] # Warmup Iteration   2: 6415.565 ops/s
[info] # Warmup Iteration   3: 7496.163 ops/s
[info] Iteration   1: 7407.486 ops/s
[info]                  ·gc.alloc.rate:                   1241.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              263839.543 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     279516.480 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.691 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 7792.837 ops/s
[info]                  ·gc.alloc.rate:                   1297.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              262085.268 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     265944.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 840.744 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 7642.951 ops/s
[info]                  ·gc.alloc.rate:                   1281.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              263797.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     269414.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 115.743 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 7738.051 ops/s
[info]                  ·gc.alloc.rate:                   1302.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              264841.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     264852.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.157 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 7851.221 ops/s
[info]                  ·gc.alloc.rate:               1314.479 MB/sec
[info]                  ·gc.alloc.rate.norm:          263478.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 196282.532 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson":
[info]   7686.509 ±(99.9%) 669.291 ops/s [Average]
[info]   (min, avg, max) = (7407.486, 7686.509, 7851.221), stdev = 173.813
[info]   CI (99.9%): [7017.218, 8355.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1287.529 ±(99.9%) 108.705 MB/sec [Average]
[info]   (min, avg, max) = (1241.819, 1287.529, 1314.479), stdev = 28.230
[info]   CI (99.9%): [1178.823, 1396.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   263608.328 ±(99.9%) 3824.484 B/op [Average]
[info]   (min, avg, max) = (262085.268, 263608.328, 264841.140), stdev = 993.206
[info]   CI (99.9%): [259783.844, 267432.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1244.527 ±(99.9%) 571.488 MB/sec [Average]
[info]   (min, avg, max) = (979.244, 1244.527, 1317.034), stdev = 148.413
[info]   CI (99.9%): [673.039, 1816.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   255201.924 ±(99.9%) 128769.456 B/op [Average]
[info]   (min, avg, max) = (196282.532, 255201.924, 279516.480), stdev = 33441.019
[info]   CI (99.9%): [126432.468, 383971.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.983 ±(99.9%) 6.899 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.983, 4.164), stdev = 1.792
[info]   CI (99.9%): [≈ 0, 7.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   199.067 ±(99.9%) 1392.195 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 199.067, 840.744), stdev = 361.549
[info]   CI (99.9%): [≈ 0, 1591.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.200, 16.000), stdev = 5.450
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 42.82% complete, ETA 00:51:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7912.010 ops/s
[info] # Warmup Iteration   2: 19938.496 ops/s
[info] # Warmup Iteration   3: 21087.788 ops/s
[info] Iteration   1: 20896.538 ops/s
[info]                  ·gc.alloc.rate:                   1176.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              88556.835 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74654.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.568 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 21127.853 ops/s
[info]                  ·gc.alloc.rate:                   1210.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              90142.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98600.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 229.505 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 20991.648 ops/s
[info]                  ·gc.alloc.rate:                   1207.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              90532.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74067.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.823 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 20833.161 ops/s
[info]                  ·gc.alloc.rate:                   1186.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              89642.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99241.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.573 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 21266.531 ops/s
[info]                  ·gc.alloc.rate:                   1211.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              89623.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73010.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.541 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce":
[info]   21023.146 ±(99.9%) 676.103 ops/s [Average]
[info]   (min, avg, max) = (20833.161, 21023.146, 21266.531), stdev = 175.582
[info]   CI (99.9%): [20347.043, 21699.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1198.407 ±(99.9%) 62.061 MB/sec [Average]
[info]   (min, avg, max) = (1176.021, 1198.407, 1211.526), stdev = 16.117
[info]   CI (99.9%): [1136.346, 1260.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   89699.467 ±(99.9%) 2858.671 B/op [Average]
[info]   (min, avg, max) = (88556.835, 89699.467, 90532.460), stdev = 742.388
[info]   CI (99.9%): [86840.796, 92558.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1120.771 ±(99.9%) 696.222 MB/sec [Average]
[info]   (min, avg, max) = (986.962, 1120.771, 1323.927), stdev = 180.807
[info]   CI (99.9%): [424.549, 1816.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   83914.805 ±(99.9%) 52803.943 B/op [Average]
[info]   (min, avg, max) = (73010.863, 83914.805, 99241.307), stdev = 13713.016
[info]   CI (99.9%): [31110.862, 136718.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.754 ±(99.9%) 5.111 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.754, 3.082), stdev = 1.327
[info]   CI (99.9%): [≈ 0, 5.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   56.202 ±(99.9%) 380.605 B/op [Average]
[info]   (min, avg, max) = (1.541, 56.202, 229.505), stdev = 98.842
[info]   CI (99.9%): [≈ 0, 436.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 12.000), stdev = 3.564
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.06% complete, ETA 00:51:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6368.272 ops/s
[info] # Warmup Iteration   2: 25177.159 ops/s
[info] # Warmup Iteration   3: 25563.473 ops/s
[info] Iteration   1: 25994.611 ops/s
[info]                  ·gc.alloc.rate:                   1148.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              69542.365 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59569.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 25196.801 ops/s
[info]                  ·gc.alloc.rate:                   1120.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              69960.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82135.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 212.080 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 25998.097 ops/s
[info]                  ·gc.alloc.rate:                   1148.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              69556.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59600.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.285 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 26092.738 ops/s
[info]                  ·gc.alloc.rate:                   1166.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              70376.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78836.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.256 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 26242.969 ops/s
[info]                  ·gc.alloc.rate:               1170.450 MB/sec
[info]                  ·gc.alloc.rate.norm:          70194.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58886.769 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala":
[info]   25905.043 ±(99.9%) 1573.250 ops/s [Average]
[info]   (min, avg, max) = (25196.801, 25905.043, 26242.969), stdev = 408.568
[info]   CI (99.9%): [24331.793, 27478.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1151.010 ±(99.9%) 76.630 MB/sec [Average]
[info]   (min, avg, max) = (1120.224, 1151.010, 1170.450), stdev = 19.901
[info]   CI (99.9%): [1074.381, 1227.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   69926.124 ±(99.9%) 1440.604 B/op [Average]
[info]   (min, avg, max) = (69542.365, 69926.124, 70376.572), stdev = 374.120
[info]   CI (99.9%): [68485.521, 71366.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1114.504 ±(99.9%) 691.166 MB/sec [Average]
[info]   (min, avg, max) = (981.898, 1114.504, 1315.174), stdev = 179.494
[info]   CI (99.9%): [423.338, 1805.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   67805.629 ±(99.9%) 44811.194 B/op [Average]
[info]   (min, avg, max) = (58886.769, 67805.629, 82135.194), stdev = 11637.325
[info]   CI (99.9%): [22994.434, 112616.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.801 ±(99.9%) 5.668 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.801, 3.396), stdev = 1.472
[info]   CI (99.9%): [≈ 0, 6.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   49.779 ±(99.9%) 354.150 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 49.779, 212.080), stdev = 91.972
[info]   CI (99.9%): [≈ 0, 403.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 13.000), stdev = 3.937
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.29% complete, ETA 00:51:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 191985.708 ops/s
[info] # Warmup Iteration   2: 346984.761 ops/s
[info] # Warmup Iteration   3: 375143.243 ops/s
[info] Iteration   1: 374290.053 ops/s
[info]                  ·gc.alloc.rate:                   871.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              3666.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2781.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 370309.969 ops/s
[info]                  ·gc.alloc.rate:                   863.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              3669.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4221.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 365143.359 ops/s
[info]                  ·gc.alloc.rate:               848.135 MB/sec
[info]                  ·gc.alloc.rate.norm:          3654.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2859.729 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 364872.567 ops/s
[info]                  ·gc.alloc.rate:                   859.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              3709.136 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4287.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.107 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 378382.497 ops/s
[info]                  ·gc.alloc.rate:               878.080 MB/sec
[info]                  ·gc.alloc.rate.norm:          3652.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2745.863 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala":
[info]   370599.689 ±(99.9%) 22522.670 ops/s [Average]
[info]   (min, avg, max) = (364872.567, 370599.689, 378382.497), stdev = 5849.066
[info]   CI (99.9%): [348077.019, 393122.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   864.352 ±(99.9%) 44.275 MB/sec [Average]
[info]   (min, avg, max) = (848.135, 864.352, 878.080), stdev = 11.498
[info]   CI (99.9%): [820.076, 908.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3670.450 ±(99.9%) 87.862 B/op [Average]
[info]   (min, avg, max) = (3652.287, 3670.450, 3709.136), stdev = 22.817
[info]   CI (99.9%): [3582.588, 3758.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   794.544 ±(99.9%) 700.294 MB/sec [Average]
[info]   (min, avg, max) = (660.158, 794.544, 993.864), stdev = 181.864
[info]   CI (99.9%): [94.250, 1494.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3379.060 ±(99.9%) 3081.284 B/op [Average]
[info]   (min, avg, max) = (2745.863, 3379.060, 4287.103), stdev = 800.200
[info]   CI (99.9%): [297.776, 6460.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.662 ±(99.9%) 5.614 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.662, 3.270), stdev = 1.458
[info]   CI (99.9%): [≈ 0, 6.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.857 ±(99.9%) 24.218 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.857, 14.107), stdev = 6.289
[info]   CI (99.9%): [≈ 0, 27.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 7.000), stdev = 1.517
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 43.53% complete, ETA 00:51:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 212640.672 ops/s
[info] # Warmup Iteration   2: 432965.345 ops/s
[info] # Warmup Iteration   3: 428037.911 ops/s
[info] Iteration   1: 433962.804 ops/s
[info]                  ·gc.alloc.rate:      0.171 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.619 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 430766.388 ops/s
[info]                  ·gc.alloc.rate:      0.494 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.804 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 431397.179 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 433581.061 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 432633.341 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   432468.155 ±(99.9%) 5287.742 ops/s [Average]
[info]   (min, avg, max) = (430766.388, 432468.155, 433962.804), stdev = 1373.210
[info]   CI (99.9%): [427180.412, 437755.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.133 ±(99.9%) 0.827 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.133, 0.494), stdev = 0.215
[info]   CI (99.9%): [≈ 0, 0.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.485 ±(99.9%) 3.021 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.485, 1.804), stdev = 0.784
[info]   CI (99.9%): [≈ 0, 3.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 43.76% complete, ETA 00:50:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5864.622 ops/s
[info] # Warmup Iteration   2: 22837.106 ops/s
[info] # Warmup Iteration   3: 24827.054 ops/s
[info] Iteration   1: 23609.533 ops/s
[info]                  ·gc.alloc.rate:                   1143.820 MB/sec
[info]                  ·gc.alloc.rate.norm:              76244.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87655.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.775 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 24807.742 ops/s
[info]                  ·gc.alloc.rate:                   1195.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              75842.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62715.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.151 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 199.844 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 24064.233 ops/s
[info]                  ·gc.alloc.rate:                   1173.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              76744.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85914.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.459 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 24844.673 ops/s
[info]                  ·gc.alloc.rate:                   1194.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              75638.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62157.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.319 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 25171.257 ops/s
[info]                  ·gc.alloc.rate:               1216.810 MB/sec
[info]                  ·gc.alloc.rate.norm:          76080.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 81890.062 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson":
[info]   24499.488 ±(99.9%) 2470.807 ops/s [Average]
[info]   (min, avg, max) = (23609.533, 24499.488, 25171.257), stdev = 641.661
[info]   CI (99.9%): [22028.681, 26970.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1184.755 ±(99.9%) 106.147 MB/sec [Average]
[info]   (min, avg, max) = (1143.820, 1184.755, 1216.810), stdev = 27.566
[info]   CI (99.9%): [1078.608, 1290.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   76110.064 ±(99.9%) 1627.726 B/op [Average]
[info]   (min, avg, max) = (75638.427, 76110.064, 76744.140), stdev = 422.715
[info]   CI (99.9%): [74482.339, 77737.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1181.661 ±(99.9%) 691.427 MB/sec [Average]
[info]   (min, avg, max) = (981.218, 1181.661, 1315.007), stdev = 179.561
[info]   CI (99.9%): [490.234, 1873.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   76066.483 ±(99.9%) 48589.692 B/op [Average]
[info]   (min, avg, max) = (62157.529, 76066.483, 87655.163), stdev = 12618.589
[info]   CI (99.9%): [27476.791, 124656.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.809 ±(99.9%) 5.219 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.809, 3.151), stdev = 1.355
[info]   CI (99.9%): [≈ 0, 6.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   51.679 ±(99.9%) 331.016 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 51.679, 199.844), stdev = 85.964
[info]   CI (99.9%): [≈ 0, 382.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 13.000), stdev = 3.421
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.00% complete, ETA 00:50:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1749.151 ops/s
[info] # Warmup Iteration   2: 11197.837 ops/s
[info] # Warmup Iteration   3: 13636.932 ops/s
[info] Iteration   1: 13292.923 ops/s
[info]                  ·gc.alloc.rate:                   1281.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              151735.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     156623.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.465 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 13383.998 ops/s
[info]                  ·gc.alloc.rate:                   1281.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              150694.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155727.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.539 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 416.148 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 13332.217 ops/s
[info]                  ·gc.alloc.rate:                   1287.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              151940.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155379.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.231 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 13221.460 ops/s
[info]                  ·gc.alloc.rate:               1275.706 MB/sec
[info]                  ·gc.alloc.rate.norm:          151852.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 156366.596 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 13102.021 ops/s
[info]                  ·gc.alloc.rate:                   1264.854 MB/sec
[info]                  ·gc.alloc.rate.norm:              151934.443 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118548.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce":
[info]   13266.524 ±(99.9%) 421.399 ops/s [Average]
[info]   (min, avg, max) = (13102.021, 13266.524, 13383.998), stdev = 109.436
[info]   CI (99.9%): [12845.125, 13687.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1278.166 ±(99.9%) 32.595 MB/sec [Average]
[info]   (min, avg, max) = (1264.854, 1278.166, 1287.117), stdev = 8.465
[info]   CI (99.9%): [1245.571, 1310.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   151631.312 ±(99.9%) 2041.888 B/op [Average]
[info]   (min, avg, max) = (150694.435, 151631.312, 151940.546), stdev = 530.272
[info]   CI (99.9%): [149589.423, 153673.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1252.810 ±(99.9%) 572.606 MB/sec [Average]
[info]   (min, avg, max) = (986.920, 1252.810, 1324.364), stdev = 148.704
[info]   CI (99.9%): [680.203, 1825.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   148529.316 ±(99.9%) 64563.168 B/op [Average]
[info]   (min, avg, max) = (118548.943, 148529.316, 156623.942), stdev = 16766.850
[info]   CI (99.9%): [83966.148, 213092.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.795 ±(99.9%) 5.936 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.795, 3.539), stdev = 1.542
[info]   CI (99.9%): [≈ 0, 6.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   93.569 ±(99.9%) 697.889 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 93.569, 416.148), stdev = 181.239
[info]   CI (99.9%): [≈ 0, 791.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 14.000), stdev = 4.494
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.24% complete, ETA 00:50:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1632.203 ops/s
[info] # Warmup Iteration   2: 12164.443 ops/s
[info] # Warmup Iteration   3: 13529.903 ops/s
[info] Iteration   1: 13498.173 ops/s
[info]                  ·gc.alloc.rate:                   1213.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              141432.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153313.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.281 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 13575.290 ops/s
[info]                  ·gc.alloc.rate:                   1208.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              140054.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114526.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.185 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 369.237 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 13717.406 ops/s
[info]                  ·gc.alloc.rate:                   1240.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              142276.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150484.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 136.135 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 13710.903 ops/s
[info]                  ·gc.alloc.rate:               1231.338 MB/sec
[info]                  ·gc.alloc.rate.norm:          141344.922 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 149873.037 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 13869.825 ops/s
[info]                  ·gc.alloc.rate:               1246.320 MB/sec
[info]                  ·gc.alloc.rate.norm:          141422.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:      980.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 111267.580 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala":
[info]   13674.319 ±(99.9%) 552.174 ops/s [Average]
[info]   (min, avg, max) = (13498.173, 13674.319, 13869.825), stdev = 143.398
[info]   CI (99.9%): [13122.145, 14226.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1227.791 ±(99.9%) 64.133 MB/sec [Average]
[info]   (min, avg, max) = (1208.156, 1227.791, 1246.320), stdev = 16.655
[info]   CI (99.9%): [1163.657, 1291.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   141305.962 ±(99.9%) 3068.406 B/op [Average]
[info]   (min, avg, max) = (140054.101, 141305.962, 142276.426), stdev = 796.855
[info]   CI (99.9%): [138237.557, 144374.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1180.147 ±(99.9%) 688.766 MB/sec [Average]
[info]   (min, avg, max) = (980.575, 1180.147, 1314.964), stdev = 178.870
[info]   CI (99.9%): [491.381, 1868.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   135893.019 ±(99.9%) 81110.237 B/op [Average]
[info]   (min, avg, max) = (111267.580, 135893.019, 153313.756), stdev = 21064.071
[info]   CI (99.9%): [54782.782, 217003.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.887 ±(99.9%) 5.316 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.887, 3.185), stdev = 1.381
[info]   CI (99.9%): [≈ 0, 6.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   102.531 ±(99.9%) 615.980 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 102.531, 369.237), stdev = 159.968
[info]   CI (99.9%): [≈ 0, 718.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 15.000), stdev = 4.506
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.47% complete, ETA 00:50:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 129530.057 ops/s
[info] # Warmup Iteration   2: 269132.847 ops/s
[info] # Warmup Iteration   3: 277416.196 ops/s
[info] Iteration   1: 279447.911 ops/s
[info]                  ·gc.alloc.rate:                   1662.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              9363.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9341.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.710 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 290309.945 ops/s
[info]                  ·gc.alloc.rate:                   1738.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              9418.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8959.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.790 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 289908.771 ops/s
[info]                  ·gc.alloc.rate:               1742.511 MB/sec
[info]                  ·gc.alloc.rate.norm:          9459.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1654.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8983.145 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 289207.374 ops/s
[info]                  ·gc.alloc.rate:                   1738.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              9459.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9048.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 291484.429 ops/s
[info]                  ·gc.alloc.rate:               1753.376 MB/sec
[info]                  ·gc.alloc.rate.norm:          9467.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1673.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9033.464 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala":
[info]   288071.686 ±(99.9%) 18833.820 ops/s [Average]
[info]   (min, avg, max) = (279447.911, 288071.686, 291484.429), stdev = 4891.083
[info]   CI (99.9%): [269237.866, 306905.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1726.973 ±(99.9%) 140.557 MB/sec [Average]
[info]   (min, avg, max) = (1662.630, 1726.973, 1753.376), stdev = 36.502
[info]   CI (99.9%): [1586.417, 1867.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   9433.718 ±(99.9%) 167.578 B/op [Average]
[info]   (min, avg, max) = (9363.873, 9433.718, 9467.352), stdev = 43.519
[info]   CI (99.9%): [9266.141, 9601.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1660.537 ±(99.9%) 30.426 MB/sec [Average]
[info]   (min, avg, max) = (1653.406, 1660.537, 1673.019), stdev = 7.902
[info]   CI (99.9%): [1630.111, 1690.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9073.330 ±(99.9%) 594.255 B/op [Average]
[info]   (min, avg, max) = (8959.873, 9073.330, 9341.752), stdev = 154.326
[info]   CI (99.9%): [8479.076, 9667.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.591 ±(99.9%) 4.738 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.591, 2.789), stdev = 1.230
[info]   CI (99.9%): [≈ 0, 5.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.323 ±(99.9%) 26.695 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.323, 15.710), stdev = 6.933
[info]   CI (99.9%): [≈ 0, 30.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 12.000), stdev = 2.490
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 44.71% complete, ETA 00:50:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 788.590 ops/s
[info] # Warmup Iteration   2: 9639.456 ops/s
[info] # Warmup Iteration   3: 12575.090 ops/s
[info] Iteration   1: 12440.783 ops/s
[info]                  ·gc.alloc.rate:                   1543.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              195093.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     206272.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.891 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 12456.632 ops/s
[info]                  ·gc.alloc.rate:                   1535.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              193953.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166388.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 94.682 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 12567.223 ops/s
[info]                  ·gc.alloc.rate:                   1548.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              193886.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207187.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.320 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 12375.982 ops/s
[info]                  ·gc.alloc.rate:               1539.286 MB/sec
[info]                  ·gc.alloc.rate.norm:          195664.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1330.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 169086.904 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 12393.893 ops/s
[info]                  ·gc.alloc.rate:               1554.308 MB/sec
[info]                  ·gc.alloc.rate.norm:          197358.100 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1671.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 212235.978 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson":
[info]   12446.903 ±(99.9%) 288.471 ops/s [Average]
[info]   (min, avg, max) = (12375.982, 12446.903, 12567.223), stdev = 74.915
[info]   CI (99.9%): [12158.432, 12735.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1544.066 ±(99.9%) 28.635 MB/sec [Average]
[info]   (min, avg, max) = (1535.391, 1544.066, 1554.308), stdev = 7.437
[info]   CI (99.9%): [1515.431, 1572.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   195191.203 ±(99.9%) 5500.758 B/op [Average]
[info]   (min, avg, max) = (193886.611, 195191.203, 197358.100), stdev = 1428.529
[info]   CI (99.9%): [189690.446, 200691.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1520.968 ±(99.9%) 695.825 MB/sec [Average]
[info]   (min, avg, max) = (1317.180, 1520.968, 1671.480), stdev = 180.703
[info]   CI (99.9%): [825.143, 2216.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   192234.248 ±(99.9%) 86629.577 B/op [Average]
[info]   (min, avg, max) = (166388.535, 192234.248, 212235.978), stdev = 22497.426
[info]   CI (99.9%): [105604.670, 278863.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.233 ±(99.9%) 1.246 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.233, 0.750), stdev = 0.324
[info]   CI (99.9%): [≈ 0, 1.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   29.379 ±(99.9%) 157.309 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 29.379, 94.682), stdev = 40.853
[info]   CI (99.9%): [≈ 0, 186.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 10.000), stdev = 1.483
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.94% complete, ETA 00:49:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9669.276 ops/s
[info] # Warmup Iteration   2: 29172.695 ops/s
[info] # Warmup Iteration   3: 32590.009 ops/s
[info] Iteration   1: 32340.153 ops/s
[info]                  ·gc.alloc.rate:                   1401.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              68220.591 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64350.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 32728.065 ops/s
[info]                  ·gc.alloc.rate:                   1415.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              68078.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63555.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.726 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 179.191 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 33039.895 ops/s
[info]                  ·gc.alloc.rate:                   1419.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              67635.761 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62575.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.866 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 32995.779 ops/s
[info]                  ·gc.alloc.rate:                   1429.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              68184.075 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62630.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.993 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 33081.035 ops/s
[info]                  ·gc.alloc.rate:               1454.217 MB/sec
[info]                  ·gc.alloc.rate.norm:          69180.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1650.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78504.541 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce":
[info]   32836.985 ±(99.9%) 1194.095 ops/s [Average]
[info]   (min, avg, max) = (32340.153, 32836.985, 33081.035), stdev = 310.103
[info]   CI (99.9%): [31642.890, 34031.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1424.212 ±(99.9%) 75.092 MB/sec [Average]
[info]   (min, avg, max) = (1401.815, 1424.212, 1454.217), stdev = 19.501
[info]   CI (99.9%): [1349.120, 1499.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   68259.955 ±(99.9%) 2175.668 B/op [Average]
[info]   (min, avg, max) = (67635.761, 68259.955, 69180.425), stdev = 565.014
[info]   CI (99.9%): [66084.287, 70435.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1384.163 ±(99.9%) 572.944 MB/sec [Average]
[info]   (min, avg, max) = (1313.050, 1384.163, 1650.216), stdev = 148.792
[info]   CI (99.9%): [811.219, 1957.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   66323.328 ±(99.9%) 26371.908 B/op [Average]
[info]   (min, avg, max) = (62575.030, 66323.328, 78504.541), stdev = 6848.701
[info]   CI (99.9%): [39951.420, 92695.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.829 ±(99.9%) 6.259 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.829, 3.726), stdev = 1.625
[info]   CI (99.9%): [≈ 0, 7.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   39.818 ±(99.9%) 301.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 39.818, 179.191), stdev = 78.173
[info]   CI (99.9%): [≈ 0, 340.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 13.000), stdev = 3.271
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.18% complete, ETA 00:49:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22561.517 ops/s
[info] # Warmup Iteration   2: 75482.026 ops/s
[info] # Warmup Iteration   3: 78962.640 ops/s
[info] Iteration   1: 80677.750 ops/s
[info]                  ·gc.alloc.rate:                   2017.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              39364.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38543.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.726 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72.691 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 80965.774 ops/s
[info]                  ·gc.alloc.rate:                   2035.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              39567.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38263.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.047 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 81766.144 ops/s
[info]                  ·gc.alloc.rate:               2068.676 MB/sec
[info]                  ·gc.alloc.rate.norm:          39819.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1979.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38107.656 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 82296.391 ops/s
[info]                  ·gc.alloc.rate:                   2082.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              39835.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38193.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.398 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 78511.457 ops/s
[info]                  ·gc.alloc.rate:               1977.561 MB/sec
[info]                  ·gc.alloc.rate.norm:          39642.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1675.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33591.342 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala":
[info]   80843.503 ±(99.9%) 5594.382 ops/s [Average]
[info]   (min, avg, max) = (78511.457, 80843.503, 82296.391), stdev = 1452.843
[info]   CI (99.9%): [75249.121, 86437.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2036.504 ±(99.9%) 161.262 MB/sec [Average]
[info]   (min, avg, max) = (1977.561, 2036.504, 2082.936), stdev = 41.879
[info]   CI (99.9%): [1875.243, 2197.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   39645.801 ±(99.9%) 748.477 B/op [Average]
[info]   (min, avg, max) = (39364.807, 39645.801, 39835.050), stdev = 194.377
[info]   CI (99.9%): [38897.324, 40394.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1919.346 ±(99.9%) 526.021 MB/sec [Average]
[info]   (min, avg, max) = (1675.703, 1919.346, 1997.077), stdev = 136.606
[info]   CI (99.9%): [1393.325, 2445.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   37339.910 ±(99.9%) 8093.600 B/op [Average]
[info]   (min, avg, max) = (33591.342, 37339.910, 38543.517), stdev = 2101.882
[info]   CI (99.9%): [29246.310, 45433.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.791 ±(99.9%) 6.327 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.791, 3.726), stdev = 1.643
[info]   CI (99.9%): [≈ 0, 7.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15.427 ±(99.9%) 123.440 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.427, 72.691), stdev = 32.057
[info]   CI (99.9%): [≈ 0, 138.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 11.000), stdev = 1.517
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.41% complete, ETA 00:49:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 344952.913 ops/s
[info] # Warmup Iteration   2: 621309.822 ops/s
[info] # Warmup Iteration   3: 604169.526 ops/s
[info] Iteration   1: 631983.660 ops/s
[info]                  ·gc.alloc.rate:               888.818 MB/sec
[info]                  ·gc.alloc.rate.norm:          2213.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1646.487 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 623523.062 ops/s
[info]                  ·gc.alloc.rate:                   879.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              2218.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2506.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 608599.948 ops/s
[info]                  ·gc.alloc.rate:                   868.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              2246.771 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2573.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.675 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 623906.357 ops/s
[info]                  ·gc.alloc.rate:                   875.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              2208.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1670.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.523 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 618584.798 ops/s
[info]                  ·gc.alloc.rate:               881.064 MB/sec
[info]                  ·gc.alloc.rate.norm:          2241.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2518.505 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala":
[info]   621319.565 ±(99.9%) 33042.555 ops/s [Average]
[info]   (min, avg, max) = (608599.948, 621319.565, 631983.660), stdev = 8581.047
[info]   CI (99.9%): [588277.010, 654362.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   878.739 ±(99.9%) 28.184 MB/sec [Average]
[info]   (min, avg, max) = (868.847, 878.739, 888.818), stdev = 7.319
[info]   CI (99.9%): [850.555, 906.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2225.772 ±(99.9%) 66.673 B/op [Average]
[info]   (min, avg, max) = (2208.144, 2225.772, 2246.771), stdev = 17.315
[info]   CI (99.9%): [2159.099, 2292.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   860.366 ±(99.9%) 698.152 MB/sec [Average]
[info]   (min, avg, max) = (661.110, 860.366, 995.230), stdev = 181.308
[info]   CI (99.9%): [162.213, 1558.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2183.021 ±(99.9%) 1846.975 B/op [Average]
[info]   (min, avg, max) = (1646.487, 2183.021, 2573.586), stdev = 479.653
[info]   CI (99.9%): [336.046, 4029.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.654 ±(99.9%) 4.261 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.654, 2.581), stdev = 1.107
[info]   CI (99.9%): [≈ 0, 4.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.682 ±(99.9%) 11.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.682, 6.675), stdev = 2.863
[info]   CI (99.9%): [≈ 0, 12.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 9.000), stdev = 2.588
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 45.65% complete, ETA 00:49:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 402340.625 ops/s
[info] # Warmup Iteration   2: 691469.151 ops/s
[info] # Warmup Iteration   3: 709647.305 ops/s
[info] Iteration   1: 710428.897 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 712081.034 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 712774.197 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 712099.394 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 712684.806 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   712013.666 ±(99.9%) 3628.718 ops/s [Average]
[info]   (min, avg, max) = (710428.897, 712013.666, 712774.197), stdev = 942.366
[info]   CI (99.9%): [708384.948, 715642.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 45.88% complete, ETA 00:48:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13840.072 ops/s
[info] # Warmup Iteration   2: 64229.763 ops/s
[info] # Warmup Iteration   3: 69630.973 ops/s
[info] Iteration   1: 69470.548 ops/s
[info]                  ·gc.alloc.rate:                   2001.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              45331.827 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44686.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.552 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.505 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 70406.268 ops/s
[info]                  ·gc.alloc.rate:                   2031.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              45412.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44493.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.396 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 70333.231 ops/s
[info]                  ·gc.alloc.rate:               2050.336 MB/sec
[info]                  ·gc.alloc.rate.norm:          45879.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2005.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 44870.186 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 71703.927 ops/s
[info]                  ·gc.alloc.rate:                   2096.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              46018.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44289.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.457 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 69169.380 ops/s
[info]                  ·gc.alloc.rate:               2006.230 MB/sec
[info]                  ·gc.alloc.rate.norm:          45630.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1689.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38415.957 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson":
[info]   70216.671 ±(99.9%) 3809.502 ops/s [Average]
[info]   (min, avg, max) = (69169.380, 70216.671, 71703.927), stdev = 989.316
[info]   CI (99.9%): [66407.169, 74026.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2037.153 ±(99.9%) 149.032 MB/sec [Average]
[info]   (min, avg, max) = (2001.078, 2037.153, 2096.558), stdev = 38.703
[info]   CI (99.9%): [1888.121, 2186.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   45654.406 ±(99.9%) 1133.411 B/op [Average]
[info]   (min, avg, max) = (45331.827, 45654.406, 46018.081), stdev = 294.343
[info]   CI (99.9%): [44520.995, 46787.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1935.027 ±(99.9%) 533.464 MB/sec [Average]
[info]   (min, avg, max) = (1689.043, 1935.027, 2017.808), stdev = 138.539
[info]   CI (99.9%): [1401.563, 2468.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   43351.189 ±(99.9%) 10656.093 B/op [Average]
[info]   (min, avg, max) = (38415.957, 43351.189, 44870.186), stdev = 2767.354
[info]   CI (99.9%): [32695.096, 54007.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.127 ±(99.9%) 0.920 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.127, 0.552), stdev = 0.239
[info]   CI (99.9%): [≈ 0, 1.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.872 ±(99.9%) 20.853 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.872, 12.505), stdev = 5.416
[info]   CI (99.9%): [≈ 0, 23.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.000, 9.000), stdev = 0.707
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 46.12% complete, ETA 00:48:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3139.710 ops/s
[info] # Warmup Iteration   2: 14047.618 ops/s
[info] # Warmup Iteration   3: 15258.424 ops/s
[info] Iteration   1: 15360.232 ops/s
[info]                  ·gc.alloc.rate:                   810.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              82998.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67848.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.133 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 15247.047 ops/s
[info]                  ·gc.alloc.rate:                   824.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              85072.771 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102519.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.149 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 16060.062 ops/s
[info]                  ·gc.alloc.rate:               852.547 MB/sec
[info]                  ·gc.alloc.rate.norm:          83550.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 64952.569 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 16050.990 ops/s
[info]                  ·gc.alloc.rate:                   852.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              83544.840 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97575.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.622 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 355.131 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 15583.575 ops/s
[info]                  ·gc.alloc.rate:                   843.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              85237.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66604.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.229 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce":
[info]   15660.381 ±(99.9%) 1465.212 ops/s [Average]
[info]   (min, avg, max) = (15247.047, 15660.381, 16060.062), stdev = 380.511
[info]   CI (99.9%): [14195.169, 17125.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate":
[info]   836.567 ±(99.9%) 72.190 MB/sec [Average]
[info]   (min, avg, max) = (810.067, 836.567, 852.547), stdev = 18.747
[info]   CI (99.9%): [764.377, 908.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   84080.919 ±(99.9%) 3880.193 B/op [Average]
[info]   (min, avg, max) = (82998.912, 84080.919, 85237.733), stdev = 1007.674
[info]   CI (99.9%): [80200.725, 87961.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   794.561 ±(99.9%) 701.680 MB/sec [Average]
[info]   (min, avg, max) = (659.491, 794.561, 995.139), stdev = 182.224
[info]   CI (99.9%): [92.881, 1496.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   79899.996 ±(99.9%) 71250.636 B/op [Average]
[info]   (min, avg, max) = (64952.569, 79899.996, 102519.791), stdev = 18503.564
[info]   CI (99.9%): [8649.360, 151150.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.783 ±(99.9%) 6.124 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.783, 3.622), stdev = 1.590
[info]   CI (99.9%): [≈ 0, 6.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   76.928 ±(99.9%) 600.176 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 76.928, 355.131), stdev = 155.864
[info]   CI (99.9%): [≈ 0, 677.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 9.000), stdev = 2.302
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.35% complete, ETA 00:48:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2329.200 ops/s
[info] # Warmup Iteration   2: 15215.575 ops/s
[info] # Warmup Iteration   3: 16930.943 ops/s
[info] Iteration   1: 16923.147 ops/s
[info]                  ·gc.alloc.rate:                   738.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              68723.545 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60835.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.516 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 16805.429 ops/s
[info]                  ·gc.alloc.rate:                   740.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              69350.634 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92049.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.423 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 16752.837 ops/s
[info]                  ·gc.alloc.rate:                   752.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              70708.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61706.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.335 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 16663.341 ops/s
[info]                  ·gc.alloc.rate:               745.648 MB/sec
[info]                  ·gc.alloc.rate.norm:          70392.197 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62099.155 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 16610.112 ops/s
[info]                  ·gc.alloc.rate:                   729.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              69102.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62364.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.733 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 353.722 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala":
[info]   16750.973 ±(99.9%) 472.131 ops/s [Average]
[info]   (min, avg, max) = (16610.112, 16750.973, 16923.147), stdev = 122.611
[info]   CI (99.9%): [16278.842, 17223.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   741.443 ±(99.9%) 33.398 MB/sec [Average]
[info]   (min, avg, max) = (729.298, 741.443, 752.790), stdev = 8.673
[info]   CI (99.9%): [708.045, 774.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   69655.576 ±(99.9%) 3289.649 B/op [Average]
[info]   (min, avg, max) = (68723.545, 69655.576, 70708.850), stdev = 854.311
[info]   CI (99.9%): [66365.927, 72945.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   721.994 ±(99.9%) 561.613 MB/sec [Average]
[info]   (min, avg, max) = (654.155, 721.994, 982.881), stdev = 145.849
[info]   CI (99.9%): [160.381, 1283.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   67811.071 ±(99.9%) 52223.283 B/op [Average]
[info]   (min, avg, max) = (60835.498, 67811.071, 92049.851), stdev = 13562.221
[info]   CI (99.9%): [15587.788, 120034.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.760 ±(99.9%) 6.400 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.760, 3.733), stdev = 1.662
[info]   CI (99.9%): [≈ 0, 7.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   71.999 ±(99.9%) 606.465 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 71.999, 353.722), stdev = 157.497
[info]   CI (99.9%): [≈ 0, 678.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 10.000), stdev = 1.789
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.59% complete, ETA 00:48:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 72290.589 ops/s
[info] # Warmup Iteration   2: 117978.969 ops/s
[info] # Warmup Iteration   3: 122040.577 ops/s
[info] Iteration   1: 119186.563 ops/s
[info]                  ·gc.alloc.rate:                   321.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              4242.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6755.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 121978.646 ops/s
[info]                  ·gc.alloc.rate:               314.952 MB/sec
[info]                  ·gc.alloc.rate.norm:          4063.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4258.835 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 122559.941 ops/s
[info]                  ·gc.alloc.rate:      307.748 MB/sec
[info]                  ·gc.alloc.rate.norm: 3952.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 122068.608 ops/s
[info]                  ·gc.alloc.rate:                   315.595 MB/sec
[info]                  ·gc.alloc.rate.norm:              4069.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4255.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.268 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 121281.164 ops/s
[info]                  ·gc.alloc.rate:               317.042 MB/sec
[info]                  ·gc.alloc.rate.norm:          4113.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4291.916 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala":
[info]   121414.984 ±(99.9%) 5108.323 ops/s [Average]
[info]   (min, avg, max) = (119186.563, 121414.984, 122559.941), stdev = 1326.615
[info]   CI (99.9%): [116306.661, 126523.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   315.330 ±(99.9%) 18.908 MB/sec [Average]
[info]   (min, avg, max) = (307.748, 315.330, 321.315), stdev = 4.910
[info]   CI (99.9%): [296.422, 334.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4088.259 ±(99.9%) 404.161 B/op [Average]
[info]   (min, avg, max) = (3952.004, 4088.259, 4242.861), stdev = 104.959
[info]   CI (99.9%): [3684.098, 4492.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   300.509 ±(99.9%) 714.021 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 300.509, 511.614), stdev = 185.429
[info]   CI (99.9%): [≈ 0, 1014.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3912.450 ±(99.9%) 9387.440 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3912.450, 6755.699), stdev = 2437.888
[info]   CI (99.9%): [≈ 0, 13299.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.109 ±(99.9%) 0.573 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.109, 0.275), stdev = 0.149
[info]   CI (99.9%): [≈ 0, 0.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 5.000), stdev = 1.817
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 46.82% complete, ETA 00:48:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1355.039 ops/s
[info] # Warmup Iteration   2: 12543.200 ops/s
[info] # Warmup Iteration   3: 14632.078 ops/s
[info] Iteration   1: 14728.965 ops/s
[info]                  ·gc.alloc.rate:                   1149.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              122798.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     140218.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.224 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 14835.469 ops/s
[info]                  ·gc.alloc.rate:                   1137.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              120719.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104652.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.625 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 14130.664 ops/s
[info]                  ·gc.alloc.rate:                   1095.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              121979.288 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109732.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.185 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 466.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 14218.210 ops/s
[info]                  ·gc.alloc.rate:                   1109.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              122712.929 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144371.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.476 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 14867.788 ops/s
[info]                  ·gc.alloc.rate:               1149.584 MB/sec
[info]                  ·gc.alloc.rate.norm:          121683.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 103440.320 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson":
[info]   14556.219 ±(99.9%) 1361.740 ops/s [Average]
[info]   (min, avg, max) = (14130.664, 14556.219, 14867.788), stdev = 353.640
[info]   CI (99.9%): [13194.479, 15917.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1128.242 ±(99.9%) 95.201 MB/sec [Average]
[info]   (min, avg, max) = (1095.314, 1128.242, 1149.584), stdev = 24.724
[info]   CI (99.9%): [1033.041, 1223.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   121978.689 ±(99.9%) 3269.075 B/op [Average]
[info]   (min, avg, max) = (120719.557, 121978.689, 122798.072), stdev = 848.968
[info]   CI (99.9%): [118709.614, 125247.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1113.243 ±(99.9%) 686.755 MB/sec [Average]
[info]   (min, avg, max) = (977.234, 1113.243, 1312.302), stdev = 178.348
[info]   CI (99.9%): [426.487, 1799.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   120483.030 ±(99.9%) 77415.869 B/op [Average]
[info]   (min, avg, max) = (103440.320, 120483.030, 144371.831), stdev = 20104.655
[info]   CI (99.9%): [43067.161, 197898.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.929 ±(99.9%) 7.033 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.929, 4.185), stdev = 1.827
[info]   CI (99.9%): [≈ 0, 7.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   103.270 ±(99.9%) 783.554 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 103.270, 466.028), stdev = 203.486
[info]   CI (99.9%): [≈ 0, 886.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.800, 15.000), stdev = 4.324
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 47.06% complete, ETA 00:47:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14650.270 ops/s
[info] # Warmup Iteration   2: 45004.314 ops/s
[info] # Warmup Iteration   3: 45899.271 ops/s
[info] Iteration   1: 46321.716 ops/s
[info]                  ·gc.alloc.rate:                   1442.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              49008.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44902.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.902 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 47253.307 ops/s
[info]                  ·gc.alloc.rate:                   1456.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              48484.213 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54956.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 120.641 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 47340.159 ops/s
[info]                  ·gc.alloc.rate:                   1461.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              48588.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43673.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.076 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 47270.145 ops/s
[info]                  ·gc.alloc.rate:                   1466.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              48820.801 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43826.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.545 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 47466.839 ops/s
[info]                  ·gc.alloc.rate:                   1485.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              49264.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54820.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.690 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce":
[info]   47130.433 ±(99.9%) 1770.663 ops/s [Average]
[info]   (min, avg, max) = (46321.716, 47130.433, 47466.839), stdev = 459.835
[info]   CI (99.9%): [45359.770, 48901.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1462.410 ±(99.9%) 60.963 MB/sec [Average]
[info]   (min, avg, max) = (1442.432, 1462.410, 1485.812), stdev = 15.832
[info]   CI (99.9%): [1401.447, 1523.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   48833.300 ±(99.9%) 1216.013 B/op [Average]
[info]   (min, avg, max) = (48484.213, 48833.300, 49264.455), stdev = 315.795
[info]   CI (99.9%): [47617.287, 50049.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1451.065 ±(99.9%) 706.147 MB/sec [Average]
[info]   (min, avg, max) = (1313.649, 1451.065, 1653.392), stdev = 183.384
[info]   CI (99.9%): [744.918, 2157.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   48435.990 ±(99.9%) 22756.965 B/op [Average]
[info]   (min, avg, max) = (43673.134, 48435.990, 54956.999), stdev = 5909.912
[info]   CI (99.9%): [25679.025, 71192.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 6.020 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.833, 3.623), stdev = 1.563
[info]   CI (99.9%): [≈ 0, 6.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   27.771 ±(99.9%) 200.380 B/op [Average]
[info]   (min, avg, max) = (0.690, 27.771, 120.641), stdev = 52.038
[info]   CI (99.9%): [≈ 0, 228.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 12.000), stdev = 2.387
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.29% complete, ETA 00:47:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24026.914 ops/s
[info] # Warmup Iteration   2: 68862.861 ops/s
[info] # Warmup Iteration   3: 72841.737 ops/s
[info] Iteration   1: 73238.898 ops/s
[info]                  ·gc.alloc.rate:                   1541.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              33119.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28342.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.859 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.428 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 73244.774 ops/s
[info]                  ·gc.alloc.rate:                   1567.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              33678.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35318.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.681 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 74712.759 ops/s
[info]                  ·gc.alloc.rate:               1599.144 MB/sec
[info]                  ·gc.alloc.rate.norm:          33685.152 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1639.393 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34532.974 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 73733.828 ops/s
[info]                  ·gc.alloc.rate:                   1579.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              33710.716 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28104.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.333 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 74482.380 ops/s
[info]                  ·gc.alloc.rate:               1602.089 MB/sec
[info]                  ·gc.alloc.rate.norm:          33852.740 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1656.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34998.983 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala":
[info]   73882.528 ±(99.9%) 2648.425 ops/s [Average]
[info]   (min, avg, max) = (73238.898, 73882.528, 74712.759), stdev = 687.787
[info]   CI (99.9%): [71234.103, 76530.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1577.940 ±(99.9%) 95.907 MB/sec [Average]
[info]   (min, avg, max) = (1541.239, 1577.940, 1602.089), stdev = 24.907
[info]   CI (99.9%): [1482.033, 1673.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   33609.344 ±(99.9%) 1088.817 B/op [Average]
[info]   (min, avg, max) = (33119.672, 33609.344, 33852.740), stdev = 282.762
[info]   CI (99.9%): [32520.527, 34698.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1515.122 ±(99.9%) 694.101 MB/sec [Average]
[info]   (min, avg, max) = (1316.622, 1515.122, 1656.335), stdev = 180.256
[info]   CI (99.9%): [821.021, 2209.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   32259.529 ±(99.9%) 14232.157 B/op [Average]
[info]   (min, avg, max) = (28104.123, 32259.529, 35318.963), stdev = 3696.046
[info]   CI (99.9%): [18027.371, 46491.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.767 ±(99.9%) 4.743 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.767, 2.859), stdev = 1.232
[info]   CI (99.9%): [≈ 0, 5.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.488 ±(99.9%) 101.936 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16.488, 61.428), stdev = 26.472
[info]   CI (99.9%): [≈ 0, 118.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 13.000), stdev = 2.828
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.53% complete, ETA 00:47:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 170627.273 ops/s
[info] # Warmup Iteration   2: 275208.231 ops/s
[info] # Warmup Iteration   3: 300726.393 ops/s
[info] Iteration   1: 293654.251 ops/s
[info]                  ·gc.alloc.rate:               574.878 MB/sec
[info]                  ·gc.alloc.rate.norm:          3081.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1769.024 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 290254.326 ops/s
[info]                  ·gc.alloc.rate:                   575.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              3118.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3583.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 289232.376 ops/s
[info]                  ·gc.alloc.rate:                   573.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              3117.277 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3602.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 284737.377 ops/s
[info]                  ·gc.alloc.rate:                   554.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              3063.462 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1829.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 284714.932 ops/s
[info]                  ·gc.alloc.rate:               565.173 MB/sec
[info]                  ·gc.alloc.rate.norm:          3124.154 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3663.942 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala":
[info]   288518.652 ±(99.9%) 14746.341 ops/s [Average]
[info]   (min, avg, max) = (284714.932, 288518.652, 293654.251), stdev = 3829.578
[info]   CI (99.9%): [273772.311, 303264.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   568.491 ±(99.9%) 34.447 MB/sec [Average]
[info]   (min, avg, max) = (554.230, 568.491, 575.163), stdev = 8.946
[info]   CI (99.9%): [534.044, 602.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3100.848 ±(99.9%) 103.829 B/op [Average]
[info]   (min, avg, max) = (3063.462, 3100.848, 3124.154), stdev = 26.964
[info]   CI (99.9%): [2997.019, 3204.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   529.427 ±(99.9%) 699.011 MB/sec [Average]
[info]   (min, avg, max) = (330.075, 529.427, 662.823), stdev = 181.531
[info]   CI (99.9%): [≈ 0, 1228.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2889.788 ±(99.9%) 3835.164 B/op [Average]
[info]   (min, avg, max) = (1769.024, 2889.788, 3663.942), stdev = 995.980
[info]   CI (99.9%): [≈ 0, 6724.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.240 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.068, 0.115), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.342
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 47.76% complete, ETA 00:47:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 175799.174 ops/s
[info] # Warmup Iteration   2: 354622.115 ops/s
[info] # Warmup Iteration   3: 361589.846 ops/s
[info] Iteration   1: 361351.540 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 361458.665 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 361566.799 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 361310.311 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 361402.809 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc":
[info]   361418.025 ±(99.9%) 385.255 ops/s [Average]
[info]   (min, avg, max) = (361310.311, 361418.025, 361566.799), stdev = 100.049
[info]   CI (99.9%): [361032.770, 361803.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻³, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 48.00% complete, ETA 00:47:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22975.236 ops/s
[info] # Warmup Iteration   2: 64982.187 ops/s
[info] # Warmup Iteration   3: 66576.301 ops/s
[info] Iteration   1: 67145.080 ops/s
[info]                  ·gc.alloc.rate:                   1546.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              36239.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.380 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38285.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.976 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 67371.210 ops/s
[info]                  ·gc.alloc.rate:                   1552.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              36262.570 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30727.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.486 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 67966.776 ops/s
[info]                  ·gc.alloc.rate:                   1571.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              36401.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38339.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.410 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 67359.655 ops/s
[info]                  ·gc.alloc.rate:                   1559.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              36438.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31175.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.486 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 68596.675 ops/s
[info]                  ·gc.alloc.rate:               1601.197 MB/sec
[info]                  ·gc.alloc.rate.norm:          36735.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1676.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38461.134 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson":
[info]   67687.879 ±(99.9%) 2283.220 ops/s [Average]
[info]   (min, avg, max) = (67145.080, 67687.879, 68596.675), stdev = 592.945
[info]   CI (99.9%): [65404.660, 69971.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1566.228 ±(99.9%) 83.910 MB/sec [Average]
[info]   (min, avg, max) = (1546.106, 1566.228, 1601.197), stdev = 21.791
[info]   CI (99.9%): [1482.318, 1650.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   36415.387 ±(99.9%) 764.403 B/op [Average]
[info]   (min, avg, max) = (36239.410, 36415.387, 36735.680), stdev = 198.513
[info]   CI (99.9%): [35650.984, 37179.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1523.033 ±(99.9%) 699.619 MB/sec [Average]
[info]   (min, avg, max) = (1315.343, 1523.033, 1676.404), stdev = 181.689
[info]   CI (99.9%): [823.414, 2222.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   35397.823 ±(99.9%) 15643.315 B/op [Average]
[info]   (min, avg, max) = (30727.416, 35397.823, 38461.134), stdev = 4062.519
[info]   CI (99.9%): [19754.508, 51041.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.872 ±(99.9%) 3.568 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.872, 2.410), stdev = 0.927
[info]   CI (99.9%): [≈ 0, 4.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 48.24% complete, ETA 00:46:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34107.532 ops/s
[info] # Warmup Iteration   2: 131212.621 ops/s
[info] # Warmup Iteration   3: 139691.594 ops/s
[info] Iteration   1: 143709.845 ops/s
[info]                  ·gc.alloc.rate:                   1878.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              20577.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21733.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.643 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.898 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 142756.519 ops/s
[info]                  ·gc.alloc.rate:                   1856.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              20464.801 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18118.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.689 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 142381.838 ops/s
[info]                  ·gc.alloc.rate:                   1885.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              20840.388 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21850.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.460 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 144471.134 ops/s
[info]                  ·gc.alloc.rate:                   1899.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              20690.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18065.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.227 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 143188.353 ops/s
[info]                  ·gc.alloc.rate:               1897.327 MB/sec
[info]                  ·gc.alloc.rate.norm:          20853.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2005.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22038.290 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce":
[info]   143301.538 ±(99.9%) 3157.983 ops/s [Average]
[info]   (min, avg, max) = (142381.838, 143301.538, 144471.134), stdev = 820.118
[info]   CI (99.9%): [140143.555, 146459.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate":
[info]   1883.462 ±(99.9%) 66.897 MB/sec [Average]
[info]   (min, avg, max) = (1856.293, 1883.462, 1899.376), stdev = 17.373
[info]   CI (99.9%): [1816.566, 1950.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20685.311 ±(99.9%) 646.426 B/op [Average]
[info]   (min, avg, max) = (20464.801, 20685.311, 20853.664), stdev = 167.875
[info]   CI (99.9%): [20038.886, 21331.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1853.658 ±(99.9%) 713.958 MB/sec [Average]
[info]   (min, avg, max) = (1643.470, 1853.658, 2005.108), stdev = 185.413
[info]   CI (99.9%): [1139.700, 2567.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   20361.320 ±(99.9%) 7987.772 B/op [Average]
[info]   (min, avg, max) = (18065.759, 20361.320, 22038.290), stdev = 2074.399
[info]   CI (99.9%): [12373.547, 28349.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.754 ±(99.9%) 6.221 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.754, 3.643), stdev = 1.615
[info]   CI (99.9%): [≈ 0, 6.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   8.255 ±(99.9%) 68.121 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.255, 39.898), stdev = 17.691
[info]   CI (99.9%): [≈ 0, 76.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 14.000), stdev = 3.286
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 48.47% complete, ETA 00:46:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.671 ops/s
[info] # Warmup Iteration   2: 801918.112 ops/s
[info] # Warmup Iteration   3: 808575.315 ops/s
[info] Iteration   1: 851163.182 ops/s
[info]                  ·gc.alloc.rate:                   483.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              894.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1200.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 857829.106 ops/s
[info]                  ·gc.alloc.rate:               487.059 MB/sec
[info]                  ·gc.alloc.rate.norm:          893.585 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 596.459 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 854485.867 ops/s
[info]                  ·gc.alloc.rate:                   495.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.108 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1198.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 840279.895 ops/s
[info]                  ·gc.alloc.rate:               477.316 MB/sec
[info]                  ·gc.alloc.rate.norm:          894.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 610.158 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 851665.884 ops/s
[info]                  ·gc.alloc.rate:                   489.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1205.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava":
[info]   851084.787 ±(99.9%) 25407.153 ops/s [Average]
[info]   (min, avg, max) = (840279.895, 851084.787, 857829.106), stdev = 6598.157
[info]   CI (99.9%): [825677.633, 876491.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   486.544 ±(99.9%) 25.805 MB/sec [Average]
[info]   (min, avg, max) = (477.316, 486.544, 495.427), stdev = 6.701
[info]   CI (99.9%): [460.739, 512.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   899.634 ±(99.9%) 31.708 B/op [Average]
[info]   (min, avg, max) = (893.585, 899.634, 912.108), stdev = 8.234
[info]   CI (99.9%): [867.927, 931.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   520.745 ±(99.9%) 686.565 MB/sec [Average]
[info]   (min, avg, max) = (325.107, 520.745, 652.181), stdev = 178.299
[info]   CI (99.9%): [≈ 0, 1207.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   962.328 ±(99.9%) 1262.172 B/op [Average]
[info]   (min, avg, max) = (596.459, 962.328, 1205.229), stdev = 327.782
[info]   CI (99.9%): [≈ 0, 2224.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.015 ±(99.9%) 0.077 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.039), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.142 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.072), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.71% complete, ETA 00:46:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101164.462 ops/s
[info] # Warmup Iteration   2: 399864.941 ops/s
[info] # Warmup Iteration   3: 423872.154 ops/s
[info] Iteration   1: 430178.044 ops/s
[info]                  ·gc.alloc.rate:               444.645 MB/sec
[info]                  ·gc.alloc.rate.norm:          1626.767 B/op
[info]                  ·gc.churn.PS_Eden_Space:      581.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2128.855 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 432675.465 ops/s
[info]                  ·gc.alloc.rate:               441.746 MB/sec
[info]                  ·gc.alloc.rate.norm:          1606.856 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1186.081 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 433257.681 ops/s
[info]                  ·gc.alloc.rate:               447.111 MB/sec
[info]                  ·gc.alloc.rate.norm:          1623.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1186.930 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 431173.226 ops/s
[info]                  ·gc.alloc.rate:                   448.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              1636.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2387.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 432752.838 ops/s
[info]                  ·gc.alloc.rate:               440.729 MB/sec
[info]                  ·gc.alloc.rate.norm:          1602.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1190.710 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala":
[info]   432007.451 ±(99.9%) 4949.081 ops/s [Average]
[info]   (min, avg, max) = (430178.044, 432007.451, 433257.681), stdev = 1285.261
[info]   CI (99.9%): [427058.370, 436956.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   444.515 ±(99.9%) 12.688 MB/sec [Average]
[info]   (min, avg, max) = (440.729, 444.515, 448.345), stdev = 3.295
[info]   CI (99.9%): [431.827, 457.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1619.354 ±(99.9%) 54.725 B/op [Average]
[info]   (min, avg, max) = (1602.620, 1619.354, 1636.535), stdev = 14.212
[info]   CI (99.9%): [1564.630, 1674.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   443.261 ±(99.9%) 622.067 MB/sec [Average]
[info]   (min, avg, max) = (326.069, 443.261, 654.124), stdev = 161.549
[info]   CI (99.9%): [≈ 0, 1065.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1616.048 ±(99.9%) 2284.804 B/op [Average]
[info]   (min, avg, max) = (1186.081, 1616.048, 2387.664), stdev = 593.356
[info]   CI (99.9%): [≈ 0, 3900.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.262 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.152), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 7.000), stdev = 2.049
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.94% complete, ETA 00:46:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 616264.321 ops/s
[info] # Warmup Iteration   2: 1097851.743 ops/s
[info] # Warmup Iteration   3: 1106220.776 ops/s
[info] Iteration   1: 1156386.778 ops/s
[info]                  ·gc.alloc.rate:                   409.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              556.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     348.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1152083.771 ops/s
[info]                  ·gc.alloc.rate:                   422.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              576.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     900.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1152900.794 ops/s
[info]                  ·gc.alloc.rate:               406.385 MB/sec
[info]                  ·gc.alloc.rate.norm:          554.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 451.068 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1155262.189 ops/s
[info]                  ·gc.alloc.rate:                   410.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              559.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     450.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1147160.800 ops/s
[info]                  ·gc.alloc.rate:               406.498 MB/sec
[info]                  ·gc.alloc.rate.norm:          557.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 454.237 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala":
[info]   1152758.866 ±(99.9%) 13782.213 ops/s [Average]
[info]   (min, avg, max) = (1147160.800, 1152758.866, 1156386.778), stdev = 3579.197
[info]   CI (99.9%): [1138976.653, 1166541.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   410.911 ±(99.9%) 24.953 MB/sec [Average]
[info]   (min, avg, max) = (406.385, 410.911, 422.084), stdev = 6.480
[info]   CI (99.9%): [385.959, 435.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   560.967 ±(99.9%) 34.146 B/op [Average]
[info]   (min, avg, max) = (554.747, 560.967, 576.590), stdev = 8.868
[info]   CI (99.9%): [526.821, 595.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   381.486 ±(99.9%) 611.423 MB/sec [Average]
[info]   (min, avg, max) = (255.820, 381.486, 659.545), stdev = 158.785
[info]   CI (99.9%): [≈ 0, 992.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   520.920 ±(99.9%) 836.174 B/op [Average]
[info]   (min, avg, max) = (348.167, 520.920, 900.975), stdev = 217.152
[info]   CI (99.9%): [≈ 0, 1357.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.092 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.057), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 6.000), stdev = 1.732
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 49.18% complete, ETA 00:45:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11060.448 ops/s
[info] # Warmup Iteration   2: 68761.060 ops/s
[info] # Warmup Iteration   3: 76919.261 ops/s
[info] Iteration   1: 80154.315 ops/s
[info]                  ·gc.alloc.rate:                   3194.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              62721.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2944.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57805.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.496 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 80581.229 ops/s
[info]                  ·gc.alloc.rate:                   3270.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              63857.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3313.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64693.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.407 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 80598.801 ops/s
[info]                  ·gc.alloc.rate:                   3259.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              63646.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3018.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58937.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.406 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 80044.166 ops/s
[info]                  ·gc.alloc.rate:                   3238.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              63682.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3040.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59779.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.819 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 79825.477 ops/s
[info]                  ·gc.alloc.rate:               3231.128 MB/sec
[info]                  ·gc.alloc.rate.norm:          63701.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3052.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60176.792 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson":
[info]   80240.798 ±(99.9%) 1309.636 ops/s [Average]
[info]   (min, avg, max) = (79825.477, 80240.798, 80598.801), stdev = 340.108
[info]   CI (99.9%): [78931.162, 81550.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3238.811 ±(99.9%) 112.981 MB/sec [Average]
[info]   (min, avg, max) = (3194.416, 3238.811, 3270.280), stdev = 29.341
[info]   CI (99.9%): [3125.831, 3351.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63522.006 ±(99.9%) 1750.609 B/op [Average]
[info]   (min, avg, max) = (62721.609, 63522.006, 63857.417), stdev = 454.628
[info]   CI (99.9%): [61771.397, 65272.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3073.599 ±(99.9%) 540.396 MB/sec [Average]
[info]   (min, avg, max) = (2944.021, 3073.599, 3313.102), stdev = 140.339
[info]   CI (99.9%): [2533.204, 3613.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   60278.413 ±(99.9%) 10127.475 B/op [Average]
[info]   (min, avg, max) = (57805.157, 60278.413, 64693.585), stdev = 2630.073
[info]   CI (99.9%): [50150.939, 70405.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.363 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.229), stdev = 0.094
[info]   CI (99.9%): [≈ 0, 0.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.226 ±(99.9%) 7.128 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.226, 4.496), stdev = 1.851
[info]   CI (99.9%): [≈ 0, 8.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.count":
[info]   46.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 12.800, 14.000), stdev = 1.095
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 49.41% complete, ETA 00:45:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 60818.876 ops/s
[info] # Warmup Iteration   2: 239077.398 ops/s
[info] # Warmup Iteration   3: 258511.457 ops/s
[info] Iteration   1: 250666.046 ops/s
[info]                  ·gc.alloc.rate:                   1519.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              9535.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10371.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.915 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.299 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 264671.849 ops/s
[info]                  ·gc.alloc.rate:                   1618.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              9623.106 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9786.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.085 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 268339.213 ops/s
[info]                  ·gc.alloc.rate:                   1622.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              9512.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7704.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.366 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 266605.336 ops/s
[info]                  ·gc.alloc.rate:                   1604.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              9472.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9734.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.246 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 266850.789 ops/s
[info]                  ·gc.alloc.rate:                   1611.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              9507.152 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9788.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.368 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce":
[info]   263426.646 ±(99.9%) 27923.512 ops/s [Average]
[info]   (min, avg, max) = (250666.046, 263426.646, 268339.213), stdev = 7251.648
[info]   CI (99.9%): [235503.134, 291350.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1595.240 ±(99.9%) 165.910 MB/sec [Average]
[info]   (min, avg, max) = (1519.092, 1595.240, 1622.162), stdev = 43.086
[info]   CI (99.9%): [1429.330, 1761.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   9530.221 ±(99.9%) 217.892 B/op [Average]
[info]   (min, avg, max) = (9472.800, 9530.221, 9623.106), stdev = 56.586
[info]   CI (99.9%): [9312.329, 9748.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1584.111 ±(99.9%) 581.893 MB/sec [Average]
[info]   (min, avg, max) = (1313.945, 1584.111, 1659.705), stdev = 151.116
[info]   CI (99.9%): [1002.218, 2166.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9477.083 ±(99.9%) 3945.076 B/op [Average]
[info]   (min, avg, max) = (7704.946, 9477.083, 10371.070), stdev = 1024.524
[info]   CI (99.9%): [5532.007, 13422.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.754 ±(99.9%) 4.770 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.754, 2.915), stdev = 1.239
[info]   CI (99.9%): [≈ 0, 5.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.673 ±(99.9%) 29.994 B/op [Average]
[info]   (min, avg, max) = (0.246, 4.673, 18.299), stdev = 7.789
[info]   CI (99.9%): [≈ 0, 34.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 14.000), stdev = 3.209
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 49.65% complete, ETA 00:45:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.819 ops/s
[info] # Warmup Iteration   2: 1155212.311 ops/s
[info] # Warmup Iteration   3: 1236582.487 ops/s
[info] Iteration   1: 1243404.724 ops/s
[info]                  ·gc.alloc.rate:               433.331 MB/sec
[info]                  ·gc.alloc.rate.norm:          548.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 411.475 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 1242469.837 ops/s
[info]                  ·gc.alloc.rate:               431.076 MB/sec
[info]                  ·gc.alloc.rate.norm:          545.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 411.785 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1229100.825 ops/s
[info]                  ·gc.alloc.rate:                   439.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              562.256 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     833.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1224099.137 ops/s
[info]                  ·gc.alloc.rate:                   426.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              548.246 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     419.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1247198.226 ops/s
[info]                  ·gc.alloc.rate:               435.111 MB/sec
[info]                  ·gc.alloc.rate.norm:          549.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 411.487 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava":
[info]   1237254.550 ±(99.9%) 38672.078 ops/s [Average]
[info]   (min, avg, max) = (1224099.137, 1237254.550, 1247198.226), stdev = 10043.016
[info]   CI (99.9%): [1198582.472, 1275926.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   433.002 ±(99.9%) 18.125 MB/sec [Average]
[info]   (min, avg, max) = (426.413, 433.002, 439.081), stdev = 4.707
[info]   CI (99.9%): [414.877, 451.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   550.764 ±(99.9%) 25.182 B/op [Average]
[info]   (min, avg, max) = (545.845, 550.764, 562.256), stdev = 6.540
[info]   CI (99.9%): [525.581, 575.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   390.661 ±(99.9%) 559.998 MB/sec [Average]
[info]   (min, avg, max) = (325.149, 390.661, 650.812), stdev = 145.430
[info]   CI (99.9%): [≈ 0, 950.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   497.474 ±(99.9%) 723.186 B/op [Average]
[info]   (min, avg, max) = (411.475, 497.474, 833.385), stdev = 187.809
[info]   CI (99.9%): [≈ 0, 1220.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.027), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.88% complete, ETA 00:45:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 553168.308 ops/s
[info] # Warmup Iteration   2: 1392214.017 ops/s
[info] # Warmup Iteration   3: 1471572.480 ops/s
[info] Iteration   1: 1467602.726 ops/s
[info]                  ·gc.alloc.rate:                   881.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              944.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     704.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1462277.645 ops/s
[info]                  ·gc.alloc.rate:                   892.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              961.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1061.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1531410.605 ops/s
[info]                  ·gc.alloc.rate:                   923.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              948.662 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1016.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.102 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.188 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1557083.382 ops/s
[info]                  ·gc.alloc.rate:                   929.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              939.983 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     665.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.652 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1540992.109 ops/s
[info]                  ·gc.alloc.rate:                   939.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              959.623 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1004.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala":
[info]   1511873.293 ±(99.9%) 168871.433 ops/s [Average]
[info]   (min, avg, max) = (1462277.645, 1511873.293, 1557083.382), stdev = 43855.375
[info]   CI (99.9%): [1343001.860, 1680744.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   913.354 ±(99.9%) 96.471 MB/sec [Average]
[info]   (min, avg, max) = (881.190, 913.354, 939.593), stdev = 25.053
[info]   CI (99.9%): [816.883, 1009.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   950.843 ±(99.9%) 35.399 B/op [Average]
[info]   (min, avg, max) = (939.983, 950.843, 961.011), stdev = 9.193
[info]   CI (99.9%): [915.445, 986.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   854.785 ±(99.9%) 694.049 MB/sec [Average]
[info]   (min, avg, max) = (656.557, 854.785, 988.612), stdev = 180.242
[info]   CI (99.9%): [160.736, 1548.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   890.421 ±(99.9%) 729.922 B/op [Average]
[info]   (min, avg, max) = (665.230, 890.421, 1061.905), stdev = 189.558
[info]   CI (99.9%): [160.499, 1620.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.770 ±(99.9%) 5.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.770, 3.102), stdev = 1.330
[info]   CI (99.9%): [≈ 0, 5.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.790 ±(99.9%) 5.263 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.790, 3.188), stdev = 1.367
[info]   CI (99.9%): [≈ 0, 6.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 10.000), stdev = 3.050
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.12% complete, ETA 00:45:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1067863.801 ops/s
[info] # Warmup Iteration   2: 1809182.308 ops/s
[info] # Warmup Iteration   3: 1801801.229 ops/s
[info] Iteration   1: 1825980.831 ops/s
[info]                  ·gc.alloc.rate:                   638.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     568.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1878020.684 ops/s
[info]                  ·gc.alloc.rate:                   662.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              554.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     553.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1802858.442 ops/s
[info]                  ·gc.alloc.rate:                   631.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.872 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     577.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1806174.511 ops/s
[info]                  ·gc.alloc.rate:               629.678 MB/sec
[info]                  ·gc.alloc.rate.norm:          548.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 576.694 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1909390.998 ops/s
[info]                  ·gc.alloc.rate:                   669.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.175 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     546.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.162 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala":
[info]   1844485.093 ±(99.9%) 181433.366 ops/s [Average]
[info]   (min, avg, max) = (1802858.442, 1844485.093, 1909390.998), stdev = 47117.669
[info]   CI (99.9%): [1663051.727, 2025918.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   646.253 ±(99.9%) 71.289 MB/sec [Average]
[info]   (min, avg, max) = (629.678, 646.253, 669.887), stdev = 18.514
[info]   CI (99.9%): [574.963, 717.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   551.374 ±(99.9%) 8.845 B/op [Average]
[info]   (min, avg, max) = (548.680, 551.374, 554.818), stdev = 2.297
[info]   CI (99.9%): [542.529, 560.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   661.036 ±(99.9%) 5.536 MB/sec [Average]
[info]   (min, avg, max) = (659.129, 661.036, 662.812), stdev = 1.438
[info]   CI (99.9%): [655.500, 666.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   564.305 ±(99.9%) 53.719 B/op [Average]
[info]   (min, avg, max) = (546.343, 564.305, 577.143), stdev = 13.951
[info]   CI (99.9%): [510.586, 618.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.537 ±(99.9%) 4.490 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.537, 2.623), stdev = 1.166
[info]   CI (99.9%): [≈ 0, 5.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.443 ±(99.9%) 3.700 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.443, 2.162), stdev = 0.961
[info]   CI (99.9%): [≈ 0, 4.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 50.35% complete, ETA 00:44:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 807121.989 ops/s
[info] # Warmup Iteration   2: 1929093.754 ops/s
[info] # Warmup Iteration   3: 1959886.665 ops/s
[info] Iteration   1: 2001729.743 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2002436.070 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2002949.043 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2003712.294 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2004325.213 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc":
[info]   2003030.473 ±(99.9%) 3942.483 ops/s [Average]
[info]   (min, avg, max) = (2001729.743, 2003030.473, 2004325.213), stdev = 1023.850
[info]   CI (99.9%): [1999087.990, 2006972.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 50.59% complete, ETA 00:44:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11404.468 ops/s
[info] # Warmup Iteration   2: 39773.318 ops/s
[info] # Warmup Iteration   3: 41051.423 ops/s
[info] Iteration   1: 41979.480 ops/s
[info]                  ·gc.alloc.rate:                   2072.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              77712.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74100.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.997 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 149.850 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 43106.831 ops/s
[info]                  ·gc.alloc.rate:                   2105.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              76858.964 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71842.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.520 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 42763.269 ops/s
[info]                  ·gc.alloc.rate:                   2120.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              78056.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2311.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85074.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.597 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 43027.510 ops/s
[info]                  ·gc.alloc.rate:                   2128.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              77838.218 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73098.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.761 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 43231.422 ops/s
[info]                  ·gc.alloc.rate:               2137.666 MB/sec
[info]                  ·gc.alloc.rate.norm:          77822.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2012.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 73264.752 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson":
[info]   42821.702 ±(99.9%) 1929.436 ops/s [Average]
[info]   (min, avg, max) = (41979.480, 42821.702, 43231.422), stdev = 501.068
[info]   CI (99.9%): [40892.267, 44751.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2112.946 ±(99.9%) 97.580 MB/sec [Average]
[info]   (min, avg, max) = (2072.865, 2112.946, 2137.666), stdev = 25.341
[info]   CI (99.9%): [2015.366, 2210.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   77657.738 ±(99.9%) 1785.210 B/op [Average]
[info]   (min, avg, max) = (76858.964, 77657.738, 78056.487), stdev = 463.613
[info]   CI (99.9%): [75872.528, 79442.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2053.384 ±(99.9%) 560.022 MB/sec [Average]
[info]   (min, avg, max) = (1967.825, 2053.384, 2311.627), stdev = 145.436
[info]   CI (99.9%): [1493.362, 2613.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   75476.311 ±(99.9%) 20893.823 B/op [Average]
[info]   (min, avg, max) = (71842.595, 75476.311, 85074.674), stdev = 5426.059
[info]   CI (99.9%): [54582.489, 96370.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.837 ±(99.9%) 6.805 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.837, 3.997), stdev = 1.767
[info]   CI (99.9%): [≈ 0, 7.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   31.346 ±(99.9%) 255.178 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 31.346, 149.850), stdev = 66.269
[info]   CI (99.9%): [≈ 0, 286.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 12.000), stdev = 2.168
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 50.82% complete, ETA 00:44:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3739.369 ops/s
[info] # Warmup Iteration   2: 13286.294 ops/s
[info] # Warmup Iteration   3: 14571.327 ops/s
[info] Iteration   1: 14632.962 ops/s
[info]                  ·gc.alloc.rate:                   1809.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              194638.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     178261.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.477 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 373.916 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 15029.108 ops/s
[info]                  ·gc.alloc.rate:                   1845.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              193175.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1977.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207050.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.601 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 15006.559 ops/s
[info]                  ·gc.alloc.rate:                   1843.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              193381.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172829.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.915 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 14895.180 ops/s
[info]                  ·gc.alloc.rate:                   1858.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              196298.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210306.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.199 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 14812.880 ops/s
[info]                  ·gc.alloc.rate:                   1834.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              194799.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1670.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177440.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.177 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce":
[info]   14875.338 ±(99.9%) 620.614 ops/s [Average]
[info]   (min, avg, max) = (14632.962, 14875.338, 15029.108), stdev = 161.172
[info]   CI (99.9%): [14254.724, 15495.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate":
[info]   1838.264 ±(99.9%) 69.729 MB/sec [Average]
[info]   (min, avg, max) = (1809.764, 1838.264, 1858.368), stdev = 18.108
[info]   CI (99.9%): [1768.535, 1907.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   194458.536 ±(99.9%) 4847.971 B/op [Average]
[info]   (min, avg, max) = (193175.457, 194458.536, 196298.383), stdev = 1259.003
[info]   CI (99.9%): [189610.565, 199306.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1788.954 ±(99.9%) 687.534 MB/sec [Average]
[info]   (min, avg, max) = (1647.997, 1788.954, 1990.983), stdev = 178.550
[info]   CI (99.9%): [1101.421, 2476.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   189177.722 ±(99.9%) 69151.787 B/op [Average]
[info]   (min, avg, max) = (172829.915, 189177.722, 210306.423), stdev = 17958.500
[info]   CI (99.9%): [120025.934, 258329.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.866 ±(99.9%) 5.652 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.866, 3.477), stdev = 1.468
[info]   CI (99.9%): [≈ 0, 6.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   92.762 ±(99.9%) 608.582 B/op [Average]
[info]   (min, avg, max) = (2.199, 92.762, 373.916), stdev = 158.047
[info]   CI (99.9%): [≈ 0, 701.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 12.000), stdev = 2.074
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.06% complete, ETA 00:44:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33141.601 ops/s
[info] # Warmup Iteration   2: 89437.138 ops/s
[info] # Warmup Iteration   3: 96286.818 ops/s
[info] Iteration   1: 98915.139 ops/s
[info]                  ·gc.alloc.rate:                   1341.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              21332.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20923.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.994 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 99704.851 ops/s
[info]                  ·gc.alloc.rate:                   1342.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              21189.824 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20789.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.915 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.780 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 99478.447 ops/s
[info]                  ·gc.alloc.rate:                   1350.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              21365.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20710.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.623 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 100014.969 ops/s
[info]                  ·gc.alloc.rate:               1349.152 MB/sec
[info]                  ·gc.alloc.rate.norm:          21230.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20582.821 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 99956.399 ops/s
[info]                  ·gc.alloc.rate:               1362.694 MB/sec
[info]                  ·gc.alloc.rate.norm:          21456.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1312.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20673.842 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala":
[info]   99613.961 ±(99.9%) 1714.562 ops/s [Average]
[info]   (min, avg, max) = (98915.139, 99613.961, 100014.969), stdev = 445.266
[info]   CI (99.9%): [97899.399, 101328.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1349.266 ±(99.9%) 32.730 MB/sec [Average]
[info]   (min, avg, max) = (1341.089, 1349.266, 1362.694), stdev = 8.500
[info]   CI (99.9%): [1316.537, 1381.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   21315.226 ±(99.9%) 412.094 B/op [Average]
[info]   (min, avg, max) = (21189.824, 21315.226, 21456.937), stdev = 107.019
[info]   CI (99.9%): [20903.132, 21727.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1312.581 ±(99.9%) 15.694 MB/sec [Average]
[info]   (min, avg, max) = (1307.975, 1312.581, 1317.552), stdev = 4.076
[info]   CI (99.9%): [1296.888, 1328.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20736.044 ±(99.9%) 494.833 B/op [Average]
[info]   (min, avg, max) = (20582.821, 20736.044, 20923.610), stdev = 128.507
[info]   CI (99.9%): [20241.211, 21230.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.841 ±(99.9%) 6.627 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.841, 3.915), stdev = 1.721
[info]   CI (99.9%): [≈ 0, 7.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   13.279 ±(99.9%) 104.557 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.279, 61.780), stdev = 27.153
[info]   CI (99.9%): [≈ 0, 117.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 13.000), stdev = 3.391
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.29% complete, ETA 00:44:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108000.000 ops/s
[info] # Warmup Iteration   2: 233186.095 ops/s
[info] # Warmup Iteration   3: 255619.241 ops/s
[info] Iteration   1: 257331.897 ops/s
[info]                  ·gc.alloc.rate:                   871.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              5330.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6066.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 246277.974 ops/s
[info]                  ·gc.alloc.rate:                   818.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              5230.141 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4233.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 245516.917 ops/s
[info]                  ·gc.alloc.rate:                   820.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              5258.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6377.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 243050.913 ops/s
[info]                  ·gc.alloc.rate:                   818.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              5297.337 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4300.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.811 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.198 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 258417.441 ops/s
[info]                  ·gc.alloc.rate:                   858.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              5229.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4032.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.761 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala":
[info]   250119.028 ±(99.9%) 27685.869 ops/s [Average]
[info]   (min, avg, max) = (243050.913, 250119.028, 258417.441), stdev = 7189.932
[info]   CI (99.9%): [222433.159, 277804.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   837.456 ±(99.9%) 98.879 MB/sec [Average]
[info]   (min, avg, max) = (818.240, 837.456, 871.569), stdev = 25.679
[info]   CI (99.9%): [738.577, 936.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5269.299 ±(99.9%) 169.549 B/op [Average]
[info]   (min, avg, max) = (5229.621, 5269.299, 5330.551), stdev = 44.031
[info]   CI (99.9%): [5099.749, 5438.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   795.153 ±(99.9%) 696.923 MB/sec [Average]
[info]   (min, avg, max) = (662.161, 795.153, 994.872), stdev = 180.989
[info]   CI (99.9%): [98.230, 1492.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5002.282 ±(99.9%) 4325.682 B/op [Average]
[info]   (min, avg, max) = (4032.766, 5002.282, 6377.587), stdev = 1123.366
[info]   CI (99.9%): [676.600, 9327.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.608 ±(99.9%) 4.745 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.608, 2.811), stdev = 1.232
[info]   CI (99.9%): [≈ 0, 5.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.921 ±(99.9%) 30.747 B/op [Average]
[info]   (min, avg, max) = (0.133, 3.921, 18.198), stdev = 7.985
[info]   CI (99.9%): [≈ 0, 34.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 8.000), stdev = 2.302
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 51.53% complete, ETA 00:43:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1226.403 ops/s
[info] # Warmup Iteration   2: 11586.842 ops/s
[info] # Warmup Iteration   3: 12654.683 ops/s
[info] Iteration   1: 13132.641 ops/s
[info]                  ·gc.alloc.rate:                   2204.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              264135.340 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     235819.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.621 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 553.825 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 13207.702 ops/s
[info]                  ·gc.alloc.rate:                   2235.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              266359.153 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2283.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     272145.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.481 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 13174.052 ops/s
[info]                  ·gc.alloc.rate:                   2236.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              267223.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     235784.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.487 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 13099.833 ops/s
[info]                  ·gc.alloc.rate:                   2240.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              269044.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2326.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     279430.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.501 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 13137.885 ops/s
[info]                  ·gc.alloc.rate:               2234.139 MB/sec
[info]                  ·gc.alloc.rate.norm:          267559.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2012.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 240996.919 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson":
[info]   13150.423 ±(99.9%) 159.604 ops/s [Average]
[info]   (min, avg, max) = (13099.833, 13150.423, 13207.702), stdev = 41.449
[info]   CI (99.9%): [12990.818, 13310.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2230.137 ±(99.9%) 56.768 MB/sec [Average]
[info]   (min, avg, max) = (2204.083, 2230.137, 2240.232), stdev = 14.743
[info]   CI (99.9%): [2173.369, 2286.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   266864.507 ±(99.9%) 6960.037 B/op [Average]
[info]   (min, avg, max) = (264135.340, 266864.507, 269044.422), stdev = 1807.500
[info]   CI (99.9%): [259904.470, 273824.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2112.895 ±(99.9%) 682.086 MB/sec [Average]
[info]   (min, avg, max) = (1967.804, 2112.895, 2326.716), stdev = 177.136
[info]   CI (99.9%): [1430.810, 2794.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   252835.508 ±(99.9%) 81698.497 B/op [Average]
[info]   (min, avg, max) = (235784.373, 252835.508, 279430.858), stdev = 21216.840
[info]   CI (99.9%): [171137.011, 334534.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.937 ±(99.9%) 7.932 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.937, 4.621), stdev = 2.060
[info]   CI (99.9%): [≈ 0, 8.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   112.259 ±(99.9%) 950.515 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 112.259, 553.825), stdev = 246.846
[info]   CI (99.9%): [≈ 0, 1062.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 13.000), stdev = 1.789
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 51.76% complete, ETA 00:43:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6341.886 ops/s
[info] # Warmup Iteration   2: 31824.594 ops/s
[info] # Warmup Iteration   3: 31819.995 ops/s
[info] Iteration   1: 32884.243 ops/s
[info]                  ·gc.alloc.rate:                   2734.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              130865.749 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2628.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125803.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.989 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 32851.569 ops/s
[info]                  ·gc.alloc.rate:                   2746.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              131564.145 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2650.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     126954.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.976 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 32626.976 ops/s
[info]                  ·gc.alloc.rate:                   2744.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              132387.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2675.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     129043.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.008 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 33085.423 ops/s
[info]                  ·gc.alloc.rate:                   2784.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              132445.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2695.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128204.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.971 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 33088.454 ops/s
[info]                  ·gc.alloc.rate:               2784.410 MB/sec
[info]                  ·gc.alloc.rate.norm:          132437.323 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2708.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 128830.302 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce":
[info]   32907.333 ±(99.9%) 737.587 ops/s [Average]
[info]   (min, avg, max) = (32626.976, 32907.333, 33088.454), stdev = 191.549
[info]   CI (99.9%): [32169.746, 33644.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2758.901 ±(99.9%) 91.280 MB/sec [Average]
[info]   (min, avg, max) = (2734.450, 2758.901, 2784.410), stdev = 23.705
[info]   CI (99.9%): [2667.621, 2850.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   131939.986 ±(99.9%) 2721.531 B/op [Average]
[info]   (min, avg, max) = (130865.749, 131939.986, 132445.230), stdev = 706.773
[info]   CI (99.9%): [129218.455, 134661.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2671.637 ±(99.9%) 125.069 MB/sec [Average]
[info]   (min, avg, max) = (2628.676, 2671.637, 2708.575), stdev = 32.480
[info]   CI (99.9%): [2546.568, 2796.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   127767.332 ±(99.9%) 5260.868 B/op [Average]
[info]   (min, avg, max) = (125803.615, 127767.332, 129043.643), stdev = 1366.231
[info]   CI (99.9%): [122506.464, 133028.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.270 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.187), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.389 ±(99.9%) 12.907 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.389, 8.976), stdev = 3.352
[info]   CI (99.9%): [≈ 0, 16.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.200, 12.000), stdev = 0.837
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.00% complete, ETA 00:43:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41726.551 ops/s
[info] # Warmup Iteration   2: 102801.789 ops/s
[info] # Warmup Iteration   3: 105193.008 ops/s
[info] Iteration   1: 105787.544 ops/s
[info]                  ·gc.alloc.rate:                   1482.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              22058.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19619.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.915 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.361 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 103112.955 ops/s
[info]                  ·gc.alloc.rate:                   1464.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              22347.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25069.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.981 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 106985.827 ops/s
[info]                  ·gc.alloc.rate:               1510.372 MB/sec
[info]                  ·gc.alloc.rate.norm:          22218.896 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19285.598 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 105060.334 ops/s
[info]                  ·gc.alloc.rate:               1491.118 MB/sec
[info]                  ·gc.alloc.rate.norm:          22338.367 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19699.345 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 106715.611 ops/s
[info]                  ·gc.alloc.rate:                   1527.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              22528.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24398.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.228 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala":
[info]   105532.454 ±(99.9%) 5982.177 ops/s [Average]
[info]   (min, avg, max) = (103112.955, 105532.454, 106985.827), stdev = 1553.552
[info]   CI (99.9%): [99550.278, 111514.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1495.164 ±(99.9%) 94.724 MB/sec [Average]
[info]   (min, avg, max) = (1464.094, 1495.164, 1527.583), stdev = 24.599
[info]   CI (99.9%): [1400.440, 1589.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   22298.242 ±(99.9%) 670.002 B/op [Average]
[info]   (min, avg, max) = (22058.051, 22298.242, 22528.688), stdev = 173.997
[info]   CI (99.9%): [21628.240, 22968.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1448.294 ±(99.9%) 703.707 MB/sec [Average]
[info]   (min, avg, max) = (1310.976, 1448.294, 1654.392), stdev = 182.750
[info]   CI (99.9%): [744.587, 2152.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   21614.415 ±(99.9%) 11020.042 B/op [Average]
[info]   (min, avg, max) = (19285.598, 21614.415, 25069.228), stdev = 2861.870
[info]   CI (99.9%): [10594.373, 32634.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.783 ±(99.9%) 4.824 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.783, 2.915), stdev = 1.253
[info]   CI (99.9%): [≈ 0, 5.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.714 ±(99.9%) 71.809 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.714, 43.361), stdev = 18.649
[info]   CI (99.9%): [≈ 0, 83.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 12.000), stdev = 2.966
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.24% complete, ETA 00:43:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106060.399 ops/s
[info] # Warmup Iteration   2: 167764.704 ops/s
[info] # Warmup Iteration   3: 177600.211 ops/s
[info] Iteration   1: 178975.416 ops/s
[info]                  ·gc.alloc.rate:               580.700 MB/sec
[info]                  ·gc.alloc.rate.norm:          5106.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2899.726 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 176673.281 ops/s
[info]                  ·gc.alloc.rate:                   582.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              5186.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5886.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 178560.380 ops/s
[info]                  ·gc.alloc.rate:                   587.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              5179.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5830.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 178025.089 ops/s
[info]                  ·gc.alloc.rate:                   589.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              5205.185 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5853.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 179475.384 ops/s
[info]                  ·gc.alloc.rate:               584.994 MB/sec
[info]                  ·gc.alloc.rate.norm:          5128.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2906.075 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala":
[info]   178341.910 ±(99.9%) 4137.660 ops/s [Average]
[info]   (min, avg, max) = (176673.281, 178341.910, 179475.384), stdev = 1074.537
[info]   CI (99.9%): [174204.250, 182479.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   584.925 ±(99.9%) 13.633 MB/sec [Average]
[info]   (min, avg, max) = (580.700, 584.925, 589.061), stdev = 3.540
[info]   CI (99.9%): [571.293, 598.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5161.437 ±(99.9%) 160.243 B/op [Average]
[info]   (min, avg, max) = (5106.712, 5161.437, 5205.185), stdev = 41.615
[info]   CI (99.9%): [5001.194, 5321.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   529.195 ±(99.9%) 698.106 MB/sec [Average]
[info]   (min, avg, max) = (329.737, 529.195, 662.481), stdev = 181.296
[info]   CI (99.9%): [≈ 0, 1227.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4675.395 ±(99.9%) 6231.057 B/op [Average]
[info]   (min, avg, max) = (2899.726, 4675.395, 5886.909), stdev = 1618.186
[info]   CI (99.9%): [≈ 0, 10906.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.111 ±(99.9%) 0.389 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.111, 0.185), stdev = 0.101
[info]   CI (99.9%): [≈ 0, 0.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.517
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 52.47% complete, ETA 00:42:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 110108.150 ops/s
[info] # Warmup Iteration   2: 173842.484 ops/s
[info] # Warmup Iteration   3: 194670.530 ops/s
[info] Iteration   1: 194616.294 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 194496.296 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 194634.140 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 194620.459 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 193462.609 ops/s
[info]                  ·gc.alloc.rate:      0.056 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.456 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc":
[info]   194365.960 ±(99.9%) 1956.253 ops/s [Average]
[info]   (min, avg, max) = (193462.609, 194365.960, 194634.140), stdev = 508.033
[info]   CI (99.9%): [192409.707, 196322.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.011 ±(99.9%) 0.096 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.011, 0.056), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.093 ±(99.9%) 0.781 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.093, 0.456), stdev = 0.203
[info]   CI (99.9%): [≈ 0, 0.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 52.71% complete, ETA 00:42:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11990.417 ops/s
[info] # Warmup Iteration   2: 44304.829 ops/s
[info] # Warmup Iteration   3: 48569.287 ops/s
[info] Iteration   1: 48686.053 ops/s
[info]                  ·gc.alloc.rate:                   3444.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              111328.704 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3297.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106567.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.673 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 48191.138 ops/s
[info]                  ·gc.alloc.rate:                   3416.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              111554.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3339.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109058.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.680 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 49553.943 ops/s
[info]                  ·gc.alloc.rate:                   3511.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              111497.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3372.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107076.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.322 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 48395.737 ops/s
[info]                  ·gc.alloc.rate:               3418.945 MB/sec
[info]                  ·gc.alloc.rate.norm:          111188.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3049.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 99177.326 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   5: 47631.953 ops/s
[info]                  ·gc.alloc.rate:                   3388.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              111941.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3397.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112253.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.376 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson":
[info]   48491.765 ±(99.9%) 2726.113 ops/s [Average]
[info]   (min, avg, max) = (47631.953, 48491.765, 49553.943), stdev = 707.963
[info]   CI (99.9%): [45765.652, 51217.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   3436.087 ±(99.9%) 180.694 MB/sec [Average]
[info]   (min, avg, max) = (3388.383, 3436.087, 3511.990), stdev = 46.926
[info]   CI (99.9%): [3255.393, 3616.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   111502.010 ±(99.9%) 1096.102 B/op [Average]
[info]   (min, avg, max) = (111188.183, 111502.010, 111941.065), stdev = 284.654
[info]   CI (99.9%): [110405.908, 112598.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   3291.509 ±(99.9%) 540.374 MB/sec [Average]
[info]   (min, avg, max) = (3049.621, 3291.509, 3397.828), stdev = 140.333
[info]   CI (99.9%): [2751.134, 3831.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   106826.654 ±(99.9%) 18574.084 B/op [Average]
[info]   (min, avg, max) = (99177.326, 106826.654, 112253.098), stdev = 4823.631
[info]   CI (99.9%): [88252.569, 125400.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.810 ±(99.9%) 2.173 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.810, 1.376), stdev = 0.564
[info]   CI (99.9%): [≈ 0, 2.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.200, 15.000), stdev = 1.095
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 52.94% complete, ETA 00:42:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4605.165 ops/s
[info] # Warmup Iteration   2: 23239.853 ops/s
[info] # Warmup Iteration   3: 26570.788 ops/s
[info] Iteration   1: 26236.864 ops/s
[info]                  ·gc.alloc.rate:                   1421.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              85275.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99223.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.498 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 25803.303 ops/s
[info]                  ·gc.alloc.rate:                   1402.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              85516.454 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80609.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.893 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 237.431 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 25585.082 ops/s
[info]                  ·gc.alloc.rate:                   1368.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              84166.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80725.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.561 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 26894.267 ops/s
[info]                  ·gc.alloc.rate:               1437.579 MB/sec
[info]                  ·gc.alloc.rate.norm:          84111.166 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76836.319 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 26650.925 ops/s
[info]                  ·gc.alloc.rate:               1444.605 MB/sec
[info]                  ·gc.alloc.rate.norm:          85308.542 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77893.768 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce":
[info]   26234.088 ±(99.9%) 2123.431 ops/s [Average]
[info]   (min, avg, max) = (25585.082, 26234.088, 26894.267), stdev = 551.448
[info]   CI (99.9%): [24110.657, 28357.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate":
[info]   1414.827 ±(99.9%) 118.447 MB/sec [Average]
[info]   (min, avg, max) = (1368.246, 1414.827, 1444.605), stdev = 30.760
[info]   CI (99.9%): [1296.380, 1533.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   84875.654 ±(99.9%) 2615.770 B/op [Average]
[info]   (min, avg, max) = (84111.166, 84875.654, 85516.454), stdev = 679.307
[info]   CI (99.9%): [82259.884, 87491.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1384.077 ±(99.9%) 581.642 MB/sec [Average]
[info]   (min, avg, max) = (1312.318, 1384.077, 1654.195), stdev = 151.051
[info]   CI (99.9%): [802.434, 1965.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   83057.752 ±(99.9%) 35403.009 B/op [Average]
[info]   (min, avg, max) = (76836.319, 83057.752, 99223.102), stdev = 9194.049
[info]   CI (99.9%): [47654.744, 118460.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.795 ±(99.9%) 6.668 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.795, 3.893), stdev = 1.732
[info]   CI (99.9%): [≈ 0, 7.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   48.498 ±(99.9%) 406.722 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.498, 237.431), stdev = 105.624
[info]   CI (99.9%): [≈ 0, 455.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 17.000), stdev = 4.930
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.18% complete, ETA 00:42:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6668.326 ops/s
[info] # Warmup Iteration   2: 26254.036 ops/s
[info] # Warmup Iteration   3: 29137.500 ops/s
[info] Iteration   1: 29148.754 ops/s
[info]                  ·gc.alloc.rate:                   1201.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              64870.721 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70962.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.248 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 29069.267 ops/s
[info]                  ·gc.alloc.rate:                   1196.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              64758.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53467.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 167.931 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 28844.907 ops/s
[info]                  ·gc.alloc.rate:                   1186.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              64719.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71544.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.874 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 28457.128 ops/s
[info]                  ·gc.alloc.rate:               1163.627 MB/sec
[info]                  ·gc.alloc.rate.norm:          64357.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54160.461 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 27894.014 ops/s
[info]                  ·gc.alloc.rate:               1162.471 MB/sec
[info]                  ·gc.alloc.rate.norm:          65584.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 73738.570 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala":
[info]   28682.814 ±(99.9%) 1987.712 ops/s [Average]
[info]   (min, avg, max) = (27894.014, 28682.814, 29148.754), stdev = 516.202
[info]   CI (99.9%): [26695.102, 30670.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1182.074 ±(99.9%) 70.178 MB/sec [Average]
[info]   (min, avg, max) = (1162.471, 1182.074, 1201.432), stdev = 18.225
[info]   CI (99.9%): [1111.896, 1252.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   64858.010 ±(99.9%) 1729.905 B/op [Average]
[info]   (min, avg, max) = (64357.517, 64858.010, 65584.274), stdev = 449.251
[info]   CI (99.9%): [63128.105, 66587.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1179.962 ±(99.9%) 690.301 MB/sec [Average]
[info]   (min, avg, max) = (979.258, 1179.962, 1314.254), stdev = 179.269
[info]   CI (99.9%): [489.661, 1870.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   64774.644 ±(99.9%) 38745.443 B/op [Average]
[info]   (min, avg, max) = (53467.494, 64774.644, 73738.570), stdev = 10062.069
[info]   CI (99.9%): [26029.201, 103520.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.870 ±(99.9%) 5.202 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.870, 3.103), stdev = 1.351
[info]   CI (99.9%): [≈ 0, 6.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   47.211 ±(99.9%) 281.658 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 47.211, 167.931), stdev = 73.146
[info]   CI (99.9%): [≈ 0, 328.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.200, 14.000), stdev = 4.324
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.41% complete, ETA 00:42:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 268951.767 ops/s
[info] # Warmup Iteration   2: 600371.163 ops/s
[info] # Warmup Iteration   3: 649496.669 ops/s
[info] Iteration   1: 657411.109 ops/s
[info]                  ·gc.alloc.rate:                   1756.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              4206.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3974.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.528 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 658850.136 ops/s
[info]                  ·gc.alloc.rate:                   1778.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              4249.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4737.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.696 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 661016.168 ops/s
[info]                  ·gc.alloc.rate:                   1785.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              4251.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3942.903 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 648634.444 ops/s
[info]                  ·gc.alloc.rate:                   1761.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              4272.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1664.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4039.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 647438.098 ops/s
[info]                  ·gc.alloc.rate:                   1755.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              4266.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1673.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4067.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala":
[info]   654669.991 ±(99.9%) 23891.796 ops/s [Average]
[info]   (min, avg, max) = (647438.098, 654669.991, 661016.168), stdev = 6204.624
[info]   CI (99.9%): [630778.194, 678561.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1767.497 ±(99.9%) 53.356 MB/sec [Average]
[info]   (min, avg, max) = (1755.083, 1767.497, 1785.603), stdev = 13.856
[info]   CI (99.9%): [1714.141, 1820.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4249.148 ±(99.9%) 99.963 B/op [Average]
[info]   (min, avg, max) = (4206.041, 4249.148, 4272.387), stdev = 25.960
[info]   CI (99.9%): [4149.184, 4349.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1727.496 ±(99.9%) 550.824 MB/sec [Average]
[info]   (min, avg, max) = (1656.019, 1727.496, 1983.122), stdev = 143.047
[info]   CI (99.9%): [1176.673, 2278.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4152.296 ±(99.9%) 1274.046 B/op [Average]
[info]   (min, avg, max) = (3942.903, 4152.296, 4737.422), stdev = 330.866
[info]   CI (99.9%): [2878.250, 5426.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.629 ±(99.9%) 4.536 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.629, 2.727), stdev = 1.178
[info]   CI (99.9%): [≈ 0, 5.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.505 ±(99.9%) 10.860 B/op [Average]
[info]   (min, avg, max) = (0.051, 1.505, 6.528), stdev = 2.820
[info]   CI (99.9%): [≈ 0, 12.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 12.000), stdev = 2.168
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 53.65% complete, ETA 00:41:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1187.407 ops/s
[info] # Warmup Iteration   2: 16945.416 ops/s
[info] # Warmup Iteration   3: 23015.920 ops/s
[info] Iteration   1: 22616.540 ops/s
[info]                  ·gc.alloc.rate:                   1689.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              117535.627 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113915.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.897 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 23431.146 ops/s
[info]                  ·gc.alloc.rate:                   1756.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              117995.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110786.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 86.692 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 23129.696 ops/s
[info]                  ·gc.alloc.rate:               1744.568 MB/sec
[info]                  ·gc.alloc.rate.norm:          118694.765 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1656.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 112680.900 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 23731.269 ops/s
[info]                  ·gc.alloc.rate:               1789.382 MB/sec
[info]                  ·gc.alloc.rate.norm:          118668.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1666.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 110507.788 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 23775.741 ops/s
[info]                  ·gc.alloc.rate:                   1797.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              118965.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110832.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.378 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson":
[info]   23336.878 ±(99.9%) 1845.543 ops/s [Average]
[info]   (min, avg, max) = (22616.540, 23336.878, 23775.741), stdev = 479.282
[info]   CI (99.9%): [21491.336, 25182.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1755.443 ±(99.9%) 165.463 MB/sec [Average]
[info]   (min, avg, max) = (1689.338, 1755.443, 1797.207), stdev = 42.970
[info]   CI (99.9%): [1589.980, 1920.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   118371.867 ±(99.9%) 2266.499 B/op [Average]
[info]   (min, avg, max) = (117535.627, 118371.867, 118965.602), stdev = 588.603
[info]   CI (99.9%): [116105.368, 120638.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1656.708 ±(99.9%) 55.599 MB/sec [Average]
[info]   (min, avg, max) = (1637.302, 1656.708, 1674.340), stdev = 14.439
[info]   CI (99.9%): [1601.109, 1712.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   111744.503 ±(99.9%) 5733.581 B/op [Average]
[info]   (min, avg, max) = (110507.788, 111744.503, 113915.190), stdev = 1488.993
[info]   CI (99.9%): [106010.923, 117478.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.271 ±(99.9%) 2.197 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.271, 1.291), stdev = 0.570
[info]   CI (99.9%): [≈ 0, 2.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   18.193 ±(99.9%) 147.519 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18.193, 86.692), stdev = 38.310
[info]   CI (99.9%): [≈ 0, 165.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 9.000), stdev = 1.095
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 53.88% complete, ETA 00:41:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20771.334 ops/s
[info] # Warmup Iteration   2: 68058.192 ops/s
[info] # Warmup Iteration   3: 70983.886 ops/s
[info] Iteration   1: 71047.667 ops/s
[info]                  ·gc.alloc.rate:                   1879.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              41638.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36602.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.643 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 80.698 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 71112.040 ops/s
[info]                  ·gc.alloc.rate:                   1898.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              42023.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1971.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43639.680 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.304 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 71800.303 ops/s
[info]                  ·gc.alloc.rate:                   1892.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              41477.699 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43382.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.825 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 72980.024 ops/s
[info]                  ·gc.alloc.rate:                   1923.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              41479.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35821.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.898 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 72284.214 ops/s
[info]                  ·gc.alloc.rate:                   1932.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              42077.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2007.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43693.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.453 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce":
[info]   71844.850 ±(99.9%) 3137.836 ops/s [Average]
[info]   (min, avg, max) = (71047.667, 71844.850, 72980.024), stdev = 814.886
[info]   CI (99.9%): [68707.013, 74982.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1905.486 ±(99.9%) 84.781 MB/sec [Average]
[info]   (min, avg, max) = (1879.912, 1905.486, 1932.935), stdev = 22.017
[info]   CI (99.9%): [1820.705, 1990.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   41739.349 ±(99.9%) 1124.579 B/op [Average]
[info]   (min, avg, max) = (41477.699, 41739.349, 42077.084), stdev = 292.049
[info]   CI (99.9%): [40614.770, 42863.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1854.376 ±(99.9%) 696.670 MB/sec [Average]
[info]   (min, avg, max) = (1652.544, 1854.376, 2007.197), stdev = 180.923
[info]   CI (99.9%): [1157.706, 2551.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   40627.897 ±(99.9%) 15565.604 B/op [Average]
[info]   (min, avg, max) = (35821.187, 40627.897, 43693.649), stdev = 4042.338
[info]   CI (99.9%): [25062.293, 56193.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.779 ±(99.9%) 6.168 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.779, 3.643), stdev = 1.602
[info]   CI (99.9%): [≈ 0, 6.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   17.236 ±(99.9%) 136.637 B/op [Average]
[info]   (min, avg, max) = (0.453, 17.236, 80.698), stdev = 35.484
[info]   CI (99.9%): [≈ 0, 153.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 11.000), stdev = 1.483
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.12% complete, ETA 00:41:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36985.075 ops/s
[info] # Warmup Iteration   2: 166083.975 ops/s
[info] # Warmup Iteration   3: 166312.620 ops/s
[info] Iteration   1: 171018.678 ops/s
[info]                  ·gc.alloc.rate:                   1891.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              17400.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15145.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.334 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 177868.201 ops/s
[info]                  ·gc.alloc.rate:                   1978.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              17498.655 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1966.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17399.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.842 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 177434.655 ops/s
[info]                  ·gc.alloc.rate:                   1993.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              17684.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17519.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 177246.712 ops/s
[info]                  ·gc.alloc.rate:                   1999.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              17751.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1992.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17691.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.555 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 176973.432 ops/s
[info]                  ·gc.alloc.rate:                   1996.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              17753.704 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17861.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala":
[info]   176108.336 ±(99.9%) 11027.434 ops/s [Average]
[info]   (min, avg, max) = (171018.678, 176108.336, 177868.201), stdev = 2863.789
[info]   CI (99.9%): [165080.902, 187135.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1971.736 ±(99.9%) 176.150 MB/sec [Average]
[info]   (min, avg, max) = (1891.212, 1971.736, 1999.200), stdev = 45.746
[info]   CI (99.9%): [1795.586, 2147.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   17617.736 ±(99.9%) 616.071 B/op [Average]
[info]   (min, avg, max) = (17400.179, 17617.736, 17753.704), stdev = 159.992
[info]   CI (99.9%): [17001.665, 18233.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1917.852 ±(99.9%) 588.156 MB/sec [Average]
[info]   (min, avg, max) = (1646.128, 1917.852, 2008.518), stdev = 152.742
[info]   CI (99.9%): [1329.696, 2506.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   17123.681 ±(99.9%) 4311.435 B/op [Average]
[info]   (min, avg, max) = (15145.267, 17123.681, 17861.438), stdev = 1119.666
[info]   CI (99.9%): [12812.246, 21435.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.787 ±(99.9%) 6.112 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.787, 3.623), stdev = 1.587
[info]   CI (99.9%): [≈ 0, 6.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.220 ±(99.9%) 56.274 B/op [Average]
[info]   (min, avg, max) = (0.185, 7.220, 33.334), stdev = 14.614
[info]   CI (99.9%): [≈ 0, 63.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 11.000), stdev = 1.643
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.35% complete, ETA 00:41:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 634328.829 ops/s
[info] # Warmup Iteration   2: 1446871.289 ops/s
[info] # Warmup Iteration   3: 1418638.706 ops/s
[info] Iteration   1: 1417379.425 ops/s
[info]                  ·gc.alloc.rate:                   1204.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              1337.459 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1471.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1446228.470 ops/s
[info]                  ·gc.alloc.rate:                   1230.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              1338.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1083.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.058 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1446868.381 ops/s
[info]                  ·gc.alloc.rate:                   1243.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              1352.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1439.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.317 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1467151.833 ops/s
[info]                  ·gc.alloc.rate:                   1261.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              1352.676 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1415.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1471705.406 ops/s
[info]                  ·gc.alloc.rate:               1258.689 MB/sec
[info]                  ·gc.alloc.rate.norm:          1345.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1060.770 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala":
[info]   1449866.703 ±(99.9%) 82886.275 ops/s [Average]
[info]   (min, avg, max) = (1417379.425, 1449866.703, 1471705.406), stdev = 21525.302
[info]   CI (99.9%): [1366980.428, 1532752.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1239.624 ±(99.9%) 89.646 MB/sec [Average]
[info]   (min, avg, max) = (1204.451, 1239.624, 1261.168), stdev = 23.281
[info]   CI (99.9%): [1149.978, 1329.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1345.537 ±(99.9%) 28.135 B/op [Average]
[info]   (min, avg, max) = (1337.459, 1345.537, 1352.751), stdev = 7.307
[info]   CI (99.9%): [1317.402, 1373.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1191.257 ±(99.9%) 693.671 MB/sec [Average]
[info]   (min, avg, max) = (991.977, 1191.257, 1325.605), stdev = 180.144
[info]   CI (99.9%): [497.585, 1884.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1294.256 ±(99.9%) 784.717 B/op [Average]
[info]   (min, avg, max) = (1060.770, 1294.256, 1471.992), stdev = 203.789
[info]   CI (99.9%): [509.539, 2078.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.641 ±(99.9%) 4.690 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.641, 2.810), stdev = 1.218
[info]   CI (99.9%): [≈ 0, 5.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.698 ±(99.9%) 5.105 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.698, 3.058), stdev = 1.326
[info]   CI (99.9%): [≈ 0, 5.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 11.000), stdev = 2.775
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 54.59% complete, ETA 00:41:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 951824.920 ops/s
[info] # Warmup Iteration   2: 1686065.733 ops/s
[info] # Warmup Iteration   3: 1712053.751 ops/s
[info] Iteration   1: 1717928.641 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1717403.931 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1721069.872 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1721152.280 ops/s
[info]                  ·gc.alloc.rate:      0.084 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.077 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1723312.949 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc":
[info]   1720173.534 ±(99.9%) 9496.256 ops/s [Average]
[info]   (min, avg, max) = (1717403.931, 1720173.534, 1723312.949), stdev = 2466.148
[info]   CI (99.9%): [1710677.278, 1729669.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.017 ±(99.9%) 0.145 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.017, 0.084), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.016 ±(99.9%) 0.132 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.016, 0.077), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 54.82% complete, ETA 00:40:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22386.734 ops/s
[info] # Warmup Iteration   2: 120906.703 ops/s
[info] # Warmup Iteration   3: 128966.332 ops/s
[info] Iteration   1: 130257.290 ops/s
[info]                  ·gc.alloc.rate:                   1679.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              20289.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19723.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.006 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 130964.635 ops/s
[info]                  ·gc.alloc.rate:                   1689.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              20301.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19785.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.254 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 132943.660 ops/s
[info]                  ·gc.alloc.rate:               1729.643 MB/sec
[info]                  ·gc.alloc.rate.norm:          20476.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1658.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19639.755 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 131491.438 ops/s
[info]                  ·gc.alloc.rate:                   1718.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              20567.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1669.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19985.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.249 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 129842.091 ops/s
[info]                  ·gc.alloc.rate:                   1697.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              20581.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1679.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20359.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.757 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson":
[info]   131099.823 ±(99.9%) 4661.953 ops/s [Average]
[info]   (min, avg, max) = (129842.091, 131099.823, 132943.660), stdev = 1210.694
[info]   CI (99.9%): [126437.869, 135761.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1702.982 ±(99.9%) 79.609 MB/sec [Average]
[info]   (min, avg, max) = (1679.239, 1702.982, 1729.643), stdev = 20.674
[info]   CI (99.9%): [1623.373, 1782.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   20443.194 ±(99.9%) 542.503 B/op [Average]
[info]   (min, avg, max) = (20289.519, 20443.194, 20581.321), stdev = 140.886
[info]   CI (99.9%): [19900.690, 20985.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1657.515 ±(99.9%) 71.702 MB/sec [Average]
[info]   (min, avg, max) = (1632.404, 1657.515, 1679.688), stdev = 18.621
[info]   CI (99.9%): [1585.813, 1729.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   19898.829 ±(99.9%) 1107.451 B/op [Average]
[info]   (min, avg, max) = (19639.755, 19898.829, 20359.954), stdev = 287.601
[info]   CI (99.9%): [18791.378, 21006.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.121 ±(99.9%) 0.693 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.121, 0.437), stdev = 0.180
[info]   CI (99.9%): [≈ 0, 0.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.453 ±(99.9%) 8.323 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.453, 5.254), stdev = 2.162
[info]   CI (99.9%): [≈ 0, 9.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.400, 9.000), stdev = 1.140
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.06% complete, ETA 00:40:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8735.804 ops/s
[info] # Warmup Iteration   2: 41572.980 ops/s
[info] # Warmup Iteration   3: 42090.307 ops/s
[info] Iteration   1: 40925.792 ops/s
[info]                  ·gc.alloc.rate:                   1530.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              58859.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50606.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 121.680 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 43936.191 ops/s
[info]                  ·gc.alloc.rate:                   1610.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              57682.291 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58663.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.775 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 43365.589 ops/s
[info]                  ·gc.alloc.rate:                   1605.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              58252.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59257.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.756 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 43174.453 ops/s
[info]                  ·gc.alloc.rate:                   1605.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              58500.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59808.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.277 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 43319.105 ops/s
[info]                  ·gc.alloc.rate:                   1604.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              58275.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48039.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.513 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala":
[info]   42944.226 ±(99.9%) 4486.106 ops/s [Average]
[info]   (min, avg, max) = (40925.792, 42944.226, 43936.191), stdev = 1165.028
[info]   CI (99.9%): [38458.120, 47430.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1591.017 ±(99.9%) 130.552 MB/sec [Average]
[info]   (min, avg, max) = (1530.528, 1591.017, 1610.338), stdev = 33.904
[info]   CI (99.9%): [1460.466, 1721.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   58313.898 ±(99.9%) 1652.271 B/op [Average]
[info]   (min, avg, max) = (57682.291, 58313.898, 58859.144), stdev = 429.090
[info]   CI (99.9%): [56661.626, 59966.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1509.947 ±(99.9%) 670.943 MB/sec [Average]
[info]   (min, avg, max) = (1315.924, 1509.947, 1641.006), stdev = 174.242
[info]   CI (99.9%): [839.004, 2180.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   55275.151 ±(99.9%) 21269.472 B/op [Average]
[info]   (min, avg, max) = (48039.868, 55275.151, 59808.316), stdev = 5523.614
[info]   CI (99.9%): [34005.678, 76544.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.874 ±(99.9%) 5.226 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.874, 3.164), stdev = 1.357
[info]   CI (99.9%): [≈ 0, 6.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   33.000 ±(99.9%) 200.757 B/op [Average]
[info]   (min, avg, max) = (0.756, 33.000, 121.680), stdev = 52.136
[info]   CI (99.9%): [≈ 0, 233.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 15.000), stdev = 3.847
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.29% complete, ETA 00:40:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 343414.684 ops/s
[info] # Warmup Iteration   2: 715395.772 ops/s
[info] # Warmup Iteration   3: 744756.512 ops/s
[info] Iteration   1: 689744.015 ops/s
[info]                  ·gc.alloc.rate:                   1377.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              3141.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3033.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.083 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 735394.560 ops/s
[info]                  ·gc.alloc.rate:                   1481.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              3169.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2840.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.515 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 756319.556 ops/s
[info]                  ·gc.alloc.rate:                   1522.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              3166.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3440.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.347 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 753917.443 ops/s
[info]                  ·gc.alloc.rate:                   1524.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              3181.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2767.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 694465.435 ops/s
[info]                  ·gc.alloc.rate:                   1408.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              3191.494 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3016.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala":
[info]   725968.202 ±(99.9%) 123218.155 ops/s [Average]
[info]   (min, avg, max) = (689744.015, 725968.202, 756319.556), stdev = 31999.364
[info]   CI (99.9%): [602750.047, 849186.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1463.061 ±(99.9%) 257.796 MB/sec [Average]
[info]   (min, avg, max) = (1377.441, 1463.061, 1524.646), stdev = 66.949
[info]   CI (99.9%): [1205.264, 1720.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3170.191 ±(99.9%) 72.119 B/op [Average]
[info]   (min, avg, max) = (3141.711, 3170.191, 3191.494), stdev = 18.729
[info]   CI (99.9%): [3098.072, 3242.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1393.966 ±(99.9%) 560.262 MB/sec [Average]
[info]   (min, avg, max) = (1326.258, 1393.966, 1654.217), stdev = 145.498
[info]   CI (99.9%): [833.704, 1954.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3019.613 ±(99.9%) 1006.262 B/op [Average]
[info]   (min, avg, max) = (2767.388, 3019.613, 3440.668), stdev = 261.323
[info]   CI (99.9%): [2013.352, 4025.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.633 ±(99.9%) 3.598 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.633, 2.228), stdev = 0.934
[info]   CI (99.9%): [≈ 0, 4.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.416 ±(99.9%) 8.220 B/op [Average]
[info]   (min, avg, max) = (0.043, 1.416, 5.083), stdev = 2.135
[info]   CI (99.9%): [≈ 0, 9.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 12.000), stdev = 2.683
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 55.53% complete, ETA 00:40:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1564.255 ops/s
[info] # Warmup Iteration   2: 21446.876 ops/s
[info] # Warmup Iteration   3: 30643.722 ops/s
[info] Iteration   1: 30395.680 ops/s
[info]                  ·gc.alloc.rate:                   2115.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              109472.896 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118948.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.723 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 30231.113 ops/s
[info]                  ·gc.alloc.rate:                   2106.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              109633.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103317.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.168 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 30750.905 ops/s
[info]                  ·gc.alloc.rate:                   2156.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              110303.533 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1999.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102266.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.131 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 30831.051 ops/s
[info]                  ·gc.alloc.rate:                   2162.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              110332.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102664.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.188 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 30092.482 ops/s
[info]                  ·gc.alloc.rate:                   2113.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              110468.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105721.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.177 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson":
[info]   30460.246 ±(99.9%) 1238.657 ops/s [Average]
[info]   (min, avg, max) = (30092.482, 30460.246, 30831.051), stdev = 321.675
[info]   CI (99.9%): [29221.589, 31698.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2130.932 ±(99.9%) 101.170 MB/sec [Average]
[info]   (min, avg, max) = (2106.897, 2130.932, 2162.458), stdev = 26.273
[info]   CI (99.9%): [2029.762, 2232.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   110042.258 ±(99.9%) 1749.939 B/op [Average]
[info]   (min, avg, max) = (109472.896, 110042.258, 110468.949), stdev = 454.454
[info]   CI (99.9%): [108292.319, 111792.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2063.636 ±(99.9%) 508.939 MB/sec [Average]
[info]   (min, avg, max) = (1985.527, 2063.636, 2298.762), stdev = 132.170
[info]   CI (99.9%): [1554.697, 2572.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   106583.738 ±(99.9%) 27112.516 B/op [Average]
[info]   (min, avg, max) = (102266.419, 106583.738, 118948.713), stdev = 7041.034
[info]   CI (99.9%): [79471.222, 133696.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.292 ±(99.9%) 2.107 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.292, 1.270), stdev = 0.547
[info]   CI (99.9%): [≈ 0, 2.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   15.078 ±(99.9%) 109.033 B/op [Average]
[info]   (min, avg, max) = (2.131, 15.078, 65.723), stdev = 28.315
[info]   CI (99.9%): [≈ 0, 124.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.800, 18.000), stdev = 4.207
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.76% complete, ETA 00:40:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123816.999 ops/s
[info] # Warmup Iteration   2: 349463.206 ops/s
[info] # Warmup Iteration   3: 376256.009 ops/s
[info] Iteration   1: 373813.016 ops/s
[info]                  ·gc.alloc.rate:                   1069.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              4501.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4158.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 370274.109 ops/s
[info]                  ·gc.alloc.rate:                   1057.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              4496.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4203.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 385825.548 ops/s
[info]                  ·gc.alloc.rate:                   1103.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              4501.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4032.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.540 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 381812.084 ops/s
[info]                  ·gc.alloc.rate:                   1101.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              4539.315 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5404.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.601 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 370759.897 ops/s
[info]                  ·gc.alloc.rate:               1062.259 MB/sec
[info]                  ·gc.alloc.rate.norm:          4509.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4168.243 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala":
[info]   376496.931 ±(99.9%) 26824.539 ops/s [Average]
[info]   (min, avg, max) = (370274.109, 376496.931, 385825.548), stdev = 6966.248
[info]   CI (99.9%): [349672.392, 403321.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1078.800 ±(99.9%) 84.497 MB/sec [Average]
[info]   (min, avg, max) = (1057.861, 1078.800, 1103.650), stdev = 21.944
[info]   CI (99.9%): [994.303, 1163.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   4509.647 ±(99.9%) 66.320 B/op [Average]
[info]   (min, avg, max) = (4496.252, 4509.647, 4539.315), stdev = 17.223
[info]   CI (99.9%): [4443.327, 4575.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1051.596 ±(99.9%) 558.436 MB/sec [Average]
[info]   (min, avg, max) = (981.918, 1051.596, 1310.973), stdev = 145.024
[info]   CI (99.9%): [493.159, 1610.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   4393.313 ±(99.9%) 2189.918 B/op [Average]
[info]   (min, avg, max) = (4032.671, 4393.313, 5404.083), stdev = 568.715
[info]   CI (99.9%): [2203.395, 6583.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 6.475 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.804, 3.810), stdev = 1.681
[info]   CI (99.9%): [≈ 0, 7.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.281 ±(99.9%) 26.404 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.281, 15.540), stdev = 6.857
[info]   CI (99.9%): [≈ 0, 29.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 10.000), stdev = 2.608
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.00% complete, ETA 00:39:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1127649.271 ops/s
[info] # Warmup Iteration   2: 1774055.774 ops/s
[info] # Warmup Iteration   3: 1903008.886 ops/s
[info] Iteration   1: 1966603.938 ops/s
[info]                  ·gc.alloc.rate:               1173.615 MB/sec
[info]                  ·gc.alloc.rate.norm:          939.316 B/op
[info]                  ·gc.churn.PS_Eden_Space:      994.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 796.227 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 1965485.381 ops/s
[info]                  ·gc.alloc.rate:                   1188.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              951.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1063.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.234 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1958613.731 ops/s
[info]                  ·gc.alloc.rate:                   1171.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              941.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     797.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.468 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1976647.263 ops/s
[info]                  ·gc.alloc.rate:               1207.346 MB/sec
[info]                  ·gc.alloc.rate.norm:          961.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1318.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1050.205 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 1971756.495 ops/s
[info]                  ·gc.alloc.rate:                   1192.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              951.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     790.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala":
[info]   1967821.362 ±(99.9%) 26194.371 ops/s [Average]
[info]   (min, avg, max) = (1958613.731, 1967821.362, 1976647.263), stdev = 6802.595
[info]   CI (99.9%): [1941626.991, 1994015.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1186.637 ±(99.9%) 56.840 MB/sec [Average]
[info]   (min, avg, max) = (1171.279, 1186.637, 1207.346), stdev = 14.761
[info]   CI (99.9%): [1129.797, 1243.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   948.928 ±(99.9%) 34.542 B/op [Average]
[info]   (min, avg, max) = (939.316, 948.928, 961.335), stdev = 8.970
[info]   CI (99.9%): [914.386, 983.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1124.942 ±(99.9%) 699.046 MB/sec [Average]
[info]   (min, avg, max) = (990.243, 1124.942, 1328.575), stdev = 181.540
[info]   CI (99.9%): [425.896, 1823.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   899.454 ±(99.9%) 553.928 B/op [Average]
[info]   (min, avg, max) = (790.128, 899.454, 1063.644), stdev = 143.853
[info]   CI (99.9%): [345.527, 1453.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.679 ±(99.9%) 4.645 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.679, 2.790), stdev = 1.206
[info]   CI (99.9%): [≈ 0, 5.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.544 ±(99.9%) 3.719 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.544, 2.234), stdev = 0.966
[info]   CI (99.9%): [≈ 0, 4.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 10.000), stdev = 2.490
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 56.24% complete, ETA 00:39:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1059548.126 ops/s
[info] # Warmup Iteration   2: 2210814.742 ops/s
[info] # Warmup Iteration   3: 2253010.073 ops/s
[info] Iteration   1: 2252958.678 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2253129.710 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2241179.126 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2259993.482 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2259027.453 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc":
[info]   2253257.690 ±(99.9%) 28857.908 ops/s [Average]
[info]   (min, avg, max) = (2241179.126, 2253257.690, 2259993.482), stdev = 7494.307
[info]   CI (99.9%): [2224399.781, 2282115.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 56.47% complete, ETA 00:39:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51735.425 ops/s
[info] # Warmup Iteration   2: 236482.690 ops/s
[info] # Warmup Iteration   3: 244474.092 ops/s
[info] Iteration   1: 241183.507 ops/s
[info]                  ·gc.alloc.rate:                        1605.769 MB/sec
[info]                  ·gc.alloc.rate.norm:                   10478.629 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.021 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.134 B/op
[info]                  ·gc.churn.Metaspace:                   0.060 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1647.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          10748.971 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  1.801 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             11.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           4.330 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      28.255 B/op
[info]                  ·gc.count:                             7.000 counts
[info]                  ·gc.time:                              44.000 ms
[info] Iteration   2: 249601.890 ops/s
[info]                  ·gc.alloc.rate:                   1665.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              10494.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10290.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 252185.974 ops/s
[info]                  ·gc.alloc.rate:               1695.207 MB/sec
[info]                  ·gc.alloc.rate.norm:          10578.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1635.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10204.548 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 251561.528 ops/s
[info]                  ·gc.alloc.rate:                   1691.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              10583.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10300.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 247814.664 ops/s
[info]                  ·gc.alloc.rate:                   1662.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              10552.540 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10532.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson":
[info]   248469.513 ±(99.9%) 17022.462 ops/s [Average]
[info]   (min, avg, max) = (241183.507, 248469.513, 252185.974), stdev = 4420.679
[info]   CI (99.9%): [231447.051, 265491.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1664.012 ±(99.9%) 137.880 MB/sec [Average]
[info]   (min, avg, max) = (1605.769, 1664.012, 1695.207), stdev = 35.807
[info]   CI (99.9%): [1526.132, 1801.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   10537.443 ±(99.9%) 185.195 B/op [Average]
[info]   (min, avg, max) = (10478.629, 10537.443, 10583.088), stdev = 48.095
[info]   CI (99.9%): [10352.247, 10722.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.035 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm":
[info]   0.027 ±(99.9%) 0.231 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.134), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.Metaspace":
[info]   0.012 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.060), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.Metaspace.norm":
[info]   0.079 ±(99.9%) 0.679 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.079, 0.394), stdev = 0.176
[info]   CI (99.9%): [≈ 0, 0.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1644.186 ±(99.9%) 40.940 MB/sec [Average]
[info]   (min, avg, max) = (1632.717, 1644.186, 1659.293), stdev = 10.632
[info]   CI (99.9%): [1603.246, 1685.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   10415.473 ±(99.9%) 857.068 B/op [Average]
[info]   (min, avg, max) = (10204.548, 10415.473, 10748.971), stdev = 222.578
[info]   CI (99.9%): [9558.405, 11272.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen":
[info]   0.360 ±(99.9%) 3.101 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.360, 1.801), stdev = 0.805
[info]   CI (99.9%): [≈ 0, 3.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm":
[info]   2.350 ±(99.9%) 20.237 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.350, 11.752), stdev = 5.255
[info]   CI (99.9%): [≈ 0, 22.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.878 ±(99.9%) 7.430 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.878, 4.330), stdev = 1.929
[info]   CI (99.9%): [≈ 0, 8.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.730 ±(99.9%) 48.489 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.730, 28.255), stdev = 12.592
[info]   CI (99.9%): [≈ 0, 54.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 7.000), stdev = 0.894
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 14.200, 44.000), stdev = 16.664
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 56.71% complete, ETA 00:39:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18686.367 ops/s
[info] # Warmup Iteration   2: 67052.183 ops/s
[info] # Warmup Iteration   3: 69522.901 ops/s
[info] Iteration   1: 72799.436 ops/s
[info]                  ·gc.alloc.rate:                   1604.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              34679.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35702.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72.460 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 73930.496 ops/s
[info]                  ·gc.alloc.rate:                   1620.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              34506.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27965.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.067 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 73891.727 ops/s
[info]                  ·gc.alloc.rate:                   1645.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              35046.885 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34868.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.443 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 73820.672 ops/s
[info]                  ·gc.alloc.rate:                   1651.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              35200.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35072.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.444 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 73826.789 ops/s
[info]                  ·gc.alloc.rate:               1652.141 MB/sec
[info]                  ·gc.alloc.rate.norm:          35220.761 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1657.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35339.275 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce":
[info]   73653.824 ±(99.9%) 1847.587 ops/s [Average]
[info]   (min, avg, max) = (72799.436, 73653.824, 73930.496), stdev = 479.812
[info]   CI (99.9%): [71806.237, 75501.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate":
[info]   1634.788 ±(99.9%) 81.555 MB/sec [Average]
[info]   (min, avg, max) = (1604.379, 1634.788, 1652.141), stdev = 21.180
[info]   CI (99.9%): [1553.233, 1716.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   34930.837 ±(99.9%) 1238.422 B/op [Average]
[info]   (min, avg, max) = (34506.259, 34930.837, 35220.761), stdev = 321.614
[info]   CI (99.9%): [33692.414, 36169.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1581.027 ±(99.9%) 576.241 MB/sec [Average]
[info]   (min, avg, max) = (1313.683, 1581.027, 1657.700), stdev = 149.648
[info]   CI (99.9%): [1004.786, 2157.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   33789.475 ±(99.9%) 12595.000 B/op [Average]
[info]   (min, avg, max) = (27965.052, 33789.475, 35702.394), stdev = 3270.881
[info]   CI (99.9%): [21194.475, 46384.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 5.572 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.820, 3.352), stdev = 1.447
[info]   CI (99.9%): [≈ 0, 6.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   17.683 ±(99.9%) 120.458 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17.683, 72.460), stdev = 31.283
[info]   CI (99.9%): [≈ 0, 138.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 16.000), stdev = 4.159
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.94% complete, ETA 00:38:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21025.482 ops/s
[info] # Warmup Iteration   2: 76476.934 ops/s
[info] # Warmup Iteration   3: 74349.732 ops/s
[info] Iteration   1: 78757.347 ops/s
[info]                  ·gc.alloc.rate:                   1032.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              20640.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19621.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.832 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 75466.479 ops/s
[info]                  ·gc.alloc.rate:               994.111 MB/sec
[info]                  ·gc.alloc.rate.norm:          20729.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20519.181 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 78365.686 ops/s
[info]                  ·gc.alloc.rate:                   1019.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              20482.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19800.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.893 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.180 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 79642.060 ops/s
[info]                  ·gc.alloc.rate:                   1048.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              20713.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19378.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.937 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 79287.455 ops/s
[info]                  ·gc.alloc.rate:                   1048.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              20813.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25891.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.826 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala":
[info]   78303.805 ±(99.9%) 6390.921 ops/s [Average]
[info]   (min, avg, max) = (75466.479, 78303.805, 79642.060), stdev = 1659.702
[info]   CI (99.9%): [71912.884, 84694.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1028.725 ±(99.9%) 87.409 MB/sec [Average]
[info]   (min, avg, max) = (994.111, 1028.725, 1048.540), stdev = 22.700
[info]   CI (99.9%): [941.317, 1116.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   20675.775 ±(99.9%) 479.858 B/op [Average]
[info]   (min, avg, max) = (20482.064, 20675.775, 20813.553), stdev = 124.617
[info]   CI (99.9%): [20195.917, 21155.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1047.366 ±(99.9%) 553.201 MB/sec [Average]
[info]   (min, avg, max) = (980.566, 1047.366, 1304.335), stdev = 143.665
[info]   CI (99.9%): [494.165, 1600.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   21042.033 ±(99.9%) 10565.649 B/op [Average]
[info]   (min, avg, max) = (19378.093, 21042.033, 25891.092), stdev = 2743.865
[info]   CI (99.9%): [10476.385, 31607.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.845 ±(99.9%) 6.572 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.845, 3.893), stdev = 1.707
[info]   CI (99.9%): [≈ 0, 7.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.955 ±(99.9%) 132.001 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16.955, 78.180), stdev = 34.280
[info]   CI (99.9%): [≈ 0, 148.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 10.000), stdev = 2.345
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.18% complete, ETA 00:38:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42769.210 ops/s
[info] # Warmup Iteration   2: 93377.574 ops/s
[info] # Warmup Iteration   3: 96291.171 ops/s
[info] Iteration   1: 99788.820 ops/s
[info]                  ·gc.alloc.rate:                   1227.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              19348.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15654.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.328 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 99191.092 ops/s
[info]                  ·gc.alloc.rate:                   1220.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              19364.164 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21044.876 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.769 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.932 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 99108.948 ops/s
[info]                  ·gc.alloc.rate:                   1236.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              19631.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20966.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.950 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 98393.210 ops/s
[info]                  ·gc.alloc.rate:               1208.346 MB/sec
[info]                  ·gc.alloc.rate.norm:          19328.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15822.938 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 98704.861 ops/s
[info]                  ·gc.alloc.rate:               1238.589 MB/sec
[info]                  ·gc.alloc.rate.norm:          19748.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1321.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21072.848 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala":
[info]   99037.386 ±(99.9%) 2036.600 ops/s [Average]
[info]   (min, avg, max) = (98393.210, 99037.386, 99788.820), stdev = 528.898
[info]   CI (99.9%): [97000.787, 101073.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1226.178 ±(99.9%) 47.439 MB/sec [Average]
[info]   (min, avg, max) = (1208.346, 1226.178, 1238.589), stdev = 12.320
[info]   CI (99.9%): [1178.739, 1273.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   19484.021 ±(99.9%) 742.600 B/op [Average]
[info]   (min, avg, max) = (19328.018, 19484.021, 19748.429), stdev = 192.851
[info]   CI (99.9%): [18741.422, 20226.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1190.111 ±(99.9%) 699.588 MB/sec [Average]
[info]   (min, avg, max) = (989.216, 1190.111, 1326.367), stdev = 181.681
[info]   CI (99.9%): [490.523, 1889.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   18912.388 ±(99.9%) 11159.037 B/op [Average]
[info]   (min, avg, max) = (15654.622, 18912.388, 21072.848), stdev = 2897.966
[info]   CI (99.9%): [7753.351, 30071.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.633 ±(99.9%) 4.639 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.633, 2.769), stdev = 1.205
[info]   CI (99.9%): [≈ 0, 5.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   10.042 ±(99.9%) 73.599 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.042, 43.932), stdev = 19.113
[info]   CI (99.9%): [≈ 0, 83.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 10.000), stdev = 2.408
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 57.41% complete, ETA 00:38:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6589.837 ops/s
[info] # Warmup Iteration   2: 39082.768 ops/s
[info] # Warmup Iteration   3: 44156.643 ops/s
[info] Iteration   1: 44574.599 ops/s
[info]                  ·gc.alloc.rate:                   2106.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              74382.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2292.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80932.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.746 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 167.581 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 46251.902 ops/s
[info]                  ·gc.alloc.rate:                   2159.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              73476.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1952.380 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66418.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.708 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 46462.922 ops/s
[info]                  ·gc.alloc.rate:               2184.371 MB/sec
[info]                  ·gc.alloc.rate.norm:          73987.260 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1967.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 66655.767 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 45627.406 ops/s
[info]                  ·gc.alloc.rate:                   2160.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              74523.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2321.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80066.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.718 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 46414.835 ops/s
[info]                  ·gc.alloc.rate:               2184.078 MB/sec
[info]                  ·gc.alloc.rate.norm:          74052.418 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2008.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 68092.724 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson":
[info]   45866.333 ±(99.9%) 3063.077 ops/s [Average]
[info]   (min, avg, max) = (44574.599, 45866.333, 46462.922), stdev = 795.471
[info]   CI (99.9%): [42803.256, 48929.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2159.079 ±(99.9%) 122.139 MB/sec [Average]
[info]   (min, avg, max) = (2106.571, 2159.079, 2184.371), stdev = 31.719
[info]   CI (99.9%): [2036.940, 2281.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   74084.361 ±(99.9%) 1566.074 B/op [Average]
[info]   (min, avg, max) = (73476.361, 74084.361, 74523.250), stdev = 406.704
[info]   CI (99.9%): [72518.287, 75650.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2108.386 ±(99.9%) 702.513 MB/sec [Average]
[info]   (min, avg, max) = (1952.380, 2108.386, 2321.243), stdev = 182.440
[info]   CI (99.9%): [1405.873, 2810.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   72433.344 ±(99.9%) 28486.178 B/op [Average]
[info]   (min, avg, max) = (66418.654, 72433.344, 80932.888), stdev = 7397.770
[info]   CI (99.9%): [43947.166, 100919.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.958 ±(99.9%) 8.155 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.958, 4.746), stdev = 2.118
[info]   CI (99.9%): [≈ 0, 9.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   33.802 ±(99.9%) 287.974 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 33.802, 167.581), stdev = 74.786
[info]   CI (99.9%): [≈ 0, 321.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 17.000), stdev = 3.834
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 57.65% complete, ETA 00:38:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45620.348 ops/s
[info] # Warmup Iteration   2: 108884.026 ops/s
[info] # Warmup Iteration   3: 108623.182 ops/s
[info] Iteration   1: 113341.279 ops/s
[info]                  ·gc.alloc.rate:               1087.731 MB/sec
[info]                  ·gc.alloc.rate.norm:          15103.824 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13712.952 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 112380.306 ops/s
[info]                  ·gc.alloc.rate:                   1075.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              15059.676 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13849.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.583 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 113203.362 ops/s
[info]                  ·gc.alloc.rate:                   1089.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              15142.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18338.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.622 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50.360 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 113270.496 ops/s
[info]                  ·gc.alloc.rate:                   1088.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              15129.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13661.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.603 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 113741.718 ops/s
[info]                  ·gc.alloc.rate:               1099.958 MB/sec
[info]                  ·gc.alloc.rate.norm:          15220.465 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13605.061 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce":
[info]   113187.432 ±(99.9%) 1915.194 ops/s [Average]
[info]   (min, avg, max) = (112380.306, 113187.432, 113741.718), stdev = 497.370
[info]   CI (99.9%): [111272.238, 115102.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1088.215 ±(99.9%) 33.589 MB/sec [Average]
[info]   (min, avg, max) = (1075.374, 1088.215, 1099.958), stdev = 8.723
[info]   CI (99.9%): [1054.626, 1121.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   15131.184 ±(99.9%) 227.602 B/op [Average]
[info]   (min, avg, max) = (15059.676, 15131.184, 15220.465), stdev = 59.107
[info]   CI (99.9%): [14903.582, 15358.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1052.396 ±(99.9%) 574.044 MB/sec [Average]
[info]   (min, avg, max) = (983.210, 1052.396, 1319.034), stdev = 149.077
[info]   CI (99.9%): [478.352, 1626.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   14633.482 ±(99.9%) 7982.000 B/op [Average]
[info]   (min, avg, max) = (13605.061, 14633.482, 18338.063), stdev = 2072.900
[info]   CI (99.9%): [6651.482, 22615.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.770 ±(99.9%) 6.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.770, 3.622), stdev = 1.596
[info]   CI (99.9%): [≈ 0, 6.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   10.709 ±(99.9%) 85.451 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.709, 50.360), stdev = 22.191
[info]   CI (99.9%): [≈ 0, 96.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 9.000), stdev = 2.510
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.88% complete, ETA 00:38:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 124708.755 ops/s
[info] # Warmup Iteration   2: 309999.726 ops/s
[info] # Warmup Iteration   3: 319858.935 ops/s
[info] Iteration   1: 320237.160 ops/s
[info]                  ·gc.alloc.rate:               482.069 MB/sec
[info]                  ·gc.alloc.rate.norm:          2369.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1602.546 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 322932.378 ops/s
[info]                  ·gc.alloc.rate:               498.407 MB/sec
[info]                  ·gc.alloc.rate.norm:          2429.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3181.625 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 325020.584 ops/s
[info]                  ·gc.alloc.rate:                   496.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              2405.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1582.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 324788.788 ops/s
[info]                  ·gc.alloc.rate:                   499.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              2422.640 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3173.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 320903.218 ops/s
[info]                  ·gc.alloc.rate:               484.582 MB/sec
[info]                  ·gc.alloc.rate.norm:          2376.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1607.364 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala":
[info]   322776.426 ±(99.9%) 8407.056 ops/s [Average]
[info]   (min, avg, max) = (320237.160, 322776.426, 325020.584), stdev = 2183.286
[info]   CI (99.9%): [314369.370, 331183.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   492.376 ±(99.9%) 32.268 MB/sec [Average]
[info]   (min, avg, max) = (482.069, 492.376, 499.945), stdev = 8.380
[info]   CI (99.9%): [460.108, 524.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   2400.697 ±(99.9%) 103.259 B/op [Average]
[info]   (min, avg, max) = (2369.317, 2400.697, 2429.079), stdev = 26.816
[info]   CI (99.9%): [2297.438, 2503.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   457.635 ±(99.9%) 689.589 MB/sec [Average]
[info]   (min, avg, max) = (326.059, 457.635, 654.801), stdev = 179.084
[info]   CI (99.9%): [≈ 0, 1147.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2229.346 ±(99.9%) 3332.530 B/op [Average]
[info]   (min, avg, max) = (1582.154, 2229.346, 3181.625), stdev = 865.447
[info]   CI (99.9%): [≈ 0, 5561.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.061 ±(99.9%) 0.347 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.061, 0.202), stdev = 0.090
[info]   CI (99.9%): [≈ 0, 0.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 7.000), stdev = 1.817
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 58.12% complete, ETA 00:37:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 433437.307 ops/s
[info] # Warmup Iteration   2: 627683.955 ops/s
[info] # Warmup Iteration   3: 671057.796 ops/s
[info] Iteration   1: 671943.947 ops/s
[info]                  ·gc.alloc.rate:                   855.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              2004.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1547.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 651857.651 ops/s
[info]                  ·gc.alloc.rate:                   838.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              2023.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2397.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 672773.365 ops/s
[info]                  ·gc.alloc.rate:                   848.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              1984.303 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1552.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 657132.349 ops/s
[info]                  ·gc.alloc.rate:                   848.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              2031.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2382.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.873 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.881 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 653457.966 ops/s
[info]                  ·gc.alloc.rate:                   830.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              1999.284 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1591.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.401 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala":
[info]   661433.056 ±(99.9%) 39120.911 ops/s [Average]
[info]   (min, avg, max) = (651857.651, 661433.056, 672773.365), stdev = 10159.576
[info]   CI (99.9%): [622312.145, 700553.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   844.121 ±(99.9%) 38.368 MB/sec [Average]
[info]   (min, avg, max) = (830.129, 844.121, 855.684), stdev = 9.964
[info]   CI (99.9%): [805.753, 882.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2008.645 ±(99.9%) 73.466 B/op [Average]
[info]   (min, avg, max) = (1984.303, 2008.645, 2031.636), stdev = 19.079
[info]   CI (99.9%): [1935.179, 2082.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   794.536 ±(99.9%) 700.427 MB/sec [Average]
[info]   (min, avg, max) = (660.806, 794.536, 994.554), stdev = 181.899
[info]   CI (99.9%): [94.110, 1494.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1894.139 ±(99.9%) 1743.126 B/op [Average]
[info]   (min, avg, max) = (1547.797, 1894.139, 2397.237), stdev = 452.684
[info]   CI (99.9%): [151.013, 3637.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.629 ±(99.9%) 4.836 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.629, 2.873), stdev = 1.256
[info]   CI (99.9%): [≈ 0, 5.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.505 ±(99.9%) 11.583 B/op [Average]
[info]   (min, avg, max) = (0.050, 1.505, 6.881), stdev = 3.008
[info]   CI (99.9%): [≈ 0, 13.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 8.000), stdev = 1.817
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 58.35% complete, ETA 00:37:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 405671.754 ops/s
[info] # Warmup Iteration   2: 764475.447 ops/s
[info] # Warmup Iteration   3: 757479.180 ops/s
[info] Iteration   1: 766439.108 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 764010.144 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 766769.300 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 760433.471 ops/s
[info]                  ·gc.alloc.rate:      0.037 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.076 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 764336.261 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc":
[info]   764397.657 ±(99.9%) 9753.028 ops/s [Average]
[info]   (min, avg, max) = (760433.471, 764397.657, 766769.300), stdev = 2532.830
[info]   CI (99.9%): [754644.629, 774150.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.008 ±(99.9%) 0.062 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.008, 0.037), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.016 ±(99.9%) 0.129 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.016, 0.076), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 58.59% complete, ETA 00:37:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51270.602 ops/s
[info] # Warmup Iteration   2: 221690.719 ops/s
[info] # Warmup Iteration   3: 230000.610 ops/s
[info] Iteration   1: 237578.103 ops/s
[info]                  ·gc.alloc.rate:                   780.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              5173.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4337.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 231103.649 ops/s
[info]                  ·gc.alloc.rate:                   762.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              5194.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4464.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 230253.279 ops/s
[info]                  ·gc.alloc.rate:                   754.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              5159.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4489.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 236228.819 ops/s
[info]                  ·gc.alloc.rate:                   779.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              5191.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6572.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.468 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 238063.064 ops/s
[info]                  ·gc.alloc.rate:                   780.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              5157.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4342.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.854 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson":
[info]   234645.383 ±(99.9%) 14229.564 ops/s [Average]
[info]   (min, avg, max) = (230253.279, 234645.383, 238063.064), stdev = 3695.373
[info]   CI (99.9%): [220415.819, 248874.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   771.676 ±(99.9%) 46.473 MB/sec [Average]
[info]   (min, avg, max) = (754.855, 771.676, 780.953), stdev = 12.069
[info]   CI (99.9%): [725.203, 818.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   5175.576 ±(99.9%) 66.838 B/op [Average]
[info]   (min, avg, max) = (5157.751, 5175.576, 5194.910), stdev = 17.358
[info]   CI (99.9%): [5108.738, 5242.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   722.184 ±(99.9%) 570.041 MB/sec [Average]
[info]   (min, avg, max) = (654.796, 722.184, 986.998), stdev = 148.038
[info]   CI (99.9%): [152.143, 1292.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4841.368 ±(99.9%) 3736.707 B/op [Average]
[info]   (min, avg, max) = (4337.900, 4841.368, 6572.906), stdev = 970.411
[info]   CI (99.9%): [1104.661, 8578.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 5.611 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.804, 3.374), stdev = 1.457
[info]   CI (99.9%): [≈ 0, 6.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.349 ±(99.9%) 37.367 B/op [Average]
[info]   (min, avg, max) = (0.138, 5.349, 22.468), stdev = 9.704
[info]   CI (99.9%): [≈ 0, 42.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 10.000), stdev = 2.490
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 58.82% complete, ETA 00:37:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27239.497 ops/s
[info] # Warmup Iteration   2: 107809.514 ops/s
[info] # Warmup Iteration   3: 117370.883 ops/s
[info] Iteration   1: 124047.833 ops/s
[info]                  ·gc.alloc.rate:                   1738.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              22055.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20933.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.143 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 124577.358 ops/s
[info]                  ·gc.alloc.rate:                   1760.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              22243.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24877.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.731 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 124312.069 ops/s
[info]                  ·gc.alloc.rate:                   1757.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              22246.356 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20772.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.791 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 123576.634 ops/s
[info]                  ·gc.alloc.rate:               1754.581 MB/sec
[info]                  ·gc.alloc.rate.norm:          22343.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1650.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21022.762 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 122479.122 ops/s
[info]                  ·gc.alloc.rate:                   1740.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              22363.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21374.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.268 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce":
[info]   123798.603 ±(99.9%) 3176.794 ops/s [Average]
[info]   (min, avg, max) = (122479.122, 123798.603, 124577.358), stdev = 825.003
[info]   CI (99.9%): [120621.809, 126975.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate":
[info]   1750.248 ±(99.9%) 39.171 MB/sec [Average]
[info]   (min, avg, max) = (1738.470, 1750.248, 1760.762), stdev = 10.172
[info]   CI (99.9%): [1711.078, 1789.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   22250.661 ±(99.9%) 469.057 B/op [Average]
[info]   (min, avg, max) = (22055.891, 22250.661, 22363.168), stdev = 121.813
[info]   CI (99.9%): [21781.604, 22719.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1714.845 ±(99.9%) 548.521 MB/sec [Average]
[info]   (min, avg, max) = (1640.729, 1714.845, 1969.257), stdev = 142.449
[info]   CI (99.9%): [1166.325, 2263.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   21796.374 ±(99.9%) 6687.367 B/op [Average]
[info]   (min, avg, max) = (20772.816, 21796.374, 24877.927), stdev = 1736.688
[info]   CI (99.9%): [15109.007, 28483.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 5.231 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.804, 3.164), stdev = 1.358
[info]   CI (99.9%): [≈ 0, 6.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   10.186 ±(99.9%) 66.362 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.186, 40.143), stdev = 17.234
[info]   CI (99.9%): [≈ 0, 76.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.000, 15.000), stdev = 3.674
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.06% complete, ETA 00:37:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43751.128 ops/s
[info] # Warmup Iteration   2: 168868.016 ops/s
[info] # Warmup Iteration   3: 176747.902 ops/s
[info] Iteration   1: 176752.017 ops/s
[info]                  ·gc.alloc.rate:                   1082.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              9635.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8775.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.371 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 180751.909 ops/s
[info]                  ·gc.alloc.rate:                   1099.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              9570.898 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8593.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.363 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 181514.612 ops/s
[info]                  ·gc.alloc.rate:                   1106.820 MB/sec
[info]                  ·gc.alloc.rate.norm:              9596.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8560.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.935 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.116 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 176696.419 ops/s
[info]                  ·gc.alloc.rate:                   1096.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              9769.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11653.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.669 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 178747.744 ops/s
[info]                  ·gc.alloc.rate:               1096.149 MB/sec
[info]                  ·gc.alloc.rate.norm:          9648.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:      980.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8627.962 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala":
[info]   178892.540 ±(99.9%) 8558.107 ops/s [Average]
[info]   (min, avg, max) = (176696.419, 178892.540, 181514.612), stdev = 2222.513
[info]   CI (99.9%): [170334.433, 187450.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1096.305 ±(99.9%) 34.254 MB/sec [Average]
[info]   (min, avg, max) = (1082.306, 1096.305, 1106.820), stdev = 8.896
[info]   CI (99.9%): [1062.050, 1130.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9644.316 ±(99.9%) 294.867 B/op [Average]
[info]   (min, avg, max) = (9570.898, 9644.316, 9769.586), stdev = 76.576
[info]   CI (99.9%): [9349.449, 9939.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1049.736 ±(99.9%) 556.747 MB/sec [Average]
[info]   (min, avg, max) = (980.157, 1049.736, 1308.326), stdev = 144.585
[info]   CI (99.9%): [492.989, 1606.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9242.221 ±(99.9%) 5199.959 B/op [Average]
[info]   (min, avg, max) = (8560.370, 9242.221, 11653.416), stdev = 1350.413
[info]   CI (99.9%): [4042.263, 14442.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.841 ±(99.9%) 6.665 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.841, 3.935), stdev = 1.731
[info]   CI (99.9%): [≈ 0, 7.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.304 ±(99.9%) 57.767 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.304, 34.116), stdev = 15.002
[info]   CI (99.9%): [≈ 0, 65.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 10.000), stdev = 2.683
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.29% complete, ETA 00:36:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 191404.008 ops/s
[info] # Warmup Iteration   2: 419145.234 ops/s
[info] # Warmup Iteration   3: 438826.472 ops/s
[info] Iteration   1: 440705.066 ops/s
[info]                  ·gc.alloc.rate:               300.822 MB/sec
[info]                  ·gc.alloc.rate.norm:          1074.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 913.520 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 437152.753 ops/s
[info]                  ·gc.alloc.rate:               293.209 MB/sec
[info]                  ·gc.alloc.rate.norm:          1055.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1182.366 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 447160.103 ops/s
[info]                  ·gc.alloc.rate:                   299.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              1053.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1155.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.063 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 443611.749 ops/s
[info]                  ·gc.alloc.rate:               301.300 MB/sec
[info]                  ·gc.alloc.rate.norm:          1068.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1162.792 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 447175.572 ops/s
[info]                  ·gc.alloc.rate:               298.611 MB/sec
[info]                  ·gc.alloc.rate.norm:          1050.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1153.515 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala":
[info]   443161.049 ±(99.9%) 16611.795 ops/s [Average]
[info]   (min, avg, max) = (437152.753, 443161.049, 447175.572), stdev = 4314.030
[info]   CI (99.9%): [426549.253, 459772.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   298.634 ±(99.9%) 12.430 MB/sec [Average]
[info]   (min, avg, max) = (293.209, 298.634, 301.300), stdev = 3.228
[info]   CI (99.9%): [286.204, 311.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1060.557 ±(99.9%) 40.104 B/op [Average]
[info]   (min, avg, max) = (1050.976, 1060.557, 1074.328), stdev = 10.415
[info]   CI (99.9%): [1020.454, 1100.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   313.638 ±(99.9%) 124.520 MB/sec [Average]
[info]   (min, avg, max) = (255.794, 313.638, 328.497), stdev = 32.338
[info]   CI (99.9%): [189.118, 438.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1113.611 ±(99.9%) 432.919 B/op [Average]
[info]   (min, avg, max) = (913.520, 1113.611, 1182.366), stdev = 112.428
[info]   CI (99.9%): [680.692, 1546.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.629 ±(99.9%) 5.413 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.629, 3.143), stdev = 1.406
[info]   CI (99.9%): [≈ 0, 6.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.213 ±(99.9%) 19.052 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.213, 11.063), stdev = 4.948
[info]   CI (99.9%): [≈ 0, 21.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 59.53% complete, ETA 00:36:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2959.854 ops/s
[info] # Warmup Iteration   2: 52690.777 ops/s
[info] # Warmup Iteration   3: 66410.301 ops/s
[info] Iteration   1: 67530.009 ops/s
[info]                  ·gc.alloc.rate:                   2700.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              62940.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2645.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61665.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.317 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 67500.464 ops/s
[info]                  ·gc.alloc.rate:                   2727.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              63576.914 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2670.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62251.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.427 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 67681.674 ops/s
[info]                  ·gc.alloc.rate:               2742.186 MB/sec
[info]                  ·gc.alloc.rate.norm:          63767.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2689.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62550.226 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 68031.054 ops/s
[info]                  ·gc.alloc.rate:                   2755.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              63753.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2704.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62569.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.926 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 67391.947 ops/s
[info]                  ·gc.alloc.rate:               2720.160 MB/sec
[info]                  ·gc.alloc.rate.norm:          63523.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2374.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55443.666 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson":
[info]   67627.029 ±(99.9%) 956.707 ops/s [Average]
[info]   (min, avg, max) = (67391.947, 67627.029, 68031.054), stdev = 248.454
[info]   CI (99.9%): [66670.322, 68583.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2729.205 ±(99.9%) 81.302 MB/sec [Average]
[info]   (min, avg, max) = (2700.563, 2729.205, 2755.828), stdev = 21.114
[info]   CI (99.9%): [2647.904, 2810.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63512.434 ±(99.9%) 1298.899 B/op [Average]
[info]   (min, avg, max) = (62940.292, 63512.434, 63767.854), stdev = 337.320
[info]   CI (99.9%): [62213.535, 64811.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2616.989 ±(99.9%) 529.495 MB/sec [Average]
[info]   (min, avg, max) = (2374.179, 2616.989, 2704.627), stdev = 137.508
[info]   CI (99.9%): [2087.494, 3146.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   60896.125 ±(99.9%) 11820.781 B/op [Average]
[info]   (min, avg, max) = (55443.666, 60896.125, 62569.350), stdev = 3069.819
[info]   CI (99.9%): [49075.345, 72716.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.229 ±(99.9%) 1.579 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.229, 0.958), stdev = 0.410
[info]   CI (99.9%): [≈ 0, 1.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.334 ±(99.9%) 36.803 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.334, 22.317), stdev = 9.558
[info]   CI (99.9%): [≈ 0, 42.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.200, 13.000), stdev = 1.095
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 59.76% complete, ETA 00:36:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67283.619 ops/s
[info] # Warmup Iteration   2: 171954.756 ops/s
[info] # Warmup Iteration   3: 180863.485 ops/s
[info] Iteration   1: 183525.923 ops/s
[info]                  ·gc.alloc.rate:                   1200.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              10294.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11322.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.357 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 184150.103 ops/s
[info]                  ·gc.alloc.rate:                   1208.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              10328.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11306.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.061 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.153 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 184985.645 ops/s
[info]                  ·gc.alloc.rate:                   1203.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              10241.388 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8410.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.834 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 184731.510 ops/s
[info]                  ·gc.alloc.rate:                   1210.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              10313.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11200.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.419 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 180266.769 ops/s
[info]                  ·gc.alloc.rate:                   1187.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              10363.442 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8622.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce":
[info]   183531.990 ±(99.9%) 7355.568 ops/s [Average]
[info]   (min, avg, max) = (180266.769, 183531.990, 184985.645), stdev = 1910.218
[info]   CI (99.9%): [176176.421, 190887.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1202.139 ±(99.9%) 36.087 MB/sec [Average]
[info]   (min, avg, max) = (1187.036, 1202.139, 1210.590), stdev = 9.372
[info]   CI (99.9%): [1166.052, 1238.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10308.226 ±(99.9%) 173.684 B/op [Average]
[info]   (min, avg, max) = (10241.388, 10308.226, 10363.442), stdev = 45.105
[info]   CI (99.9%): [10134.542, 10481.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1186.920 ±(99.9%) 699.071 MB/sec [Average]
[info]   (min, avg, max) = (987.587, 1186.920, 1323.485), stdev = 181.546
[info]   CI (99.9%): [487.849, 1885.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10172.542 ±(99.9%) 5831.429 B/op [Average]
[info]   (min, avg, max) = (8410.689, 10172.542, 11322.802), stdev = 1514.404
[info]   CI (99.9%): [4341.113, 16003.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.725 ±(99.9%) 5.053 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.725, 3.061), stdev = 1.312
[info]   CI (99.9%): [≈ 0, 5.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.189 ±(99.9%) 43.167 B/op [Average]
[info]   (min, avg, max) = (0.182, 6.189, 26.153), stdev = 11.210
[info]   CI (99.9%): [≈ 0, 49.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 12.000), stdev = 3.873
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.00% complete, ETA 00:36:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 161849.410 ops/s
[info] # Warmup Iteration   2: 523528.312 ops/s
[info] # Warmup Iteration   3: 540031.490 ops/s
[info] Iteration   1: 543960.425 ops/s
[info]                  ·gc.alloc.rate:               553.978 MB/sec
[info]                  ·gc.alloc.rate.norm:          1602.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1890.736 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 540277.035 ops/s
[info]                  ·gc.alloc.rate:               541.467 MB/sec
[info]                  ·gc.alloc.rate.norm:          1577.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 953.704 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 548446.456 ops/s
[info]                  ·gc.alloc.rate:                   563.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              1617.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1880.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 546758.694 ops/s
[info]                  ·gc.alloc.rate:               560.004 MB/sec
[info]                  ·gc.alloc.rate.norm:          1611.982 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1888.766 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 550291.752 ops/s
[info]                  ·gc.alloc.rate:                   550.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              1573.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     939.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala":
[info]   545946.872 ±(99.9%) 15145.074 ops/s [Average]
[info]   (min, avg, max) = (540277.035, 545946.872, 550291.752), stdev = 3933.128
[info]   CI (99.9%): [530801.798, 561091.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   553.815 ±(99.9%) 33.344 MB/sec [Average]
[info]   (min, avg, max) = (541.467, 553.815, 563.563), stdev = 8.659
[info]   CI (99.9%): [520.471, 587.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1596.480 ±(99.9%) 77.831 B/op [Average]
[info]   (min, avg, max) = (1573.147, 1596.480, 1617.301), stdev = 20.212
[info]   CI (99.9%): [1518.649, 1674.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   524.122 ±(99.9%) 689.681 MB/sec [Average]
[info]   (min, avg, max) = (327.434, 524.122, 656.160), stdev = 179.108
[info]   CI (99.9%): [≈ 0, 1213.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1510.505 ±(99.9%) 1982.821 B/op [Average]
[info]   (min, avg, max) = (939.236, 1510.505, 1890.736), stdev = 514.932
[info]   CI (99.9%): [≈ 0, 3493.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.060 ±(99.9%) 0.324 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.060, 0.179), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.643
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.24% complete, ETA 00:35:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 655235.740 ops/s
[info] # Warmup Iteration   2: 1092921.975 ops/s
[info] # Warmup Iteration   3: 1111063.017 ops/s
[info] Iteration   1: 1130584.875 ops/s
[info]                  ·gc.alloc.rate:                   860.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              1196.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     920.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1131337.503 ops/s
[info]                  ·gc.alloc.rate:                   869.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              1209.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1381.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1144234.044 ops/s
[info]                  ·gc.alloc.rate:                   875.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              1204.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     911.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1142672.971 ops/s
[info]                  ·gc.alloc.rate:                   880.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              1212.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1368.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.444 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1125660.746 ops/s
[info]                  ·gc.alloc.rate:               862.075 MB/sec
[info]                  ·gc.alloc.rate.norm:          1204.684 B/op
[info]                  ·gc.churn.PS_Eden_Space:      988.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1381.709 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala":
[info]   1134898.028 ±(99.9%) 31295.748 ops/s [Average]
[info]   (min, avg, max) = (1125660.746, 1134898.028, 1144234.044), stdev = 8127.406
[info]   CI (99.9%): [1103602.280, 1166193.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   869.548 ±(99.9%) 33.551 MB/sec [Average]
[info]   (min, avg, max) = (860.187, 869.548, 880.583), stdev = 8.713
[info]   CI (99.9%): [835.997, 903.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1205.489 ±(99.9%) 22.395 B/op [Average]
[info]   (min, avg, max) = (1196.943, 1205.489, 1212.354), stdev = 5.816
[info]   CI (99.9%): [1183.094, 1227.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   860.065 ±(99.9%) 695.645 MB/sec [Average]
[info]   (min, avg, max) = (661.429, 860.065, 994.313), stdev = 180.657
[info]   CI (99.9%): [164.420, 1555.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1192.792 ±(99.9%) 973.129 B/op [Average]
[info]   (min, avg, max) = (911.687, 1192.792, 1381.709), stdev = 252.719
[info]   CI (99.9%): [219.663, 2165.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.662 ±(99.9%) 5.523 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.662, 3.228), stdev = 1.434
[info]   CI (99.9%): [≈ 0, 6.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.912 ±(99.9%) 7.604 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.912, 4.444), stdev = 1.975
[info]   CI (99.9%): [≈ 0, 8.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 9.000), stdev = 1.871
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 60.47% complete, ETA 00:35:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 811582.607 ops/s
[info] # Warmup Iteration   2: 1250228.663 ops/s
[info] # Warmup Iteration   3: 1288008.042 ops/s
[info] Iteration   1: 1285637.292 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1288735.836 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1287005.308 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1287430.943 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1286961.700 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc":
[info]   1287154.216 ±(99.9%) 4278.547 ops/s [Average]
[info]   (min, avg, max) = (1285637.292, 1287154.216, 1288735.836), stdev = 1111.125
[info]   CI (99.9%): [1282875.669, 1291432.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 60.71% complete, ETA 00:35:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101510.990 ops/s
[info] # Warmup Iteration   2: 330525.651 ops/s
[info] # Warmup Iteration   3: 345295.138 ops/s
[info] Iteration   1: 357379.085 ops/s
[info]                  ·gc.alloc.rate:                   998.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              4395.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4318.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 355050.844 ops/s
[info]                  ·gc.alloc.rate:                   990.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              4389.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4359.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 359507.914 ops/s
[info]                  ·gc.alloc.rate:                   1010.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              4425.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4314.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.851 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.860 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 343573.327 ops/s
[info]                  ·gc.alloc.rate:                   966.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              4427.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4491.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.144 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 352954.940 ops/s
[info]                  ·gc.alloc.rate:                   985.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              4394.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4360.514 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.557 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson":
[info]   353693.222 ±(99.9%) 23752.318 ops/s [Average]
[info]   (min, avg, max) = (343573.327, 353693.222, 359507.914), stdev = 6168.401
[info]   CI (99.9%): [329940.905, 377445.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   990.364 ±(99.9%) 63.216 MB/sec [Average]
[info]   (min, avg, max) = (966.499, 990.364, 1010.994), stdev = 16.417
[info]   CI (99.9%): [927.149, 1053.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4406.609 ±(99.9%) 71.178 B/op [Average]
[info]   (min, avg, max) = (4389.578, 4406.609, 4427.411), stdev = 18.485
[info]   CI (99.9%): [4335.431, 4477.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   981.724 ±(99.9%) 11.664 MB/sec [Average]
[info]   (min, avg, max) = (977.927, 981.724, 985.557), stdev = 3.029
[info]   CI (99.9%): [970.059, 993.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4369.068 ±(99.9%) 277.654 B/op [Average]
[info]   (min, avg, max) = (4314.630, 4369.068, 4491.957), stdev = 72.106
[info]   CI (99.9%): [4091.415, 4646.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 6.453 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.858, 3.851), stdev = 1.676
[info]   CI (99.9%): [≈ 0, 7.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.767 ±(99.9%) 28.227 B/op [Average]
[info]   (min, avg, max) = (0.092, 3.767, 16.860), stdev = 7.330
[info]   CI (99.9%): [≈ 0, 31.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 11.000), stdev = 2.915
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 60.94% complete, ETA 00:35:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 179.453 ops/s
[info] # Warmup Iteration   2: 466.360 ops/s
[info] # Warmup Iteration   3: 583.448 ops/s
[info] Iteration   1: 586.674 ops/s
[info]                  ·gc.alloc.rate:                   1252.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              3358717.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2641982.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.823 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 594.618 ops/s
[info]                  ·gc.alloc.rate:                   1275.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              3376063.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3475280.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.786 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12666.622 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 580.353 ops/s
[info]                  ·gc.alloc.rate:                   1258.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              3410116.627 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1299.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3522926.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2086.775 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 589.509 ops/s
[info]                  ·gc.alloc.rate:                   1256.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              3352328.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3454969.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 222.156 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 600.070 ops/s
[info]                  ·gc.alloc.rate:                   1292.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              3386899.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1297.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3398291.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 108.864 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce":
[info]   590.245 ±(99.9%) 28.994 ops/s [Average]
[info]   (min, avg, max) = (580.353, 590.245, 600.070), stdev = 7.530
[info]   CI (99.9%): [561.250, 619.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1267.018 ±(99.9%) 65.170 MB/sec [Average]
[info]   (min, avg, max) = (1252.411, 1267.018, 1292.732), stdev = 16.925
[info]   CI (99.9%): [1201.847, 1332.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3376824.893 ±(99.9%) 89032.396 B/op [Average]
[info]   (min, avg, max) = (3352328.014, 3376824.893, 3410116.627), stdev = 23121.430
[info]   CI (99.9%): [3287792.498, 3465857.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1237.950 ±(99.9%) 544.860 MB/sec [Average]
[info]   (min, avg, max) = (985.153, 1237.950, 1313.146), stdev = 141.499
[info]   CI (99.9%): [693.089, 1782.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3298690.180 ±(99.9%) 1424054.191 B/op [Average]
[info]   (min, avg, max) = (2641982.801, 3298690.180, 3522926.596), stdev = 369822.351
[info]   CI (99.9%): [1874635.989, 4722744.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.140 ±(99.9%) 7.940 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.140, 4.786), stdev = 2.062
[info]   CI (99.9%): [≈ 0, 9.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3028.048 ±(99.9%) 21004.274 B/op [Average]
[info]   (min, avg, max) = (55.823, 3028.048, 12666.622), stdev = 5454.743
[info]   CI (99.9%): [≈ 0, 24032.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 14.000), stdev = 3.975
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.18% complete, ETA 00:35:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127.843 ops/s
[info] # Warmup Iteration   2: 499.334 ops/s
[info] # Warmup Iteration   3: 587.007 ops/s
[info] Iteration   1: 592.164 ops/s
[info]                  ·gc.alloc.rate:                   1252.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              3328521.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2597568.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.258 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 591.085 ops/s
[info]                  ·gc.alloc.rate:                   1249.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              3323667.959 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3475179.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.451 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14502.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 592.324 ops/s
[info]                  ·gc.alloc.rate:                   1274.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              3384815.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1291.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3430417.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1326.192 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 590.464 ops/s
[info]                  ·gc.alloc.rate:                   1257.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              3350477.428 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1287.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3429606.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.445 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 596.275 ops/s
[info]                  ·gc.alloc.rate:               1269.558 MB/sec
[info]                  ·gc.alloc.rate.norm:          3349531.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:      968.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2556452.878 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala":
[info]   592.462 ±(99.9%) 8.725 ops/s [Average]
[info]   (min, avg, max) = (590.464, 592.462, 596.275), stdev = 2.266
[info]   CI (99.9%): [583.737, 601.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1260.740 ±(99.9%) 42.074 MB/sec [Average]
[info]   (min, avg, max) = (1249.190, 1260.740, 1274.661), stdev = 10.926
[info]   CI (99.9%): [1218.666, 1302.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3347402.694 ±(99.9%) 93006.859 B/op [Average]
[info]   (min, avg, max) = (3323667.959, 3347402.694, 3384815.892), stdev = 24153.586
[info]   CI (99.9%): [3254395.835, 3440409.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1166.354 ±(99.9%) 679.028 MB/sec [Average]
[info]   (min, avg, max) = (968.961, 1166.354, 1306.135), stdev = 176.341
[info]   CI (99.9%): [487.327, 1845.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3097844.874 ±(99.9%) 1833037.017 B/op [Average]
[info]   (min, avg, max) = (2556452.878, 3097844.874, 3475179.243), stdev = 476033.892
[info]   CI (99.9%): [1264807.857, 4930881.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.198 ±(99.9%) 9.189 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.198, 5.451), stdev = 2.386
[info]   CI (99.9%): [≈ 0, 10.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3187.790 ±(99.9%) 24449.653 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3187.790, 14502.054), stdev = 6349.497
[info]   CI (99.9%): [≈ 0, 27637.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 15.000), stdev = 4.438
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.41% complete, ETA 00:34:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20360.750 ops/s
[info] # Warmup Iteration   2: 46870.714 ops/s
[info] # Warmup Iteration   3: 50055.364 ops/s
[info] Iteration   1: 49586.086 ops/s
[info]                  ·gc.alloc.rate:                   857.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              27204.367 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31398.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.661 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 49467.488 ops/s
[info]                  ·gc.alloc.rate:               825.759 MB/sec
[info]                  ·gc.alloc.rate.norm:          26269.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20981.693 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 50095.775 ops/s
[info]                  ·gc.alloc.rate:                   839.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              26380.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31076.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.308 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 49591.775 ops/s
[info]                  ·gc.alloc.rate:                   825.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              26210.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20929.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.746 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 150.627 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 50087.295 ops/s
[info]                  ·gc.alloc.rate:                   834.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              26209.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30769.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.391 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala":
[info]   49765.684 ±(99.9%) 1161.297 ops/s [Average]
[info]   (min, avg, max) = (49467.488, 49765.684, 50095.775), stdev = 301.585
[info]   CI (99.9%): [48604.387, 50926.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   836.526 ±(99.9%) 49.896 MB/sec [Average]
[info]   (min, avg, max) = (825.759, 836.526, 857.167), stdev = 12.958
[info]   CI (99.9%): [786.630, 886.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   26454.798 ±(99.9%) 1635.715 B/op [Average]
[info]   (min, avg, max) = (26209.165, 26454.798, 27204.367), stdev = 424.790
[info]   CI (99.9%): [24819.083, 28090.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   855.360 ±(99.9%) 688.654 MB/sec [Average]
[info]   (min, avg, max) = (659.462, 855.360, 989.331), stdev = 178.841
[info]   CI (99.9%): [166.706, 1544.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   27031.270 ±(99.9%) 21374.605 B/op [Average]
[info]   (min, avg, max) = (20929.239, 27031.270, 31398.922), stdev = 5550.917
[info]   CI (99.9%): [5656.665, 48405.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.053 ±(99.9%) 7.983 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.053, 4.746), stdev = 2.073
[info]   CI (99.9%): [≈ 0, 9.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   33.397 ±(99.9%) 253.389 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 33.397, 150.627), stdev = 65.804
[info]   CI (99.9%): [≈ 0, 286.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 11.000), stdev = 3.114
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 61.65% complete, ETA 00:34:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 146.729 ops/s
[info] # Warmup Iteration   2: 405.561 ops/s
[info] # Warmup Iteration   3: 552.231 ops/s
[info] Iteration   1: 573.382 ops/s
[info]                  ·gc.alloc.rate:                   1265.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              3471905.979 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3587810.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 114.174 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 570.146 ops/s
[info]                  ·gc.alloc.rate:                   1249.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              3447812.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3614006.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.369 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12051.278 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 567.777 ops/s
[info]                  ·gc.alloc.rate:                   1244.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448050.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2699760.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.936 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2591.494 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 548.379 ops/s
[info]                  ·gc.alloc.rate:                   1195.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              3430255.403 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1294.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3714900.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 179.060 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 546.961 ops/s
[info]                  ·gc.alloc.rate:                   1216.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              3496798.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3728376.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 119.591 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson":
[info]   561.329 ±(99.9%) 48.658 ops/s [Average]
[info]   (min, avg, max) = (546.961, 561.329, 573.382), stdev = 12.636
[info]   CI (99.9%): [512.671, 609.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1234.454 ±(99.9%) 107.953 MB/sec [Average]
[info]   (min, avg, max) = (1195.718, 1234.454, 1265.470), stdev = 28.035
[info]   CI (99.9%): [1126.501, 1342.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   3458964.589 ±(99.9%) 99421.572 B/op [Average]
[info]   (min, avg, max) = (3430255.403, 3458964.589, 3496798.423), stdev = 25819.467
[info]   CI (99.9%): [3359543.017, 3558386.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1236.872 ±(99.9%) 564.803 MB/sec [Average]
[info]   (min, avg, max) = (974.756, 1236.872, 1310.177), stdev = 146.678
[info]   CI (99.9%): [672.069, 1801.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3468970.888 ±(99.9%) 1672499.878 B/op [Average]
[info]   (min, avg, max) = (2699760.703, 3468970.888, 3728376.526), stdev = 434342.907
[info]   CI (99.9%): [1796471.011, 5141470.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.090 ±(99.9%) 7.211 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 1.090, 4.369), stdev = 1.873
[info]   CI (99.9%): [≈ 0, 8.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3011.120 ±(99.9%) 19885.356 B/op [Average]
[info]   (min, avg, max) = (114.174, 3011.120, 12051.278), stdev = 5164.164
[info]   CI (99.9%): [≈ 0, 22896.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.200, 18.000), stdev = 5.891
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 61.88% complete, ETA 00:34:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4710.706 ops/s
[info] # Warmup Iteration   2: 14618.516 ops/s
[info] # Warmup Iteration   3: 14961.286 ops/s
[info] Iteration   1: 14785.967 ops/s
[info]                  ·gc.alloc.rate:                   1163.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              123791.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104588.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.216 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 14389.086 ops/s
[info]                  ·gc.alloc.rate:                   1144.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              125158.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107538.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.725 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 516.838 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 14942.125 ops/s
[info]                  ·gc.alloc.rate:                   1180.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              124296.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137088.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98.659 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 14611.148 ops/s
[info]                  ·gc.alloc.rate:               1145.915 MB/sec
[info]                  ·gc.alloc.rate.norm:          123435.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:      969.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 104470.142 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 14775.947 ops/s
[info]                  ·gc.alloc.rate:                   1177.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              125430.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1293.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137785.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.434 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce":
[info]   14700.855 ±(99.9%) 808.501 ops/s [Average]
[info]   (min, avg, max) = (14389.086, 14700.855, 14942.125), stdev = 209.965
[info]   CI (99.9%): [13892.354, 15509.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1162.214 ±(99.9%) 65.307 MB/sec [Average]
[info]   (min, avg, max) = (1144.278, 1162.214, 1180.226), stdev = 16.960
[info]   CI (99.9%): [1096.907, 1227.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   124422.396 ±(99.9%) 3304.129 B/op [Average]
[info]   (min, avg, max) = (123435.113, 124422.396, 125430.104), stdev = 858.072
[info]   CI (99.9%): [121118.267, 127726.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1106.193 ±(99.9%) 673.458 MB/sec [Average]
[info]   (min, avg, max) = (969.853, 1106.193, 1301.681), stdev = 174.895
[info]   CI (99.9%): [432.735, 1779.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   118294.155 ±(99.9%) 67462.268 B/op [Average]
[info]   (min, avg, max) = (104470.142, 118294.155, 137785.682), stdev = 17519.737
[info]   CI (99.9%): [50831.887, 185756.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.145 ±(99.9%) 7.857 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.145, 4.725), stdev = 2.040
[info]   CI (99.9%): [≈ 0, 9.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   124.430 ±(99.9%) 859.881 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 124.430, 516.838), stdev = 223.308
[info]   CI (99.9%): [≈ 0, 984.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 13.000), stdev = 3.564
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.12% complete, ETA 00:34:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4484.418 ops/s
[info] # Warmup Iteration   2: 16700.356 ops/s
[info] # Warmup Iteration   3: 17525.449 ops/s
[info] Iteration   1: 17734.691 ops/s
[info]                  ·gc.alloc.rate:                   1072.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              95089.658 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86721.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.695 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 17573.082 ops/s
[info]                  ·gc.alloc.rate:                   1059.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              94909.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87634.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.864 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 17618.908 ops/s
[info]                  ·gc.alloc.rate:                   1060.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              94764.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87232.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.808 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 518.799 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 17649.301 ops/s
[info]                  ·gc.alloc.rate:               1074.278 MB/sec
[info]                  ·gc.alloc.rate.norm:          95796.704 B/op
[info]                  ·gc.churn.PS_Eden_Space:      968.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 86366.595 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 17126.470 ops/s
[info]                  ·gc.alloc.rate:               1030.865 MB/sec
[info]                  ·gc.alloc.rate.norm:          94727.983 B/op
[info]                  ·gc.churn.PS_Eden_Space:      965.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 88728.016 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala":
[info]   17540.490 ±(99.9%) 919.688 ops/s [Average]
[info]   (min, avg, max) = (17126.470, 17540.490, 17734.691), stdev = 238.840
[info]   CI (99.9%): [16620.802, 18460.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1059.585 ±(99.9%) 66.610 MB/sec [Average]
[info]   (min, avg, max) = (1030.865, 1059.585, 1074.278), stdev = 17.298
[info]   CI (99.9%): [992.976, 1126.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   95057.518 ±(99.9%) 1683.027 B/op [Average]
[info]   (min, avg, max) = (94727.983, 95057.518, 95796.704), stdev = 437.077
[info]   CI (99.9%): [93374.491, 96740.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   973.398 ±(99.9%) 22.854 MB/sec [Average]
[info]   (min, avg, max) = (965.571, 973.398, 978.655), stdev = 5.935
[info]   CI (99.9%): [950.544, 996.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   87336.655 ±(99.9%) 3526.772 B/op [Average]
[info]   (min, avg, max) = (86366.595, 87336.655, 88728.016), stdev = 915.891
[info]   CI (99.9%): [83809.884, 90863.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.174 ±(99.9%) 9.975 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.174, 5.808), stdev = 2.590
[info]   CI (99.9%): [≈ 0, 11.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   104.872 ±(99.9%) 891.029 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 104.872, 518.799), stdev = 231.397
[info]   CI (99.9%): [≈ 0, 995.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 12.000), stdev = 4.000
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.35% complete, ETA 00:34:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 102339.110 ops/s
[info] # Warmup Iteration   2: 213697.288 ops/s
[info] # Warmup Iteration   3: 217528.791 ops/s
[info] Iteration   1: 216831.492 ops/s
[info]                  ·gc.alloc.rate:               787.877 MB/sec
[info]                  ·gc.alloc.rate.norm:          5718.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4786.958 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 216529.839 ops/s
[info]                  ·gc.alloc.rate:                   791.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              5753.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7190.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 216781.269 ops/s
[info]                  ·gc.alloc.rate:                   785.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              5705.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4788.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 211940.244 ops/s
[info]                  ·gc.alloc.rate:                   767.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              5700.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4897.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.561 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.855 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 218085.381 ops/s
[info]                  ·gc.alloc.rate:                   808.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              5836.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7100.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.807 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala":
[info]   216033.645 ±(99.9%) 9113.764 ops/s [Average]
[info]   (min, avg, max) = (211940.244, 216033.645, 218085.381), stdev = 2366.816
[info]   CI (99.9%): [206919.881, 225147.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   788.431 ±(99.9%) 56.342 MB/sec [Average]
[info]   (min, avg, max) = (767.894, 788.431, 808.846), stdev = 14.632
[info]   CI (99.9%): [732.090, 844.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5742.729 ±(99.9%) 216.189 B/op [Average]
[info]   (min, avg, max) = (5700.342, 5742.729, 5836.165), stdev = 56.144
[info]   CI (99.9%): [5526.539, 5958.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   790.464 ±(99.9%) 690.181 MB/sec [Average]
[info]   (min, avg, max) = (659.495, 790.464, 989.519), stdev = 179.238
[info]   CI (99.9%): [100.283, 1480.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5752.684 ±(99.9%) 4900.492 B/op [Average]
[info]   (min, avg, max) = (4786.958, 5752.684, 7190.451), stdev = 1272.642
[info]   CI (99.9%): [852.192, 10653.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.054 ±(99.9%) 7.627 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.054, 4.561), stdev = 1.981
[info]   CI (99.9%): [≈ 0, 8.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.793 ±(99.9%) 56.647 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.793, 33.855), stdev = 14.711
[info]   CI (99.9%): [≈ 0, 64.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 2.588
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 62.59% complete, ETA 00:33:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 160727.307 ops/s
[info] # Warmup Iteration   2: 242891.540 ops/s
[info] # Warmup Iteration   3: 247437.708 ops/s
[info] Iteration   1: 246331.630 ops/s
[info]                  ·gc.alloc.rate:      11.775 MB/sec
[info]                  ·gc.alloc.rate.norm: 75.201 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 246692.890 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 248051.830 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 248818.663 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 248705.762 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   247720.155 ±(99.9%) 4420.458 ops/s [Average]
[info]   (min, avg, max) = (246331.630, 247720.155, 248818.663), stdev = 1147.979
[info]   CI (99.9%): [243299.697, 252140.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2.355 ±(99.9%) 20.277 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.355, 11.775), stdev = 5.266
[info]   CI (99.9%): [≈ 0, 22.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   15.042 ±(99.9%) 129.497 B/op [Average]
[info]   (min, avg, max) = (0.002, 15.042, 75.201), stdev = 33.630
[info]   CI (99.9%): [≈ 0, 144.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 62.82% complete, ETA 00:33:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6489.115 ops/s
[info] # Warmup Iteration   2: 16825.622 ops/s
[info] # Warmup Iteration   3: 17780.044 ops/s
[info] Iteration   1: 18004.066 ops/s
[info]                  ·gc.alloc.rate:               1152.690 MB/sec
[info]                  ·gc.alloc.rate.norm:          100756.648 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 85804.228 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 18023.871 ops/s
[info]                  ·gc.alloc.rate:                   1147.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              100189.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85970.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 269.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 18206.340 ops/s
[info]                  ·gc.alloc.rate:                   1175.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              101625.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113155.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.574 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 17943.662 ops/s
[info]                  ·gc.alloc.rate:               1154.660 MB/sec
[info]                  ·gc.alloc.rate.norm:          101244.197 B/op
[info]                  ·gc.churn.PS_Eden_Space:      978.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 85769.742 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 17628.598 ops/s
[info]                  ·gc.alloc.rate:               1150.103 MB/sec
[info]                  ·gc.alloc.rate.norm:          102678.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 116554.696 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson":
[info]   17961.307 ±(99.9%) 809.530 ops/s [Average]
[info]   (min, avg, max) = (17628.598, 17961.307, 18206.340), stdev = 210.232
[info]   CI (99.9%): [17151.778, 18770.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1156.137 ±(99.9%) 43.117 MB/sec [Average]
[info]   (min, avg, max) = (1147.633, 1156.137, 1175.598), stdev = 11.197
[info]   CI (99.9%): [1113.020, 1199.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   101298.865 ±(99.9%) 3620.465 B/op [Average]
[info]   (min, avg, max) = (100189.967, 101298.865, 102678.344), stdev = 940.223
[info]   CI (99.9%): [97678.400, 104919.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1111.816 ±(99.9%) 687.078 MB/sec [Average]
[info]   (min, avg, max) = (978.178, 1111.816, 1308.983), stdev = 178.432
[info]   CI (99.9%): [424.738, 1798.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   97451.027 ±(99.9%) 61353.541 B/op [Average]
[info]   (min, avg, max) = (85769.742, 97451.027, 116554.696), stdev = 15933.320
[info]   CI (99.9%): [36097.486, 158804.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.854 ±(99.9%) 5.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.854, 3.082), stdev = 1.347
[info]   CI (99.9%): [≈ 0, 6.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   74.319 ±(99.9%) 452.666 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 74.319, 269.022), stdev = 117.556
[info]   CI (99.9%): [≈ 0, 526.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 2.881
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.06% complete, ETA 00:33:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 706132.288 ops/s
[info] # Warmup Iteration   2: 1514563.299 ops/s
[info] # Warmup Iteration   3: 1537720.481 ops/s
[info] Iteration   1: 1538834.132 ops/s
[info]                  ·gc.alloc.rate:      62.579 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1539704.636 ops/s
[info]                  ·gc.alloc.rate:      62.622 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1534610.529 ops/s
[info]                  ·gc.alloc.rate:                   67.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              69.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.724 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.742 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1557406.261 ops/s
[info]                  ·gc.alloc.rate:      63.330 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1557889.227 ops/s
[info]                  ·gc.alloc.rate:      63.353 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala":
[info]   1545688.957 ±(99.9%) 42691.560 ops/s [Average]
[info]   (min, avg, max) = (1534610.529, 1545688.957, 1557889.227), stdev = 11086.863
[info]   CI (99.9%): [1502997.396, 1588380.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   63.908 ±(99.9%) 8.191 MB/sec [Average]
[info]   (min, avg, max) = (62.579, 63.908, 67.655), stdev = 2.127
[info]   CI (99.9%): [55.716, 72.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   65.077 ±(99.9%) 9.274 B/op [Average]
[info]   (min, avg, max) = (64.000, 65.077, 69.386), stdev = 2.409
[info]   CI (99.9%): [55.803, 74.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   51.159 ±(99.9%) 440.497 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.159, 255.796), stdev = 114.396
[info]   CI (99.9%): [≈ 0, 491.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   52.468 ±(99.9%) 451.768 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 52.468, 262.342), stdev = 117.323
[info]   CI (99.9%): [≈ 0, 504.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.145 ±(99.9%) 1.246 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.145, 0.724), stdev = 0.324
[info]   CI (99.9%): [≈ 0, 1.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.148 ±(99.9%) 1.278 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.148, 0.742), stdev = 0.332
[info]   CI (99.9%): [≈ 0, 1.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 63.29% complete, ETA 00:33:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5482.998 ops/s
[info] # Warmup Iteration   2: 63643.116 ops/s
[info] # Warmup Iteration   3: 78789.081 ops/s
[info] Iteration   1: 80588.919 ops/s
[info]                  ·gc.alloc.rate:               3411.191 MB/sec
[info]                  ·gc.alloc.rate.norm:          66615.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3321.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 64862.785 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   2: 79989.036 ops/s
[info]                  ·gc.alloc.rate:                   3430.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              67465.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3361.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66111.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.410 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 81156.712 ops/s
[info]                  ·gc.alloc.rate:                   3478.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              67459.253 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3383.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65615.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.211 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 79836.119 ops/s
[info]                  ·gc.alloc.rate:                   3411.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              67244.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3055.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60224.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.410 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 81120.135 ops/s
[info]                  ·gc.alloc.rate:               3478.307 MB/sec
[info]                  ·gc.alloc.rate.norm:          67483.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3399.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 65956.061 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson":
[info]   80538.184 ±(99.9%) 2372.350 ops/s [Average]
[info]   (min, avg, max) = (79836.119, 80538.184, 81156.712), stdev = 616.092
[info]   CI (99.9%): [78165.834, 82910.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3441.969 ±(99.9%) 132.035 MB/sec [Average]
[info]   (min, avg, max) = (3411.138, 3441.969, 3478.743), stdev = 34.289
[info]   CI (99.9%): [3309.935, 3574.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   67253.689 ±(99.9%) 1425.168 B/op [Average]
[info]   (min, avg, max) = (66615.085, 67253.689, 67483.794), stdev = 370.112
[info]   CI (99.9%): [65828.520, 68678.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3304.260 ±(99.9%) 548.242 MB/sec [Average]
[info]   (min, avg, max) = (3055.029, 3304.260, 3399.564), stdev = 142.377
[info]   CI (99.9%): [2756.018, 3852.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   64553.968 ±(99.9%) 9501.331 B/op [Average]
[info]   (min, avg, max) = (60224.799, 64553.968, 66111.064), stdev = 2467.466
[info]   CI (99.9%): [55052.636, 74055.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.406 ±(99.9%) 1.904 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.406, 1.211), stdev = 0.494
[info]   CI (99.9%): [≈ 0, 2.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.800, 15.000), stdev = 1.095
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.53% complete, ETA 00:32:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 384663.433 ops/s
[info] # Warmup Iteration   2: 1694047.963 ops/s
[info] # Warmup Iteration   3: 1832380.924 ops/s
[info] Iteration   1: 1841817.517 ops/s
[info]                  ·gc.alloc.rate:                   997.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              851.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     838.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1847733.471 ops/s
[info]                  ·gc.alloc.rate:                   994.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              847.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     838.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1859506.142 ops/s
[info]                  ·gc.alloc.rate:                   1006.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              851.674 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     834.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.400 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1823066.950 ops/s
[info]                  ·gc.alloc.rate:                   986.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              851.640 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     846.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1837767.761 ops/s
[info]                  ·gc.alloc.rate:               981.557 MB/sec
[info]                  ·gc.alloc.rate.norm:          840.381 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 559.078 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala":
[info]   1841978.368 ±(99.9%) 51508.782 ops/s [Average]
[info]   (min, avg, max) = (1823066.950, 1841978.368, 1859506.142), stdev = 13376.667
[info]   CI (99.9%): [1790469.586, 1893487.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   993.259 ±(99.9%) 37.190 MB/sec [Average]
[info]   (min, avg, max) = (981.557, 993.259, 1006.457), stdev = 9.658
[info]   CI (99.9%): [956.069, 1030.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   848.518 ±(99.9%) 19.129 B/op [Average]
[info]   (min, avg, max) = (840.381, 848.518, 851.799), stdev = 4.968
[info]   CI (99.9%): [829.389, 867.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   917.254 ±(99.9%) 568.900 MB/sec [Average]
[info]   (min, avg, max) = (652.998, 917.254, 986.744), stdev = 147.742
[info]   CI (99.9%): [348.354, 1486.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   783.491 ±(99.9%) 483.345 B/op [Average]
[info]   (min, avg, max) = (559.078, 783.491, 846.555), stdev = 125.523
[info]   CI (99.9%): [300.146, 1266.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.825 ±(99.9%) 6.876 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.825, 4.018), stdev = 1.786
[info]   CI (99.9%): [≈ 0, 7.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.698 ±(99.9%) 5.818 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.698, 3.400), stdev = 1.511
[info]   CI (99.9%): [≈ 0, 6.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 10.000), stdev = 3.240
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.76% complete, ETA 00:32:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 957440.047 ops/s
[info] # Warmup Iteration   2: 2247072.437 ops/s
[info] # Warmup Iteration   3: 2360194.605 ops/s
[info] Iteration   1: 2339794.744 ops/s
[info]                  ·gc.alloc.rate:               650.380 MB/sec
[info]                  ·gc.alloc.rate.norm:          437.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 444.049 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 2340387.114 ops/s
[info]                  ·gc.alloc.rate:               648.786 MB/sec
[info]                  ·gc.alloc.rate.norm:          436.294 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 444.611 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 2367399.707 ops/s
[info]                  ·gc.alloc.rate:                   654.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              434.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     439.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2362269.835 ops/s
[info]                  ·gc.alloc.rate:               651.298 MB/sec
[info]                  ·gc.alloc.rate.norm:          433.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 441.360 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 2337596.453 ops/s
[info]                  ·gc.alloc.rate:               642.309 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 223.123 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala":
[info]   2349489.570 ±(99.9%) 54537.911 ops/s [Average]
[info]   (min, avg, max) = (2337596.453, 2349489.570, 2367399.707), stdev = 14163.322
[info]   CI (99.9%): [2294951.659, 2404027.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   649.369 ±(99.9%) 16.899 MB/sec [Average]
[info]   (min, avg, max) = (642.309, 649.369, 654.072), stdev = 4.389
[info]   CI (99.9%): [632.470, 666.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   434.983 ±(99.9%) 7.696 B/op [Average]
[info]   (min, avg, max) = (432.379, 434.983, 437.498), stdev = 1.999
[info]   CI (99.9%): [427.287, 442.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   595.401 ±(99.9%) 568.173 MB/sec [Average]
[info]   (min, avg, max) = (331.455, 595.401, 662.465), stdev = 147.553
[info]   CI (99.9%): [27.228, 1163.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   398.623 ±(99.9%) 377.848 B/op [Average]
[info]   (min, avg, max) = (223.123, 398.623, 444.611), stdev = 98.126
[info]   CI (99.9%): [20.775, 776.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 64.00% complete, ETA 00:32:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1321555.708 ops/s
[info] # Warmup Iteration   2: 2256982.252 ops/s
[info] # Warmup Iteration   3: 2238084.772 ops/s
[info] Iteration   1: 2384698.289 ops/s
[info]                  ·gc.alloc.rate:      24.244 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2386665.751 ops/s
[info]                  ·gc.alloc.rate:      24.264 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2387079.012 ops/s
[info]                  ·gc.alloc.rate:      24.268 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2384320.293 ops/s
[info]                  ·gc.alloc.rate:      24.241 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2386597.738 ops/s
[info]                  ·gc.alloc.rate:      24.267 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   2385872.217 ±(99.9%) 4870.343 ops/s [Average]
[info]   (min, avg, max) = (2384320.293, 2385872.217, 2387079.012), stdev = 1264.813
[info]   CI (99.9%): [2381001.873, 2390742.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   24.257 ±(99.9%) 0.051 MB/sec [Average]
[info]   (min, avg, max) = (24.241, 24.257, 24.268), stdev = 0.013
[info]   CI (99.9%): [24.206, 24.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.000, 16.000, 16.000), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 64.24% complete, ETA 00:32:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12583.021 ops/s
[info] # Warmup Iteration   2: 46017.293 ops/s
[info] # Warmup Iteration   3: 50401.849 ops/s
[info] Iteration   1: 51197.190 ops/s
[info]                  ·gc.alloc.rate:                   2192.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              67374.608 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1964.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60367.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.356 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 50662.285 ops/s
[info]                  ·gc.alloc.rate:                   2195.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              68194.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2288.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71092.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.646 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 51372.086 ops/s
[info]                  ·gc.alloc.rate:               2219.378 MB/sec
[info]                  ·gc.alloc.rate.norm:          67996.362 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1980.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60673.734 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 51282.218 ops/s
[info]                  ·gc.alloc.rate:                   2216.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              68036.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1999.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61352.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.917 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 49828.127 ops/s
[info]                  ·gc.alloc.rate:                   2152.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              67977.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2351.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74253.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.260 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson":
[info]   50868.381 ±(99.9%) 2478.885 ops/s [Average]
[info]   (min, avg, max) = (49828.127, 50868.381, 51372.086), stdev = 643.759
[info]   CI (99.9%): [48389.496, 53347.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2195.345 ±(99.9%) 103.708 MB/sec [Average]
[info]   (min, avg, max) = (2152.334, 2195.345, 2219.378), stdev = 26.933
[info]   CI (99.9%): [2091.637, 2299.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   67916.081 ±(99.9%) 1211.099 B/op [Average]
[info]   (min, avg, max) = (67374.608, 67916.081, 68194.702), stdev = 314.519
[info]   CI (99.9%): [66704.982, 69127.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2116.780 ±(99.9%) 720.725 MB/sec [Average]
[info]   (min, avg, max) = (1964.500, 2116.780, 2351.040), stdev = 187.170
[info]   CI (99.9%): [1396.055, 2837.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   65548.043 ±(99.9%) 25449.118 B/op [Average]
[info]   (min, avg, max) = (60367.966, 65548.043, 74253.531), stdev = 6609.055
[info]   CI (99.9%): [40098.926, 90997.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.254 ±(99.9%) 1.668 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.254, 1.020), stdev = 0.433
[info]   CI (99.9%): [≈ 0, 1.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   7.836 ±(99.9%) 51.228 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.836, 31.356), stdev = 13.304
[info]   CI (99.9%): [≈ 0, 59.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 10.000), stdev = 1.225
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce
[info] # Run progress: 64.47% complete, ETA 00:32:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 81103.079 ops/s
[info] # Warmup Iteration   2: 683090.470 ops/s
[info] # Warmup Iteration   3: 819970.751 ops/s
[info] Iteration   1: 871382.458 ops/s
[info]                  ·gc.alloc.rate:                   2784.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              5029.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2645.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4779.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 869762.762 ops/s
[info]                  ·gc.alloc.rate:                   2815.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              5094.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2675.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4840.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 865717.760 ops/s
[info]                  ·gc.alloc.rate:               2804.642 MB/sec
[info]                  ·gc.alloc.rate.norm:          5099.178 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2696.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4901.738 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   4: 878247.353 ops/s
[info]                  ·gc.alloc.rate:                   2842.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              5094.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2708.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4853.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 841069.570 ops/s
[info]                  ·gc.alloc.rate:                   2728.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              5106.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2715.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5082.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce":
[info]   865235.981 ±(99.9%) 54856.955 ops/s [Average]
[info]   (min, avg, max) = (841069.570, 865235.981, 878247.353), stdev = 14246.177
[info]   CI (99.9%): [810379.025, 920092.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate":
[info]   2795.353 ±(99.9%) 164.472 MB/sec [Average]
[info]   (min, avg, max) = (2728.782, 2795.353, 2842.881), stdev = 42.713
[info]   CI (99.9%): [2630.881, 2959.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   5084.916 ±(99.9%) 119.818 B/op [Average]
[info]   (min, avg, max) = (5029.880, 5084.916, 5106.091), stdev = 31.116
[info]   CI (99.9%): [4965.098, 5204.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2688.357 ±(99.9%) 108.828 MB/sec [Average]
[info]   (min, avg, max) = (2645.962, 2688.357, 2715.926), stdev = 28.262
[info]   CI (99.9%): [2579.529, 2797.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4891.523 ±(99.9%) 443.375 B/op [Average]
[info]   (min, avg, max) = (4779.025, 4891.523, 5082.036), stdev = 115.143
[info]   CI (99.9%): [4448.148, 5334.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.060 ±(99.9%) 0.219 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.060, 0.150), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.400, 13.000), stdev = 1.140
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava
[info] # Run progress: 64.71% complete, ETA 00:31:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.644 ops/s
[info] # Warmup Iteration   2: 4212390.557 ops/s
[info] # Warmup Iteration   3: 4727167.541 ops/s
[info] Iteration   1: 4856659.993 ops/s
[info]                  ·gc.alloc.rate:                   300.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              97.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4719512.500 ops/s
[info]                  ·gc.alloc.rate:               294.786 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.299 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 108.191 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 4708332.010 ops/s
[info]                  ·gc.alloc.rate:                   298.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              99.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4708768.052 ops/s
[info]                  ·gc.alloc.rate:               293.805 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 108.549 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 4728381.137 ops/s
[info]                  ·gc.alloc.rate:      288.426 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava":
[info]   4744330.738 ±(99.9%) 243907.285 ops/s [Average]
[info]   (min, avg, max) = (4708332.010, 4744330.738, 4856659.993), stdev = 63341.947
[info]   CI (99.9%): [4500423.453, 4988238.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   295.121 ±(99.9%) 17.678 MB/sec [Average]
[info]   (min, avg, max) = (288.426, 295.121, 300.478), stdev = 4.591
[info]   CI (99.9%): [277.443, 312.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   97.903 ±(99.9%) 5.163 B/op [Average]
[info]   (min, avg, max) = (96.000, 97.903, 99.647), stdev = 1.341
[info]   CI (99.9%): [92.740, 103.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   245.896 ±(99.9%) 541.578 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.896, 324.771), stdev = 140.646
[info]   CI (99.9%): [≈ 0, 787.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   81.617 ±(99.9%) 180.759 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 81.617, 108.549), stdev = 46.943
[info]   CI (99.9%): [≈ 0, 262.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.060 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.034), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.011), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 4.000), stdev = 1.517
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala
[info] # Run progress: 64.94% complete, ETA 00:31:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15524.397 ops/s
[info] # Warmup Iteration   2: 784311.898 ops/s
[info] # Warmup Iteration   3: 988363.517 ops/s
[info] Iteration   1: 962702.589 ops/s
[info]                  ·gc.alloc.rate:                   1137.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              1858.964 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1601.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 991576.860 ops/s
[info]                  ·gc.alloc.rate:                   1163.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              1846.922 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2078.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 1013088.351 ops/s
[info]                  ·gc.alloc.rate:                   1191.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              1850.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1526.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.362 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.775 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 965228.527 ops/s
[info]                  ·gc.alloc.rate:               1141.855 MB/sec
[info]                  ·gc.alloc.rate.norm:          1861.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1301.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2122.430 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 961535.846 ops/s
[info]                  ·gc.alloc.rate:               1139.469 MB/sec
[info]                  ·gc.alloc.rate.norm:          1865.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:      975.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1597.342 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala":
[info]   978826.435 ±(99.9%) 87814.485 ops/s [Average]
[info]   (min, avg, max) = (961535.846, 978826.435, 1013088.351), stdev = 22805.143
[info]   CI (99.9%): [891011.950, 1066640.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1154.701 ±(99.9%) 88.689 MB/sec [Average]
[info]   (min, avg, max) = (1137.217, 1154.701, 1191.288), stdev = 23.032
[info]   CI (99.9%): [1066.013, 1243.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1856.685 ±(99.9%) 29.444 B/op [Average]
[info]   (min, avg, max) = (1846.922, 1856.685, 1865.047), stdev = 7.646
[info]   CI (99.9%): [1827.242, 1886.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1109.926 ±(99.9%) 688.287 MB/sec [Average]
[info]   (min, avg, max) = (975.912, 1109.926, 1309.722), stdev = 178.746
[info]   CI (99.9%): [421.639, 1798.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1785.293 ±(99.9%) 1115.767 B/op [Average]
[info]   (min, avg, max) = (1526.500, 1785.293, 2122.430), stdev = 289.761
[info]   CI (99.9%): [669.526, 2901.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.883 ±(99.9%) 7.489 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.883, 4.362), stdev = 1.945
[info]   CI (99.9%): [≈ 0, 8.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.372 ±(99.9%) 11.632 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.372, 6.775), stdev = 3.021
[info]   CI (99.9%): [≈ 0, 13.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 14.000), stdev = 3.834
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala
[info] # Run progress: 65.18% complete, ETA 00:31:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3338033.996 ops/s
[info] # Warmup Iteration   2: 9055763.333 ops/s
[info] # Warmup Iteration   3: 8952333.073 ops/s
[info] Iteration   1: 9032523.750 ops/s
[info]                  ·gc.alloc.rate:               422.888 MB/sec
[info]                  ·gc.alloc.rate.norm:          73.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 44.573 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 9200719.551 ops/s
[info]                  ·gc.alloc.rate:                   443.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              75.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 9231023.868 ops/s
[info]                  ·gc.alloc.rate:               433.689 MB/sec
[info]                  ·gc.alloc.rate.norm:          73.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56.561 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 9214895.758 ops/s
[info]                  ·gc.alloc.rate:                   433.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              73.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 9218928.300 ops/s
[info]                  ·gc.alloc.rate:                   437.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              74.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala":
[info]   9179618.245 ±(99.9%) 319361.977 ops/s [Average]
[info]   (min, avg, max) = (9032523.750, 9179618.245, 9231023.868), stdev = 82937.291
[info]   CI (99.9%): [8860256.268, 9498980.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   434.129 ±(99.9%) 29.048 MB/sec [Average]
[info]   (min, avg, max) = (422.888, 434.129, 443.724), stdev = 7.544
[info]   CI (99.9%): [405.080, 463.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   74.410 ±(99.9%) 3.400 B/op [Average]
[info]   (min, avg, max) = (73.688, 74.410, 75.886), stdev = 0.883
[info]   CI (99.9%): [71.010, 77.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   448.962 ±(99.9%) 760.800 MB/sec [Average]
[info]   (min, avg, max) = (255.796, 448.962, 663.789), stdev = 197.577
[info]   CI (99.9%): [≈ 0, 1209.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   76.836 ±(99.9%) 129.195 B/op [Average]
[info]   (min, avg, max) = (44.573, 76.836, 113.235), stdev = 33.552
[info]   CI (99.9%): [≈ 0, 206.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.011 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.007), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.304
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson
[info] # Run progress: 65.41% complete, ETA 00:31:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2499.111 ops/s
[info] # Warmup Iteration   2: 143159.733 ops/s
[info] # Warmup Iteration   3: 466666.197 ops/s
[info] Iteration   1: 477431.415 ops/s
[info]                  ·gc.alloc.rate:                   2262.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              7458.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2304.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7595.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.157 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 481563.042 ops/s
[info]                  ·gc.alloc.rate:                   2275.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              7435.097 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2319.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7578.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.769 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 466388.781 ops/s
[info]                  ·gc.alloc.rate:                   2226.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              7513.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6743.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 479902.038 ops/s
[info]                  ·gc.alloc.rate:                   2303.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              7553.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2347.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7696.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 485055.687 ops/s
[info]                  ·gc.alloc.rate:               2327.527 MB/sec
[info]                  ·gc.alloc.rate.norm:          7551.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2360.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7658.447 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson":
[info]   478068.193 ±(99.9%) 27310.825 ops/s [Average]
[info]   (min, avg, max) = (466388.781, 478068.193, 485055.687), stdev = 7092.534
[info]   CI (99.9%): [450757.368, 505379.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2279.055 ±(99.9%) 149.383 MB/sec [Average]
[info]   (min, avg, max) = (2226.329, 2279.055, 2327.527), stdev = 38.794
[info]   CI (99.9%): [2129.673, 2428.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   7502.564 ±(99.9%) 207.793 B/op [Average]
[info]   (min, avg, max) = (7435.097, 7502.564, 7553.851), stdev = 53.963
[info]   CI (99.9%): [7294.771, 7710.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2265.831 ±(99.9%) 582.139 MB/sec [Average]
[info]   (min, avg, max) = (1998.331, 2265.831, 2360.372), stdev = 151.180
[info]   CI (99.9%): [1683.692, 2847.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   7454.660 ±(99.9%) 1541.074 B/op [Average]
[info]   (min, avg, max) = (6743.818, 7454.660, 7696.720), stdev = 400.212
[info]   CI (99.9%): [5913.585, 8995.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.312 ±(99.9%) 1.639 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.312, 0.958), stdev = 0.426
[info]   CI (99.9%): [≈ 0, 1.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.027 ±(99.9%) 5.393 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.027, 3.157), stdev = 1.401
[info]   CI (99.9%): [≈ 0, 6.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.200, 14.000), stdev = 1.924
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce
[info] # Run progress: 65.65% complete, ETA 00:31:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 745.772 ops/s
[info] # Warmup Iteration   2: 3688.705 ops/s
[info] # Warmup Iteration   3: 4006.883 ops/s
[info] Iteration   1: 4327.174 ops/s
[info]                  ·gc.alloc.rate:                        2168.451 MB/sec
[info]                  ·gc.alloc.rate.norm:                   788613.160 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.021 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 7.581 B/op
[info]                  ·gc.churn.Metaspace:                   0.061 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              22.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:               2022.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          735388.439 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  0.642 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             233.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           5.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      1839.597 B/op
[info]                  ·gc.count:                             8.000 counts
[info]                  ·gc.time:                              47.000 ms
[info] Iteration   2: 4576.383 ops/s
[info]                  ·gc.alloc.rate:                   2277.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              783295.610 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2285.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     785801.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.796 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 4561.355 ops/s
[info]                  ·gc.alloc.rate:                   2307.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              796147.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2306.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     795970.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.743 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 256.437 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4599.258 ops/s
[info]                  ·gc.alloc.rate:                   2320.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              794044.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     682223.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.975 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 4582.120 ops/s
[info]                  ·gc.alloc.rate:                   2326.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              798652.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2344.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     804792.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.423 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 145.133 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce":
[info]   4529.258 ±(99.9%) 438.126 ops/s [Average]
[info]   (min, avg, max) = (4327.174, 4529.258, 4599.258), stdev = 113.780
[info]   CI (99.9%): [4091.132, 4967.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate":
[info]   2280.124 ±(99.9%) 251.072 MB/sec [Average]
[info]   (min, avg, max) = (2168.451, 2280.124, 2326.436), stdev = 65.203
[info]   CI (99.9%): [2029.052, 2531.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   792150.636 ±(99.9%) 23796.271 B/op [Average]
[info]   (min, avg, max) = (783295.610, 792150.636, 798652.701), stdev = 6179.816
[info]   CI (99.9%): [768354.364, 815946.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.Compressed_Class_Space.norm":
[info]   1.516 ±(99.9%) 13.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.516, 7.581), stdev = 3.390
[info]   CI (99.9%): [≈ 0, 14.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.Metaspace":
[info]   0.012 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.061), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.Metaspace.norm":
[info]   4.452 ±(99.9%) 38.332 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.452, 22.259), stdev = 9.955
[info]   CI (99.9%): [≈ 0, 42.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2190.425 ±(99.9%) 647.657 MB/sec [Average]
[info]   (min, avg, max) = (1993.853, 2190.425, 2344.322), stdev = 168.194
[info]   CI (99.9%): [1542.768, 2838.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   760835.614 ±(99.9%) 198386.690 B/op [Average]
[info]   (min, avg, max) = (682223.920, 760835.614, 804792.948), stdev = 51520.393
[info]   CI (99.9%): [562448.924, 959222.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Old_Gen":
[info]   0.128 ±(99.9%) 1.106 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.128, 0.642), stdev = 0.287
[info]   CI (99.9%): [≈ 0, 1.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Old_Gen.norm":
[info]   46.727 ±(99.9%) 402.331 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 46.727, 233.634), stdev = 104.484
[info]   CI (99.9%): [≈ 0, 449.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.299 ±(99.9%) 8.150 MB/sec [Average]
[info]   (min, avg, max) = (0.104, 1.299, 5.058), stdev = 2.117
[info]   CI (99.9%): [≈ 0, 9.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   466.788 ±(99.9%) 2973.993 B/op [Average]
[info]   (min, avg, max) = (35.796, 466.788, 1839.597), stdev = 772.337
[info]   CI (99.9%): [≈ 0, 3440.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 0.707
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.time":
[info]   87.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 17.400, 47.000), stdev = 16.607
[info]   CI (99.9%): [87.000, 87.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala
[info] # Run progress: 65.88% complete, ETA 00:30:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 498.791 ops/s
[info] # Warmup Iteration   2: 5652.819 ops/s
[info] # Warmup Iteration   3: 6383.976 ops/s
[info] Iteration   1: 6754.970 ops/s
[info]                  ·gc.alloc.rate:                   2294.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              534538.473 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2296.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     534995.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 286.120 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 6719.878 ops/s
[info]                  ·gc.alloc.rate:                   2283.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              534736.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2315.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     542149.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.622 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 6736.132 ops/s
[info]                  ·gc.alloc.rate:               2315.626 MB/sec
[info]                  ·gc.alloc.rate.norm:          541023.560 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2334.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 545530.301 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 6775.110 ops/s
[info]                  ·gc.alloc.rate:                   2316.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              537982.434 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     468045.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.835 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 6691.185 ops/s
[info]                  ·gc.alloc.rate:               2302.397 MB/sec
[info]                  ·gc.alloc.rate.norm:          541519.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2362.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 555621.513 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala":
[info]   6735.455 ±(99.9%) 124.123 ops/s [Average]
[info]   (min, avg, max) = (6691.185, 6735.455, 6775.110), stdev = 32.234
[info]   CI (99.9%): [6611.332, 6859.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2302.518 ±(99.9%) 53.988 MB/sec [Average]
[info]   (min, avg, max) = (2283.678, 2302.518, 2316.454), stdev = 14.021
[info]   CI (99.9%): [2248.530, 2356.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   537959.939 ±(99.9%) 12793.596 B/op [Average]
[info]   (min, avg, max) = (534538.473, 537959.939, 541519.216), stdev = 3322.456
[info]   CI (99.9%): [525166.343, 550753.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2264.865 ±(99.9%) 545.338 MB/sec [Average]
[info]   (min, avg, max) = (2015.317, 2264.865, 2362.356), stdev = 141.622
[info]   CI (99.9%): [1719.527, 2810.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   529268.349 ±(99.9%) 134854.029 B/op [Average]
[info]   (min, avg, max) = (468045.212, 529268.349, 555621.513), stdev = 35021.163
[info]   CI (99.9%): [394414.320, 664122.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.296 ±(99.9%) 2.041 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.296, 1.228), stdev = 0.530
[info]   CI (99.9%): [≈ 0, 2.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   68.915 ±(99.9%) 475.584 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 68.915, 286.120), stdev = 123.508
[info]   CI (99.9%): [≈ 0, 544.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.600, 13.000), stdev = 1.517
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala
[info] # Run progress: 66.12% complete, ETA 00:30:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20419.380 ops/s
[info] # Warmup Iteration   2: 44583.080 ops/s
[info] # Warmup Iteration   3: 43483.909 ops/s
[info] Iteration   1: 43971.509 ops/s
[info]                  ·gc.alloc.rate:               749.322 MB/sec
[info]                  ·gc.alloc.rate.norm:          26819.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23651.373 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 45830.118 ops/s
[info]                  ·gc.alloc.rate:                   760.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              26099.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22715.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.715 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 45734.040 ops/s
[info]                  ·gc.alloc.rate:                   753.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              25930.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22809.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.716 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 46038.418 ops/s
[info]                  ·gc.alloc.rate:                   763.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              26108.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34044.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.519 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 86.108 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 46255.404 ops/s
[info]                  ·gc.alloc.rate:                   765.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              26037.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22574.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.749 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala":
[info]   45565.898 ±(99.9%) 3518.050 ops/s [Average]
[info]   (min, avg, max) = (43971.509, 45565.898, 46255.404), stdev = 913.626
[info]   CI (99.9%): [42047.848, 49083.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   758.459 ±(99.9%) 26.450 MB/sec [Average]
[info]   (min, avg, max) = (749.322, 758.459, 765.473), stdev = 6.869
[info]   CI (99.9%): [732.010, 784.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   26199.127 ±(99.9%) 1362.681 B/op [Average]
[info]   (min, avg, max) = (25930.928, 26199.127, 26819.361), stdev = 353.884
[info]   CI (99.9%): [24836.445, 27561.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   728.978 ±(99.9%) 574.852 MB/sec [Average]
[info]   (min, avg, max) = (660.810, 728.978, 996.023), stdev = 149.287
[info]   CI (99.9%): [154.126, 1303.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   25159.016 ±(99.9%) 19195.446 B/op [Average]
[info]   (min, avg, max) = (22574.880, 25159.016, 34044.675), stdev = 4984.996
[info]   CI (99.9%): [5963.570, 44354.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.587 ±(99.9%) 4.202 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.587, 2.519), stdev = 1.091
[info]   CI (99.9%): [≈ 0, 4.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   20.058 ±(99.9%) 143.648 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20.058, 86.108), stdev = 37.305
[info]   CI (99.9%): [≈ 0, 163.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 9.000), stdev = 2.168
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce
[info] # Run progress: 66.35% complete, ETA 00:30:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1077.640 ops/s
[info] # Warmup Iteration   2: 3985.008 ops/s
[info] # Warmup Iteration   3: 4394.212 ops/s
[info] Iteration   1: 4573.462 ops/s
[info]                  ·gc.alloc.rate:                   1005.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              346073.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     338867.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.812 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 4588.425 ops/s
[info]                  ·gc.alloc.rate:               1009.689 MB/sec
[info]                  ·gc.alloc.rate.norm:          346319.461 B/op
[info]                  ·gc.churn.PS_Eden_Space:      986.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 338331.385 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   3: 4599.234 ops/s
[info]                  ·gc.alloc.rate:                   1002.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              343033.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     337978.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1297.085 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4625.989 ops/s
[info]                  ·gc.alloc.rate:                   1011.854 MB/sec
[info]                  ·gc.alloc.rate.norm:              344244.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     334039.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 169.966 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4617.370 ops/s
[info]                  ·gc.alloc.rate:                   1015.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              346249.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     333710.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce":
[info]   4600.896 ±(99.9%) 81.955 ops/s [Average]
[info]   (min, avg, max) = (4573.462, 4600.896, 4625.989), stdev = 21.283
[info]   CI (99.9%): [4518.941, 4682.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate":
[info]   1009.103 ±(99.9%) 20.176 MB/sec [Average]
[info]   (min, avg, max) = (1002.415, 1009.103, 1015.856), stdev = 5.240
[info]   CI (99.9%): [988.927, 1029.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   345184.051 ±(99.9%) 5685.758 B/op [Average]
[info]   (min, avg, max) = (343033.509, 345184.051, 346319.461), stdev = 1476.573
[info]   CI (99.9%): [339498.293, 350869.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   983.946 ±(99.9%) 13.411 MB/sec [Average]
[info]   (min, avg, max) = (979.068, 983.946, 987.643), stdev = 3.483
[info]   CI (99.9%): [970.535, 997.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   336585.395 ±(99.9%) 9616.286 B/op [Average]
[info]   (min, avg, max) = (333710.050, 336585.395, 338867.676), stdev = 2497.319
[info]   CI (99.9%): [326969.109, 346201.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.883 ±(99.9%) 6.307 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.883, 3.790), stdev = 1.638
[info]   CI (99.9%): [≈ 0, 7.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   301.991 ±(99.9%) 2158.299 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 301.991, 1297.085), stdev = 560.503
[info]   CI (99.9%): [≈ 0, 2460.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 11.000), stdev = 3.421
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala
[info] # Run progress: 66.59% complete, ETA 00:30:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1279.242 ops/s
[info] # Warmup Iteration   2: 4696.176 ops/s
[info] # Warmup Iteration   3: 5050.245 ops/s
[info] Iteration   1: 5136.711 ops/s
[info]                  ·gc.alloc.rate:                   644.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              197510.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196123.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.378 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5145.340 ops/s
[info]                  ·gc.alloc.rate:                   648.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              198476.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196837.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.735 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 5149.847 ops/s
[info]                  ·gc.alloc.rate:               647.280 MB/sec
[info]                  ·gc.alloc.rate.norm:          197816.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 197664.006 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 5126.218 ops/s
[info]                  ·gc.alloc.rate:               643.890 MB/sec
[info]                  ·gc.alloc.rate.norm:          197690.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 199368.487 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 5021.284 ops/s
[info]                  ·gc.alloc.rate:                   641.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              200927.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     204371.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala":
[info]   5115.880 ±(99.9%) 206.566 ops/s [Average]
[info]   (min, avg, max) = (5021.284, 5115.880, 5149.847), stdev = 53.644
[info]   CI (99.9%): [4909.314, 5322.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   645.168 ±(99.9%) 11.638 MB/sec [Average]
[info]   (min, avg, max) = (641.115, 645.168, 648.880), stdev = 3.022
[info]   CI (99.9%): [633.530, 656.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   198484.188 ±(99.9%) 5443.123 B/op [Average]
[info]   (min, avg, max) = (197510.188, 198484.188, 200927.207), stdev = 1413.562
[info]   CI (99.9%): [193041.064, 203927.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   646.382 ±(99.9%) 18.141 MB/sec [Average]
[info]   (min, avg, max) = (640.148, 646.382, 652.104), stdev = 4.711
[info]   CI (99.9%): [628.240, 664.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   198872.821 ±(99.9%) 12718.956 B/op [Average]
[info]   (min, avg, max) = (196123.304, 198872.821, 204371.074), stdev = 3303.073
[info]   CI (99.9%): [186153.865, 211591.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.432 ±(99.9%) 24.824 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.432, 13.047), stdev = 6.447
[info]   CI (99.9%): [≈ 0, 31.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala
[info] # Run progress: 66.82% complete, ETA 00:30:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3718.379 ops/s
[info] # Warmup Iteration   2: 6285.630 ops/s
[info] # Warmup Iteration   3: 6506.547 ops/s
[info] Iteration   1: 6568.735 ops/s
[info]                  ·gc.alloc.rate:               330.678 MB/sec
[info]                  ·gc.alloc.rate.norm:          79226.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78683.100 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 6583.254 ops/s
[info]                  ·gc.alloc.rate:                   330.377 MB/sec
[info]                  ·gc.alloc.rate.norm:              78977.299 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78503.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.302 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 789.248 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 6544.758 ops/s
[info]                  ·gc.alloc.rate:                   329.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              79217.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78811.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40.046 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6576.448 ops/s
[info]                  ·gc.alloc.rate:                   332.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              79584.350 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78428.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.963 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 6558.453 ops/s
[info]                  ·gc.alloc.rate:               332.388 MB/sec
[info]                  ·gc.alloc.rate.norm:          79758.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78323.512 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala":
[info]   6566.330 ±(99.9%) 58.461 ops/s [Average]
[info]   (min, avg, max) = (6544.758, 6566.330, 6583.254), stdev = 15.182
[info]   CI (99.9%): [6507.869, 6624.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   331.097 ±(99.9%) 5.094 MB/sec [Average]
[info]   (min, avg, max) = (329.500, 331.097, 332.543), stdev = 1.323
[info]   CI (99.9%): [326.003, 336.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   79352.746 ±(99.9%) 1207.457 B/op [Average]
[info]   (min, avg, max) = (78977.299, 79352.746, 79758.259), stdev = 313.573
[info]   CI (99.9%): [78145.289, 80560.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   327.748 ±(99.9%) 3.140 MB/sec [Average]
[info]   (min, avg, max) = (326.409, 327.748, 328.412), stdev = 0.816
[info]   CI (99.9%): [324.607, 330.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   78549.975 ±(99.9%) 756.413 B/op [Average]
[info]   (min, avg, max) = (78323.512, 78549.975, 78811.395), stdev = 196.438
[info]   CI (99.9%): [77793.562, 79306.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.702 ±(99.9%) 5.602 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.702, 3.302), stdev = 1.455
[info]   CI (99.9%): [≈ 0, 6.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   167.852 ±(99.9%) 1339.096 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 167.852, 789.248), stdev = 347.759
[info]   CI (99.9%): [≈ 0, 1506.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 67.06% complete, ETA 00:29:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3745.546 ops/s
[info] # Warmup Iteration   2: 6125.327 ops/s
[info] # Warmup Iteration   3: 6417.488 ops/s
[info] Iteration   1: 6609.971 ops/s
[info]                  ·gc.alloc.rate:               279.140 MB/sec
[info]                  ·gc.alloc.rate.norm:          66456.732 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60897.336 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 6628.174 ops/s
[info]                  ·gc.alloc.rate:               280.995 MB/sec
[info]                  ·gc.alloc.rate.norm:          66715.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60732.004 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 6630.347 ops/s
[info]                  ·gc.alloc.rate:                   283.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              67353.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78263.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.941 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 6626.144 ops/s
[info]                  ·gc.alloc.rate:               282.816 MB/sec
[info]                  ·gc.alloc.rate.norm:          67179.284 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78322.789 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 6548.323 ops/s
[info]                  ·gc.alloc.rate:                   282.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              67901.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79323.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc":
[info]   6608.592 ±(99.9%) 133.377 ops/s [Average]
[info]   (min, avg, max) = (6548.323, 6608.592, 6630.347), stdev = 34.638
[info]   CI (99.9%): [6475.215, 6741.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   281.859 ±(99.9%) 6.984 MB/sec [Average]
[info]   (min, avg, max) = (279.140, 281.859, 283.745), stdev = 1.814
[info]   CI (99.9%): [274.875, 288.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   67121.252 ±(99.9%) 2171.914 B/op [Average]
[info]   (min, avg, max) = (66456.732, 67121.252, 67901.756), stdev = 564.039
[info]   CI (99.9%): [64949.338, 69293.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   300.231 ±(99.9%) 156.213 MB/sec [Average]
[info]   (min, avg, max) = (255.789, 300.231, 330.134), stdev = 40.568
[info]   CI (99.9%): [144.017, 456.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   71507.888 ±(99.9%) 37623.808 B/op [Average]
[info]   (min, avg, max) = (60732.004, 71507.888, 79323.574), stdev = 9770.784
[info]   CI (99.9%): [33884.080, 109131.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   1.989 ±(99.9%) 10.486 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.989, 5.003), stdev = 2.723
[info]   CI (99.9%): [≈ 0, 12.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce
[info] # Run progress: 67.29% complete, ETA 00:29:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1796.101 ops/s
[info] # Warmup Iteration   2: 6738.806 ops/s
[info] # Warmup Iteration   3: 8000.066 ops/s
[info] Iteration   1: 7744.276 ops/s
[info]                  ·gc.alloc.rate:                   1638.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              332964.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     335649.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 687.822 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 7902.809 ops/s
[info]                  ·gc.alloc.rate:                   1681.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              334935.371 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     326884.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 169.976 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 8030.203 ops/s
[info]                  ·gc.alloc.rate:                   1707.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              334617.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     321283.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.582 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 8101.407 ops/s
[info]                  ·gc.alloc.rate:                   1735.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              337198.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     320085.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.264 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 8030.850 ops/s
[info]                  ·gc.alloc.rate:                   1721.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              337438.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     325093.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.212 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.557 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce":
[info]   7961.909 ±(99.9%) 543.656 ops/s [Average]
[info]   (min, avg, max) = (7744.276, 7961.909, 8101.407), stdev = 141.186
[info]   CI (99.9%): [7418.253, 8505.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1697.102 ±(99.9%) 147.369 MB/sec [Average]
[info]   (min, avg, max) = (1638.678, 1697.102, 1735.802), stdev = 38.271
[info]   CI (99.9%): [1549.733, 1844.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   335430.776 ±(99.9%) 7241.210 B/op [Average]
[info]   (min, avg, max) = (332964.330, 335430.776, 337438.383), stdev = 1880.519
[info]   CI (99.9%): [328189.566, 342671.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1647.836 ±(99.9%) 30.487 MB/sec [Average]
[info]   (min, avg, max) = (1639.315, 1647.836, 1658.822), stdev = 7.917
[info]   CI (99.9%): [1617.349, 1678.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   325799.256 ±(99.9%) 23717.658 B/op [Average]
[info]   (min, avg, max) = (320085.491, 325799.256, 335649.909), stdev = 6159.401
[info]   CI (99.9%): [302081.598, 349516.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.926 ±(99.9%) 5.433 MB/sec [Average]
[info]   (min, avg, max) = (0.054, 0.926, 3.385), stdev = 1.411
[info]   CI (99.9%): [≈ 0, 6.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   186.840 ±(99.9%) 1105.801 B/op [Average]
[info]   (min, avg, max) = (10.582, 186.840, 687.822), stdev = 287.173
[info]   CI (99.9%): [≈ 0, 1292.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 16.000), stdev = 3.962
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava
[info] # Run progress: 67.53% complete, ETA 00:29:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.776 ops/s
[info] # Warmup Iteration   2: 13631.252 ops/s
[info] # Warmup Iteration   3: 17774.302 ops/s
[info] Iteration   1: 18237.891 ops/s
[info]                  ·gc.alloc.rate:                   466.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              40221.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55935.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.459 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 18464.441 ops/s
[info]                  ·gc.alloc.rate:                   464.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              39562.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27650.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 18468.321 ops/s
[info]                  ·gc.alloc.rate:                   463.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              39523.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27646.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 18213.183 ops/s
[info]                  ·gc.alloc.rate:                   470.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              40649.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56181.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.423 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 18470.465 ops/s
[info]                  ·gc.alloc.rate:               468.870 MB/sec
[info]                  ·gc.alloc.rate.norm:          39941.442 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27755.422 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava":
[info]   18370.860 ±(99.9%) 512.006 ops/s [Average]
[info]   (min, avg, max) = (18213.183, 18370.860, 18470.465), stdev = 132.966
[info]   CI (99.9%): [17858.854, 18882.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   466.687 ±(99.9%) 11.129 MB/sec [Average]
[info]   (min, avg, max) = (463.781, 466.687, 470.426), stdev = 2.890
[info]   CI (99.9%): [455.558, 477.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   39979.928 ±(99.9%) 1817.164 B/op [Average]
[info]   (min, avg, max) = (39523.702, 39979.928, 40649.980), stdev = 471.912
[info]   CI (99.9%): [38162.764, 41797.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   454.615 ±(99.9%) 683.946 MB/sec [Average]
[info]   (min, avg, max) = (324.410, 454.615, 650.171), stdev = 177.619
[info]   CI (99.9%): [≈ 0, 1138.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   39034.037 ±(99.9%) 59845.420 B/op [Average]
[info]   (min, avg, max) = (27646.392, 39034.037, 56181.938), stdev = 15541.666
[info]   CI (99.9%): [≈ 0, 98879.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.086 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.052), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.484 ±(99.9%) 7.436 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.484, 4.459), stdev = 1.931
[info]   CI (99.9%): [≈ 0, 8.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 7.000), stdev = 2.191
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala
[info] # Run progress: 67.76% complete, ETA 00:29:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4690.195 ops/s
[info] # Warmup Iteration   2: 14608.390 ops/s
[info] # Warmup Iteration   3: 16092.311 ops/s
[info] Iteration   1: 15752.062 ops/s
[info]                  ·gc.alloc.rate:               440.559 MB/sec
[info]                  ·gc.alloc.rate.norm:          44014.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:      639.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 63892.920 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 15372.389 ops/s
[info]                  ·gc.alloc.rate:               415.364 MB/sec
[info]                  ·gc.alloc.rate.norm:          42524.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32736.031 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 15756.294 ops/s
[info]                  ·gc.alloc.rate:               426.631 MB/sec
[info]                  ·gc.alloc.rate.norm:          42602.334 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31936.325 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 15699.757 ops/s
[info]                  ·gc.alloc.rate:               426.342 MB/sec
[info]                  ·gc.alloc.rate.norm:          42739.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32154.461 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 15390.811 ops/s
[info]                  ·gc.alloc.rate:               447.705 MB/sec
[info]                  ·gc.alloc.rate.norm:          45779.441 B/op
[info]                  ·gc.churn.PS_Eden_Space:      642.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 65731.833 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala":
[info]   15594.263 ±(99.9%) 752.859 ops/s [Average]
[info]   (min, avg, max) = (15372.389, 15594.263, 15756.294), stdev = 195.515
[info]   CI (99.9%): [14841.404, 16347.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   431.320 ±(99.9%) 49.281 MB/sec [Average]
[info]   (min, avg, max) = (415.364, 431.320, 447.705), stdev = 12.798
[info]   CI (99.9%): [382.039, 480.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   43532.264 ±(99.9%) 5373.625 B/op [Average]
[info]   (min, avg, max) = (42524.936, 43532.264, 45779.441), stdev = 1395.513
[info]   CI (99.9%): [38158.639, 48905.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   448.535 ±(99.9%) 677.186 MB/sec [Average]
[info]   (min, avg, max) = (319.751, 448.535, 642.831), stdev = 175.863
[info]   CI (99.9%): [≈ 0, 1125.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   45290.314 ±(99.9%) 68677.677 B/op [Average]
[info]   (min, avg, max) = (31936.325, 45290.314, 65731.833), stdev = 17835.375
[info]   CI (99.9%): [≈ 0, 113967.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala
[info] # Run progress: 68.00% complete, ETA 00:28:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13890.794 ops/s
[info] # Warmup Iteration   2: 22748.904 ops/s
[info] # Warmup Iteration   3: 23400.946 ops/s
[info] Iteration   1: 22917.757 ops/s
[info]                  ·gc.alloc.rate:               431.600 MB/sec
[info]                  ·gc.alloc.rate.norm:          29639.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22666.844 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 22587.118 ops/s
[info]                  ·gc.alloc.rate:               433.341 MB/sec
[info]                  ·gc.alloc.rate.norm:          30195.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22998.956 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 22651.422 ops/s
[info]                  ·gc.alloc.rate:                   441.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              30661.119 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45914.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.849 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 23048.734 ops/s
[info]                  ·gc.alloc.rate:               434.964 MB/sec
[info]                  ·gc.alloc.rate.norm:          29701.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22606.267 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 23068.239 ops/s
[info]                  ·gc.alloc.rate:                   433.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              29577.256 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22587.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.420 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala":
[info]   22854.654 ±(99.9%) 861.345 ops/s [Average]
[info]   (min, avg, max) = (22587.118, 22854.654, 23068.239), stdev = 223.689
[info]   CI (99.9%): [21993.309, 23715.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   434.943 ±(99.9%) 14.403 MB/sec [Average]
[info]   (min, avg, max) = (431.600, 434.943, 441.285), stdev = 3.740
[info]   CI (99.9%): [420.540, 449.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   29954.925 ±(99.9%) 1789.157 B/op [Average]
[info]   (min, avg, max) = (29577.256, 29954.925, 30661.119), stdev = 464.638
[info]   CI (99.9%): [28165.768, 31744.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   396.616 ±(99.9%) 568.707 MB/sec [Average]
[info]   (min, avg, max) = (330.057, 396.616, 660.813), stdev = 147.691
[info]   CI (99.9%): [≈ 0, 965.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   27354.794 ±(99.9%) 39955.783 B/op [Average]
[info]   (min, avg, max) = (22587.650, 27354.794, 45914.253), stdev = 10376.390
[info]   CI (99.9%): [≈ 0, 67310.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.009 ±(99.9%) 0.051 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.027), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.654 ±(99.9%) 3.497 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.654, 1.849), stdev = 0.908
[info]   CI (99.9%): [≈ 0, 4.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 6.000), stdev = 1.643
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson
[info] # Run progress: 68.24% complete, ETA 00:28:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 148.762 ops/s
[info] # Warmup Iteration   2: 3298.139 ops/s
[info] # Warmup Iteration   3: 3972.057 ops/s
[info] Iteration   1: 4145.407 ops/s
[info]                  ·gc.alloc.rate:                   2521.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              957061.326 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2306.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     875751.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.415 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 537.310 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 4172.691 ops/s
[info]                  ·gc.alloc.rate:                   2558.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              964595.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2658.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1002352.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 141.309 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 4045.599 ops/s
[info]                  ·gc.alloc.rate:               2496.706 MB/sec
[info]                  ·gc.alloc.rate.norm:          971018.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2343.037 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 911253.223 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 4076.587 ops/s
[info]                  ·gc.alloc.rate:                   2514.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              970822.650 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2355.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     909468.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.035 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 4119.354 ops/s
[info]                  ·gc.alloc.rate:               2540.980 MB/sec
[info]                  ·gc.alloc.rate.norm:          970811.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2367.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 904396.800 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson":
[info]   4111.928 ±(99.9%) 197.443 ops/s [Average]
[info]   (min, avg, max) = (4045.599, 4111.928, 4172.691), stdev = 51.275
[info]   CI (99.9%): [3914.484, 4309.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2526.356 ±(99.9%) 91.660 MB/sec [Average]
[info]   (min, avg, max) = (2496.706, 2526.356, 2558.177), stdev = 23.804
[info]   CI (99.9%): [2434.696, 2618.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   966861.835 ±(99.9%) 23560.597 B/op [Average]
[info]   (min, avg, max) = (957061.326, 966861.835, 971018.271), stdev = 6118.612
[info]   CI (99.9%): [943301.239, 990422.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2406.259 ±(99.9%) 549.518 MB/sec [Average]
[info]   (min, avg, max) = (2306.928, 2406.259, 2658.311), stdev = 142.708
[info]   CI (99.9%): [1856.742, 2955.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   920644.562 ±(99.9%) 184354.840 B/op [Average]
[info]   (min, avg, max) = (875751.863, 920644.562, 1002352.238), stdev = 47876.366
[info]   CI (99.9%): [736289.723, 1104999.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.362 ±(99.9%) 2.349 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.362, 1.415), stdev = 0.610
[info]   CI (99.9%): [≈ 0, 2.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   137.331 ±(99.9%) 891.563 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 137.331, 537.310), stdev = 231.536
[info]   CI (99.9%): [≈ 0, 1028.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.600, 13.000), stdev = 1.342
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce
[info] # Run progress: 68.47% complete, ETA 00:28:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2589.176 ops/s
[info] # Warmup Iteration   2: 9045.035 ops/s
[info] # Warmup Iteration   3: 10166.759 ops/s
[info] Iteration   1: 10119.947 ops/s
[info]                  ·gc.alloc.rate:                   2160.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              335998.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2299.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     357605.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.939 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 612.641 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 10340.587 ops/s
[info]                  ·gc.alloc.rate:                   2211.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              336520.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1966.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     299325.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.168 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 10339.078 ops/s
[info]                  ·gc.alloc.rate:                   2231.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              339636.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2311.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     351908.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.169 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 10398.308 ops/s
[info]                  ·gc.alloc.rate:                   2232.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              337821.510 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2000.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     302848.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.150 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 10238.916 ops/s
[info]                  ·gc.alloc.rate:                   2211.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              340022.613 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2351.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     361436.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.200 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce":
[info]   10287.367 ±(99.9%) 422.656 ops/s [Average]
[info]   (min, avg, max) = (10119.947, 10287.367, 10398.308), stdev = 109.762
[info]   CI (99.9%): [9864.711, 10710.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate":
[info]   2209.369 ±(99.9%) 112.130 MB/sec [Average]
[info]   (min, avg, max) = (2160.497, 2209.369, 2232.059), stdev = 29.120
[info]   CI (99.9%): [2097.239, 2321.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   337999.823 ±(99.9%) 6940.509 B/op [Average]
[info]   (min, avg, max) = (335998.006, 337999.823, 340022.613), stdev = 1802.428
[info]   CI (99.9%): [331059.315, 344940.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2186.049 ±(99.9%) 716.174 MB/sec [Average]
[info]   (min, avg, max) = (1966.673, 2186.049, 2351.281), stdev = 185.988
[info]   CI (99.9%): [1469.875, 2902.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   334624.763 ±(99.9%) 118708.848 B/op [Average]
[info]   (min, avg, max) = (299325.209, 334624.763, 361436.703), stdev = 30828.311
[info]   CI (99.9%): [215915.915, 453333.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.805 ±(99.9%) 6.748 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.805, 3.939), stdev = 1.752
[info]   CI (99.9%): [≈ 0, 7.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   125.066 ±(99.9%) 1049.543 B/op [Average]
[info]   (min, avg, max) = (3.150, 125.066, 612.641), stdev = 272.563
[info]   CI (99.9%): [≈ 0, 1174.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.800, 14.000), stdev = 2.683
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava
[info] # Run progress: 68.71% complete, ETA 00:28:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.763 ops/s
[info] # Warmup Iteration   2: 49257.008 ops/s
[info] # Warmup Iteration   3: 54243.167 ops/s
[info] Iteration   1: 56421.242 ops/s
[info]                  ·gc.alloc.rate:               547.737 MB/sec
[info]                  ·gc.alloc.rate.norm:          15278.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18061.276 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 56564.388 ops/s
[info]                  ·gc.alloc.rate:                   550.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              15322.579 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18053.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.080 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 56567.529 ops/s
[info]                  ·gc.alloc.rate:               539.114 MB/sec
[info]                  ·gc.alloc.rate.norm:          14999.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9035.294 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 55421.333 ops/s
[info]                  ·gc.alloc.rate:                   536.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              15222.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18463.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.489 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 56587.757 ops/s
[info]                  ·gc.alloc.rate:                   546.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              15189.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18119.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.300 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava":
[info]   56312.450 ±(99.9%) 1935.171 ops/s [Average]
[info]   (min, avg, max) = (55421.333, 56312.450, 56587.757), stdev = 502.558
[info]   CI (99.9%): [54377.278, 58247.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   543.984 ±(99.9%) 23.898 MB/sec [Average]
[info]   (min, avg, max) = (536.013, 543.984, 550.919), stdev = 6.206
[info]   CI (99.9%): [520.086, 567.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   15202.423 ±(99.9%) 479.389 B/op [Average]
[info]   (min, avg, max) = (14999.351, 15202.423, 15322.579), stdev = 124.496
[info]   CI (99.9%): [14723.034, 15681.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   584.589 ±(99.9%) 559.350 MB/sec [Average]
[info]   (min, avg, max) = (324.751, 584.589, 651.463), stdev = 145.261
[info]   CI (99.9%): [25.239, 1143.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   16346.367 ±(99.9%) 15751.049 B/op [Average]
[info]   (min, avg, max) = (9035.294, 16346.367, 18463.110), stdev = 4090.497
[info]   CI (99.9%): [595.318, 32097.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.020 ±(99.9%) 0.092 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.052), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.574 ±(99.9%) 2.602 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.574, 1.489), stdev = 0.676
[info]   CI (99.9%): [≈ 0, 3.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 7.000), stdev = 1.789
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala
[info] # Run progress: 68.94% complete, ETA 00:28:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10035.928 ops/s
[info] # Warmup Iteration   2: 43759.464 ops/s
[info] # Warmup Iteration   3: 42608.428 ops/s
[info] Iteration   1: 43964.045 ops/s
[info]                  ·gc.alloc.rate:                   650.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              23287.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22977.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.490 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 42799.874 ops/s
[info]                  ·gc.alloc.rate:                   633.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              23281.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23687.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.531 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 44612.874 ops/s
[info]                  ·gc.alloc.rate:                   660.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              23296.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22830.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.469 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 44402.791 ops/s
[info]                  ·gc.alloc.rate:               654.104 MB/sec
[info]                  ·gc.alloc.rate.norm:          23184.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23056.394 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 44463.729 ops/s
[info]                  ·gc.alloc.rate:                   663.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              23493.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23130.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.737 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala":
[info]   44048.663 ±(99.9%) 2844.434 ops/s [Average]
[info]   (min, avg, max) = (42799.874, 44048.663, 44612.874), stdev = 738.690
[info]   CI (99.9%): [41204.229, 46893.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   652.413 ±(99.9%) 45.911 MB/sec [Average]
[info]   (min, avg, max) = (633.148, 652.413, 663.742), stdev = 11.923
[info]   CI (99.9%): [606.502, 698.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   23308.875 ±(99.9%) 434.189 B/op [Average]
[info]   (min, avg, max) = (23184.843, 23308.875, 23493.607), stdev = 112.757
[info]   CI (99.9%): [22874.686, 23743.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   647.465 ±(99.9%) 17.857 MB/sec [Average]
[info]   (min, avg, max) = (642.015, 647.465, 653.494), stdev = 4.637
[info]   CI (99.9%): [629.608, 665.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   23136.366 ±(99.9%) 1260.622 B/op [Average]
[info]   (min, avg, max) = (22830.381, 23136.366, 23687.084), stdev = 327.379
[info]   CI (99.9%): [21875.744, 24396.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.045 ±(99.9%) 2.584 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.045, 1.531), stdev = 0.671
[info]   CI (99.9%): [≈ 0, 3.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala
[info] # Run progress: 69.18% complete, ETA 00:27:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32183.206 ops/s
[info] # Warmup Iteration   2: 84404.566 ops/s
[info] # Warmup Iteration   3: 89049.807 ops/s
[info] Iteration   1: 89390.630 ops/s
[info]                  ·gc.alloc.rate:               695.293 MB/sec
[info]                  ·gc.alloc.rate.norm:          12241.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11610.579 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 89804.477 ops/s
[info]                  ·gc.alloc.rate:                   692.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              12143.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11574.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.365 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 89295.192 ops/s
[info]                  ·gc.alloc.rate:                   689.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              12140.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11652.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.734 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 90741.598 ops/s
[info]                  ·gc.alloc.rate:               697.046 MB/sec
[info]                  ·gc.alloc.rate.norm:          12090.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11479.072 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 88993.794 ops/s
[info]                  ·gc.alloc.rate:                   682.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              12077.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11714.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.914 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.536 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala":
[info]   89645.138 ±(99.9%) 2610.994 ops/s [Average]
[info]   (min, avg, max) = (88993.794, 89645.138, 90741.598), stdev = 678.067
[info]   CI (99.9%): [87034.144, 92256.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   691.466 ±(99.9%) 21.564 MB/sec [Average]
[info]   (min, avg, max) = (682.994, 691.466, 697.046), stdev = 5.600
[info]   CI (99.9%): [669.902, 713.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   12138.659 ±(99.9%) 247.866 B/op [Average]
[info]   (min, avg, max) = (12077.894, 12138.659, 12241.187), stdev = 64.370
[info]   CI (99.9%): [11890.793, 12386.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   661.128 ±(99.9%) 4.523 MB/sec [Average]
[info]   (min, avg, max) = (659.475, 661.128, 662.472), stdev = 1.175
[info]   CI (99.9%): [656.605, 665.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   11606.505 ±(99.9%) 339.930 B/op [Average]
[info]   (min, avg, max) = (11479.072, 11606.505, 11714.979), stdev = 88.279
[info]   CI (99.9%): [11266.574, 11946.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.595 ±(99.9%) 4.992 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.595, 2.914), stdev = 1.296
[info]   CI (99.9%): [≈ 0, 5.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   10.527 ±(99.9%) 88.284 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.527, 51.536), stdev = 22.927
[info]   CI (99.9%): [≈ 0, 98.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 69.41% complete, ETA 00:27:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45875.511 ops/s
[info] # Warmup Iteration   2: 103350.202 ops/s
[info] # Warmup Iteration   3: 99799.101 ops/s
[info] Iteration   1: 104616.552 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 103689.620 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 103927.110 ops/s
[info]                  ·gc.alloc.rate:      0.941 MB/sec
[info]                  ·gc.alloc.rate.norm: 14.246 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 104016.475 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 104521.714 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   104154.294 ±(99.9%) 1534.481 ops/s [Average]
[info]   (min, avg, max) = (103689.620, 104154.294, 104616.552), stdev = 398.500
[info]   CI (99.9%): [102619.813, 105688.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.188 ±(99.9%) 1.619 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.188, 0.941), stdev = 0.421
[info]   CI (99.9%): [≈ 0, 1.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2.853 ±(99.9%) 24.525 B/op [Average]
[info]   (min, avg, max) = (0.004, 2.853, 14.246), stdev = 6.369
[info]   CI (99.9%): [≈ 0, 27.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson
[info] # Run progress: 69.65% complete, ETA 00:27:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 523.501 ops/s
[info] # Warmup Iteration   2: 6325.208 ops/s
[info] # Warmup Iteration   3: 7569.116 ops/s
[info] Iteration   1: 7664.866 ops/s
[info]                  ·gc.alloc.rate:                   2304.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              473065.462 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     471907.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217.969 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 7728.360 ops/s
[info]                  ·gc.alloc.rate:                   2335.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              475586.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2319.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     472266.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.956 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 7760.546 ops/s
[info]                  ·gc.alloc.rate:               2345.683 MB/sec
[info]                  ·gc.alloc.rate.norm:          475684.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2004.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 406436.324 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 7658.395 ops/s
[info]                  ·gc.alloc.rate:                   2329.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              478768.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2353.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     483700.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.556 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 7580.685 ops/s
[info]                  ·gc.alloc.rate:               2308.138 MB/sec
[info]                  ·gc.alloc.rate.norm:          479093.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2365.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 491096.462 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson":
[info]   7678.571 ±(99.9%) 267.996 ops/s [Average]
[info]   (min, avg, max) = (7580.685, 7678.571, 7760.546), stdev = 69.598
[info]   CI (99.9%): [7410.575, 7946.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2324.703 ±(99.9%) 68.533 MB/sec [Average]
[info]   (min, avg, max) = (2304.437, 2324.703, 2345.683), stdev = 17.798
[info]   CI (99.9%): [2256.170, 2393.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   476439.698 ±(99.9%) 9655.339 B/op [Average]
[info]   (min, avg, max) = (473065.462, 476439.698, 479093.845), stdev = 2507.461
[info]   CI (99.9%): [466784.359, 486095.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2268.383 ±(99.9%) 577.942 MB/sec [Average]
[info]   (min, avg, max) = (2004.208, 2268.383, 2365.963), stdev = 150.090
[info]   CI (99.9%): [1690.441, 2846.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   465081.235 ±(99.9%) 130025.494 B/op [Average]
[info]   (min, avg, max) = (406436.324, 465081.235, 491096.462), stdev = 33767.208
[info]   CI (99.9%): [335055.740, 595106.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.237 ±(99.9%) 1.780 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.237, 1.062), stdev = 0.462
[info]   CI (99.9%): [≈ 0, 2.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   48.696 ±(99.9%) 365.378 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.696, 217.969), stdev = 94.888
[info]   CI (99.9%): [≈ 0, 414.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 10.800, 12.000), stdev = 0.837
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce
[info] # Run progress: 69.88% complete, ETA 00:27:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 945574.931 ops/s
[info] # Warmup Iteration   2: 7379264.441 ops/s
[info] # Warmup Iteration   3: 8370040.953 ops/s
[info] Iteration   1: 8390638.189 ops/s
[info]                  ·gc.alloc.rate:                   4619.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              866.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4663.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     874.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        14.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 8434297.619 ops/s
[info]                  ·gc.alloc.rate:                   4633.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              864.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4387.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     818.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 8330021.891 ops/s
[info]                  ·gc.alloc.rate:                   4578.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              864.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4412.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     833.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 8471511.515 ops/s
[info]                  ·gc.alloc.rate:                   4654.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              864.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4421.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     821.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 8479981.015 ops/s
[info]                  ·gc.alloc.rate:                   4659.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              864.740 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4425.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     821.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce":
[info]   8421290.046 ±(99.9%) 238968.332 ops/s [Average]
[info]   (min, avg, max) = (8330021.891, 8421290.046, 8479981.015), stdev = 62059.317
[info]   CI (99.9%): [8182321.714, 8660258.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate":
[info]   4629.049 ±(99.9%) 125.804 MB/sec [Average]
[info]   (min, avg, max) = (4578.107, 4629.049, 4659.304), stdev = 32.671
[info]   CI (99.9%): [4503.245, 4754.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   865.089 ±(99.9%) 3.059 B/op [Average]
[info]   (min, avg, max) = (864.569, 865.089, 866.490), stdev = 0.795
[info]   CI (99.9%): [862.029, 868.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   4461.904 ±(99.9%) 438.365 MB/sec [Average]
[info]   (min, avg, max) = (4387.114, 4461.904, 4663.818), stdev = 113.842
[info]   CI (99.9%): [4023.539, 4900.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   833.917 ±(99.9%) 90.801 B/op [Average]
[info]   (min, avg, max) = (818.537, 833.917, 874.795), stdev = 23.581
[info]   CI (99.9%): [743.116, 924.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.015
[info]   CI (99.9%): [0.006, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.010 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.012, 0.015), stdev = 0.003
[info]   CI (99.9%): [0.001, 0.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.count":
[info]   66.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.200, 14.000), stdev = 0.447
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.time":
[info]   84.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (15.000, 16.800, 19.000), stdev = 1.483
[info]   CI (99.9%): [84.000, 84.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava
[info] # Run progress: 70.12% complete, ETA 00:27:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.693 ops/s
[info] # Warmup Iteration   2: 35196122.596 ops/s
[info] # Warmup Iteration   3: 37834323.350 ops/s
[info] Iteration   1: 37326898.565 ops/s
[info]                  ·gc.alloc.rate:      24.199 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.020 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 37458256.545 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 37456205.757 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 37450148.497 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 37480552.875 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava":
[info]   37434412.448 ±(99.9%) 235639.954 ops/s [Average]
[info]   (min, avg, max) = (37326898.565, 37434412.448, 37480552.875), stdev = 61194.948
[info]   CI (99.9%): [37198772.494, 37670052.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   4.840 ±(99.9%) 41.671 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 4.840, 24.199), stdev = 10.822
[info]   CI (99.9%): [≈ 0, 46.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   0.204 ±(99.9%) 1.757 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.204, 1.020), stdev = 0.456
[info]   CI (99.9%): [≈ 0, 1.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala
[info] # Run progress: 70.35% complete, ETA 00:26:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 396918.155 ops/s
[info] # Warmup Iteration   2: 9724325.241 ops/s
[info] # Warmup Iteration   3: 10732856.193 ops/s
[info] Iteration   1: 10851877.553 ops/s
[info]                  ·gc.alloc.rate:                   3728.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              540.717 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3622.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     525.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 10867902.774 ops/s
[info]                  ·gc.alloc.rate:                   3722.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              539.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3341.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     483.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 10872303.570 ops/s
[info]                  ·gc.alloc.rate:                   3740.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              541.428 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3711.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     537.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 10707471.021 ops/s
[info]                  ·gc.alloc.rate:                   3675.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              540.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3391.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     498.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 10909196.024 ops/s
[info]                  ·gc.alloc.rate:                   3689.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              532.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3739.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     539.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala":
[info]   10841750.188 ±(99.9%) 300127.163 ops/s [Average]
[info]   (min, avg, max) = (10707471.021, 10841750.188, 10909196.024), stdev = 77942.071
[info]   CI (99.9%): [10541623.025, 11141877.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   3711.078 ±(99.9%) 105.411 MB/sec [Average]
[info]   (min, avg, max) = (3675.265, 3711.078, 3740.116), stdev = 27.375
[info]   CI (99.9%): [3605.667, 3816.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   538.689 ±(99.9%) 14.656 B/op [Average]
[info]   (min, avg, max) = (532.065, 538.689, 541.428), stdev = 3.806
[info]   CI (99.9%): [524.033, 553.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   3561.378 ±(99.9%) 707.884 MB/sec [Average]
[info]   (min, avg, max) = (3341.374, 3561.378, 3739.466), stdev = 183.835
[info]   CI (99.9%): [2853.495, 4269.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   516.877 ±(99.9%) 94.606 B/op [Average]
[info]   (min, avg, max) = (483.880, 516.877, 539.241), stdev = 24.569
[info]   CI (99.9%): [422.271, 611.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.008, 0.012), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.count":
[info]   53.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.600, 11.000), stdev = 0.548
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.200, 16.000), stdev = 1.095
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala
[info] # Run progress: 70.59% complete, ETA 00:26:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12933035.105 ops/s
[info] # Warmup Iteration   2: 46366154.263 ops/s
[info] # Warmup Iteration   3: 49044447.484 ops/s
[info] Iteration   1: 49021688.779 ops/s
[info]                  ·gc.alloc.rate:      0.112 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 48923352.713 ops/s
[info]                  ·gc.alloc.rate:      1.632 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.052 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 49042796.949 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 49067086.524 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 48595687.416 ops/s
[info]                  ·gc.alloc.rate:      8.360 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.271 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala":
[info]   48930122.476 ±(99.9%) 749965.952 ops/s [Average]
[info]   (min, avg, max) = (48595687.416, 48930122.476, 49067086.524), stdev = 194763.776
[info]   CI (99.9%): [48180156.524, 49680088.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2.021 ±(99.9%) 13.903 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.021, 8.360), stdev = 3.610
[info]   CI (99.9%): [≈ 0, 15.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   0.065 ±(99.9%) 0.450 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.065, 0.271), stdev = 0.117
[info]   CI (99.9%): [≈ 0, 0.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala
[info] # Run progress: 70.82% complete, ETA 00:26:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7968037.778 ops/s
[info] # Warmup Iteration   2: 29295095.103 ops/s
[info] # Warmup Iteration   3: 31378746.749 ops/s
[info] Iteration   1: 31540494.861 ops/s
[info]                  ·gc.alloc.rate:                   830.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 31074381.608 ops/s
[info]                  ·gc.alloc.rate:                   815.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 31464176.365 ops/s
[info]                  ·gc.alloc.rate:                   813.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.696 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 31554118.610 ops/s
[info]                  ·gc.alloc.rate:                   822.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.165 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 30918014.482 ops/s
[info]                  ·gc.alloc.rate:                   830.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              42.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala":
[info]   31310237.185 ±(99.9%) 1131952.635 ops/s [Average]
[info]   (min, avg, max) = (30918014.482, 31310237.185, 31554118.610), stdev = 293964.505
[info]   CI (99.9%): [30178284.551, 32442189.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate":
[info]   822.453 ±(99.9%) 30.498 MB/sec [Average]
[info]   (min, avg, max) = (813.586, 822.453, 830.594), stdev = 7.920
[info]   CI (99.9%): [791.956, 852.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate.norm":
[info]   41.343 ±(99.9%) 2.274 B/op [Average]
[info]   (min, avg, max) = (40.696, 41.343, 42.264), stdev = 0.590
[info]   CI (99.9%): [39.070, 43.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space":
[info]   796.751 ±(99.9%) 700.360 MB/sec [Average]
[info]   (min, avg, max) = (662.196, 796.751, 996.226), stdev = 181.881
[info]   CI (99.9%): [96.391, 1497.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   40.117 ±(99.9%) 36.732 B/op [Average]
[info]   (min, avg, max) = (33.042, 40.117, 50.710), stdev = 9.539
[info]   CI (99.9%): [3.386, 76.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.591 ±(99.9%) 3.544 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.591, 2.165), stdev = 0.920
[info]   CI (99.9%): [≈ 0, 4.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.177 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.030, 0.108), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 8.000), stdev = 1.517
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson
[info] # Run progress: 71.06% complete, ETA 00:26:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 983465.334 ops/s
[info] # Warmup Iteration   2: 8187033.704 ops/s
[info] # Warmup Iteration   3: 9032516.521 ops/s
[info] Iteration   1: 9142269.427 ops/s
[info]                  ·gc.alloc.rate:                   3859.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3628.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     624.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 9111218.370 ops/s
[info]                  ·gc.alloc.rate:                   3863.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              667.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4018.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     694.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        12.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 9095146.850 ops/s
[info]                  ·gc.alloc.rate:                   3832.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              663.195 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3379.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     584.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 9116127.796 ops/s
[info]                  ·gc.alloc.rate:                   3855.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              665.640 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3733.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     644.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 9149591.827 ops/s
[info]                  ·gc.alloc.rate:                   3869.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              665.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3740.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     643.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson":
[info]   9122870.854 ±(99.9%) 86963.719 ops/s [Average]
[info]   (min, avg, max) = (9095146.850, 9122870.854, 9149591.827), stdev = 22584.202
[info]   CI (99.9%): [9035907.135, 9209834.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3856.268 ±(99.9%) 55.215 MB/sec [Average]
[info]   (min, avg, max) = (3832.397, 3856.268, 3869.726), stdev = 14.339
[info]   CI (99.9%): [3801.054, 3911.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   665.253 ±(99.9%) 6.087 B/op [Average]
[info]   (min, avg, max) = (663.195, 665.253, 667.417), stdev = 1.581
[info]   CI (99.9%): [659.166, 671.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3700.073 ±(99.9%) 885.637 MB/sec [Average]
[info]   (min, avg, max) = (3379.898, 3700.073, 4018.167), stdev = 229.997
[info]   CI (99.9%): [2814.437, 4585.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   638.293 ±(99.9%) 151.799 B/op [Average]
[info]   (min, avg, max) = (584.890, 638.293, 694.056), stdev = 39.422
[info]   CI (99.9%): [486.494, 790.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (0.004, 0.009, 0.014), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.count":
[info]   55.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 11.000, 12.000), stdev = 0.707
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.time":
[info]   73.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 14.600, 16.000), stdev = 0.894
[info]   CI (99.9%): [73.000, 73.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce
[info] # Run progress: 71.29% complete, ETA 00:25:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2936105.511 ops/s
[info] # Warmup Iteration   2: 13532972.936 ops/s
[info] # Warmup Iteration   3: 13977426.388 ops/s
[info] Iteration   1: 13811974.273 ops/s
[info]                  ·gc.alloc.rate:                   1673.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              190.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     188.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.308 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 13689901.732 ops/s
[info]                  ·gc.alloc.rate:                   1657.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              190.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     189.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 13836920.336 ops/s
[info]                  ·gc.alloc.rate:                   1682.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              191.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     187.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 14047446.759 ops/s
[info]                  ·gc.alloc.rate:                   1707.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              191.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     185.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 14127047.831 ops/s
[info]                  ·gc.alloc.rate:                   1717.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              191.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1667.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     185.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce":
[info]   13902658.186 ±(99.9%) 691843.999 ops/s [Average]
[info]   (min, avg, max) = (13689901.732, 13902658.186, 14127047.831), stdev = 179669.690
[info]   CI (99.9%): [13210814.187, 14594502.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate":
[info]   1688.043 ±(99.9%) 94.582 MB/sec [Average]
[info]   (min, avg, max) = (1657.946, 1688.043, 1717.868), stdev = 24.563
[info]   CI (99.9%): [1593.461, 1782.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   191.085 ±(99.9%) 1.526 B/op [Average]
[info]   (min, avg, max) = (190.596, 191.085, 191.395), stdev = 0.396
[info]   CI (99.9%): [189.559, 192.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1656.303 ±(99.9%) 27.428 MB/sec [Average]
[info]   (min, avg, max) = (1650.113, 1656.303, 1667.447), stdev = 7.123
[info]   CI (99.9%): [1628.874, 1683.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   187.512 ±(99.9%) 6.728 B/op [Average]
[info]   (min, avg, max) = (185.762, 187.512, 189.708), stdev = 1.747
[info]   CI (99.9%): [180.785, 194.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.666 ±(99.9%) 4.441 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.666, 2.707), stdev = 1.153
[info]   CI (99.9%): [≈ 0, 5.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.076 ±(99.9%) 0.506 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.076, 0.308), stdev = 0.131
[info]   CI (99.9%): [≈ 0, 0.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 13.000), stdev = 2.683
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava
[info] # Run progress: 71.53% complete, ETA 00:25:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.569 ops/s
[info] # Warmup Iteration   2: 39121751.565 ops/s
[info] # Warmup Iteration   3: 40035646.197 ops/s
[info] Iteration   1: 41389762.801 ops/s
[info]                  ·gc.alloc.rate:                   872.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 41388927.624 ops/s
[info]                  ·gc.alloc.rate:                   872.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 41504205.223 ops/s
[info]                  ·gc.alloc.rate:               865.565 MB/sec
[info]                  ·gc.alloc.rate.norm:          32.824 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24.755 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 42234302.426 ops/s
[info]                  ·gc.alloc.rate:                   891.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.554 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.170 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 41521041.119 ops/s
[info]                  ·gc.alloc.rate:                   870.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava":
[info]   41607647.839 ±(99.9%) 1369835.786 ops/s [Average]
[info]   (min, avg, max) = (41388927.624, 41607647.839, 42234302.426), stdev = 355742.003
[info]   CI (99.9%): [40237812.053, 42977483.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   874.651 ±(99.9%) 38.440 MB/sec [Average]
[info]   (min, avg, max) = (865.565, 874.651, 891.767), stdev = 9.983
[info]   CI (99.9%): [836.211, 913.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   33.080 ±(99.9%) 0.650 B/op [Average]
[info]   (min, avg, max) = (32.824, 33.080, 33.232), stdev = 0.169
[info]   CI (99.9%): [32.430, 33.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   912.313 ±(99.9%) 558.681 MB/sec [Average]
[info]   (min, avg, max) = (652.807, 912.313, 980.591), stdev = 145.088
[info]   CI (99.9%): [353.632, 1470.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   34.500 ±(99.9%) 20.998 B/op [Average]
[info]   (min, avg, max) = (24.755, 34.500, 37.186), stdev = 5.453
[info]   CI (99.9%): [13.502, 55.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.932 ±(99.9%) 7.798 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.932, 4.554), stdev = 2.025
[info]   CI (99.9%): [≈ 0, 8.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.291 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.170), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 10.000), stdev = 2.510
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala
[info] # Run progress: 71.76% complete, ETA 00:25:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 636948.963 ops/s
[info] # Warmup Iteration   2: 11828186.148 ops/s
[info] # Warmup Iteration   3: 13044658.700 ops/s
[info] Iteration   1: 13312475.091 ops/s
[info]                  ·gc.alloc.rate:                   2721.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              321.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2618.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     309.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 13210664.172 ops/s
[info]                  ·gc.alloc.rate:                   2721.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              324.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2637.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     314.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 13286093.724 ops/s
[info]                  ·gc.alloc.rate:                   2738.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              324.384 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2667.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     316.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 13326160.918 ops/s
[info]                  ·gc.alloc.rate:                   2748.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              324.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2691.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     317.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 13289064.807 ops/s
[info]                  ·gc.alloc.rate:               2728.376 MB/sec
[info]                  ·gc.alloc.rate.norm:          323.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2367.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 280.355 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala":
[info]   13284891.743 ±(99.9%) 172126.124 ops/s [Average]
[info]   (min, avg, max) = (13210664.172, 13284891.743, 13326160.918), stdev = 44700.608
[info]   CI (99.9%): [13112765.618, 13457017.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2731.775 ±(99.9%) 44.704 MB/sec [Average]
[info]   (min, avg, max) = (2721.552, 2731.775, 2748.624), stdev = 11.609
[info]   CI (99.9%): [2687.071, 2776.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   323.618 ±(99.9%) 4.563 B/op [Average]
[info]   (min, avg, max) = (321.757, 323.618, 324.549), stdev = 1.185
[info]   CI (99.9%): [319.055, 328.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2596.588 ±(99.9%) 505.234 MB/sec [Average]
[info]   (min, avg, max) = (2367.324, 2596.588, 2691.841), stdev = 131.208
[info]   CI (99.9%): [2091.354, 3101.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   307.604 ±(99.9%) 59.836 B/op [Average]
[info]   (min, avg, max) = (280.355, 307.604, 317.844), stdev = 15.539
[info]   CI (99.9%): [247.767, 367.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.012), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.400, 11.000), stdev = 0.894
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala
[info] # Run progress: 72.00% complete, ETA 00:25:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13252244.121 ops/s
[info] # Warmup Iteration   2: 45080391.547 ops/s
[info] # Warmup Iteration   3: 47341379.401 ops/s
[info] Iteration   1: 47662132.783 ops/s
[info]                  ·gc.alloc.rate:                   996.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 46896389.225 ops/s
[info]                  ·gc.alloc.rate:                   981.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 47684659.210 ops/s
[info]                  ·gc.alloc.rate:                   996.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.206 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 48015789.648 ops/s
[info]                  ·gc.alloc.rate:                   1002.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.855 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 47328247.882 ops/s
[info]                  ·gc.alloc.rate:               994.295 MB/sec
[info]                  ·gc.alloc.rate.norm:          33.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32.896 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala":
[info]   47517443.750 ±(99.9%) 1632269.248 ops/s [Average]
[info]   (min, avg, max) = (46896389.225, 47517443.750, 48015789.648), stdev = 423895.140
[info]   CI (99.9%): [45885174.502, 49149712.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   994.002 ±(99.9%) 30.096 MB/sec [Average]
[info]   (min, avg, max) = (981.132, 994.002, 1002.349), stdev = 7.816
[info]   CI (99.9%): [963.906, 1024.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   32.922 ±(99.9%) 0.306 B/op [Average]
[info]   (min, avg, max) = (32.855, 32.922, 33.056), stdev = 0.079
[info]   CI (99.9%): [32.616, 33.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   926.402 ±(99.9%) 571.708 MB/sec [Average]
[info]   (min, avg, max) = (660.837, 926.402, 995.232), stdev = 148.471
[info]   CI (99.9%): [354.694, 1498.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   30.707 ±(99.9%) 19.493 B/op [Average]
[info]   (min, avg, max) = (21.661, 30.707, 33.356), stdev = 5.062
[info]   CI (99.9%): [11.215, 50.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.654 ±(99.9%) 5.494 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.654, 3.206), stdev = 1.427
[info]   CI (99.9%): [≈ 0, 6.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.181 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.106), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 9.000), stdev = 2.588
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 72.24% complete, ETA 00:25:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26932184.653 ops/s
[info] # Warmup Iteration   2: 57830202.881 ops/s
[info] # Warmup Iteration   3: 61658794.349 ops/s
[info] Iteration   1: 61629969.180 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 61607173.576 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 61192511.369 ops/s
[info]                  ·gc.alloc.rate:      12.394 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.319 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 61637911.329 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 61431322.933 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc":
[info]   61499777.677 ±(99.9%) 737333.584 ops/s [Average]
[info]   (min, avg, max) = (61192511.369, 61499777.677, 61637911.329), stdev = 191483.190
[info]   CI (99.9%): [60762444.094, 62237111.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2.479 ±(99.9%) 21.342 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 2.479, 12.394), stdev = 5.543
[info]   CI (99.9%): [≈ 0, 23.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.064 ±(99.9%) 0.549 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.064, 0.319), stdev = 0.143
[info]   CI (99.9%): [≈ 0, 0.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala
[info] # Run progress: 72.47% complete, ETA 00:24:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4894234.028 ops/s
[info] # Warmup Iteration   2: 16724255.345 ops/s
[info] # Warmup Iteration   3: 17212122.968 ops/s
[info] Iteration   1: 17762415.104 ops/s
[info]                  ·gc.alloc.rate:                   1666.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              147.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 17459687.787 ops/s
[info]                  ·gc.alloc.rate:                   1641.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              148.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1668.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 17623468.744 ops/s
[info]                  ·gc.alloc.rate:                   1678.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              149.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1670.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 17854346.975 ops/s
[info]                  ·gc.alloc.rate:                   1700.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              149.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1677.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 17791396.112 ops/s
[info]                  ·gc.alloc.rate:               1681.666 MB/sec
[info]                  ·gc.alloc.rate.norm:          148.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119.069 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala":
[info]   17698262.944 ±(99.9%) 607815.909 ops/s [Average]
[info]   (min, avg, max) = (17459687.787, 17698262.944, 17854346.975), stdev = 157847.861
[info]   CI (99.9%): [17090447.036, 18306078.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate":
[info]   1673.817 ±(99.9%) 82.601 MB/sec [Average]
[info]   (min, avg, max) = (1641.940, 1673.817, 1700.109), stdev = 21.451
[info]   CI (99.9%): [1591.216, 1756.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm":
[info]   148.836 ±(99.9%) 3.952 B/op [Average]
[info]   (min, avg, max) = (147.690, 148.836, 149.903), stdev = 1.026
[info]   CI (99.9%): [144.884, 152.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space":
[info]   1605.075 ±(99.9%) 557.352 MB/sec [Average]
[info]   (min, avg, max) = (1346.322, 1605.075, 1677.110), stdev = 144.743
[info]   CI (99.9%): [1047.722, 2162.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   142.766 ±(99.9%) 51.225 B/op [Average]
[info]   (min, avg, max) = (119.069, 142.766, 150.425), stdev = 13.303
[info]   CI (99.9%): [91.541, 193.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.279 ±(99.9%) 1.479 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.279, 0.895), stdev = 0.384
[info]   CI (99.9%): [≈ 0, 1.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.131 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.079), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 9.000), stdev = 1.483
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson
[info] # Run progress: 72.71% complete, ETA 00:24:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 321313.174 ops/s
[info] # Warmup Iteration   2: 2589384.983 ops/s
[info] # Warmup Iteration   3: 2638527.271 ops/s
[info] Iteration   1: 2666650.051 ops/s
[info]                  ·gc.alloc.rate:                   2143.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1168.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.580 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.113 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 2724862.921 ops/s
[info]                  ·gc.alloc.rate:                   2190.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              1265.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1140.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2713343.285 ops/s
[info]                  ·gc.alloc.rate:               2201.624 MB/sec
[info]                  ·gc.alloc.rate.norm:          1277.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2319.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1345.275 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 2722124.237 ops/s
[info]                  ·gc.alloc.rate:                   2196.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              1269.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1158.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 2692771.310 ops/s
[info]                  ·gc.alloc.rate:               2174.185 MB/sec
[info]                  ·gc.alloc.rate.norm:          1270.691 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2016.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1178.568 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson":
[info]   2703950.361 ±(99.9%) 93772.002 ops/s [Average]
[info]   (min, avg, max) = (2666650.051, 2703950.361, 2724862.921), stdev = 24352.291
[info]   CI (99.9%): [2610178.359, 2797722.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2181.163 ±(99.9%) 90.747 MB/sec [Average]
[info]   (min, avg, max) = (2143.254, 2181.163, 2201.624), stdev = 23.567
[info]   CI (99.9%): [2090.416, 2271.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1269.518 ±(99.9%) 19.139 B/op [Average]
[info]   (min, avg, max) = (1264.971, 1269.518, 1277.032), stdev = 4.970
[info]   CI (99.9%): [1250.379, 1288.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2059.151 ±(99.9%) 563.739 MB/sec [Average]
[info]   (min, avg, max) = (1975.235, 2059.151, 2319.277), stdev = 146.401
[info]   CI (99.9%): [1495.412, 2622.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1198.456 ±(99.9%) 320.587 B/op [Average]
[info]   (min, avg, max) = (1140.806, 1198.456, 1345.275), stdev = 83.255
[info]   CI (99.9%): [877.869, 1519.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.729 ±(99.9%) 6.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.729, 3.580), stdev = 1.594
[info]   CI (99.9%): [≈ 0, 6.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.430 ±(99.9%) 3.624 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.430, 2.113), stdev = 0.941
[info]   CI (99.9%): [≈ 0, 4.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.000, 10.000), stdev = 1.000
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 72.94% complete, ETA 00:24:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 60723.778 ops/s
[info] # Warmup Iteration   2: 159321.546 ops/s
[info] # Warmup Iteration   3: 164982.308 ops/s
[info] Iteration   1: 168604.742 ops/s
[info]                  ·gc.alloc.rate:                   3178.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              29668.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2983.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27843.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.332 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 170083.419 ops/s
[info]                  ·gc.alloc.rate:                   3239.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              29974.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3010.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27853.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 169584.649 ops/s
[info]                  ·gc.alloc.rate:                   3245.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              30116.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3371.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31289.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.386 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 168627.794 ops/s
[info]                  ·gc.alloc.rate:                   3216.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              30013.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3049.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28463.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.777 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 169657.342 ops/s
[info]                  ·gc.alloc.rate:                   3234.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              29993.885 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3058.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28359.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala":
[info]   169311.589 ±(99.9%) 2552.077 ops/s [Average]
[info]   (min, avg, max) = (168604.742, 169311.589, 170083.419), stdev = 662.766
[info]   CI (99.9%): [166759.512, 171863.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   3222.653 ±(99.9%) 103.594 MB/sec [Average]
[info]   (min, avg, max) = (3178.637, 3222.653, 3245.040), stdev = 26.903
[info]   CI (99.9%): [3119.059, 3326.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   29953.206 ±(99.9%) 648.595 B/op [Average]
[info]   (min, avg, max) = (29668.272, 29953.206, 30116.244), stdev = 168.438
[info]   CI (99.9%): [29304.612, 30601.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   3094.530 ±(99.9%) 607.380 MB/sec [Average]
[info]   (min, avg, max) = (2983.132, 3094.530, 3371.411), stdev = 157.735
[info]   CI (99.9%): [2487.149, 3701.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   28761.845 ±(99.9%) 5548.867 B/op [Average]
[info]   (min, avg, max) = (27843.501, 28761.845, 31289.057), stdev = 1441.023
[info]   CI (99.9%): [23212.978, 34310.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.087 ±(99.9%) 0.360 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.087, 0.250), stdev = 0.094
[info]   CI (99.9%): [≈ 0, 0.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.815 ±(99.9%) 3.367 B/op [Average]
[info]   (min, avg, max) = (0.193, 0.815, 2.332), stdev = 0.874
[info]   CI (99.9%): [≈ 0, 4.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   46.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.200, 14.000), stdev = 1.095
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 73.18% complete, ETA 00:24:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1515.210 ops/s
[info] # Warmup Iteration   2: 27343.116 ops/s
[info] # Warmup Iteration   3: 34871.271 ops/s
[info] Iteration   1: 34489.901 ops/s
[info]                  ·gc.alloc.rate:               2463.459 MB/sec
[info]                  ·gc.alloc.rate.norm:          112413.560 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2624.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119764.304 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 34611.208 ops/s
[info]                  ·gc.alloc.rate:                   2483.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              112926.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2327.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105851.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.947 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 34593.011 ops/s
[info]                  ·gc.alloc.rate:                   2479.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              112804.320 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2349.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106872.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.894 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 35272.659 ops/s
[info]                  ·gc.alloc.rate:                   2503.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              111709.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2363.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105469.881 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.573 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 35169.255 ops/s
[info]                  ·gc.alloc.rate:                   2535.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              113411.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121297.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.795 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson":
[info]   34827.207 ±(99.9%) 1402.584 ops/s [Average]
[info]   (min, avg, max) = (34489.901, 34827.207, 35272.659), stdev = 364.247
[info]   CI (99.9%): [33424.623, 36229.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2493.068 ±(99.9%) 106.330 MB/sec [Average]
[info]   (min, avg, max) = (2463.459, 2493.068, 2535.305), stdev = 27.614
[info]   CI (99.9%): [2386.738, 2599.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   112653.210 ±(99.9%) 2450.941 B/op [Average]
[info]   (min, avg, max) = (111709.813, 112653.210, 113411.899), stdev = 636.502
[info]   CI (99.9%): [110202.269, 115104.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2475.379 ±(99.9%) 689.381 MB/sec [Average]
[info]   (min, avg, max) = (2327.902, 2475.379, 2711.596), stdev = 179.030
[info]   CI (99.9%): [1785.998, 3164.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   111851.242 ±(99.9%) 30646.123 B/op [Average]
[info]   (min, avg, max) = (105469.881, 111851.242, 121297.960), stdev = 7958.701
[info]   CI (99.9%): [81205.119, 142497.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.242 ±(99.9%) 8.220 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.242, 5.573), stdev = 2.135
[info]   CI (99.9%): [≈ 0, 10.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 10.600, 11.000), stdev = 0.548
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.41% complete, ETA 00:24:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28434.085 ops/s
[info] # Warmup Iteration   2: 144562.860 ops/s
[info] # Warmup Iteration   3: 152061.925 ops/s
[info] Iteration   1: 148310.932 ops/s
[info]                  ·gc.alloc.rate:                   1295.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              13750.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13911.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.442 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 151772.752 ops/s
[info]                  ·gc.alloc.rate:                   1311.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              13601.319 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13615.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.184 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.390 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 152260.039 ops/s
[info]                  ·gc.alloc.rate:                   1322.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              13665.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13495.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.721 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 153254.222 ops/s
[info]                  ·gc.alloc.rate:               1342.033 MB/sec
[info]                  ·gc.alloc.rate.norm:          13782.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1304.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13398.376 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 150080.954 ops/s
[info]                  ·gc.alloc.rate:               1316.186 MB/sec
[info]                  ·gc.alloc.rate.norm:          13801.815 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1311.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13747.877 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala":
[info]   151135.780 ±(99.9%) 7518.601 ops/s [Average]
[info]   (min, avg, max) = (148310.932, 151135.780, 153254.222), stdev = 1952.557
[info]   CI (99.9%): [143617.179, 158654.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1317.553 ±(99.9%) 64.729 MB/sec [Average]
[info]   (min, avg, max) = (1295.772, 1317.553, 1342.033), stdev = 16.810
[info]   CI (99.9%): [1252.824, 1382.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   13720.310 ±(99.9%) 325.086 B/op [Average]
[info]   (min, avg, max) = (13601.319, 13720.310, 13801.815), stdev = 84.424
[info]   CI (99.9%): [13395.224, 14045.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1309.075 ±(99.9%) 14.267 MB/sec [Average]
[info]   (min, avg, max) = (1304.638, 1309.075, 1313.052), stdev = 3.705
[info]   CI (99.9%): [1294.808, 1323.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   13633.867 ±(99.9%) 782.118 B/op [Average]
[info]   (min, avg, max) = (13398.376, 13633.867, 13911.737), stdev = 203.114
[info]   CI (99.9%): [12851.749, 14415.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.879 ±(99.9%) 7.121 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.879, 4.184), stdev = 1.849
[info]   CI (99.9%): [≈ 0, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   9.111 ±(99.9%) 73.839 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.111, 43.390), stdev = 19.176
[info]   CI (99.9%): [≈ 0, 82.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 14.000), stdev = 3.768
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.65% complete, ETA 00:23:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 215746.944 ops/s
[info] # Warmup Iteration   2: 412187.970 ops/s
[info] # Warmup Iteration   3: 434655.874 ops/s
[info] Iteration   1: 440889.064 ops/s
[info]                  ·gc.alloc.rate:                   1754.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              6263.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5918.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.185 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.370 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 428375.997 ops/s
[info]                  ·gc.alloc.rate:                   1708.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              6275.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6062.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 430051.255 ops/s
[info]                  ·gc.alloc.rate:                   1728.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              6326.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6046.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.609 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 423062.220 ops/s
[info]                  ·gc.alloc.rate:               1708.553 MB/sec
[info]                  ·gc.alloc.rate.norm:          6356.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1660.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6177.963 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 442011.565 ops/s
[info]                  ·gc.alloc.rate:               1782.922 MB/sec
[info]                  ·gc.alloc.rate.norm:          6348.133 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1670.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5948.614 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala":
[info]   432878.020 ±(99.9%) 31765.316 ops/s [Average]
[info]   (min, avg, max) = (423062.220, 432878.020, 442011.565), stdev = 8249.352
[info]   CI (99.9%): [401112.704, 464643.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1736.677 ±(99.9%) 123.204 MB/sec [Average]
[info]   (min, avg, max) = (1708.553, 1736.677, 1782.922), stdev = 31.996
[info]   CI (99.9%): [1613.472, 1859.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   6313.744 ±(99.9%) 163.103 B/op [Average]
[info]   (min, avg, max) = (6263.101, 6313.744, 6356.135), stdev = 42.357
[info]   CI (99.9%): [6150.641, 6476.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1658.472 ±(99.9%) 30.732 MB/sec [Average]
[info]   (min, avg, max) = (1650.683, 1658.472, 1670.714), stdev = 7.981
[info]   CI (99.9%): [1627.740, 1689.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6030.774 ±(99.9%) 395.277 B/op [Average]
[info]   (min, avg, max) = (5918.932, 6030.774, 6177.963), stdev = 102.652
[info]   CI (99.9%): [5635.496, 6426.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.687 ±(99.9%) 5.384 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.687, 3.185), stdev = 1.398
[info]   CI (99.9%): [≈ 0, 6.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.457 ±(99.9%) 19.210 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.457, 11.370), stdev = 4.989
[info]   CI (99.9%): [≈ 0, 21.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.400, 10.000), stdev = 1.517
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 73.88% complete, ETA 00:23:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 219602.070 ops/s
[info] # Warmup Iteration   2: 467853.524 ops/s
[info] # Warmup Iteration   3: 477482.958 ops/s
[info] Iteration   1: 477319.696 ops/s
[info]                  ·gc.alloc.rate:                   1373.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              4530.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4371.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 473991.551 ops/s
[info]                  ·gc.alloc.rate:                   1363.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              4525.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4397.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.714 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 482143.252 ops/s
[info]                  ·gc.alloc.rate:                   1383.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              4515.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4305.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 480828.672 ops/s
[info]                  ·gc.alloc.rate:               1394.106 MB/sec
[info]                  ·gc.alloc.rate.norm:          4563.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4321.543 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 481081.431 ops/s
[info]                  ·gc.alloc.rate:               1395.131 MB/sec
[info]                  ·gc.alloc.rate.norm:          4563.418 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1325.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4336.651 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   479072.921 ±(99.9%) 12978.130 ops/s [Average]
[info]   (min, avg, max) = (473991.551, 479072.921, 482143.252), stdev = 3370.379
[info]   CI (99.9%): [466094.791, 492051.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1381.920 ±(99.9%) 52.508 MB/sec [Average]
[info]   (min, avg, max) = (1363.051, 1381.920, 1395.131), stdev = 13.636
[info]   CI (99.9%): [1329.412, 1434.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   4539.560 ±(99.9%) 86.018 B/op [Average]
[info]   (min, avg, max) = (4515.541, 4539.560, 4563.418), stdev = 22.339
[info]   CI (99.9%): [4453.542, 4625.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1323.048 ±(99.9%) 12.248 MB/sec [Average]
[info]   (min, avg, max) = (1319.000, 1323.048, 1325.803), stdev = 3.181
[info]   CI (99.9%): [1310.800, 1335.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   4346.411 ±(99.9%) 143.672 B/op [Average]
[info]   (min, avg, max) = (4305.597, 4346.411, 4397.231), stdev = 37.311
[info]   CI (99.9%): [4202.740, 4490.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.658 ±(99.9%) 5.531 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.658, 3.227), stdev = 1.436
[info]   CI (99.9%): [≈ 0, 6.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2.184 ±(99.9%) 18.363 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.184, 10.714), stdev = 4.769
[info]   CI (99.9%): [≈ 0, 20.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 11.000), stdev = 2.345
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 74.12% complete, ETA 00:23:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8943.812 ops/s
[info] # Warmup Iteration   2: 53167.460 ops/s
[info] # Warmup Iteration   3: 73973.386 ops/s
[info] Iteration   1: 75070.863 ops/s
[info]                  ·gc.alloc.rate:                   1552.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              32556.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34216.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.873 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 74729.635 ops/s
[info]                  ·gc.alloc.rate:                   1554.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              32723.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34695.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.099 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 72536.364 ops/s
[info]                  ·gc.alloc.rate:               1499.906 MB/sec
[info]                  ·gc.alloc.rate.norm:          32544.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1324.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28739.296 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 75961.454 ops/s
[info]                  ·gc.alloc.rate:               1590.134 MB/sec
[info]                  ·gc.alloc.rate.norm:          32941.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1664.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34483.279 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 75825.301 ops/s
[info]                  ·gc.alloc.rate:               1577.444 MB/sec
[info]                  ·gc.alloc.rate.norm:          32741.456 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27791.682 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson":
[info]   74824.723 ±(99.9%) 5307.581 ops/s [Average]
[info]   (min, avg, max) = (72536.364, 74824.723, 75961.454), stdev = 1378.362
[info]   CI (99.9%): [69517.142, 80132.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1554.898 ±(99.9%) 133.093 MB/sec [Average]
[info]   (min, avg, max) = (1499.906, 1554.898, 1590.134), stdev = 34.564
[info]   CI (99.9%): [1421.805, 1687.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   32701.552 ±(99.9%) 625.415 B/op [Average]
[info]   (min, avg, max) = (32544.534, 32701.552, 32941.798), stdev = 162.418
[info]   CI (99.9%): [32076.137, 33326.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1521.576 ±(99.9%) 669.015 MB/sec [Average]
[info]   (min, avg, max) = (1324.531, 1521.576, 1664.543), stdev = 173.741
[info]   CI (99.9%): [852.561, 2190.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   31985.223 ±(99.9%) 13155.173 B/op [Average]
[info]   (min, avg, max) = (27791.682, 31985.223, 34695.787), stdev = 3416.357
[info]   CI (99.9%): [18830.051, 45140.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.171 ±(99.9%) 1.382 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.171, 0.812), stdev = 0.359
[info]   CI (99.9%): [≈ 0, 1.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.594 ±(99.9%) 29.106 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.594, 17.099), stdev = 7.559
[info]   CI (99.9%): [≈ 0, 32.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 9.000), stdev = 1.789
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 74.35% complete, ETA 00:23:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45027.223 ops/s
[info] # Warmup Iteration   2: 291929.776 ops/s
[info] # Warmup Iteration   3: 299929.995 ops/s
[info] Iteration   1: 313143.527 ops/s
[info]                  ·gc.alloc.rate:                   2314.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              11628.465 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1977.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9937.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.185 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 317762.702 ops/s
[info]                  ·gc.alloc.rate:                   2372.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              11751.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2305.553 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11419.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 315544.281 ops/s
[info]                  ·gc.alloc.rate:               2371.138 MB/sec
[info]                  ·gc.alloc.rate.norm:          11826.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2323.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11590.817 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 313931.455 ops/s
[info]                  ·gc.alloc.rate:                   2354.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              11800.923 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2344.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11750.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.209 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 315861.289 ops/s
[info]                  ·gc.alloc.rate:                   2375.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              11835.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2359.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11756.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce":
[info]   315248.651 ±(99.9%) 6928.412 ops/s [Average]
[info]   (min, avg, max) = (313143.527, 315248.651, 317762.702), stdev = 1799.287
[info]   CI (99.9%): [308320.239, 322177.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2357.555 ±(99.9%) 98.427 MB/sec [Average]
[info]   (min, avg, max) = (2314.234, 2357.555, 2375.421), stdev = 25.561
[info]   CI (99.9%): [2259.128, 2455.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   11768.538 ±(99.9%) 327.057 B/op [Average]
[info]   (min, avg, max) = (11628.465, 11768.538, 11835.859), stdev = 84.936
[info]   CI (99.9%): [11441.481, 12095.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2262.215 ±(99.9%) 617.653 MB/sec [Average]
[info]   (min, avg, max) = (1977.617, 2262.215, 2359.539), stdev = 160.402
[info]   CI (99.9%): [1644.562, 2879.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11290.947 ±(99.9%) 2962.639 B/op [Average]
[info]   (min, avg, max) = (9937.046, 11290.947, 11756.728), stdev = 769.388
[info]   CI (99.9%): [8328.308, 14253.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.192 ±(99.9%) 1.382 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.192, 0.833), stdev = 0.359
[info]   CI (99.9%): [≈ 0, 1.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.961 ±(99.9%) 6.948 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.961, 4.185), stdev = 1.804
[info]   CI (99.9%): [≈ 0, 7.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.59% complete, ETA 00:22:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73982.386 ops/s
[info] # Warmup Iteration   2: 466870.040 ops/s
[info] # Warmup Iteration   3: 490372.691 ops/s
[info] Iteration   1: 481522.675 ops/s
[info]                  ·gc.alloc.rate:                   1263.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              4127.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3212.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 494395.992 ops/s
[info]                  ·gc.alloc.rate:                   1295.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              4135.846 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4184.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.319 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.784 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 499002.762 ops/s
[info]                  ·gc.alloc.rate:                   1312.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              4138.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4118.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.328 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 496239.384 ops/s
[info]                  ·gc.alloc.rate:                   1310.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              4155.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4132.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 506859.852 ops/s
[info]                  ·gc.alloc.rate:                   1344.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              4173.624 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4062.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala":
[info]   495604.133 ±(99.9%) 35417.160 ops/s [Average]
[info]   (min, avg, max) = (481522.675, 495604.133, 506859.852), stdev = 9197.724
[info]   CI (99.9%): [460186.973, 531021.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1305.191 ±(99.9%) 113.401 MB/sec [Average]
[info]   (min, avg, max) = (1263.244, 1305.191, 1344.562), stdev = 29.450
[info]   CI (99.9%): [1191.790, 1418.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   4146.162 ±(99.9%) 71.055 B/op [Average]
[info]   (min, avg, max) = (4127.440, 4146.162, 4173.624), stdev = 18.453
[info]   CI (99.9%): [4075.106, 4217.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1242.330 ±(99.9%) 557.763 MB/sec [Average]
[info]   (min, avg, max) = (983.272, 1242.330, 1310.956), stdev = 144.849
[info]   CI (99.9%): [684.567, 1800.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3941.996 ±(99.9%) 1578.728 B/op [Average]
[info]   (min, avg, max) = (3212.677, 3941.996, 4184.040), stdev = 409.991
[info]   CI (99.9%): [2363.267, 5520.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.914 ±(99.9%) 7.331 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.914, 4.319), stdev = 1.904
[info]   CI (99.9%): [≈ 0, 8.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.915 ±(99.9%) 23.401 B/op [Average]
[info]   (min, avg, max) = (0.066, 2.915, 13.784), stdev = 6.077
[info]   CI (99.9%): [≈ 0, 26.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.400, 14.000), stdev = 4.037
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.82% complete, ETA 00:22:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 584609.455 ops/s
[info] # Warmup Iteration   2: 1238039.572 ops/s
[info] # Warmup Iteration   3: 1326427.018 ops/s
[info] Iteration   1: 1309050.260 ops/s
[info]                  ·gc.alloc.rate:                   2658.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              3196.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2646.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3181.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.451 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1323881.197 ops/s
[info]                  ·gc.alloc.rate:                   2670.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              3175.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2329.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2768.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1316292.641 ops/s
[info]                  ·gc.alloc.rate:                   2657.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              3176.242 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2685.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3209.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1301089.903 ops/s
[info]                  ·gc.alloc.rate:                   2629.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              3180.905 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2699.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3265.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.554 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1336108.570 ops/s
[info]                  ·gc.alloc.rate:                   2682.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              3159.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2370.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2792.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala":
[info]   1317284.514 ±(99.9%) 51980.608 ops/s [Average]
[info]   (min, avg, max) = (1301089.903, 1317284.514, 1336108.570), stdev = 13499.199
[info]   CI (99.9%): [1265303.906, 1369265.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2659.867 ±(99.9%) 76.095 MB/sec [Average]
[info]   (min, avg, max) = (2629.611, 2659.867, 2682.652), stdev = 19.762
[info]   CI (99.9%): [2583.772, 2735.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3177.681 ±(99.9%) 50.592 B/op [Average]
[info]   (min, avg, max) = (3159.754, 3177.681, 3196.390), stdev = 13.139
[info]   CI (99.9%): [3127.089, 3228.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2546.421 ±(99.9%) 696.506 MB/sec [Average]
[info]   (min, avg, max) = (2329.212, 2546.421, 2699.913), stdev = 180.880
[info]   CI (99.9%): [1849.915, 3242.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3043.794 ±(99.9%) 932.297 B/op [Average]
[info]   (min, avg, max) = (2768.982, 3043.794, 3265.947), stdev = 242.115
[info]   CI (99.9%): [2111.497, 3976.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.200 ±(99.9%) 0.774 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.200, 0.458), stdev = 0.201
[info]   CI (99.9%): [≈ 0, 0.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.240 ±(99.9%) 0.937 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.240, 0.554), stdev = 0.243
[info]   CI (99.9%): [≈ 0, 1.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.600, 12.000), stdev = 1.140
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 75.06% complete, ETA 00:22:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10880.286 ops/s
[info] # Warmup Iteration   2: 88153.497 ops/s
[info] # Warmup Iteration   3: 103427.854 ops/s
[info] Iteration   1: 105624.730 ops/s
[info]                  ·gc.alloc.rate:                   3533.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              52645.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3281.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48889.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.481 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 105804.461 ops/s
[info]                  ·gc.alloc.rate:                   3547.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              52773.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3326.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49484.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.619 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 103133.312 ops/s
[info]                  ·gc.alloc.rate:                   3463.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              52848.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3366.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51364.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.271 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 102129.947 ops/s
[info]                  ·gc.alloc.rate:                   3405.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              52477.293 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3386.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52179.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.454 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 105072.792 ops/s
[info]                  ·gc.alloc.rate:                   3514.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              52641.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3396.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50869.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.935 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson":
[info]   104353.048 ±(99.9%) 6289.570 ops/s [Average]
[info]   (min, avg, max) = (102129.947, 104353.048, 105804.461), stdev = 1633.381
[info]   CI (99.9%): [98063.479, 110642.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3492.900 ±(99.9%) 224.913 MB/sec [Average]
[info]   (min, avg, max) = (3405.410, 3492.900, 3547.973), stdev = 58.409
[info]   CI (99.9%): [3267.987, 3717.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52677.128 ±(99.9%) 547.040 B/op [Average]
[info]   (min, avg, max) = (52477.293, 52677.128, 52848.135), stdev = 142.064
[info]   CI (99.9%): [52130.088, 53224.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3351.294 ±(99.9%) 182.303 MB/sec [Average]
[info]   (min, avg, max) = (3281.150, 3351.294, 3396.199), stdev = 47.343
[info]   CI (99.9%): [3168.991, 3533.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50557.517 ±(99.9%) 5206.170 B/op [Average]
[info]   (min, avg, max) = (48889.741, 50557.517, 52179.349), stdev = 1352.026
[info]   CI (99.9%): [45351.347, 55763.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.142 ±(99.9%) 0.492 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.142, 0.354), stdev = 0.128
[info]   CI (99.9%): [≈ 0, 0.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.152 ±(99.9%) 7.608 B/op [Average]
[info]   (min, avg, max) = (0.619, 2.152, 5.454), stdev = 1.976
[info]   CI (99.9%): [≈ 0, 9.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   50.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.000, 10.000), stdev = 0.001
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 13.800, 14.000), stdev = 0.447
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 75.29% complete, ETA 00:22:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 76280.101 ops/s
[info] # Warmup Iteration   2: 336111.742 ops/s
[info] # Warmup Iteration   3: 350833.401 ops/s
[info] Iteration   1: 348178.333 ops/s
[info]                  ·gc.alloc.rate:                   1202.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              5433.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5959.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 345112.427 ops/s
[info]                  ·gc.alloc.rate:                   1184.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              5401.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4517.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.956 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.481 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 353929.949 ops/s
[info]                  ·gc.alloc.rate:                   1225.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              5447.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5853.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 354116.476 ops/s
[info]                  ·gc.alloc.rate:               1226.701 MB/sec
[info]                  ·gc.alloc.rate.norm:          5451.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1311.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5829.847 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 354717.673 ops/s
[info]                  ·gc.alloc.rate:               1229.166 MB/sec
[info]                  ·gc.alloc.rate.norm:          5453.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:      985.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4374.399 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce":
[info]   351210.971 ±(99.9%) 16620.434 ops/s [Average]
[info]   (min, avg, max) = (345112.427, 351210.971, 354717.673), stdev = 4316.274
[info]   CI (99.9%): [334590.537, 367831.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1213.545 ±(99.9%) 75.190 MB/sec [Average]
[info]   (min, avg, max) = (1184.357, 1213.545, 1229.166), stdev = 19.527
[info]   CI (99.9%): [1138.354, 1288.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5437.564 ±(99.9%) 84.077 B/op [Average]
[info]   (min, avg, max) = (5401.025, 5437.564, 5453.325), stdev = 21.835
[info]   CI (99.9%): [5353.487, 5521.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1184.663 ±(99.9%) 690.398 MB/sec [Average]
[info]   (min, avg, max) = (985.979, 1184.663, 1318.698), stdev = 179.294
[info]   CI (99.9%): [494.265, 1875.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5306.869 ±(99.9%) 3038.515 B/op [Average]
[info]   (min, avg, max) = (4374.399, 5306.869, 5959.238), stdev = 789.093
[info]   CI (99.9%): [2268.354, 8345.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.733 ±(99.9%) 4.918 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.733, 2.956), stdev = 1.277
[info]   CI (99.9%): [≈ 0, 5.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.326 ±(99.9%) 22.433 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.326, 13.481), stdev = 5.826
[info]   CI (99.9%): [≈ 0, 25.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 13.000), stdev = 3.899
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.53% complete, ETA 00:22:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 310378.690 ops/s
[info] # Warmup Iteration   2: 794939.599 ops/s
[info] # Warmup Iteration   3: 814855.398 ops/s
[info] Iteration   1: 815860.616 ops/s
[info]                  ·gc.alloc.rate:                   599.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              1156.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     627.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 813251.544 ops/s
[info]                  ·gc.alloc.rate:                   606.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              1172.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1263.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 814637.064 ops/s
[info]                  ·gc.alloc.rate:               608.617 MB/sec
[info]                  ·gc.alloc.rate.norm:          1175.870 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1263.808 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 835034.159 ops/s
[info]                  ·gc.alloc.rate:                   618.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              1165.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1235.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 809244.378 ops/s
[info]                  ·gc.alloc.rate:                   598.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              1164.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1277.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala":
[info]   817605.552 ±(99.9%) 38721.461 ops/s [Average]
[info]   (min, avg, max) = (809244.378, 817605.552, 835034.159), stdev = 10055.840
[info]   CI (99.9%): [778884.091, 856327.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   606.251 ±(99.9%) 30.533 MB/sec [Average]
[info]   (min, avg, max) = (598.637, 606.251, 618.254), stdev = 7.929
[info]   CI (99.9%): [575.717, 636.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1166.934 ±(99.9%) 29.077 B/op [Average]
[info]   (min, avg, max) = (1156.746, 1166.934, 1175.870), stdev = 7.551
[info]   CI (99.9%): [1137.856, 1196.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   588.985 ±(99.9%) 567.408 MB/sec [Average]
[info]   (min, avg, max) = (325.403, 588.985, 656.826), stdev = 147.354
[info]   CI (99.9%): [21.577, 1156.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1133.557 ±(99.9%) 1090.403 B/op [Average]
[info]   (min, avg, max) = (627.735, 1133.557, 1277.421), stdev = 283.174
[info]   CI (99.9%): [43.154, 2223.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.048 ±(99.9%) 0.130 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.048, 0.081), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 7.000), stdev = 1.225
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.76% complete, ETA 00:21:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 916837.904 ops/s
[info] # Warmup Iteration   2: 2074780.686 ops/s
[info] # Warmup Iteration   3: 2112211.039 ops/s
[info] Iteration   1: 2100461.401 ops/s
[info]                  ·gc.alloc.rate:               1001.446 MB/sec
[info]                  ·gc.alloc.rate.norm:          750.440 B/op
[info]                  ·gc.churn.PS_Eden_Space:      992.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 743.736 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 2063393.550 ops/s
[info]                  ·gc.alloc.rate:                   976.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     758.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2106990.630 ops/s
[info]                  ·gc.alloc.rate:                   1007.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     743.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.873 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.146 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2064247.615 ops/s
[info]                  ·gc.alloc.rate:                   980.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              747.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     755.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2055516.265 ops/s
[info]                  ·gc.alloc.rate:               976.931 MB/sec
[info]                  ·gc.alloc.rate.norm:          747.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 757.433 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala":
[info]   2078121.892 ±(99.9%) 91384.706 ops/s [Average]
[info]   (min, avg, max) = (2055516.265, 2078121.892, 2106990.630), stdev = 23732.318
[info]   CI (99.9%): [1986737.186, 2169506.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   988.425 ±(99.9%) 57.420 MB/sec [Average]
[info]   (min, avg, max) = (976.060, 988.425, 1007.559), stdev = 14.912
[info]   CI (99.9%): [931.006, 1045.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   748.530 ±(99.9%) 11.959 B/op [Average]
[info]   (min, avg, max) = (744.483, 748.530, 752.596), stdev = 3.106
[info]   CI (99.9%): [736.572, 760.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   992.469 ±(99.9%) 9.615 MB/sec [Average]
[info]   (min, avg, max) = (989.452, 992.469, 995.233), stdev = 2.497
[info]   CI (99.9%): [982.854, 1002.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   751.684 ±(99.9%) 28.931 B/op [Average]
[info]   (min, avg, max) = (743.390, 751.684, 758.626), stdev = 7.513
[info]   CI (99.9%): [722.753, 780.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.649 ±(99.9%) 4.821 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.649, 2.873), stdev = 1.252
[info]   CI (99.9%): [≈ 0, 5.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.486 ±(99.9%) 3.599 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.486, 2.146), stdev = 0.935
[info]   CI (99.9%): [≈ 0, 4.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 8.000), stdev = 2.345
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 76.00% complete, ETA 00:21:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1335985.881 ops/s
[info] # Warmup Iteration   2: 2321330.329 ops/s
[info] # Warmup Iteration   3: 2355016.666 ops/s
[info] Iteration   1: 2354311.195 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2241355.345 ops/s
[info]                  ·gc.alloc.rate:      3.350 MB/sec
[info]                  ·gc.alloc.rate.norm: 2.352 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2356641.578 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2357484.957 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2356767.788 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2333312.173 ±(99.9%) 197997.322 ops/s [Average]
[info]   (min, avg, max) = (2241355.345, 2333312.173, 2357484.957), stdev = 51419.276
[info]   CI (99.9%): [2135314.851, 2531309.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.670 ±(99.9%) 5.769 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.670, 3.350), stdev = 1.498
[info]   CI (99.9%): [≈ 0, 6.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.471 ±(99.9%) 4.050 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.471, 2.352), stdev = 1.052
[info]   CI (99.9%): [≈ 0, 4.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 76.24% complete, ETA 00:21:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 137467.028 ops/s
[info] # Warmup Iteration   2: 435456.131 ops/s
[info] # Warmup Iteration   3: 445974.093 ops/s
[info] Iteration   1: 441190.998 ops/s
[info]                  ·gc.alloc.rate:                   673.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              2403.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2337.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 453975.082 ops/s
[info]                  ·gc.alloc.rate:                   674.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              2338.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2274.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 447940.544 ops/s
[info]                  ·gc.alloc.rate:                   667.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              2345.474 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2310.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 450685.503 ops/s
[info]                  ·gc.alloc.rate:                   666.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2299.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 468781.530 ops/s
[info]                  ·gc.alloc.rate:                   691.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              2320.260 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2212.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.182 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson":
[info]   452514.731 ±(99.9%) 39421.529 ops/s [Average]
[info]   (min, avg, max) = (441190.998, 452514.731, 468781.530), stdev = 10237.646
[info]   CI (99.9%): [413093.202, 491936.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   674.800 ±(99.9%) 37.770 MB/sec [Average]
[info]   (min, avg, max) = (666.741, 674.800, 691.127), stdev = 9.809
[info]   CI (99.9%): [637.030, 712.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2347.240 ±(99.9%) 126.553 B/op [Average]
[info]   (min, avg, max) = (2320.260, 2347.240, 2403.447), stdev = 32.865
[info]   CI (99.9%): [2220.687, 2473.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   657.332 ±(99.9%) 6.232 MB/sec [Average]
[info]   (min, avg, max) = (655.109, 657.332, 659.163), stdev = 1.619
[info]   CI (99.9%): [651.100, 663.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2286.876 ±(99.9%) 180.869 B/op [Average]
[info]   (min, avg, max) = (2212.950, 2286.876, 2337.055), stdev = 46.971
[info]   CI (99.9%): [2106.007, 2467.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.691 ±(99.9%) 5.682 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.691, 3.331), stdev = 1.476
[info]   CI (99.9%): [≈ 0, 6.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.324 ±(99.9%) 19.068 B/op [Average]
[info]   (min, avg, max) = (0.073, 2.324, 11.182), stdev = 4.952
[info]   CI (99.9%): [≈ 0, 21.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 76.47% complete, ETA 00:21:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8025.480 ops/s
[info] # Warmup Iteration   2: 52736.068 ops/s
[info] # Warmup Iteration   3: 56515.211 ops/s
[info] Iteration   1: 59717.011 ops/s
[info]                  ·gc.alloc.rate:                   2084.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              54906.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52212.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98.206 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 58360.542 ops/s
[info]                  ·gc.alloc.rate:                   2041.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              55022.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1971.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53157.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.123 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 60184.880 ops/s
[info]                  ·gc.alloc.rate:                   2114.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              55288.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51815.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.544 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 60047.414 ops/s
[info]                  ·gc.alloc.rate:                   2114.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              55411.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52344.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.546 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 59366.597 ops/s
[info]                  ·gc.alloc.rate:                   2091.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              55435.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53343.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.552 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce":
[info]   59535.289 ±(99.9%) 2807.111 ops/s [Average]
[info]   (min, avg, max) = (58360.542, 59535.289, 60184.880), stdev = 728.998
[info]   CI (99.9%): [56728.178, 62342.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2088.954 ±(99.9%) 115.361 MB/sec [Average]
[info]   (min, avg, max) = (2041.091, 2088.954, 2114.245), stdev = 29.959
[info]   CI (99.9%): [1973.593, 2204.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   55212.779 ±(99.9%) 913.701 B/op [Average]
[info]   (min, avg, max) = (54906.239, 55212.779, 55435.986), stdev = 237.285
[info]   CI (99.9%): [54299.078, 56126.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1988.922 ±(99.9%) 60.993 MB/sec [Average]
[info]   (min, avg, max) = (1971.914, 1988.922, 2012.227), stdev = 15.840
[info]   CI (99.9%): [1927.929, 2049.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   52574.695 ±(99.9%) 2503.597 B/op [Average]
[info]   (min, avg, max) = (51815.618, 52574.695, 53343.615), stdev = 650.176
[info]   CI (99.9%): [50071.098, 55078.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.766 ±(99.9%) 6.375 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.766, 3.728), stdev = 1.656
[info]   CI (99.9%): [≈ 0, 7.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   20.194 ±(99.9%) 167.930 B/op [Average]
[info]   (min, avg, max) = (0.544, 20.194, 98.206), stdev = 43.611
[info]   CI (99.9%): [≈ 0, 188.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.200, 12.000), stdev = 1.643
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.71% complete, ETA 00:21:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15693.371 ops/s
[info] # Warmup Iteration   2: 82334.669 ops/s
[info] # Warmup Iteration   3: 86268.091 ops/s
[info] Iteration   1: 94232.957 ops/s
[info]                  ·gc.alloc.rate:                   1733.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              28945.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27424.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.080 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.144 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 93047.658 ops/s
[info]                  ·gc.alloc.rate:                   1722.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              29134.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27581.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.859 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 91463.810 ops/s
[info]                  ·gc.alloc.rate:                   1699.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              29245.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28013.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.358 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 95327.226 ops/s
[info]                  ·gc.alloc.rate:               1776.582 MB/sec
[info]                  ·gc.alloc.rate.norm:          29331.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1639.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27060.700 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 95308.307 ops/s
[info]                  ·gc.alloc.rate:               1789.469 MB/sec
[info]                  ·gc.alloc.rate.norm:          29549.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1985.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32781.063 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   93875.992 ±(99.9%) 6324.262 ops/s [Average]
[info]   (min, avg, max) = (91463.810, 93875.992, 95327.226), stdev = 1642.391
[info]   CI (99.9%): [87551.729, 100200.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1744.333 ±(99.9%) 144.716 MB/sec [Average]
[info]   (min, avg, max) = (1699.864, 1744.333, 1789.469), stdev = 37.582
[info]   CI (99.9%): [1599.617, 1889.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   29241.152 ±(99.9%) 866.054 B/op [Average]
[info]   (min, avg, max) = (28945.283, 29241.152, 29549.692), stdev = 224.912
[info]   CI (99.9%): [28375.098, 30107.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1705.084 ±(99.9%) 603.263 MB/sec [Average]
[info]   (min, avg, max) = (1628.278, 1705.084, 1985.154), stdev = 156.666
[info]   CI (99.9%): [1101.820, 2308.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   28572.457 ±(99.9%) 9154.572 B/op [Average]
[info]   (min, avg, max) = (27060.700, 28572.457, 32781.063), stdev = 2377.413
[info]   CI (99.9%): [19417.886, 37727.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.937 ±(99.9%) 6.834 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.937, 4.080), stdev = 1.775
[info]   CI (99.9%): [≈ 0, 7.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15.672 ±(99.9%) 114.113 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.672, 68.144), stdev = 29.635
[info]   CI (99.9%): [≈ 0, 129.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 16.000), stdev = 3.834
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.94% complete, ETA 00:20:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43660.633 ops/s
[info] # Warmup Iteration   2: 157909.332 ops/s
[info] # Warmup Iteration   3: 156495.532 ops/s
[info] Iteration   1: 166960.679 ops/s
[info]                  ·gc.alloc.rate:                   2615.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              24655.907 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2640.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24886.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.729 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 163459.404 ops/s
[info]                  ·gc.alloc.rate:                   2590.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              24941.890 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2322.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22359.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.004 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 165875.417 ops/s
[info]                  ·gc.alloc.rate:                   2648.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              25129.287 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2675.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25383.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.593 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 159832.475 ops/s
[info]                  ·gc.alloc.rate:                   2544.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              25040.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2358.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23213.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.435 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 167574.105 ops/s
[info]                  ·gc.alloc.rate:                   2677.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              25132.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2707.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25413.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   164740.416 ±(99.9%) 12173.222 ops/s [Average]
[info]   (min, avg, max) = (159832.475, 164740.416, 167574.105), stdev = 3161.347
[info]   CI (99.9%): [152567.194, 176913.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2615.099 ±(99.9%) 198.224 MB/sec [Average]
[info]   (min, avg, max) = (2544.006, 2615.099, 2677.055), stdev = 51.478
[info]   CI (99.9%): [2416.875, 2813.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   24980.035 ±(99.9%) 759.787 B/op [Average]
[info]   (min, avg, max) = (24655.907, 24980.035, 25132.659), stdev = 197.314
[info]   CI (99.9%): [24220.247, 25739.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2540.569 ±(99.9%) 711.497 MB/sec [Average]
[info]   (min, avg, max) = (2322.202, 2540.569, 2707.010), stdev = 184.773
[info]   CI (99.9%): [1829.072, 3252.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   24251.291 ±(99.9%) 5340.243 B/op [Average]
[info]   (min, avg, max) = (22359.120, 24251.291, 25413.882), stdev = 1386.844
[info]   CI (99.9%): [18911.048, 29591.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.167 ±(99.9%) 0.567 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.167, 0.396), stdev = 0.147
[info]   CI (99.9%): [≈ 0, 0.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.591 ±(99.9%) 5.346 B/op [Average]
[info]   (min, avg, max) = (0.196, 1.591, 3.729), stdev = 1.388
[info]   CI (99.9%): [≈ 0, 6.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.600, 10.000), stdev = 0.894
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 77.18% complete, ETA 00:20:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3398.540 ops/s
[info] # Warmup Iteration   2: 25371.301 ops/s
[info] # Warmup Iteration   3: 32487.891 ops/s
[info] Iteration   1: 31548.625 ops/s
[info]                  ·gc.alloc.rate:                   2115.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              105530.506 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2293.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114401.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.386 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 32087.244 ops/s
[info]                  ·gc.alloc.rate:                   2162.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              106048.226 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97371.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.615 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.139 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 32829.883 ops/s
[info]                  ·gc.alloc.rate:                   2175.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              104300.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95963.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.996 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 31695.772 ops/s
[info]                  ·gc.alloc.rate:                   2121.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              105375.585 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100025.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.202 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 31683.789 ops/s
[info]                  ·gc.alloc.rate:               2100.813 MB/sec
[info]                  ·gc.alloc.rate.norm:          104344.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2024.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 100542.718 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson":
[info]   31969.063 ±(99.9%) 2008.080 ops/s [Average]
[info]   (min, avg, max) = (31548.625, 31969.063, 32829.883), stdev = 521.492
[info]   CI (99.9%): [29960.983, 33977.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2135.275 ±(99.9%) 123.622 MB/sec [Average]
[info]   (min, avg, max) = (2100.813, 2135.275, 2175.696), stdev = 32.104
[info]   CI (99.9%): [2011.653, 2258.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   105120.016 ±(99.9%) 2962.252 B/op [Average]
[info]   (min, avg, max) = (104300.783, 105120.016, 106048.226), stdev = 769.288
[info]   CI (99.9%): [102157.764, 108082.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2063.818 ±(99.9%) 497.210 MB/sec [Average]
[info]   (min, avg, max) = (1985.450, 2063.818, 2293.342), stdev = 129.124
[info]   CI (99.9%): [1566.608, 2561.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   101661.035 ±(99.9%) 28369.163 B/op [Average]
[info]   (min, avg, max) = (95963.785, 101661.035, 114401.891), stdev = 7367.382
[info]   CI (99.9%): [73291.871, 130030.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.306 ±(99.9%) 1.345 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.306, 0.749), stdev = 0.349
[info]   CI (99.9%): [≈ 0, 1.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   15.145 ±(99.9%) 66.743 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.145, 37.386), stdev = 17.333
[info]   CI (99.9%): [≈ 0, 81.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 12.000), stdev = 1.304
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.41% complete, ETA 00:20:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30386.531 ops/s
[info] # Warmup Iteration   2: 147270.314 ops/s
[info] # Warmup Iteration   3: 150062.688 ops/s
[info] Iteration   1: 151564.607 ops/s
[info]                  ·gc.alloc.rate:               1020.048 MB/sec
[info]                  ·gc.alloc.rate.norm:          10589.748 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10172.190 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 153540.413 ops/s
[info]                  ·gc.alloc.rate:                   1023.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              10491.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10071.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.427 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 157684.060 ops/s
[info]                  ·gc.alloc.rate:                   1061.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              10593.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9826.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.122 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.140 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 157221.585 ops/s
[info]                  ·gc.alloc.rate:               1063.670 MB/sec
[info]                  ·gc.alloc.rate.norm:          10647.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:      978.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9795.849 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 153582.734 ops/s
[info]                  ·gc.alloc.rate:               1040.236 MB/sec
[info]                  ·gc.alloc.rate.norm:          10659.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1303.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13355.243 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   154718.680 ±(99.9%) 10130.355 ops/s [Average]
[info]   (min, avg, max) = (151564.607, 154718.680, 157684.060), stdev = 2630.821
[info]   CI (99.9%): [144588.325, 164849.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1041.795 ±(99.9%) 78.607 MB/sec [Average]
[info]   (min, avg, max) = (1020.048, 1041.795, 1063.670), stdev = 20.414
[info]   CI (99.9%): [963.188, 1120.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   10596.473 ±(99.9%) 256.392 B/op [Average]
[info]   (min, avg, max) = (10491.460, 10596.473, 10659.782), stdev = 66.584
[info]   CI (99.9%): [10340.081, 10852.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1045.782 ±(99.9%) 554.341 MB/sec [Average]
[info]   (min, avg, max) = (978.555, 1045.782, 1303.272), stdev = 143.961
[info]   CI (99.9%): [491.441, 1600.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   10644.367 ±(99.9%) 5867.650 B/op [Average]
[info]   (min, avg, max) = (9795.849, 10644.367, 13355.243), stdev = 1523.810
[info]   CI (99.9%): [4776.718, 16512.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 7.081 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 4.122), stdev = 1.839
[info]   CI (99.9%): [≈ 0, 7.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8.313 ±(99.9%) 70.665 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.313, 41.140), stdev = 18.351
[info]   CI (99.9%): [≈ 0, 78.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 10.000), stdev = 2.702
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.65% complete, ETA 00:20:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 225346.161 ops/s
[info] # Warmup Iteration   2: 441404.467 ops/s
[info] # Warmup Iteration   3: 446247.385 ops/s
[info] Iteration   1: 457695.069 ops/s
[info]                  ·gc.alloc.rate:                   525.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              1807.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2265.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 458771.936 ops/s
[info]                  ·gc.alloc.rate:               515.389 MB/sec
[info]                  ·gc.alloc.rate.norm:          1768.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1132.357 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 457125.085 ops/s
[info]                  ·gc.alloc.rate:               527.197 MB/sec
[info]                  ·gc.alloc.rate.norm:          1815.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2274.014 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 453819.960 ops/s
[info]                  ·gc.alloc.rate:               509.305 MB/sec
[info]                  ·gc.alloc.rate.norm:          1766.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1145.869 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 443189.050 ops/s
[info]                  ·gc.alloc.rate:                   517.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              1837.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2349.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.222 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   454120.220 ±(99.9%) 24582.965 ops/s [Average]
[info]   (min, avg, max) = (443189.050, 454120.220, 458771.936), stdev = 6384.118
[info]   CI (99.9%): [429537.255, 478703.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   518.948 ±(99.9%) 28.531 MB/sec [Average]
[info]   (min, avg, max) = (509.305, 518.948, 527.197), stdev = 7.409
[info]   CI (99.9%): [490.417, 547.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1798.742 ±(99.9%) 118.726 B/op [Average]
[info]   (min, avg, max) = (1766.289, 1798.742, 1837.030), stdev = 30.833
[info]   CI (99.9%): [1680.016, 1917.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   528.257 ±(99.9%) 696.048 MB/sec [Average]
[info]   (min, avg, max) = (330.083, 528.257, 661.521), stdev = 180.761
[info]   CI (99.9%): [≈ 0, 1224.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1833.366 ±(99.9%) 2443.679 B/op [Average]
[info]   (min, avg, max) = (1132.357, 1833.366, 2349.078), stdev = 634.616
[info]   CI (99.9%): [≈ 0, 4277.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.059 ±(99.9%) 0.371 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.059, 0.222), stdev = 0.096
[info]   CI (99.9%): [≈ 0, 0.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.517
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 77.88% complete, ETA 00:20:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 285803.023 ops/s
[info] # Warmup Iteration   2: 496888.246 ops/s
[info] # Warmup Iteration   3: 503814.978 ops/s
[info] Iteration   1: 510182.429 ops/s
[info]                  ·gc.alloc.rate:      5.187 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 510096.268 ops/s
[info]                  ·gc.alloc.rate:      5.186 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 511905.592 ops/s
[info]                  ·gc.alloc.rate:      5.204 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 511934.182 ops/s
[info]                  ·gc.alloc.rate:      5.204 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 511587.807 ops/s
[info]                  ·gc.alloc.rate:      5.201 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   511141.255 ±(99.9%) 3562.469 ops/s [Average]
[info]   (min, avg, max) = (510096.268, 511141.255, 511934.182), stdev = 925.162
[info]   CI (99.9%): [507578.786, 514703.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   5.197 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (5.186, 5.197, 5.204), stdev = 0.009
[info]   CI (99.9%): [5.160, 5.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.001), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 78.12% complete, ETA 00:19:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6400.684 ops/s
[info] # Warmup Iteration   2: 66485.927 ops/s
[info] # Warmup Iteration   3: 73726.438 ops/s
[info] Iteration   1: 74747.960 ops/s
[info]                  ·gc.alloc.rate:               1334.519 MB/sec
[info]                  ·gc.alloc.rate.norm:          28098.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1302.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27434.286 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 72784.348 ops/s
[info]                  ·gc.alloc.rate:                   1298.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              28079.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28376.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.906 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 74462.727 ops/s
[info]                  ·gc.alloc.rate:                   1324.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              28003.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27905.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.880 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 74250.012 ops/s
[info]                  ·gc.alloc.rate:                   1321.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              28002.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28120.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.765 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 73884.046 ops/s
[info]                  ·gc.alloc.rate:               1335.099 MB/sec
[info]                  ·gc.alloc.rate.norm:          28440.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1333.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28401.831 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson":
[info]   74025.818 ±(99.9%) 2935.083 ops/s [Average]
[info]   (min, avg, max) = (72784.348, 74025.818, 74747.960), stdev = 762.232
[info]   CI (99.9%): [71090.736, 76960.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1322.838 ±(99.9%) 57.199 MB/sec [Average]
[info]   (min, avg, max) = (1298.584, 1322.838, 1335.099), stdev = 14.854
[info]   CI (99.9%): [1265.639, 1380.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   28124.972 ±(99.9%) 699.504 B/op [Average]
[info]   (min, avg, max) = (28002.383, 28124.972, 28440.466), stdev = 181.659
[info]   CI (99.9%): [27425.469, 28824.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1319.098 ±(99.9%) 45.801 MB/sec [Average]
[info]   (min, avg, max) = (1302.954, 1319.098, 1333.286), stdev = 11.894
[info]   CI (99.9%): [1273.297, 1364.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   28047.791 ±(99.9%) 1534.553 B/op [Average]
[info]   (min, avg, max) = (27434.286, 28047.791, 28401.831), stdev = 398.519
[info]   CI (99.9%): [26513.238, 29582.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.200 ±(99.9%) 1.458 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.200, 0.874), stdev = 0.379
[info]   CI (99.9%): [≈ 0, 1.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.310 ±(99.9%) 31.544 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.310, 18.906), stdev = 8.192
[info]   CI (99.9%): [≈ 0, 35.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 7.000), stdev = 0.837
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce
[info] # Run progress: 78.35% complete, ETA 00:19:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 199468.027 ops/s
[info] # Warmup Iteration   2: 2573129.311 ops/s
[info] # Warmup Iteration   3: 2850001.944 ops/s
[info] Iteration   1: 2855816.359 ops/s
[info]                  ·gc.alloc.rate:                   3683.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              2030.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3631.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2001.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 2888142.806 ops/s
[info]                  ·gc.alloc.rate:                   3715.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              2024.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3345.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1823.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 2896918.295 ops/s
[info]                  ·gc.alloc.rate:                   3742.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              2032.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3713.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2017.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 2838248.866 ops/s
[info]                  ·gc.alloc.rate:                   3642.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              2018.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3730.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2067.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 2904584.071 ops/s
[info]                  ·gc.alloc.rate:                   3738.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              2025.456 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3398.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1841.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce":
[info]   2876742.079 ±(99.9%) 109453.258 ops/s [Average]
[info]   (min, avg, max) = (2838248.866, 2876742.079, 2904584.071), stdev = 28424.664
[info]   CI (99.9%): [2767288.821, 2986195.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate":
[info]   3704.245 ±(99.9%) 160.407 MB/sec [Average]
[info]   (min, avg, max) = (3642.314, 3704.245, 3742.004), stdev = 41.657
[info]   CI (99.9%): [3543.838, 3864.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2026.299 ±(99.9%) 21.152 B/op [Average]
[info]   (min, avg, max) = (2018.782, 2026.299, 2032.950), stdev = 5.493
[info]   CI (99.9%): [2005.148, 2047.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3563.952 ±(99.9%) 692.780 MB/sec [Average]
[info]   (min, avg, max) = (3345.933, 3563.952, 3730.230), stdev = 179.913
[info]   CI (99.9%): [2871.172, 4256.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1950.173 ±(99.9%) 425.655 B/op [Average]
[info]   (min, avg, max) = (1823.032, 1950.173, 2067.510), stdev = 110.541
[info]   CI (99.9%): [1524.518, 2375.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (0.023, 0.027, 0.035), stdev = 0.006
[info]   CI (99.9%): [0.003, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.count":
[info]   53.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.600, 11.000), stdev = 0.548
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 14.000, 14.000), stdev = 0.001
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava
[info] # Run progress: 78.59% complete, ETA 00:19:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.703 ops/s
[info] # Warmup Iteration   2: 775476.637 ops/s
[info] # Warmup Iteration   3: 774502.320 ops/s
[info] Iteration   1: 810012.742 ops/s
[info]                  ·gc.alloc.rate:                   469.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     631.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 803575.691 ops/s
[info]                  ·gc.alloc.rate:                   481.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              943.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1274.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 809636.820 ops/s
[info]                  ·gc.alloc.rate:                   477.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              928.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     633.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 782327.990 ops/s
[info]                  ·gc.alloc.rate:               469.232 MB/sec
[info]                  ·gc.alloc.rate.norm:          943.983 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1312.020 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 788175.252 ops/s
[info]                  ·gc.alloc.rate:                   460.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              919.758 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     651.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava":
[info]   798745.699 ±(99.9%) 49092.581 ops/s [Average]
[info]   (min, avg, max) = (782327.990, 798745.699, 810012.742), stdev = 12749.187
[info]   CI (99.9%): [749653.118, 847838.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   471.725 ±(99.9%) 31.183 MB/sec [Average]
[info]   (min, avg, max) = (460.830, 471.725, 481.616), stdev = 8.098
[info]   CI (99.9%): [440.541, 502.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   929.446 ±(99.9%) 54.386 B/op [Average]
[info]   (min, avg, max) = (912.001, 929.446, 943.983), stdev = 14.124
[info]   CI (99.9%): [875.060, 983.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   456.095 ±(99.9%) 687.027 MB/sec [Average]
[info]   (min, avg, max) = (325.080, 456.095, 652.175), stdev = 178.419
[info]   CI (99.9%): [≈ 0, 1143.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   900.662 ±(99.9%) 1381.572 B/op [Average]
[info]   (min, avg, max) = (631.625, 900.662, 1312.020), stdev = 358.790
[info]   CI (99.9%): [≈ 0, 2282.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.022 ±(99.9%) 0.052 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.036), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.043 ±(99.9%) 0.103 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.043, 0.073), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 1.095
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala
[info] # Run progress: 78.82% complete, ETA 00:19:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18073.217 ops/s
[info] # Warmup Iteration   2: 181860.167 ops/s
[info] # Warmup Iteration   3: 321291.028 ops/s
[info] Iteration   1: 324800.041 ops/s
[info]                  ·gc.alloc.rate:               787.305 MB/sec
[info]                  ·gc.alloc.rate.norm:          3814.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3168.172 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 326329.699 ops/s
[info]                  ·gc.alloc.rate:                   778.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              3751.867 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4738.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 330819.718 ops/s
[info]                  ·gc.alloc.rate:                   782.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              3720.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3121.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 329510.197 ops/s
[info]                  ·gc.alloc.rate:               785.244 MB/sec
[info]                  ·gc.alloc.rate.norm:          3751.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3137.201 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 322026.464 ops/s
[info]                  ·gc.alloc.rate:                   763.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              3729.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4812.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.538 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.180 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala":
[info]   326697.224 ±(99.9%) 13676.313 ops/s [Average]
[info]   (min, avg, max) = (322026.464, 326697.224, 330819.718), stdev = 3551.695
[info]   CI (99.9%): [313020.911, 340373.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   779.136 ±(99.9%) 37.129 MB/sec [Average]
[info]   (min, avg, max) = (763.064, 779.136, 787.305), stdev = 9.642
[info]   CI (99.9%): [742.007, 816.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3753.527 ±(99.9%) 142.245 B/op [Average]
[info]   (min, avg, max) = (3720.415, 3753.527, 3814.939), stdev = 36.941
[info]   CI (99.9%): [3611.282, 3895.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   786.811 ±(99.9%) 691.968 MB/sec [Average]
[info]   (min, avg, max) = (653.829, 786.811, 984.593), stdev = 179.702
[info]   CI (99.9%): [94.843, 1478.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3795.600 ±(99.9%) 3446.565 B/op [Average]
[info]   (min, avg, max) = (3121.611, 3795.600, 4812.117), stdev = 895.062
[info]   CI (99.9%): [349.036, 7242.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.918 ±(99.9%) 7.793 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.918, 4.538), stdev = 2.024
[info]   CI (99.9%): [≈ 0, 8.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.486 ±(99.9%) 38.089 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.486, 22.180), stdev = 9.892
[info]   CI (99.9%): [≈ 0, 42.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 11.000), stdev = 1.517
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala
[info] # Run progress: 79.06% complete, ETA 00:18:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 279057.512 ops/s
[info] # Warmup Iteration   2: 639246.354 ops/s
[info] # Warmup Iteration   3: 744072.438 ops/s
[info] Iteration   1: 731775.484 ops/s
[info]                  ·gc.alloc.rate:                   678.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              1459.655 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1421.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 736647.494 ops/s
[info]                  ·gc.alloc.rate:               674.297 MB/sec
[info]                  ·gc.alloc.rate.norm:          1440.580 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1414.739 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 749892.429 ops/s
[info]                  ·gc.alloc.rate:               692.157 MB/sec
[info]                  ·gc.alloc.rate.norm:          1452.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1392.494 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 756313.255 ops/s
[info]                  ·gc.alloc.rate:                   678.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              1411.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1383.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 740841.861 ops/s
[info]                  ·gc.alloc.rate:                   670.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              1424.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1413.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala":
[info]   743094.105 ±(99.9%) 38299.184 ops/s [Average]
[info]   (min, avg, max) = (731775.484, 743094.105, 756313.255), stdev = 9946.176
[info]   CI (99.9%): [704794.921, 781393.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   678.886 ±(99.9%) 31.448 MB/sec [Average]
[info]   (min, avg, max) = (670.552, 678.886, 692.157), stdev = 8.167
[info]   CI (99.9%): [647.438, 710.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1437.879 ±(99.9%) 75.893 B/op [Average]
[info]   (min, avg, max) = (1411.891, 1437.879, 1459.655), stdev = 19.709
[info]   CI (99.9%): [1361.986, 1513.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   663.401 ±(99.9%) 6.999 MB/sec [Average]
[info]   (min, avg, max) = (661.054, 663.401, 665.467), stdev = 1.818
[info]   CI (99.9%): [656.402, 670.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1405.128 ±(99.9%) 62.526 B/op [Average]
[info]   (min, avg, max) = (1383.450, 1405.128, 1421.196), stdev = 16.238
[info]   CI (99.9%): [1342.603, 1467.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.144 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.090), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless
[info] # Run progress: 79.29% complete, ETA 00:18:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 713789.889 ops/s
[info] # Warmup Iteration   2: 2294689.299 ops/s
[info] # Warmup Iteration   3: 3271345.677 ops/s
[info] Iteration   1: 3284457.613 ops/s
[info]                  ·gc.alloc.rate:                   1978.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              948.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     956.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.287 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 3240652.919 ops/s
[info]                  ·gc.alloc.rate:                   1935.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              939.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     804.263 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 3334511.546 ops/s
[info]                  ·gc.alloc.rate:               2028.553 MB/sec
[info]                  ·gc.alloc.rate.norm:          957.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1991.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 939.787 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 3317203.238 ops/s
[info]                  ·gc.alloc.rate:                   2018.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              957.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2002.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     950.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 3339821.245 ops/s
[info]                  ·gc.alloc.rate:                   2033.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              958.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     949.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless":
[info]   3303329.312 ±(99.9%) 158543.572 ops/s [Average]
[info]   (min, avg, max) = (3240652.919, 3303329.312, 3339821.245), stdev = 41173.262
[info]   CI (99.9%): [3144785.740, 3461872.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate":
[info]   1998.753 ±(99.9%) 159.591 MB/sec [Average]
[info]   (min, avg, max) = (1935.341, 1998.753, 2033.199), stdev = 41.445
[info]   CI (99.9%): [1839.162, 2158.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm":
[info]   952.213 ±(99.9%) 30.930 B/op [Average]
[info]   (min, avg, max) = (939.884, 952.213, 958.081), stdev = 8.032
[info]   CI (99.9%): [921.284, 983.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   1931.957 ±(99.9%) 594.813 MB/sec [Average]
[info]   (min, avg, max) = (1656.081, 1931.957, 2014.459), stdev = 154.471
[info]   CI (99.9%): [1337.144, 2526.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   919.944 ±(99.9%) 250.049 B/op [Average]
[info]   (min, avg, max) = (804.263, 919.944, 956.326), stdev = 64.937
[info]   CI (99.9%): [669.894, 1169.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.587 ±(99.9%) 4.523 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.587, 2.685), stdev = 1.175
[info]   CI (99.9%): [≈ 0, 5.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.281 ±(99.9%) 2.167 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.281, 1.287), stdev = 0.563
[info]   CI (99.9%): [≈ 0, 2.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 13.000), stdev = 2.490
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump
[info] # Run progress: 79.53% complete, ETA 00:18:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1553209.031 ops/s
[info] # Warmup Iteration   2: 4105092.632 ops/s
[info] # Warmup Iteration   3: 7025412.715 ops/s
[info] Iteration   1: 7046926.733 ops/s
[info]                  ·gc.alloc.rate:                   778.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              173.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 7150987.526 ops/s
[info]                  ·gc.alloc.rate:               784.396 MB/sec
[info]                  ·gc.alloc.rate.norm:          172.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 145.953 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 7127152.038 ops/s
[info]                  ·gc.alloc.rate:               785.164 MB/sec
[info]                  ·gc.alloc.rate.norm:          173.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 146.661 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 7216798.937 ops/s
[info]                  ·gc.alloc.rate:                   789.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              172.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 7115422.440 ops/s
[info]                  ·gc.alloc.rate:                   786.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              173.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.543 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump":
[info]   7131457.535 ±(99.9%) 236475.420 ops/s [Average]
[info]   (min, avg, max) = (7046926.733, 7131457.535, 7216798.937), stdev = 61411.916
[info]   CI (99.9%): [6894982.114, 7367932.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   784.734 ±(99.9%) 15.370 MB/sec [Average]
[info]   (min, avg, max) = (778.399, 784.734, 789.236), stdev = 3.992
[info]   CI (99.9%): [769.364, 800.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   173.145 ±(99.9%) 2.918 B/op [Average]
[info]   (min, avg, max) = (172.117, 173.145, 173.962), stdev = 0.758
[info]   CI (99.9%): [170.227, 176.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   796.535 ±(99.9%) 697.829 MB/sec [Average]
[info]   (min, avg, max) = (663.162, 796.535, 998.888), stdev = 181.224
[info]   CI (99.9%): [98.706, 1494.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   175.951 ±(99.9%) 158.519 B/op [Average]
[info]   (min, avg, max) = (145.054, 175.951, 221.138), stdev = 41.167
[info]   CI (99.9%): [17.432, 334.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.504 ±(99.9%) 4.204 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.504, 2.456), stdev = 1.092
[info]   CI (99.9%): [≈ 0, 4.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.111 ±(99.9%) 0.930 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.111, 0.543), stdev = 0.241
[info]   CI (99.9%): [≈ 0, 1.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.304
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson
[info] # Run progress: 79.76% complete, ETA 00:18:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 775.692 ops/s
[info] # Warmup Iteration   2: 51487.340 ops/s
[info] # Warmup Iteration   3: 225195.942 ops/s
[info] Iteration   1: 237698.716 ops/s
[info]                  ·gc.alloc.rate:                   2120.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              14042.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13060.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.305 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 233569.671 ops/s
[info]                  ·gc.alloc.rate:                   2065.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              13916.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13376.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.629 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 235126.452 ops/s
[info]                  ·gc.alloc.rate:                   2081.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              13929.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1993.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13340.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 232498.886 ops/s
[info]                  ·gc.alloc.rate:                   2085.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              14115.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13568.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 234442.824 ops/s
[info]                  ·gc.alloc.rate:                   2102.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              14115.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13536.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.280 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson":
[info]   234667.310 ±(99.9%) 7545.076 ops/s [Average]
[info]   (min, avg, max) = (232498.886, 234667.310, 237698.716), stdev = 1959.432
[info]   CI (99.9%): [227122.234, 242212.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2091.236 ±(99.9%) 81.642 MB/sec [Average]
[info]   (min, avg, max) = (2065.748, 2091.236, 2120.881), stdev = 21.202
[info]   CI (99.9%): [2009.594, 2172.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   14023.824 ±(99.9%) 373.703 B/op [Average]
[info]   (min, avg, max) = (13916.438, 14023.824, 14115.786), stdev = 97.050
[info]   CI (99.9%): [13650.120, 14397.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1994.536 ±(99.9%) 65.525 MB/sec [Average]
[info]   (min, avg, max) = (1972.455, 1994.536, 2016.691), stdev = 17.017
[info]   CI (99.9%): [1929.011, 2060.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   13376.490 ±(99.9%) 779.989 B/op [Average]
[info]   (min, avg, max) = (13060.006, 13376.490, 13568.735), stdev = 202.561
[info]   CI (99.9%): [12596.501, 14156.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.379 ±(99.9%) 1.902 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.379, 1.103), stdev = 0.494
[info]   CI (99.9%): [≈ 0, 2.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.527 ±(99.9%) 12.632 B/op [Average]
[info]   (min, avg, max) = (0.141, 2.527, 7.305), stdev = 3.281
[info]   CI (99.9%): [≈ 0, 15.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 13.000), stdev = 1.789
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.00% complete, ETA 00:18:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 914321.920 ops/s
[info] # Warmup Iteration   2: 1442672.435 ops/s
[info] # Warmup Iteration   3: 1550786.405 ops/s
[info] Iteration   1: 1549405.417 ops/s
[info]                  ·gc.alloc.rate:      88.100 MB/sec
[info]                  ·gc.alloc.rate.norm: 89.486 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1520403.498 ops/s
[info]                  ·gc.alloc.rate:                   92.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     264.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.673 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.697 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1555881.811 ops/s
[info]                  ·gc.alloc.rate:      87.095 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.098 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1560973.198 ops/s
[info]                  ·gc.alloc.rate:      87.281 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1556172.366 ops/s
[info]                  ·gc.alloc.rate:                   94.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              95.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     258.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala":
[info]   1548567.258 ±(99.9%) 62658.732 ops/s [Average]
[info]   (min, avg, max) = (1520403.498, 1548567.258, 1560973.198), stdev = 16272.274
[info]   CI (99.9%): [1485908.526, 1611225.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   90.053 ±(99.9%) 13.828 MB/sec [Average]
[info]   (min, avg, max) = (87.095, 90.053, 94.851), stdev = 3.591
[info]   CI (99.9%): [76.225, 103.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   91.542 ±(99.9%) 16.056 B/op [Average]
[info]   (min, avg, max) = (88.000, 91.542, 96.201), stdev = 4.170
[info]   CI (99.9%): [75.486, 107.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   102.330 ±(99.9%) 539.557 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.330, 255.829), stdev = 140.121
[info]   CI (99.9%): [≈ 0, 641.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   104.706 ±(99.9%) 552.148 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 104.706, 264.809), stdev = 143.391
[info]   CI (99.9%): [≈ 0, 656.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.139 ±(99.9%) 1.151 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.139, 0.673), stdev = 0.299
[info]   CI (99.9%): [≈ 0, 1.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.144 ±(99.9%) 1.192 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.144, 0.697), stdev = 0.310
[info]   CI (99.9%): [≈ 0, 1.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.24% complete, ETA 00:17:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5828.558 ops/s
[info] # Warmup Iteration   2: 63576.776 ops/s
[info] # Warmup Iteration   3: 74354.256 ops/s
[info] Iteration   1: 75067.937 ops/s
[info]                  ·gc.alloc.rate:                   3289.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              68957.823 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3314.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69468.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.746 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 75261.989 ops/s
[info]                  ·gc.alloc.rate:                   3318.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              69388.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3017.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63096.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.435 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 74943.306 ops/s
[info]                  ·gc.alloc.rate:                   3319.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              69708.156 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3377.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70939.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.437 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 73483.654 ops/s
[info]                  ·gc.alloc.rate:                   3245.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              69512.856 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3052.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65379.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.446 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 74946.683 ops/s
[info]                  ·gc.alloc.rate:               3314.667 MB/sec
[info]                  ·gc.alloc.rate.norm:          69561.442 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3394.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 71242.107 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson":
[info]   74740.714 ±(99.9%) 2751.574 ops/s [Average]
[info]   (min, avg, max) = (73483.654, 74740.714, 75261.989), stdev = 714.575
[info]   CI (99.9%): [71989.141, 77492.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3297.617 ±(99.9%) 121.269 MB/sec [Average]
[info]   (min, avg, max) = (3245.611, 3297.617, 3319.296), stdev = 31.493
[info]   CI (99.9%): [3176.348, 3418.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   69425.688 ±(99.9%) 1099.494 B/op [Average]
[info]   (min, avg, max) = (68957.823, 69425.688, 69708.156), stdev = 285.535
[info]   CI (99.9%): [68326.194, 70525.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3231.446 ±(99.9%) 701.194 MB/sec [Average]
[info]   (min, avg, max) = (3017.727, 3231.446, 3394.752), stdev = 182.098
[info]   CI (99.9%): [2530.252, 3932.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   68025.076 ±(99.9%) 13912.730 B/op [Average]
[info]   (min, avg, max) = (63096.487, 68025.076, 71242.107), stdev = 3613.092
[info]   CI (99.9%): [54112.346, 81937.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.613 ±(99.9%) 2.547 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.613, 1.746), stdev = 0.661
[info]   CI (99.9%): [≈ 0, 3.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.000, 14.000), stdev = 1.225
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.47% complete, ETA 00:17:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 469882.322 ops/s
[info] # Warmup Iteration   2: 1501895.996 ops/s
[info] # Warmup Iteration   3: 1569456.532 ops/s
[info] Iteration   1: 1572337.142 ops/s
[info]                  ·gc.alloc.rate:                   849.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              850.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     981.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1570099.307 ops/s
[info]                  ·gc.alloc.rate:               845.624 MB/sec
[info]                  ·gc.alloc.rate.norm:          847.639 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 657.059 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 1560639.583 ops/s
[info]                  ·gc.alloc.rate:                   849.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     993.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1513723.696 ops/s
[info]                  ·gc.alloc.rate:                   818.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              851.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     684.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.852 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1520812.366 ops/s
[info]                  ·gc.alloc.rate:               815.925 MB/sec
[info]                  ·gc.alloc.rate.norm:          844.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 678.388 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala":
[info]   1547522.419 ±(99.9%) 108115.476 ops/s [Average]
[info]   (min, avg, max) = (1513723.696, 1547522.419, 1572337.142), stdev = 28077.246
[info]   CI (99.9%): [1439406.943, 1655637.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   835.800 ±(99.9%) 64.915 MB/sec [Average]
[info]   (min, avg, max) = (815.925, 835.800, 849.262), stdev = 16.858
[info]   CI (99.9%): [770.885, 900.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   849.989 ±(99.9%) 17.357 B/op [Average]
[info]   (min, avg, max) = (844.332, 849.989, 856.438), stdev = 4.508
[info]   CI (99.9%): [832.632, 867.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   787.149 ±(99.9%) 689.303 MB/sec [Average]
[info]   (min, avg, max) = (655.497, 787.149, 985.557), stdev = 179.010
[info]   CI (99.9%): [97.846, 1476.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   799.113 ±(99.9%) 664.930 B/op [Average]
[info]   (min, avg, max) = (657.059, 799.113, 993.922), stdev = 172.680
[info]   CI (99.9%): [134.183, 1464.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.791 ±(99.9%) 6.589 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.791, 3.852), stdev = 1.711
[info]   CI (99.9%): [≈ 0, 7.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.822 ±(99.9%) 6.852 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.822, 4.004), stdev = 1.779
[info]   CI (99.9%): [≈ 0, 7.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.600, 10.000), stdev = 3.435
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.71% complete, ETA 00:17:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 839773.190 ops/s
[info] # Warmup Iteration   2: 1658258.597 ops/s
[info] # Warmup Iteration   3: 1697675.615 ops/s
[info] Iteration   1: 1617720.510 ops/s
[info]                  ·gc.alloc.rate:               462.302 MB/sec
[info]                  ·gc.alloc.rate.norm:          449.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 320.786 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1597301.348 ops/s
[info]                  ·gc.alloc.rate:               484.221 MB/sec
[info]                  ·gc.alloc.rate.norm:          477.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 650.116 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 1686522.664 ops/s
[info]                  ·gc.alloc.rate:               478.935 MB/sec
[info]                  ·gc.alloc.rate.norm:          446.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 308.034 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1621625.746 ops/s
[info]                  ·gc.alloc.rate:                   464.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              451.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     321.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1610302.403 ops/s
[info]                  ·gc.alloc.rate:                   469.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              459.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     646.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala":
[info]   1626694.534 ±(99.9%) 133644.144 ops/s [Average]
[info]   (min, avg, max) = (1597301.348, 1626694.534, 1686522.664), stdev = 34706.960
[info]   CI (99.9%): [1493050.390, 1760338.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   472.044 ±(99.9%) 35.862 MB/sec [Average]
[info]   (min, avg, max) = (462.302, 472.044, 484.221), stdev = 9.313
[info]   CI (99.9%): [436.182, 507.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   456.814 ±(99.9%) 47.017 B/op [Average]
[info]   (min, avg, max) = (446.951, 456.814, 477.055), stdev = 12.210
[info]   CI (99.9%): [409.797, 503.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   462.465 ±(99.9%) 697.327 MB/sec [Average]
[info]   (min, avg, max) = (329.819, 462.465, 661.800), stdev = 181.094
[info]   CI (99.9%): [≈ 0, 1159.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   449.349 ±(99.9%) 700.211 B/op [Average]
[info]   (min, avg, max) = (308.034, 449.349, 650.116), stdev = 181.843
[info]   CI (99.9%): [≈ 0, 1149.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.040), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 1.095
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 80.94% complete, ETA 00:17:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 838304.722 ops/s
[info] # Warmup Iteration   2: 1702307.415 ops/s
[info] # Warmup Iteration   3: 1805360.639 ops/s
[info] Iteration   1: 1804943.106 ops/s
[info]                  ·gc.alloc.rate:      18.350 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1725668.747 ops/s
[info]                  ·gc.alloc.rate:               29.762 MB/sec
[info]                  ·gc.alloc.rate.norm:          27.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 233.283 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1798857.804 ops/s
[info]                  ·gc.alloc.rate:      18.288 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1743507.643 ops/s
[info]                  ·gc.alloc.rate:      19.944 MB/sec
[info]                  ·gc.alloc.rate.norm: 18.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1754829.776 ops/s
[info]                  ·gc.alloc.rate:      17.896 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.050 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   1765561.415 ±(99.9%) 134118.113 ops/s [Average]
[info]   (min, avg, max) = (1725668.747, 1765561.415, 1804943.106), stdev = 34830.048
[info]   CI (99.9%): [1631443.302, 1899679.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   20.848 ±(99.9%) 19.424 MB/sec [Average]
[info]   (min, avg, max) = (17.896, 20.848, 29.762), stdev = 5.044
[info]   CI (99.9%): [1.424, 40.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   18.638 ±(99.9%) 18.589 B/op [Average]
[info]   (min, avg, max) = (16.000, 18.638, 27.135), stdev = 4.828
[info]   CI (99.9%): [0.049, 37.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   51.172 ±(99.9%) 440.608 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.172, 255.861), stdev = 114.425
[info]   CI (99.9%): [≈ 0, 491.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   46.657 ±(99.9%) 401.727 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 46.657, 233.283), stdev = 104.327
[info]   CI (99.9%): [≈ 0, 448.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.18% complete, ETA 00:17:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13942.636 ops/s
[info] # Warmup Iteration   2: 48614.596 ops/s
[info] # Warmup Iteration   3: 50242.830 ops/s
[info] Iteration   1: 51593.375 ops/s
[info]                  ·gc.alloc.rate:                   2210.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              67429.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2289.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69852.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.561 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 52655.897 ops/s
[info]                  ·gc.alloc.rate:                   2259.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              67523.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58676.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.489 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 51462.449 ops/s
[info]                  ·gc.alloc.rate:                   2236.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              68397.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2311.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70681.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.183 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 51299.304 ops/s
[info]                  ·gc.alloc.rate:                   2217.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              68026.307 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2000.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61350.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.277 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 50460.334 ops/s
[info]                  ·gc.alloc.rate:               2196.617 MB/sec
[info]                  ·gc.alloc.rate.norm:          68510.614 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2351.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 73334.040 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson":
[info]   51494.272 ±(99.9%) 3024.195 ops/s [Average]
[info]   (min, avg, max) = (50460.334, 51494.272, 52655.897), stdev = 785.374
[info]   CI (99.9%): [48470.077, 54518.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2224.083 ±(99.9%) 93.892 MB/sec [Average]
[info]   (min, avg, max) = (2196.617, 2224.083, 2259.339), stdev = 24.383
[info]   CI (99.9%): [2130.191, 2317.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   67977.284 ±(99.9%) 1895.795 B/op [Average]
[info]   (min, avg, max) = (67429.327, 67977.284, 68510.614), stdev = 492.332
[info]   CI (99.9%): [66081.489, 69873.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2183.112 ±(99.9%) 714.848 MB/sec [Average]
[info]   (min, avg, max) = (1963.338, 2183.112, 2351.268), stdev = 185.644
[info]   CI (99.9%): [1468.264, 2897.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   66779.064 ±(99.9%) 24562.864 B/op [Average]
[info]   (min, avg, max) = (58676.771, 66779.064, 73334.040), stdev = 6378.898
[info]   CI (99.9%): [42216.200, 91341.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.279 ±(99.9%) 1.915 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.279, 1.166), stdev = 0.497
[info]   CI (99.9%): [≈ 0, 2.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.502 ±(99.9%) 58.434 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.502, 35.561), stdev = 15.175
[info]   CI (99.9%): [≈ 0, 66.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.800, 12.000), stdev = 1.924
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.41% complete, ETA 00:16:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123555.960 ops/s
[info] # Warmup Iteration   2: 254324.358 ops/s
[info] # Warmup Iteration   3: 272472.144 ops/s
[info] Iteration   1: 270029.548 ops/s
[info]                  ·gc.alloc.rate:                   1085.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              6326.382 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5788.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 265942.898 ops/s
[info]                  ·gc.alloc.rate:                   1062.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              6286.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5886.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.246 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 268878.514 ops/s
[info]                  ·gc.alloc.rate:                   1085.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              6353.745 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7751.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.375 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 268755.203 ops/s
[info]                  ·gc.alloc.rate:               1083.560 MB/sec
[info]                  ·gc.alloc.rate.norm:          6343.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5793.000 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 273543.435 ops/s
[info]                  ·gc.alloc.rate:               1109.844 MB/sec
[info]                  ·gc.alloc.rate.norm:          6384.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5691.596 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala":
[info]   269429.920 ±(99.9%) 10580.371 ops/s [Average]
[info]   (min, avg, max) = (265942.898, 269429.920, 273543.435), stdev = 2747.689
[info]   CI (99.9%): [258849.549, 280010.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1085.359 ±(99.9%) 64.706 MB/sec [Average]
[info]   (min, avg, max) = (1062.409, 1085.359, 1109.844), stdev = 16.804
[info]   CI (99.9%): [1020.653, 1150.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6338.810 ±(99.9%) 139.349 B/op [Average]
[info]   (min, avg, max) = (6286.346, 6338.810, 6384.532), stdev = 36.188
[info]   CI (99.9%): [6199.461, 6478.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1058.277 ±(99.9%) 572.822 MB/sec [Average]
[info]   (min, avg, max) = (989.389, 1058.277, 1324.354), stdev = 148.760
[info]   CI (99.9%): [485.455, 1631.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6182.305 ±(99.9%) 3388.966 B/op [Average]
[info]   (min, avg, max) = (5691.596, 6182.305, 7751.863), stdev = 880.104
[info]   CI (99.9%): [2793.339, 9571.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.677 ±(99.9%) 5.669 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.677, 3.310), stdev = 1.472
[info]   CI (99.9%): [≈ 0, 6.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.961 ±(99.9%) 33.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.961, 19.375), stdev = 8.617
[info]   CI (99.9%): [≈ 0, 37.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 8.000), stdev = 2.191
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.65% complete, ETA 00:16:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2382.047 ops/s
[info] # Warmup Iteration   2: 32646.688 ops/s
[info] # Warmup Iteration   3: 38924.302 ops/s
[info] Iteration   1: 39185.050 ops/s
[info]                  ·gc.alloc.rate:                   1944.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              78109.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78743.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.820 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 39595.818 ops/s
[info]                  ·gc.alloc.rate:                   1950.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              77509.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65494.627 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.827 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 39012.006 ops/s
[info]                  ·gc.alloc.rate:               1956.228 MB/sec
[info]                  ·gc.alloc.rate.norm:          78907.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1992.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 80355.800 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 39530.235 ops/s
[info]                  ·gc.alloc.rate:                   1982.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              78913.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2007.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79937.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.829 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 39255.451 ops/s
[info]                  ·gc.alloc.rate:               1955.708 MB/sec
[info]                  ·gc.alloc.rate.norm:          78407.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1682.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 67463.971 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson":
[info]   39315.712 ±(99.9%) 938.130 ops/s [Average]
[info]   (min, avg, max) = (39012.006, 39315.712, 39595.818), stdev = 243.629
[info]   CI (99.9%): [38377.582, 40253.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1957.854 ±(99.9%) 55.049 MB/sec [Average]
[info]   (min, avg, max) = (1944.688, 1957.854, 1982.030), stdev = 14.296
[info]   CI (99.9%): [1902.805, 2012.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   78369.355 ±(99.9%) 2273.722 B/op [Average]
[info]   (min, avg, max) = (77509.439, 78369.355, 78913.895), stdev = 590.478
[info]   CI (99.9%): [76095.633, 80643.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1858.273 ±(99.9%) 682.400 MB/sec [Average]
[info]   (min, avg, max) = (1648.249, 1858.273, 2007.739), stdev = 177.217
[info]   CI (99.9%): [1175.872, 2540.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   74399.082 ±(99.9%) 28060.579 B/op [Average]
[info]   (min, avg, max) = (65494.627, 74399.082, 80355.800), stdev = 7287.243
[info]   CI (99.9%): [46338.503, 102459.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.207 ±(99.9%) 1.690 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.207, 0.991), stdev = 0.439
[info]   CI (99.9%): [≈ 0, 1.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.295 ±(99.9%) 67.878 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.295, 39.820), stdev = 17.628
[info]   CI (99.9%): [≈ 0, 76.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 9.000), stdev = 1.414
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.88% complete, ETA 00:16:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 38361.435 ops/s
[info] # Warmup Iteration   2: 105632.891 ops/s
[info] # Warmup Iteration   3: 110032.522 ops/s
[info] Iteration   1: 112259.113 ops/s
[info]                  ·gc.alloc.rate:                   1141.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              16000.507 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18398.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.584 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 113117.653 ops/s
[info]                  ·gc.alloc.rate:                   1132.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              15752.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13727.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.896 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 113549.261 ops/s
[info]                  ·gc.alloc.rate:                   1136.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              15740.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13646.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.696 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 112291.622 ops/s
[info]                  ·gc.alloc.rate:                   1134.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              15906.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18299.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.459 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 113870.824 ops/s
[info]                  ·gc.alloc.rate:               1151.230 MB/sec
[info]                  ·gc.alloc.rate.norm:          15911.362 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13543.616 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala":
[info]   113017.695 ±(99.9%) 2805.302 ops/s [Average]
[info]   (min, avg, max) = (112259.113, 113017.695, 113870.824), stdev = 728.528
[info]   CI (99.9%): [110212.393, 115822.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1139.150 ±(99.9%) 28.932 MB/sec [Average]
[info]   (min, avg, max) = (1132.193, 1139.150, 1151.230), stdev = 7.514
[info]   CI (99.9%): [1110.218, 1168.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15862.242 ±(99.9%) 432.804 B/op [Average]
[info]   (min, avg, max) = (15740.167, 15862.242, 16000.507), stdev = 112.398
[info]   CI (99.9%): [15429.438, 16295.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1113.913 ±(99.9%) 685.982 MB/sec [Average]
[info]   (min, avg, max) = (979.917, 1113.913, 1312.346), stdev = 178.147
[info]   CI (99.9%): [427.931, 1799.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   15523.144 ±(99.9%) 9937.857 B/op [Average]
[info]   (min, avg, max) = (13543.616, 15523.144, 18398.692), stdev = 2580.830
[info]   CI (99.9%): [5585.287, 25461.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 5.303 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.858, 3.227), stdev = 1.377
[info]   CI (99.9%): [≈ 0, 6.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.927 ±(99.9%) 73.769 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.927, 44.896), stdev = 19.158
[info]   CI (99.9%): [≈ 0, 85.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 13.000), stdev = 4.099
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.12% complete, ETA 00:16:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 167893.036 ops/s
[info] # Warmup Iteration   2: 328955.742 ops/s
[info] # Warmup Iteration   3: 333225.117 ops/s
[info] Iteration   1: 334714.182 ops/s
[info]                  ·gc.alloc.rate:                   463.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              2178.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1550.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 318857.082 ops/s
[info]                  ·gc.alloc.rate:                   448.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              2214.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3256.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 336482.981 ops/s
[info]                  ·gc.alloc.rate:               464.614 MB/sec
[info]                  ·gc.alloc.rate.norm:          2172.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1543.893 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 336909.257 ops/s
[info]                  ·gc.alloc.rate:                   464.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              2169.718 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1543.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 335716.600 ops/s
[info]                  ·gc.alloc.rate:                   469.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              2199.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3101.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala":
[info]   332536.021 ±(99.9%) 29619.783 ops/s [Average]
[info]   (min, avg, max) = (318857.082, 332536.021, 336909.257), stdev = 7692.164
[info]   CI (99.9%): [302916.237, 362155.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   462.058 ±(99.9%) 30.132 MB/sec [Average]
[info]   (min, avg, max) = (448.647, 462.058, 469.190), stdev = 7.825
[info]   CI (99.9%): [431.926, 492.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2186.927 ±(99.9%) 73.807 B/op [Average]
[info]   (min, avg, max) = (2169.718, 2186.927, 2214.280), stdev = 19.167
[info]   CI (99.9%): [2113.120, 2260.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   462.358 ±(99.9%) 697.307 MB/sec [Average]
[info]   (min, avg, max) = (329.739, 462.358, 661.556), stdev = 181.088
[info]   CI (99.9%): [≈ 0, 1159.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2199.166 ±(99.9%) 3450.786 B/op [Average]
[info]   (min, avg, max) = (1543.488, 2199.166, 3256.917), stdev = 896.158
[info]   CI (99.9%): [≈ 0, 5649.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.100 ±(99.9%) 0.280 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.100, 0.206), stdev = 0.073
[info]   CI (99.9%): [≈ 0, 0.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.414
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 82.35% complete, ETA 00:15:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 194183.897 ops/s
[info] # Warmup Iteration   2: 357715.914 ops/s
[info] # Warmup Iteration   3: 362669.173 ops/s
[info] Iteration   1: 365981.940 ops/s
[info]                  ·gc.alloc.rate:      3.721 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 366292.787 ops/s
[info]                  ·gc.alloc.rate:      3.724 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 366399.692 ops/s
[info]                  ·gc.alloc.rate:      3.725 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 366297.509 ops/s
[info]                  ·gc.alloc.rate:      3.724 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 366159.999 ops/s
[info]                  ·gc.alloc.rate:      3.723 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   366226.385 ±(99.9%) 619.892 ops/s [Average]
[info]   (min, avg, max) = (365981.940, 366226.385, 366399.692), stdev = 160.984
[info]   CI (99.9%): [365606.493, 366846.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   3.723 ±(99.9%) 0.006 MB/sec [Average]
[info]   (min, avg, max) = (3.721, 3.723, 3.725), stdev = 0.002
[info]   CI (99.9%): [3.717, 3.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.002), stdev = 0.001
[info]   CI (99.9%): [16.001, 16.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 82.59% complete, ETA 00:15:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10509.691 ops/s
[info] # Warmup Iteration   2: 51096.202 ops/s
[info] # Warmup Iteration   3: 55845.120 ops/s
[info] Iteration   1: 57175.068 ops/s
[info]                  ·gc.alloc.rate:                   1379.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              37973.772 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36096.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.719 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 57661.247 ops/s
[info]                  ·gc.alloc.rate:                   1385.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              37824.823 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44764.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.559 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 124.435 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 57974.948 ops/s
[info]                  ·gc.alloc.rate:                   1396.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              37906.121 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35335.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.956 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 55943.035 ops/s
[info]                  ·gc.alloc.rate:               1361.858 MB/sec
[info]                  ·gc.alloc.rate.norm:          38312.983 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1303.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36676.733 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   5: 57001.676 ops/s
[info]                  ·gc.alloc.rate:                   1387.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              38295.320 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36178.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.575 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson":
[info]   57151.195 ±(99.9%) 2995.901 ops/s [Average]
[info]   (min, avg, max) = (55943.035, 57151.195, 57974.948), stdev = 778.026
[info]   CI (99.9%): [54155.293, 60147.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1382.118 ±(99.9%) 49.358 MB/sec [Average]
[info]   (min, avg, max) = (1361.858, 1382.118, 1396.359), stdev = 12.818
[info]   CI (99.9%): [1332.760, 1431.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   38062.604 ±(99.9%) 873.349 B/op [Average]
[info]   (min, avg, max) = (37824.823, 38062.604, 38312.983), stdev = 226.806
[info]   CI (99.9%): [37189.255, 38935.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1373.434 ±(99.9%) 574.179 MB/sec [Average]
[info]   (min, avg, max) = (1301.680, 1373.434, 1640.070), stdev = 149.112
[info]   CI (99.9%): [799.255, 1947.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   37810.617 ±(99.9%) 15083.126 B/op [Average]
[info]   (min, avg, max) = (35335.912, 37810.617, 44764.940), stdev = 3917.040
[info]   CI (99.9%): [22727.491, 52893.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.958 ±(99.9%) 7.755 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.958, 4.559), stdev = 2.014
[info]   CI (99.9%): [≈ 0, 8.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   26.137 ±(99.9%) 211.675 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 26.137, 124.435), stdev = 54.971
[info]   CI (99.9%): [≈ 0, 237.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.400, 14.000), stdev = 4.037
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 82.82% complete, ETA 00:15:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11416.052 ops/s
[info] # Warmup Iteration   2: 66009.261 ops/s
[info] # Warmup Iteration   3: 68788.101 ops/s
[info] Iteration   1: 72422.621 ops/s
[info]                  ·gc.alloc.rate:                   1690.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              36733.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35886.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.290 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.477 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 72408.316 ops/s
[info]                  ·gc.alloc.rate:                   1690.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              36746.791 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35705.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.144 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 73477.514 ops/s
[info]                  ·gc.alloc.rate:                   1705.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              36522.558 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35171.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.567 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 72643.018 ops/s
[info]                  ·gc.alloc.rate:               1713.848 MB/sec
[info]                  ·gc.alloc.rate.norm:          37132.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1650.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35755.437 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 73510.131 ops/s
[info]                  ·gc.alloc.rate:               1733.909 MB/sec
[info]                  ·gc.alloc.rate.norm:          37122.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1661.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35577.221 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce":
[info]   72892.320 ±(99.9%) 2144.960 ops/s [Average]
[info]   (min, avg, max) = (72408.316, 72892.320, 73510.131), stdev = 557.039
[info]   CI (99.9%): [70747.360, 75037.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1706.829 ±(99.9%) 69.656 MB/sec [Average]
[info]   (min, avg, max) = (1690.621, 1706.829, 1733.909), stdev = 18.090
[info]   CI (99.9%): [1637.172, 1776.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   36851.678 ±(99.9%) 1028.764 B/op [Average]
[info]   (min, avg, max) = (36522.558, 36851.678, 37132.347), stdev = 267.167
[info]   CI (99.9%): [35822.914, 37880.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1649.688 ±(99.9%) 30.840 MB/sec [Average]
[info]   (min, avg, max) = (1642.018, 1649.688, 1661.717), stdev = 8.009
[info]   CI (99.9%): [1618.848, 1680.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   35619.327 ±(99.9%) 1053.682 B/op [Average]
[info]   (min, avg, max) = (35171.792, 35619.327, 35886.737), stdev = 273.638
[info]   CI (99.9%): [34565.644, 36673.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.766 ±(99.9%) 5.464 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.766, 3.290), stdev = 1.419
[info]   CI (99.9%): [≈ 0, 6.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   16.638 ±(99.9%) 118.746 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16.638, 71.477), stdev = 30.838
[info]   CI (99.9%): [≈ 0, 135.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 14.000), stdev = 3.209
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.06% complete, ETA 00:15:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18437.751 ops/s
[info] # Warmup Iteration   2: 108581.043 ops/s
[info] # Warmup Iteration   3: 124663.947 ops/s
[info] Iteration   1: 128600.365 ops/s
[info]                  ·gc.alloc.rate:               884.805 MB/sec
[info]                  ·gc.alloc.rate.norm:          10825.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:      980.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12000.403 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 132257.704 ops/s
[info]                  ·gc.alloc.rate:                   907.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              10799.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7792.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.248 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 130958.622 ops/s
[info]                  ·gc.alloc.rate:                   901.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              10831.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11824.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.500 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 131824.734 ops/s
[info]                  ·gc.alloc.rate:                   903.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              10786.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11738.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.517 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.932 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 128787.476 ops/s
[info]                  ·gc.alloc.rate:                   882.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              10783.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7961.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.509 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   130485.780 ±(99.9%) 6556.030 ops/s [Average]
[info]   (min, avg, max) = (128600.365, 130485.780, 132257.704), stdev = 1702.580
[info]   CI (99.9%): [123929.750, 137041.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   895.884 ±(99.9%) 44.125 MB/sec [Average]
[info]   (min, avg, max) = (882.421, 895.884, 907.525), stdev = 11.459
[info]   CI (99.9%): [851.759, 940.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   10805.199 ±(99.9%) 85.379 B/op [Average]
[info]   (min, avg, max) = (10783.286, 10805.199, 10831.346), stdev = 22.173
[info]   CI (99.9%): [10719.820, 10890.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   850.854 ±(99.9%) 694.952 MB/sec [Average]
[info]   (min, avg, max) = (651.509, 850.854, 983.868), stdev = 180.477
[info]   CI (99.9%): [155.902, 1545.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   10263.567 ±(99.9%) 8400.442 B/op [Average]
[info]   (min, avg, max) = (7792.303, 10263.567, 12000.403), stdev = 2181.568
[info]   CI (99.9%): [1863.125, 18664.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.924 ±(99.9%) 7.735 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.924, 4.517), stdev = 2.009
[info]   CI (99.9%): [≈ 0, 8.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.038 ±(99.9%) 92.337 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.038, 53.932), stdev = 23.980
[info]   CI (99.9%): [≈ 0, 103.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.800, 11.000), stdev = 3.347
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.29% complete, ETA 00:15:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67485.786 ops/s
[info] # Warmup Iteration   2: 238117.024 ops/s
[info] # Warmup Iteration   3: 260034.639 ops/s
[info] Iteration   1: 253300.839 ops/s
[info]                  ·gc.alloc.rate:                   1088.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              6763.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8226.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 257722.702 ops/s
[info]                  ·gc.alloc.rate:               1094.029 MB/sec
[info]                  ·gc.alloc.rate.norm:          6680.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:      994.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6075.535 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 261460.109 ops/s
[info]                  ·gc.alloc.rate:                   1102.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              6639.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5982.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.923 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 261816.854 ops/s
[info]                  ·gc.alloc.rate:               1109.798 MB/sec
[info]                  ·gc.alloc.rate.norm:          6670.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5950.038 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 261728.488 ops/s
[info]                  ·gc.alloc.rate:               1123.346 MB/sec
[info]                  ·gc.alloc.rate.norm:          6754.630 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7931.831 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   259205.799 ±(99.9%) 14321.551 ops/s [Average]
[info]   (min, avg, max) = (253300.839, 259205.799, 261816.854), stdev = 3719.261
[info]   CI (99.9%): [244884.248, 273527.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1103.724 ±(99.9%) 52.656 MB/sec [Average]
[info]   (min, avg, max) = (1088.511, 1103.724, 1123.346), stdev = 13.675
[info]   CI (99.9%): [1051.068, 1156.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6701.743 ±(99.9%) 210.310 B/op [Average]
[info]   (min, avg, max) = (6639.034, 6701.743, 6763.432), stdev = 54.617
[info]   CI (99.9%): [6491.434, 6912.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1124.344 ±(99.9%) 693.184 MB/sec [Average]
[info]   (min, avg, max) = (989.901, 1124.344, 1323.926), stdev = 180.018
[info]   CI (99.9%): [431.160, 1817.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6833.229 ±(99.9%) 4400.950 B/op [Average]
[info]   (min, avg, max) = (5950.038, 6833.229, 8226.179), stdev = 1142.913
[info]   CI (99.9%): [2432.278, 11234.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.670 ±(99.9%) 5.682 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.670, 3.310), stdev = 1.476
[info]   CI (99.9%): [≈ 0, 6.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.036 ±(99.9%) 34.201 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.036, 19.923), stdev = 8.882
[info]   CI (99.9%): [≈ 0, 38.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 11.000), stdev = 2.550
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.53% complete, ETA 00:14:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1087.286 ops/s
[info] # Warmup Iteration   2: 23665.679 ops/s
[info] # Warmup Iteration   3: 27771.210 ops/s
[info] Iteration   1: 27041.296 ops/s
[info]                  ·gc.alloc.rate:                   1381.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              80420.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75911.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.116 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 27674.950 ops/s
[info]                  ·gc.alloc.rate:                   1417.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              80600.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74744.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.205 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.498 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 27315.996 ops/s
[info]                  ·gc.alloc.rate:                   1379.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              79492.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76033.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.194 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 27545.717 ops/s
[info]                  ·gc.alloc.rate:                   1398.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              79897.767 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75664.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.379 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 27877.007 ops/s
[info]                  ·gc.alloc.rate:                   1418.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              80069.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75102.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.876 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson":
[info]   27490.993 ±(99.9%) 1245.809 ops/s [Average]
[info]   (min, avg, max) = (27041.296, 27490.993, 27877.007), stdev = 323.533
[info]   CI (99.9%): [26245.184, 28736.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1399.131 ±(99.9%) 71.780 MB/sec [Average]
[info]   (min, avg, max) = (1379.553, 1399.131, 1418.349), stdev = 18.641
[info]   CI (99.9%): [1327.351, 1470.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   80096.170 ±(99.9%) 1683.587 B/op [Average]
[info]   (min, avg, max) = (79492.407, 80096.170, 80600.706), stdev = 437.222
[info]   CI (99.9%): [78412.584, 81779.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1318.616 ±(99.9%) 38.083 MB/sec [Average]
[info]   (min, avg, max) = (1304.367, 1318.616, 1330.370), stdev = 9.890
[info]   CI (99.9%): [1280.533, 1356.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   75491.310 ±(99.9%) 2118.157 B/op [Average]
[info]   (min, avg, max) = (74744.046, 75491.310, 76033.274), stdev = 550.079
[info]   CI (99.9%): [73373.153, 77609.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.358 ±(99.9%) 1.847 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.358, 1.205), stdev = 0.480
[info]   CI (99.9%): [≈ 0, 2.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   20.412 ±(99.9%) 104.920 B/op [Average]
[info]   (min, avg, max) = (2.379, 20.412, 68.498), stdev = 27.247
[info]   CI (99.9%): [≈ 0, 125.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 8.000), stdev = 1.140
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.76% complete, ETA 00:14:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42808.710 ops/s
[info] # Warmup Iteration   2: 172462.816 ops/s
[info] # Warmup Iteration   3: 180475.655 ops/s
[info] Iteration   1: 173477.385 ops/s
[info]                  ·gc.alloc.rate:                   995.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              9028.626 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8914.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 175179.790 ops/s
[info]                  ·gc.alloc.rate:                   992.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              8920.907 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8848.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.561 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 180180.169 ops/s
[info]                  ·gc.alloc.rate:                   1023.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              8940.769 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8620.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 180806.804 ops/s
[info]                  ·gc.alloc.rate:                   1033.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              8998.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8547.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.805 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 179810.478 ops/s
[info]                  ·gc.alloc.rate:                   1018.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              8918.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8571.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   177890.925 ±(99.9%) 12808.422 ops/s [Average]
[info]   (min, avg, max) = (173477.385, 177890.925, 180806.804), stdev = 3326.307
[info]   CI (99.9%): [165082.503, 190699.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1012.891 ±(99.9%) 69.133 MB/sec [Average]
[info]   (min, avg, max) = (992.935, 1012.891, 1033.714), stdev = 17.954
[info]   CI (99.9%): [943.758, 1082.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   8961.334 ±(99.9%) 190.592 B/op [Average]
[info]   (min, avg, max) = (8918.219, 8961.334, 9028.626), stdev = 49.496
[info]   CI (99.9%): [8770.742, 9151.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   983.142 ±(99.9%) 11.207 MB/sec [Average]
[info]   (min, avg, max) = (979.267, 983.142, 986.911), stdev = 2.910
[info]   CI (99.9%): [971.935, 994.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   8700.396 ±(99.9%) 650.494 B/op [Average]
[info]   (min, avg, max) = (8547.213, 8700.396, 8914.304), stdev = 168.931
[info]   CI (99.9%): [8049.903, 9350.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.870 ±(99.9%) 6.317 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.870, 3.789), stdev = 1.641
[info]   CI (99.9%): [≈ 0, 7.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.604 ±(99.9%) 55.170 B/op [Average]
[info]   (min, avg, max) = (0.182, 7.604, 33.095), stdev = 14.328
[info]   CI (99.9%): [≈ 0, 62.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 3.286
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.00% complete, ETA 00:14:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 212483.113 ops/s
[info] # Warmup Iteration   2: 448927.270 ops/s
[info] # Warmup Iteration   3: 468696.766 ops/s
[info] Iteration   1: 461257.615 ops/s
[info]                  ·gc.alloc.rate:                   1389.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              4740.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5652.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.665 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.092 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 455768.956 ops/s
[info]                  ·gc.alloc.rate:                   1373.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              4744.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4566.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.876 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 457782.406 ops/s
[info]                  ·gc.alloc.rate:               1378.545 MB/sec
[info]                  ·gc.alloc.rate.norm:          4739.152 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1317.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4527.770 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 464875.899 ops/s
[info]                  ·gc.alloc.rate:                   1413.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              4783.964 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4465.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 475554.311 ops/s
[info]                  ·gc.alloc.rate:                   1444.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              4782.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4383.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   463047.838 ±(99.9%) 30053.868 ops/s [Average]
[info]   (min, avg, max) = (455768.956, 463047.838, 475554.311), stdev = 7804.894
[info]   CI (99.9%): [432993.970, 493101.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1399.939 ±(99.9%) 113.111 MB/sec [Average]
[info]   (min, avg, max) = (1373.858, 1399.939, 1444.956), stdev = 29.375
[info]   CI (99.9%): [1286.828, 1513.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   4757.876 ±(99.9%) 88.595 B/op [Average]
[info]   (min, avg, max) = (4739.152, 4757.876, 4783.964), stdev = 23.008
[info]   CI (99.9%): [4669.281, 4846.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1387.975 ±(99.9%) 578.786 MB/sec [Average]
[info]   (min, avg, max) = (1317.057, 1387.975, 1656.804), stdev = 150.309
[info]   CI (99.9%): [809.188, 1966.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4719.275 ±(99.9%) 2027.236 B/op [Average]
[info]   (min, avg, max) = (4383.920, 4719.275, 5652.927), stdev = 526.467
[info]   CI (99.9%): [2692.039, 6746.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.712 ±(99.9%) 4.416 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.712, 2.665), stdev = 1.147
[info]   CI (99.9%): [≈ 0, 5.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.435 ±(99.9%) 15.075 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.435, 9.092), stdev = 3.915
[info]   CI (99.9%): [≈ 0, 17.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 16.000), stdev = 4.827
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 84.24% complete, ETA 00:14:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 200927.066 ops/s
[info] # Warmup Iteration   2: 485381.678 ops/s
[info] # Warmup Iteration   3: 517385.481 ops/s
[info] Iteration   1: 523838.924 ops/s
[info]                  ·gc.alloc.rate:                   989.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              2973.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2980.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 520255.699 ops/s
[info]                  ·gc.alloc.rate:                   982.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              2973.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3005.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 526752.432 ops/s
[info]                  ·gc.alloc.rate:                   998.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              2982.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2972.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.392 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 526995.696 ops/s
[info]                  ·gc.alloc.rate:                   993.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              2968.171 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2958.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 528109.987 ops/s
[info]                  ·gc.alloc.rate:                   993.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              2961.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2948.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   525190.548 ±(99.9%) 12237.657 ops/s [Average]
[info]   (min, avg, max) = (520255.699, 525190.548, 528109.987), stdev = 3178.081
[info]   CI (99.9%): [512952.891, 537428.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   991.703 ±(99.9%) 22.267 MB/sec [Average]
[info]   (min, avg, max) = (982.903, 991.703, 998.270), stdev = 5.783
[info]   CI (99.9%): [969.435, 1013.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2971.802 ±(99.9%) 29.594 B/op [Average]
[info]   (min, avg, max) = (2961.683, 2971.802, 2982.584), stdev = 7.686
[info]   CI (99.9%): [2942.208, 3001.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   992.050 ±(99.9%) 8.754 MB/sec [Average]
[info]   (min, avg, max) = (989.234, 992.050, 994.923), stdev = 2.273
[info]   CI (99.9%): [983.296, 1000.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   2972.936 ±(99.9%) 85.095 B/op [Average]
[info]   (min, avg, max) = (2948.065, 2972.936, 3005.598), stdev = 22.099
[info]   CI (99.9%): [2887.841, 3058.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.670 ±(99.9%) 5.325 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.670, 3.143), stdev = 1.383
[info]   CI (99.9%): [≈ 0, 5.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2.003 ±(99.9%) 15.910 B/op [Average]
[info]   (min, avg, max) = (0.062, 2.003, 9.392), stdev = 4.132
[info]   CI (99.9%): [≈ 0, 17.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 9.000), stdev = 2.074
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 84.47% complete, ETA 00:14:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6752.431 ops/s
[info] # Warmup Iteration   2: 64619.004 ops/s
[info] # Warmup Iteration   3: 73046.919 ops/s
[info] Iteration   1: 74255.695 ops/s
[info]                  ·gc.alloc.rate:               1464.476 MB/sec
[info]                  ·gc.alloc.rate.norm:          31038.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1623.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34400.951 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 75429.230 ops/s
[info]                  ·gc.alloc.rate:                   1490.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              31096.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27338.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.434 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 75408.846 ops/s
[info]                  ·gc.alloc.rate:               1483.732 MB/sec
[info]                  ·gc.alloc.rate.norm:          30966.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27569.592 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 73416.662 ops/s
[info]                  ·gc.alloc.rate:               1472.321 MB/sec
[info]                  ·gc.alloc.rate.norm:          31562.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1664.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35680.374 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 72816.531 ops/s
[info]                  ·gc.alloc.rate:               1448.307 MB/sec
[info]                  ·gc.alloc.rate.norm:          31301.823 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28967.938 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson":
[info]   74265.393 ±(99.9%) 4507.738 ops/s [Average]
[info]   (min, avg, max) = (72816.531, 74265.393, 75429.230), stdev = 1170.645
[info]   CI (99.9%): [69757.654, 78773.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1471.849 ±(99.9%) 63.694 MB/sec [Average]
[info]   (min, avg, max) = (1448.307, 1471.849, 1490.408), stdev = 16.541
[info]   CI (99.9%): [1408.155, 1535.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   31193.170 ±(99.9%) 929.399 B/op [Average]
[info]   (min, avg, max) = (30966.893, 31193.170, 31562.754), stdev = 241.362
[info]   CI (99.9%): [30263.771, 32122.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1451.827 ±(99.9%) 678.304 MB/sec [Average]
[info]   (min, avg, max) = (1310.320, 1451.827, 1664.397), stdev = 176.153
[info]   CI (99.9%): [773.523, 2130.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   30791.532 ±(99.9%) 15227.870 B/op [Average]
[info]   (min, avg, max) = (27338.807, 30791.532, 35680.374), stdev = 3954.630
[info]   CI (99.9%): [15563.662, 46019.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.087 ±(99.9%) 0.748 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.087, 0.434), stdev = 0.194
[info]   CI (99.9%): [≈ 0, 0.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.304
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 84.71% complete, ETA 00:13:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21102.125 ops/s
[info] # Warmup Iteration   2: 78981.078 ops/s
[info] # Warmup Iteration   3: 91454.104 ops/s
[info] Iteration   1: 96994.564 ops/s
[info]                  ·gc.alloc.rate:                   1590.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              25809.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26854.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.858 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 97130.946 ops/s
[info]                  ·gc.alloc.rate:                   1589.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              25740.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21388.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.913 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 96653.634 ops/s
[info]                  ·gc.alloc.rate:                   1585.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              25810.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26749.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.034 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 95309.955 ops/s
[info]                  ·gc.alloc.rate:                   1584.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              26171.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27214.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.688 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 95556.458 ops/s
[info]                  ·gc.alloc.rate:                   1576.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              25961.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21828.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.343 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce":
[info]   96329.111 ±(99.9%) 3237.035 ops/s [Average]
[info]   (min, avg, max) = (95309.955, 96329.111, 97130.946), stdev = 840.648
[info]   CI (99.9%): [93092.076, 99566.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1585.269 ±(99.9%) 21.017 MB/sec [Average]
[info]   (min, avg, max) = (1576.609, 1585.269, 1590.596), stdev = 5.458
[info]   CI (99.9%): [1564.251, 1606.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   25898.334 ±(99.9%) 664.708 B/op [Average]
[info]   (min, avg, max) = (25740.065, 25898.334, 26171.266), stdev = 172.623
[info]   CI (99.9%): [25233.626, 26563.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1518.394 ±(99.9%) 686.792 MB/sec [Average]
[info]   (min, avg, max) = (1320.539, 1518.394, 1655.019), stdev = 178.358
[info]   CI (99.9%): [831.602, 2205.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   24807.032 ±(99.9%) 11279.498 B/op [Average]
[info]   (min, avg, max) = (21388.386, 24807.032, 27214.311), stdev = 2929.250
[info]   CI (99.9%): [13527.534, 36086.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.787 ±(99.9%) 4.139 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.787, 2.456), stdev = 1.075
[info]   CI (99.9%): [≈ 0, 4.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   12.767 ±(99.9%) 67.131 B/op [Average]
[info]   (min, avg, max) = (0.343, 12.767, 39.858), stdev = 17.434
[info]   CI (99.9%): [≈ 0, 79.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 15.000), stdev = 4.000
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.94% complete, ETA 00:13:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31039.548 ops/s
[info] # Warmup Iteration   2: 146961.636 ops/s
[info] # Warmup Iteration   3: 171342.375 ops/s
[info] Iteration   1: 171847.333 ops/s
[info]                  ·gc.alloc.rate:                   728.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              6667.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5972.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 170410.952 ops/s
[info]                  ·gc.alloc.rate:                   736.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              6799.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9035.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.384 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 178077.120 ops/s
[info]                  ·gc.alloc.rate:               754.477 MB/sec
[info]                  ·gc.alloc.rate.norm:          6668.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5787.318 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 177653.547 ops/s
[info]                  ·gc.alloc.rate:                   753.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              6679.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5807.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.369 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 172878.304 ops/s
[info]                  ·gc.alloc.rate:                   734.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              6686.303 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5979.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.351 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.610 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala":
[info]   174173.451 ±(99.9%) 13421.349 ops/s [Average]
[info]   (min, avg, max) = (170410.952, 174173.451, 178077.120), stdev = 3485.482
[info]   CI (99.9%): [160752.102, 187594.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   741.587 ±(99.9%) 46.162 MB/sec [Average]
[info]   (min, avg, max) = (728.081, 741.587, 754.477), stdev = 11.988
[info]   CI (99.9%): [695.425, 787.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   6700.289 ±(99.9%) 215.079 B/op [Average]
[info]   (min, avg, max) = (6667.941, 6700.289, 6799.236), stdev = 55.855
[info]   CI (99.9%): [6485.209, 6915.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   719.725 ±(99.9%) 558.812 MB/sec [Average]
[info]   (min, avg, max) = (652.173, 719.725, 979.309), stdev = 145.122
[info]   CI (99.9%): [160.914, 1278.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   6516.501 ±(99.9%) 5433.427 B/op [Average]
[info]   (min, avg, max) = (5787.318, 6516.501, 9035.532), stdev = 1411.044
[info]   CI (99.9%): [1083.074, 11949.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.891 ±(99.9%) 7.448 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.891, 4.351), stdev = 1.934
[info]   CI (99.9%): [≈ 0, 8.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8.111 ±(99.9%) 67.807 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.111, 39.610), stdev = 17.609
[info]   CI (99.9%): [≈ 0, 75.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 11.000), stdev = 2.302
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.18% complete, ETA 00:13:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127775.802 ops/s
[info] # Warmup Iteration   2: 257686.005 ops/s
[info] # Warmup Iteration   3: 276107.492 ops/s
[info] Iteration   1: 271579.709 ops/s
[info]                  ·gc.alloc.rate:               986.872 MB/sec
[info]                  ·gc.alloc.rate.norm:          5718.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3837.374 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 274363.229 ops/s
[info]                  ·gc.alloc.rate:                   1006.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              5774.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5709.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 276343.968 ops/s
[info]                  ·gc.alloc.rate:                   1017.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              5793.474 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5675.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.831 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.124 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 272565.723 ops/s
[info]                  ·gc.alloc.rate:                   1004.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              5797.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5727.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.765 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 274568.101 ops/s
[info]                  ·gc.alloc.rate:               1011.106 MB/sec
[info]                  ·gc.alloc.rate.norm:          5793.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5670.682 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala":
[info]   273884.146 ±(99.9%) 7151.401 ops/s [Average]
[info]   (min, avg, max) = (271579.709, 273884.146, 276343.968), stdev = 1857.196
[info]   CI (99.9%): [266732.745, 281035.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1005.196 ±(99.9%) 43.853 MB/sec [Average]
[info]   (min, avg, max) = (986.872, 1005.196, 1017.217), stdev = 11.389
[info]   CI (99.9%): [961.343, 1049.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5775.406 ±(99.9%) 128.301 B/op [Average]
[info]   (min, avg, max) = (5718.107, 5775.406, 5797.702), stdev = 33.319
[info]   CI (99.9%): [5647.105, 5903.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   927.146 ±(99.9%) 570.238 MB/sec [Average]
[info]   (min, avg, max) = (662.282, 927.146, 996.526), stdev = 148.089
[info]   CI (99.9%): [356.908, 1497.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5324.038 ±(99.9%) 3201.437 B/op [Average]
[info]   (min, avg, max) = (3837.374, 5324.038, 5727.380), stdev = 831.403
[info]   CI (99.9%): [2122.601, 8525.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.666 ±(99.9%) 4.726 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.666, 2.831), stdev = 1.227
[info]   CI (99.9%): [≈ 0, 5.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.802 ±(99.9%) 26.912 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.802, 16.124), stdev = 6.989
[info]   CI (99.9%): [≈ 0, 30.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 9.000), stdev = 2.168
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 85.41% complete, ETA 00:13:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8469.197 ops/s
[info] # Warmup Iteration   2: 62118.658 ops/s
[info] # Warmup Iteration   3: 66336.338 ops/s
[info] Iteration   1: 67266.237 ops/s
[info]                  ·gc.alloc.rate:                   2524.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              59056.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2616.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61205.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.917 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 67969.522 ops/s
[info]                  ·gc.alloc.rate:                   2564.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              59373.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53220.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.928 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 67127.504 ops/s
[info]                  ·gc.alloc.rate:               2562.185 MB/sec
[info]                  ·gc.alloc.rate.norm:          60058.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2657.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62287.314 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 66981.256 ops/s
[info]                  ·gc.alloc.rate:                   2544.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              59778.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2347.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55149.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.978 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 69417.273 ops/s
[info]                  ·gc.alloc.rate:               2648.436 MB/sec
[info]                  ·gc.alloc.rate.norm:          60046.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2700.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61227.849 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson":
[info]   67752.358 ±(99.9%) 3870.068 ops/s [Average]
[info]   (min, avg, max) = (66981.256, 67752.358, 69417.273), stdev = 1005.044
[info]   CI (99.9%): [63882.290, 71622.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2568.852 ±(99.9%) 181.880 MB/sec [Average]
[info]   (min, avg, max) = (2524.852, 2568.852, 2648.436), stdev = 47.234
[info]   CI (99.9%): [2386.972, 2750.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   59662.628 ±(99.9%) 1686.857 B/op [Average]
[info]   (min, avg, max) = (59056.973, 59662.628, 60058.011), stdev = 438.071
[info]   CI (99.9%): [57975.771, 61349.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2524.116 ±(99.9%) 719.142 MB/sec [Average]
[info]   (min, avg, max) = (2298.488, 2524.116, 2700.552), stdev = 186.759
[info]   CI (99.9%): [1804.975, 3243.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   58618.202 ±(99.9%) 15891.258 B/op [Average]
[info]   (min, avg, max) = (53220.827, 58618.202, 62287.314), stdev = 4126.909
[info]   CI (99.9%): [42726.944, 74509.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.212 ±(99.9%) 1.566 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.212, 0.937), stdev = 0.407
[info]   CI (99.9%): [≈ 0, 1.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.965 ±(99.9%) 36.622 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.965, 21.917), stdev = 9.511
[info]   CI (99.9%): [≈ 0, 41.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.000, 13.000), stdev = 1.581
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 85.65% complete, ETA 00:12:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 61791.125 ops/s
[info] # Warmup Iteration   2: 195854.874 ops/s
[info] # Warmup Iteration   3: 201801.353 ops/s
[info] Iteration   1: 205341.518 ops/s
[info]                  ·gc.alloc.rate:                   1427.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              10936.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10124.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.638 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 207488.925 ops/s
[info]                  ·gc.alloc.rate:                   1449.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              10995.527 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10009.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.159 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 207423.712 ops/s
[info]                  ·gc.alloc.rate:                   1448.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              10992.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12459.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.422 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 207927.595 ops/s
[info]                  ·gc.alloc.rate:               1457.585 MB/sec
[info]                  ·gc.alloc.rate.norm:          11033.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1316.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9963.340 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 207830.513 ops/s
[info]                  ·gc.alloc.rate:               1463.730 MB/sec
[info]                  ·gc.alloc.rate.norm:          11084.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10015.720 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce":
[info]   207202.453 ±(99.9%) 4090.750 ops/s [Average]
[info]   (min, avg, max) = (205341.518, 207202.453, 207927.595), stdev = 1062.355
[info]   CI (99.9%): [203111.702, 211293.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1449.543 ±(99.9%) 52.607 MB/sec [Average]
[info]   (min, avg, max) = (1427.629, 1449.543, 1463.730), stdev = 13.662
[info]   CI (99.9%): [1396.936, 1502.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   11008.551 ±(99.9%) 210.604 B/op [Average]
[info]   (min, avg, max) = (10936.817, 11008.551, 11084.366), stdev = 54.693
[info]   CI (99.9%): [10797.947, 11219.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1384.534 ±(99.9%) 555.125 MB/sec [Average]
[info]   (min, avg, max) = (1316.177, 1384.534, 1642.386), stdev = 144.164
[info]   CI (99.9%): [829.409, 1939.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10514.703 ±(99.9%) 4192.971 B/op [Average]
[info]   (min, avg, max) = (9963.340, 10514.703, 12459.700), stdev = 1088.901
[info]   CI (99.9%): [6321.732, 14707.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.770 ±(99.9%) 6.058 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.770, 3.581), stdev = 1.573
[info]   CI (99.9%): [≈ 0, 6.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.844 ±(99.9%) 45.939 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.844, 27.159), stdev = 11.930
[info]   CI (99.9%): [≈ 0, 51.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 13.000), stdev = 3.130
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.88% complete, ETA 00:12:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 139859.386 ops/s
[info] # Warmup Iteration   2: 470802.774 ops/s
[info] # Warmup Iteration   3: 499302.879 ops/s
[info] Iteration   1: 498752.199 ops/s
[info]                  ·gc.alloc.rate:               412.406 MB/sec
[info]                  ·gc.alloc.rate.norm:          1301.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 807.189 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 504882.326 ops/s
[info]                  ·gc.alloc.rate:               406.587 MB/sec
[info]                  ·gc.alloc.rate.norm:          1267.467 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1014.402 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 507707.924 ops/s
[info]                  ·gc.alloc.rate:                   420.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              1303.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2020.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 508899.480 ops/s
[info]                  ·gc.alloc.rate:               407.380 MB/sec
[info]                  ·gc.alloc.rate.norm:          1259.879 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1009.476 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 507160.483 ops/s
[info]                  ·gc.alloc.rate:               411.210 MB/sec
[info]                  ·gc.alloc.rate.norm:          1276.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1014.972 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala":
[info]   505480.483 ±(99.9%) 15534.502 ops/s [Average]
[info]   (min, avg, max) = (498752.199, 505480.483, 508899.480), stdev = 4034.261
[info]   CI (99.9%): [489945.981, 521014.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   411.600 ±(99.9%) 21.221 MB/sec [Average]
[info]   (min, avg, max) = (406.587, 411.600, 420.417), stdev = 5.511
[info]   CI (99.9%): [390.379, 432.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1281.587 ±(99.9%) 75.995 B/op [Average]
[info]   (min, avg, max) = (1259.879, 1281.587, 1303.146), stdev = 19.736
[info]   CI (99.9%): [1205.592, 1357.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   377.315 ±(99.9%) 602.614 MB/sec [Average]
[info]   (min, avg, max) = (255.796, 377.315, 651.885), stdev = 156.497
[info]   CI (99.9%): [≈ 0, 979.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1173.331 ±(99.9%) 1855.848 B/op [Average]
[info]   (min, avg, max) = (807.189, 1173.331, 2020.614), stdev = 481.958
[info]   CI (99.9%): [≈ 0, 3029.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.222 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.129), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 6.000), stdev = 1.304
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.12% complete, ETA 00:12:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 373851.524 ops/s
[info] # Warmup Iteration   2: 635666.638 ops/s
[info] # Warmup Iteration   3: 640316.718 ops/s
[info] Iteration   1: 639611.491 ops/s
[info]                  ·gc.alloc.rate:               353.635 MB/sec
[info]                  ·gc.alloc.rate.norm:          870.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 629.450 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 635653.235 ops/s
[info]                  ·gc.alloc.rate:               359.098 MB/sec
[info]                  ·gc.alloc.rate.norm:          889.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 815.605 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 625650.466 ops/s
[info]                  ·gc.alloc.rate:               346.151 MB/sec
[info]                  ·gc.alloc.rate.norm:          870.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 828.644 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 644417.891 ops/s
[info]                  ·gc.alloc.rate:                   354.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              864.837 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     806.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 638636.827 ops/s
[info]                  ·gc.alloc.rate:               356.282 MB/sec
[info]                  ·gc.alloc.rate.norm:          877.699 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 813.418 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala":
[info]   636793.982 ±(99.9%) 26881.362 ops/s [Average]
[info]   (min, avg, max) = (625650.466, 636793.982, 644417.891), stdev = 6981.004
[info]   CI (99.9%): [609912.620, 663675.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   353.860 ±(99.9%) 18.552 MB/sec [Average]
[info]   (min, avg, max) = (346.151, 353.860, 359.098), stdev = 4.818
[info]   CI (99.9%): [335.308, 372.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   874.522 ±(99.9%) 35.963 B/op [Average]
[info]   (min, avg, max) = (864.837, 874.522, 889.094), stdev = 9.339
[info]   CI (99.9%): [838.559, 910.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   314.981 ±(99.9%) 127.402 MB/sec [Average]
[info]   (min, avg, max) = (255.799, 314.981, 330.189), stdev = 33.086
[info]   CI (99.9%): [187.579, 442.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   778.651 ±(99.9%) 322.686 B/op [Average]
[info]   (min, avg, max) = (629.450, 778.651, 828.644), stdev = 83.800
[info]   CI (99.9%): [455.966, 1101.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.088 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.051), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 86.35% complete, ETA 00:12:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 311020.257 ops/s
[info] # Warmup Iteration   2: 675760.324 ops/s
[info] # Warmup Iteration   3: 687483.827 ops/s
[info] Iteration   1: 689884.537 ops/s
[info]                  ·gc.alloc.rate:      7.014 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 689876.427 ops/s
[info]                  ·gc.alloc.rate:      7.017 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 687970.305 ops/s
[info]                  ·gc.alloc.rate:      6.995 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 689887.075 ops/s
[info]                  ·gc.alloc.rate:      7.014 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 688897.042 ops/s
[info]                  ·gc.alloc.rate:      7.004 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   689303.077 ±(99.9%) 3306.304 ops/s [Average]
[info]   (min, avg, max) = (687970.305, 689303.077, 689887.075), stdev = 858.637
[info]   CI (99.9%): [685996.774, 692609.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   7.009 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (6.995, 7.009, 7.017), stdev = 0.009
[info]   CI (99.9%): [6.973, 7.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.001), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 86.59% complete, ETA 00:12:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6987.357 ops/s
[info] # Warmup Iteration   2: 31716.396 ops/s
[info] # Warmup Iteration   3: 34851.516 ops/s
[info] Iteration   1: 35079.469 ops/s
[info]                  ·gc.alloc.rate:                   1915.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              85930.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88858.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 169.990 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 35381.265 ops/s
[info]                  ·gc.alloc.rate:                   1923.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              85573.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87534.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.408 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 35692.201 ops/s
[info]                  ·gc.alloc.rate:                   1946.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              85849.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72539.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.918 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 35865.980 ops/s
[info]                  ·gc.alloc.rate:                   1970.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              86468.926 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1988.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87257.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.827 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 35404.927 ops/s
[info]                  ·gc.alloc.rate:               1947.055 MB/sec
[info]                  ·gc.alloc.rate.norm:          86552.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2005.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89135.919 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson":
[info]   35484.768 ±(99.9%) 1170.662 ops/s [Average]
[info]   (min, avg, max) = (35079.469, 35484.768, 35865.980), stdev = 304.017
[info]   CI (99.9%): [34314.106, 36655.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1940.777 ±(99.9%) 83.627 MB/sec [Average]
[info]   (min, avg, max) = (1915.514, 1940.777, 1970.530), stdev = 21.718
[info]   CI (99.9%): [1857.150, 2024.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   86075.248 ±(99.9%) 1618.372 B/op [Average]
[info]   (min, avg, max) = (85573.522, 86075.248, 86552.984), stdev = 420.286
[info]   CI (99.9%): [84456.876, 87693.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1917.489 ±(99.9%) 588.679 MB/sec [Average]
[info]   (min, avg, max) = (1645.076, 1917.489, 2005.159), stdev = 152.878
[info]   CI (99.9%): [1328.810, 2506.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   85065.143 ±(99.9%) 27142.400 B/op [Average]
[info]   (min, avg, max) = (72539.945, 85065.143, 89135.919), stdev = 7048.795
[info]   CI (99.9%): [57922.743, 112207.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 6.432 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.804, 3.789), stdev = 1.670
[info]   CI (99.9%): [≈ 0, 7.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   36.029 ±(99.9%) 288.577 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 36.029, 169.990), stdev = 74.942
[info]   CI (99.9%): [≈ 0, 324.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 15.000), stdev = 3.209
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce
[info] # Run progress: 86.82% complete, ETA 00:11:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 62595.759 ops/s
[info] # Warmup Iteration   2: 720790.660 ops/s
[info] # Warmup Iteration   3: 812022.500 ops/s
[info] Iteration   1: 838758.154 ops/s
[info]                  ·gc.alloc.rate:                   2241.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              4205.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3707.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.578 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 856000.058 ops/s
[info]                  ·gc.alloc.rate:                   2298.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              4226.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2296.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4221.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 857650.325 ops/s
[info]                  ·gc.alloc.rate:               2323.974 MB/sec
[info]                  ·gc.alloc.rate.norm:          4263.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2315.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4247.974 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 857241.228 ops/s
[info]                  ·gc.alloc.rate:                   2310.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              4241.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3675.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 849946.685 ops/s
[info]                  ·gc.alloc.rate:               2305.129 MB/sec
[info]                  ·gc.alloc.rate.norm:          4268.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2352.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4356.793 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce":
[info]   851919.290 ±(99.9%) 30740.532 ops/s [Average]
[info]   (min, avg, max) = (838758.154, 851919.290, 857650.325), stdev = 7983.219
[info]   CI (99.9%): [821178.758, 882659.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate":
[info]   2295.908 ±(99.9%) 122.680 MB/sec [Average]
[info]   (min, avg, max) = (2241.429, 2295.908, 2323.974), stdev = 31.860
[info]   CI (99.9%): [2173.228, 2418.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4241.165 ±(99.9%) 100.733 B/op [Average]
[info]   (min, avg, max) = (4205.693, 4241.165, 4268.422), stdev = 26.160
[info]   CI (99.9%): [4140.431, 4341.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2188.433 ±(99.9%) 706.865 MB/sec [Average]
[info]   (min, avg, max) = (1975.892, 2188.433, 2352.853), stdev = 183.571
[info]   CI (99.9%): [1481.568, 2895.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4041.851 ±(99.9%) 1248.269 B/op [Average]
[info]   (min, avg, max) = (3675.176, 4041.851, 4356.793), stdev = 324.172
[info]   CI (99.9%): [2793.582, 5290.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.824 ±(99.9%) 6.920 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.824, 4.039), stdev = 1.797
[info]   CI (99.9%): [≈ 0, 7.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.546 ±(99.9%) 12.985 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.546, 7.578), stdev = 3.372
[info]   CI (99.9%): [≈ 0, 14.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.600, 11.000), stdev = 1.140
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala
[info] # Run progress: 87.06% complete, ETA 00:11:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53783.731 ops/s
[info] # Warmup Iteration   2: 1631477.938 ops/s
[info] # Warmup Iteration   3: 1716076.953 ops/s
[info] Iteration   1: 1741985.246 ops/s
[info]                  ·gc.alloc.rate:                   1111.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              1004.068 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     884.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1786855.000 ops/s
[info]                  ·gc.alloc.rate:                   1139.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              1003.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1152.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 1763338.309 ops/s
[info]                  ·gc.alloc.rate:                   1120.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              999.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     875.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.538 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1780058.220 ops/s
[info]                  ·gc.alloc.rate:               1148.552 MB/sec
[info]                  ·gc.alloc.rate.norm:          1015.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1300.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1149.755 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 1832766.167 ops/s
[info]                  ·gc.alloc.rate:               1168.876 MB/sec
[info]                  ·gc.alloc.rate.norm:          1003.687 B/op
[info]                  ·gc.churn.PS_Eden_Space:      974.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 836.944 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala":
[info]   1781000.589 ±(99.9%) 129855.657 ops/s [Average]
[info]   (min, avg, max) = (1741985.246, 1781000.589, 1832766.167), stdev = 33723.102
[info]   CI (99.9%): [1651144.932, 1910856.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1137.586 ±(99.9%) 88.277 MB/sec [Average]
[info]   (min, avg, max) = (1111.280, 1137.586, 1168.876), stdev = 22.925
[info]   CI (99.9%): [1049.309, 1225.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1005.263 ±(99.9%) 23.050 B/op [Average]
[info]   (min, avg, max) = (999.668, 1005.263, 1015.493), stdev = 5.986
[info]   CI (99.9%): [982.213, 1028.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1108.643 ±(99.9%) 688.188 MB/sec [Average]
[info]   (min, avg, max) = (974.690, 1108.643, 1308.353), stdev = 178.720
[info]   CI (99.9%): [420.455, 1796.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   979.801 ±(99.9%) 605.950 B/op [Average]
[info]   (min, avg, max) = (836.944, 979.801, 1152.393), stdev = 157.363
[info]   CI (99.9%): [373.851, 1585.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.922 ±(99.9%) 7.784 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.922, 4.538), stdev = 2.021
[info]   CI (99.9%): [≈ 0, 8.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.823 ±(99.9%) 6.947 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.823, 4.050), stdev = 1.804
[info]   CI (99.9%): [≈ 0, 7.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.800, 16.000), stdev = 5.167
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala
[info] # Run progress: 87.29% complete, ETA 00:11:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1547146.455 ops/s
[info] # Warmup Iteration   2: 7776128.101 ops/s
[info] # Warmup Iteration   3: 8365519.320 ops/s
[info] Iteration   1: 8508009.286 ops/s
[info]                  ·gc.alloc.rate:               265.323 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47.319 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 8528110.555 ops/s
[info]                  ·gc.alloc.rate:               267.078 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47.208 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 8487478.823 ops/s
[info]                  ·gc.alloc.rate:                   266.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 8506620.250 ops/s
[info]                  ·gc.alloc.rate:                   268.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 8387371.887 ops/s
[info]                  ·gc.alloc.rate:               266.637 MB/sec
[info]                  ·gc.alloc.rate.norm:          50.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62.064 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala":
[info]   8483518.160 ±(99.9%) 214237.350 ops/s [Average]
[info]   (min, avg, max) = (8387371.887, 8483518.160, 8528110.555), stdev = 55636.760
[info]   CI (99.9%): [8269280.810, 8697755.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   266.792 ±(99.9%) 5.230 MB/sec [Average]
[info]   (min, avg, max) = (265.323, 266.792, 268.913), stdev = 1.358
[info]   CI (99.9%): [261.562, 272.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   49.493 ±(99.9%) 1.500 B/op [Average]
[info]   (min, avg, max) = (49.072, 49.493, 50.031), stdev = 0.389
[info]   CI (99.9%): [47.993, 50.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   285.799 ±(99.9%) 158.027 MB/sec [Average]
[info]   (min, avg, max) = (255.793, 285.799, 330.767), stdev = 41.039
[info]   CI (99.9%): [127.772, 443.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   53.043 ±(99.9%) 30.202 B/op [Average]
[info]   (min, avg, max) = (47.208, 53.043, 62.064), stdev = 7.843
[info]   CI (99.9%): [22.841, 83.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.012), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson
[info] # Run progress: 87.53% complete, ETA 00:11:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3991.266 ops/s
[info] # Warmup Iteration   2: 103019.206 ops/s
[info] # Warmup Iteration   3: 187800.887 ops/s
[info] Iteration   1: 269123.851 ops/s
[info]                  ·gc.alloc.rate:                   1852.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              10832.867 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11480.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.165 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 282594.562 ops/s
[info]                  ·gc.alloc.rate:                   1862.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              10372.617 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9177.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.580 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 288751.170 ops/s
[info]                  ·gc.alloc.rate:                   1895.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              10333.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10812.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.021 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 295783.029 ops/s
[info]                  ·gc.alloc.rate:                   1949.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              10371.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1994.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10614.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 295710.207 ops/s
[info]                  ·gc.alloc.rate:               1962.057 MB/sec
[info]                  ·gc.alloc.rate.norm:          10442.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1672.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8902.582 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson":
[info]   286392.563 ±(99.9%) 42757.564 ops/s [Average]
[info]   (min, avg, max) = (269123.851, 286392.563, 295783.029), stdev = 11104.004
[info]   CI (99.9%): [243634.999, 329150.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1904.379 ±(99.9%) 191.154 MB/sec [Average]
[info]   (min, avg, max) = (1852.352, 1904.379, 1962.057), stdev = 49.642
[info]   CI (99.9%): [1713.225, 2095.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   10470.498 ±(99.9%) 794.773 B/op [Average]
[info]   (min, avg, max) = (10333.179, 10470.498, 10832.867), stdev = 206.400
[info]   CI (99.9%): [9675.725, 11265.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1852.454 ±(99.9%) 677.942 MB/sec [Average]
[info]   (min, avg, max) = (1647.791, 1852.454, 1994.726), stdev = 176.059
[info]   CI (99.9%): [1174.512, 2530.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   10197.418 ±(99.9%) 4269.046 B/op [Average]
[info]   (min, avg, max) = (8902.582, 10197.418, 11480.603), stdev = 1108.658
[info]   CI (99.9%): [5928.372, 14466.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.458 ±(99.9%) 2.475 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.458, 1.541), stdev = 0.643
[info]   CI (99.9%): [≈ 0, 2.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.575 ±(99.9%) 13.820 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.575, 8.580), stdev = 3.589
[info]   CI (99.9%): [≈ 0, 16.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 12.000), stdev = 1.871
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce
[info] # Run progress: 87.76% complete, ETA 00:11:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74378.941 ops/s
[info] # Warmup Iteration   2: 990458.134 ops/s
[info] # Warmup Iteration   3: 1071163.077 ops/s
[info] Iteration   1: 1072725.570 ops/s
[info]                  ·gc.alloc.rate:                   1754.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              2573.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2422.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.589 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 1088438.662 ops/s
[info]                  ·gc.alloc.rate:                   1783.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              2578.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2373.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1091001.221 ops/s
[info]                  ·gc.alloc.rate:                   1801.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              2598.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1969.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2840.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1084924.811 ops/s
[info]                  ·gc.alloc.rate:                   1792.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              2599.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2395.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1099966.133 ops/s
[info]                  ·gc.alloc.rate:               1810.776 MB/sec
[info]                  ·gc.alloc.rate.norm:          2590.774 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1663.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2380.103 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce":
[info]   1087411.280 ±(99.9%) 38188.417 ops/s [Average]
[info]   (min, avg, max) = (1072725.570, 1087411.280, 1099966.133), stdev = 9917.411
[info]   CI (99.9%): [1049222.863, 1125599.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1788.408 ±(99.9%) 83.678 MB/sec [Average]
[info]   (min, avg, max) = (1754.104, 1788.408, 1810.776), stdev = 21.731
[info]   CI (99.9%): [1704.730, 1872.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   2588.327 ±(99.9%) 45.807 B/op [Average]
[info]   (min, avg, max) = (2573.515, 2588.327, 2599.938), stdev = 11.896
[info]   CI (99.9%): [2542.520, 2634.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1715.368 ±(99.9%) 546.811 MB/sec [Average]
[info]   (min, avg, max) = (1641.400, 1715.368, 1969.006), stdev = 142.005
[info]   CI (99.9%): [1168.557, 2262.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2482.486 ±(99.9%) 774.207 B/op [Average]
[info]   (min, avg, max) = (2373.331, 2482.486, 2840.531), stdev = 201.059
[info]   CI (99.9%): [1708.279, 3256.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 6.472 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.804, 3.810), stdev = 1.681
[info]   CI (99.9%): [≈ 0, 7.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.178 ±(99.9%) 9.498 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.178, 5.589), stdev = 2.467
[info]   CI (99.9%): [≈ 0, 10.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 15.000), stdev = 3.633
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala
[info] # Run progress: 88.00% complete, ETA 00:10:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79148.611 ops/s
[info] # Warmup Iteration   2: 2511481.641 ops/s
[info] # Warmup Iteration   3: 2584818.604 ops/s
[info] Iteration   1: 2634017.465 ops/s
[info]                  ·gc.alloc.rate:                   1164.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              695.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     782.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2576435.201 ops/s
[info]                  ·gc.alloc.rate:                   1127.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              688.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     601.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2713008.335 ops/s
[info]                  ·gc.alloc.rate:                   1198.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              695.246 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     761.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.674 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2724683.801 ops/s
[info]                  ·gc.alloc.rate:                   1191.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              688.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     566.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2705652.707 ops/s
[info]                  ·gc.alloc.rate:               1207.128 MB/sec
[info]                  ·gc.alloc.rate.norm:          702.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 761.998 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala":
[info]   2670759.502 ±(99.9%) 244730.922 ops/s [Average]
[info]   (min, avg, max) = (2576435.201, 2670759.502, 2724683.801), stdev = 63555.843
[info]   CI (99.9%): [2426028.580, 2915490.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1177.784 ±(99.9%) 124.896 MB/sec [Average]
[info]   (min, avg, max) = (1127.367, 1177.784, 1207.128), stdev = 32.435
[info]   CI (99.9%): [1052.888, 1302.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   693.980 ±(99.9%) 21.943 B/op [Average]
[info]   (min, avg, max) = (688.297, 693.980, 702.034), stdev = 5.699
[info]   CI (99.9%): [672.037, 715.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1179.280 ±(99.9%) 692.383 MB/sec [Average]
[info]   (min, avg, max) = (980.075, 1179.280, 1312.243), stdev = 179.810
[info]   CI (99.9%): [486.896, 1871.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   694.615 ±(99.9%) 394.110 B/op [Average]
[info]   (min, avg, max) = (566.021, 694.615, 782.336), stdev = 102.349
[info]   CI (99.9%): [300.504, 1088.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.758 ±(99.9%) 6.278 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.758, 3.674), stdev = 1.630
[info]   CI (99.9%): [≈ 0, 7.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.440 ±(99.9%) 3.642 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.440, 2.131), stdev = 0.946
[info]   CI (99.9%): [≈ 0, 4.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 13.000), stdev = 3.464
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala
[info] # Run progress: 88.24% complete, ETA 00:10:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1207965.879 ops/s
[info] # Warmup Iteration   2: 5750288.078 ops/s
[info] # Warmup Iteration   3: 5982145.390 ops/s
[info] Iteration   1: 6143839.487 ops/s
[info]                  ·gc.alloc.rate:                   707.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              181.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     169.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 6135956.329 ops/s
[info]                  ·gc.alloc.rate:               709.774 MB/sec
[info]                  ·gc.alloc.rate.norm:          182.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 169.674 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 6343274.765 ops/s
[info]                  ·gc.alloc.rate:                   727.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              180.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     164.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6338725.879 ops/s
[info]                  ·gc.alloc.rate:               734.124 MB/sec
[info]                  ·gc.alloc.rate.norm:          182.285 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 164.572 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 6219159.933 ops/s
[info]                  ·gc.alloc.rate:                   715.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              181.136 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.706 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala":
[info]   6236191.278 ±(99.9%) 389116.012 ops/s [Average]
[info]   (min, avg, max) = (6135956.329, 6236191.278, 6343274.765), stdev = 101052.193
[info]   CI (99.9%): [5847075.267, 6625307.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   718.947 ±(99.9%) 44.587 MB/sec [Average]
[info]   (min, avg, max) = (707.331, 718.947, 734.124), stdev = 11.579
[info]   CI (99.9%): [674.359, 763.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   181.430 ±(99.9%) 2.718 B/op [Average]
[info]   (min, avg, max) = (180.557, 181.430, 182.285), stdev = 0.706
[info]   CI (99.9%): [178.711, 184.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   662.073 ±(99.9%) 4.668 MB/sec [Average]
[info]   (min, avg, max) = (660.282, 662.073, 663.481), stdev = 1.212
[info]   CI (99.9%): [657.404, 666.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   167.109 ±(99.9%) 9.737 B/op [Average]
[info]   (min, avg, max) = (164.291, 167.109, 169.674), stdev = 2.529
[info]   CI (99.9%): [157.372, 176.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.566 ±(99.9%) 4.786 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.566, 2.789), stdev = 1.243
[info]   CI (99.9%): [≈ 0, 5.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.143 ±(99.9%) 1.211 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.143, 0.706), stdev = 0.315
[info]   CI (99.9%): [≈ 0, 1.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 88.47% complete, ETA 00:10:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1291470.729 ops/s
[info] # Warmup Iteration   2: 6318214.855 ops/s
[info] # Warmup Iteration   3: 6695842.254 ops/s
[info] Iteration   1: 6619824.184 ops/s
[info]                  ·gc.alloc.rate:                   415.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.831 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6510128.990 ops/s
[info]                  ·gc.alloc.rate:                   409.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.790 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 6540704.862 ops/s
[info]                  ·gc.alloc.rate:                   411.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 6585505.904 ops/s
[info]                  ·gc.alloc.rate:               421.998 MB/sec
[info]                  ·gc.alloc.rate.norm:          100.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 156.815 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 6795621.064 ops/s
[info]                  ·gc.alloc.rate:               424.528 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75.906 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc":
[info]   6610357.001 ±(99.9%) 430200.914 ops/s [Average]
[info]   (min, avg, max) = (6510128.990, 6610357.001, 6795621.064), stdev = 111721.811
[info]   CI (99.9%): [6180156.087, 7040557.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   416.545 ±(99.9%) 25.531 MB/sec [Average]
[info]   (min, avg, max) = (409.139, 416.545, 424.528), stdev = 6.630
[info]   CI (99.9%): [391.014, 442.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   99.180 ±(99.9%) 3.738 B/op [Average]
[info]   (min, avg, max) = (98.321, 99.180, 100.853), stdev = 0.971
[info]   CI (99.9%): [95.442, 102.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   394.097 ±(99.9%) 564.116 MB/sec [Average]
[info]   (min, avg, max) = (327.742, 394.097, 656.160), stdev = 146.499
[info]   CI (99.9%): [≈ 0, 958.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   93.908 ±(99.9%) 135.519 B/op [Average]
[info]   (min, avg, max) = (75.906, 93.908, 156.815), stdev = 35.194
[info]   CI (99.9%): [≈ 0, 229.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.662 ±(99.9%) 5.610 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.662, 3.268), stdev = 1.457
[info]   CI (99.9%): [≈ 0, 6.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.160 ±(99.9%) 1.356 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.160, 0.790), stdev = 0.352
[info]   CI (99.9%): [≈ 0, 1.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson
[info] # Run progress: 88.71% complete, ETA 00:10:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12018.996 ops/s
[info] # Warmup Iteration   2: 212847.001 ops/s
[info] # Warmup Iteration   3: 407047.900 ops/s
[info] Iteration   1: 403648.117 ops/s
[info]                  ·gc.alloc.rate:                   2523.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              9837.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2613.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10188.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.777 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.627 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 422489.033 ops/s
[info]                  ·gc.alloc.rate:                   2649.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              9868.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2606.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9709.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 414102.205 ops/s
[info]                  ·gc.alloc.rate:               2603.978 MB/sec
[info]                  ·gc.alloc.rate.norm:          9895.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2306.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8766.278 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 409615.343 ops/s
[info]                  ·gc.alloc.rate:                   2592.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              9959.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2668.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10250.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 424102.976 ops/s
[info]                  ·gc.alloc.rate:               2668.054 MB/sec
[info]                  ·gc.alloc.rate.norm:          9900.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2355.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8742.439 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson":
[info]   414791.535 ±(99.9%) 33202.640 ops/s [Average]
[info]   (min, avg, max) = (403648.117, 414791.535, 424102.976), stdev = 8622.620
[info]   CI (99.9%): [381588.895, 447994.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2607.437 ±(99.9%) 217.435 MB/sec [Average]
[info]   (min, avg, max) = (2523.098, 2607.437, 2668.054), stdev = 56.467
[info]   CI (99.9%): [2390.002, 2824.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   9892.225 ±(99.9%) 173.940 B/op [Average]
[info]   (min, avg, max) = (9837.439, 9892.225, 9959.535), stdev = 45.172
[info]   CI (99.9%): [9718.285, 10066.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2510.242 ±(99.9%) 638.801 MB/sec [Average]
[info]   (min, avg, max) = (2306.919, 2510.242, 2668.694), stdev = 165.895
[info]   CI (99.9%): [1871.440, 3149.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9531.503 ±(99.9%) 2848.718 B/op [Average]
[info]   (min, avg, max) = (8742.439, 9531.503, 10250.773), stdev = 739.803
[info]   CI (99.9%): [6682.785, 12380.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.964 ±(99.9%) 8.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.964, 4.777), stdev = 2.132
[info]   CI (99.9%): [≈ 0, 9.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.757 ±(99.9%) 32.009 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.757, 18.627), stdev = 8.313
[info]   CI (99.9%): [≈ 0, 35.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.600, 19.000), stdev = 3.647
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 88.94% complete, ETA 00:09:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15763.672 ops/s
[info] # Warmup Iteration   2: 68922.761 ops/s
[info] # Warmup Iteration   3: 73427.824 ops/s
[info] Iteration   1: 76963.237 ops/s
[info]                  ·gc.alloc.rate:                   2131.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              43588.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1982.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40539.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.477 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 76907.757 ops/s
[info]                  ·gc.alloc.rate:                   2130.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              43597.937 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40351.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.130 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 78060.139 ops/s
[info]                  ·gc.alloc.rate:                   2199.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              44347.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2316.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46697.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.358 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 76154.850 ops/s
[info]                  ·gc.alloc.rate:                   2141.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              44266.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41363.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.430 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 76455.820 ops/s
[info]                  ·gc.alloc.rate:                   2146.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              44179.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41467.480 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.429 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce":
[info]   76908.361 ±(99.9%) 2791.502 ops/s [Average]
[info]   (min, avg, max) = (76154.850, 76908.361, 78060.139), stdev = 724.944
[info]   CI (99.9%): [74116.859, 79699.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2150.023 ±(99.9%) 109.650 MB/sec [Average]
[info]   (min, avg, max) = (2130.984, 2150.023, 2199.583), stdev = 28.476
[info]   CI (99.9%): [2040.373, 2259.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   43996.000 ±(99.9%) 1433.959 B/op [Average]
[info]   (min, avg, max) = (43588.703, 43996.000, 44347.822), stdev = 372.395
[info]   CI (99.9%): [42562.041, 45429.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2057.343 ±(99.9%) 560.649 MB/sec [Average]
[info]   (min, avg, max) = (1972.297, 2057.343, 2316.147), stdev = 145.599
[info]   CI (99.9%): [1496.695, 2617.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   42084.040 ±(99.9%) 10110.122 B/op [Average]
[info]   (min, avg, max) = (40351.343, 42084.040, 46697.988), stdev = 2625.567
[info]   CI (99.9%): [31973.918, 52194.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 6.394 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.820, 3.789), stdev = 1.661
[info]   CI (99.9%): [≈ 0, 7.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   16.765 ±(99.9%) 130.774 B/op [Average]
[info]   (min, avg, max) = (0.429, 16.765, 77.477), stdev = 33.962
[info]   CI (99.9%): [≈ 0, 147.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 11.000), stdev = 1.483
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.18% complete, ETA 00:09:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28368.400 ops/s
[info] # Warmup Iteration   2: 113528.722 ops/s
[info] # Warmup Iteration   3: 123020.887 ops/s
[info] Iteration   1: 126479.655 ops/s
[info]                  ·gc.alloc.rate:                   1984.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              24686.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24452.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.656 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 123790.099 ops/s
[info]                  ·gc.alloc.rate:                   1947.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              24750.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1953.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24834.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.853 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 122105.386 ops/s
[info]                  ·gc.alloc.rate:               1927.976 MB/sec
[info]                  ·gc.alloc.rate.norm:          24848.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1636.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21091.553 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 128420.785 ops/s
[info]                  ·gc.alloc.rate:                   2038.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              24982.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1982.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24295.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.255 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 126963.472 ops/s
[info]                  ·gc.alloc.rate:                   2017.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              25007.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24806.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala":
[info]   125551.880 ±(99.9%) 9829.738 ops/s [Average]
[info]   (min, avg, max) = (122105.386, 125551.880, 128420.785), stdev = 2552.752
[info]   CI (99.9%): [115722.142, 135381.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1983.078 ±(99.9%) 178.229 MB/sec [Average]
[info]   (min, avg, max) = (1927.976, 1983.078, 2038.529), stdev = 46.286
[info]   CI (99.9%): [1804.848, 2161.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24854.981 ±(99.9%) 539.904 B/op [Average]
[info]   (min, avg, max) = (24686.498, 24854.981, 25007.429), stdev = 140.211
[info]   CI (99.9%): [24315.076, 25394.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1907.909 ±(99.9%) 588.251 MB/sec [Average]
[info]   (min, avg, max) = (1636.510, 1907.909, 2001.212), stdev = 152.767
[info]   CI (99.9%): [1319.658, 2496.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   23896.332 ±(99.9%) 6102.231 B/op [Average]
[info]   (min, avg, max) = (21091.553, 23896.332, 24834.828), stdev = 1584.730
[info]   CI (99.9%): [17794.101, 29998.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.916 ±(99.9%) 7.488 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.916, 4.393), stdev = 1.944
[info]   CI (99.9%): [≈ 0, 8.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.404 ±(99.9%) 93.146 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.404, 54.656), stdev = 24.190
[info]   CI (99.9%): [≈ 0, 104.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.600, 15.000), stdev = 3.130
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.41% complete, ETA 00:09:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59352.719 ops/s
[info] # Warmup Iteration   2: 172583.890 ops/s
[info] # Warmup Iteration   3: 174329.629 ops/s
[info] Iteration   1: 172523.507 ops/s
[info]                  ·gc.alloc.rate:                   2605.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              23774.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2310.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21075.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.570 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 179060.803 ops/s
[info]                  ·gc.alloc.rate:                   2690.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              23645.467 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2657.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23361.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.464 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 177277.442 ops/s
[info]                  ·gc.alloc.rate:                   2710.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              24064.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2680.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23797.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.370 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 173517.154 ops/s
[info]                  ·gc.alloc.rate:                   2650.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              24031.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2695.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24437.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 177025.848 ops/s
[info]                  ·gc.alloc.rate:               2694.920 MB/sec
[info]                  ·gc.alloc.rate.norm:          23959.268 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2370.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21077.887 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala":
[info]   175880.951 ±(99.9%) 10586.190 ops/s [Average]
[info]   (min, avg, max) = (172523.507, 175880.951, 179060.803), stdev = 2749.200
[info]   CI (99.9%): [165294.761, 186467.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2670.524 ±(99.9%) 162.785 MB/sec [Average]
[info]   (min, avg, max) = (2605.931, 2670.524, 2710.690), stdev = 42.275
[info]   CI (99.9%): [2507.738, 2833.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   23895.150 ±(99.9%) 690.131 B/op [Average]
[info]   (min, avg, max) = (23645.467, 23895.150, 24064.788), stdev = 179.225
[info]   CI (99.9%): [23205.019, 24585.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2543.022 ±(99.9%) 718.669 MB/sec [Average]
[info]   (min, avg, max) = (2310.108, 2543.022, 2695.699), stdev = 186.636
[info]   CI (99.9%): [1824.353, 3261.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   22750.119 ±(99.9%) 6063.940 B/op [Average]
[info]   (min, avg, max) = (21075.561, 22750.119, 24437.536), stdev = 1574.786
[info]   CI (99.9%): [16686.178, 28814.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.250 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.167), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.518 ±(99.9%) 2.192 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.518, 1.464), stdev = 0.569
[info]   CI (99.9%): [≈ 0, 2.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.600, 13.000), stdev = 1.817
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 89.65% complete, ETA 00:09:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11044.867 ops/s
[info] # Warmup Iteration   2: 50355.967 ops/s
[info] # Warmup Iteration   3: 58905.209 ops/s
[info] Iteration   1: 61048.538 ops/s
[info]                  ·gc.alloc.rate:               3083.978 MB/sec
[info]                  ·gc.alloc.rate.norm:          79502.545 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2942.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75855.092 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   2: 59461.215 ops/s
[info]                  ·gc.alloc.rate:                   3027.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              80142.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2975.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78767.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.551 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 60201.666 ops/s
[info]                  ·gc.alloc.rate:                   3064.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              80113.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3013.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78780.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.075 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 60321.568 ops/s
[info]                  ·gc.alloc.rate:               3059.971 MB/sec
[info]                  ·gc.alloc.rate.norm:          79838.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2699.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 70426.487 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   5: 60923.978 ops/s
[info]                  ·gc.alloc.rate:               3101.431 MB/sec
[info]                  ·gc.alloc.rate.norm:          80119.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3049.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78787.318 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson":
[info]   60391.393 ±(99.9%) 2451.735 ops/s [Average]
[info]   (min, avg, max) = (59461.215, 60391.393, 61048.538), stdev = 636.708
[info]   CI (99.9%): [57939.657, 62843.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3067.575 ±(99.9%) 106.379 MB/sec [Average]
[info]   (min, avg, max) = (3027.944, 3067.575, 3101.431), stdev = 27.626
[info]   CI (99.9%): [2961.196, 3173.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   79943.450 ±(99.9%) 1063.831 B/op [Average]
[info]   (min, avg, max) = (79502.545, 79943.450, 80142.753), stdev = 276.274
[info]   CI (99.9%): [78879.619, 81007.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2936.222 ±(99.9%) 533.110 MB/sec [Average]
[info]   (min, avg, max) = (2699.243, 2936.222, 3049.853), stdev = 138.447
[info]   CI (99.9%): [2403.112, 3469.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   76523.348 ±(99.9%) 13999.898 B/op [Average]
[info]   (min, avg, max) = (70426.487, 76523.348, 78787.318), stdev = 3635.729
[info]   CI (99.9%): [62523.450, 90523.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.458 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.271), stdev = 0.119
[info]   CI (99.9%): [≈ 0, 0.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.525 ±(99.9%) 11.982 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.525, 7.075), stdev = 3.112
[info]   CI (99.9%): [≈ 0, 13.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   44.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.800, 9.000), stdev = 0.447
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 11.600, 13.000), stdev = 0.894
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 89.88% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44386.327 ops/s
[info] # Warmup Iteration   2: 171719.410 ops/s
[info] # Warmup Iteration   3: 184784.610 ops/s
[info] Iteration   1: 185766.755 ops/s
[info]                  ·gc.alloc.rate:                   1307.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              11073.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11180.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 185813.409 ops/s
[info]                  ·gc.alloc.rate:                   1315.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              11143.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11183.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.539 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.975 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 189002.171 ops/s
[info]                  ·gc.alloc.rate:               1330.015 MB/sec
[info]                  ·gc.alloc.rate.norm:          11075.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:      985.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8209.942 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 187977.261 ops/s
[info]                  ·gc.alloc.rate:               1333.036 MB/sec
[info]                  ·gc.alloc.rate.norm:          11157.805 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10998.776 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 190518.577 ops/s
[info]                  ·gc.alloc.rate:               1357.479 MB/sec
[info]                  ·gc.alloc.rate.norm:          11213.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1317.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10885.234 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce":
[info]   187815.635 ±(99.9%) 7925.852 ops/s [Average]
[info]   (min, avg, max) = (185766.755, 187815.635, 190518.577), stdev = 2058.319
[info]   CI (99.9%): [179889.782, 195741.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1328.643 ±(99.9%) 74.255 MB/sec [Average]
[info]   (min, avg, max) = (1307.091, 1328.643, 1357.479), stdev = 19.284
[info]   CI (99.9%): [1254.388, 1402.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   11132.878 ±(99.9%) 228.194 B/op [Average]
[info]   (min, avg, max) = (11073.906, 11132.878, 11213.883), stdev = 59.261
[info]   CI (99.9%): [10904.684, 11361.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1251.525 ±(99.9%) 571.872 MB/sec [Average]
[info]   (min, avg, max) = (985.892, 1251.525, 1320.311), stdev = 148.513
[info]   CI (99.9%): [679.653, 1823.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10491.550 ±(99.9%) 4935.425 B/op [Average]
[info]   (min, avg, max) = (8209.942, 10491.550, 11183.156), stdev = 1281.714
[info]   CI (99.9%): [5556.124, 15426.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.712 ±(99.9%) 6.085 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.712, 3.539), stdev = 1.580
[info]   CI (99.9%): [≈ 0, 6.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.030 ±(99.9%) 51.544 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.030, 29.975), stdev = 13.386
[info]   CI (99.9%): [≈ 0, 57.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 12.000), stdev = 2.950
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.12% complete, ETA 00:08:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 145780.283 ops/s
[info] # Warmup Iteration   2: 439843.926 ops/s
[info] # Warmup Iteration   3: 441298.914 ops/s
[info] Iteration   1: 446651.482 ops/s
[info]                  ·gc.alloc.rate:                   396.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              1397.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     901.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 447189.255 ops/s
[info]                  ·gc.alloc.rate:               398.394 MB/sec
[info]                  ·gc.alloc.rate.norm:          1402.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1146.477 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 438457.508 ops/s
[info]                  ·gc.alloc.rate:                   396.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              1424.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2340.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 451603.243 ops/s
[info]                  ·gc.alloc.rate:               403.143 MB/sec
[info]                  ·gc.alloc.rate.norm:          1404.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1137.591 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 459409.085 ops/s
[info]                  ·gc.alloc.rate:               406.069 MB/sec
[info]                  ·gc.alloc.rate.norm:          1390.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1120.544 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala":
[info]   448662.115 ±(99.9%) 29482.807 ops/s [Average]
[info]   (min, avg, max) = (438457.508, 448662.115, 459409.085), stdev = 7656.591
[info]   CI (99.9%): [419179.307, 478144.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   400.235 ±(99.9%) 16.076 MB/sec [Average]
[info]   (min, avg, max) = (396.706, 400.235, 406.069), stdev = 4.175
[info]   CI (99.9%): [384.158, 416.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1403.940 ±(99.9%) 48.366 B/op [Average]
[info]   (min, avg, max) = (1390.912, 1403.940, 1424.446), stdev = 12.561
[info]   CI (99.9%): [1355.574, 1452.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   377.487 ±(99.9%) 602.955 MB/sec [Average]
[info]   (min, avg, max) = (255.796, 377.487, 652.191), stdev = 156.585
[info]   CI (99.9%): [≈ 0, 980.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1329.366 ±(99.9%) 2212.236 B/op [Average]
[info]   (min, avg, max) = (901.320, 1329.366, 2340.897), stdev = 574.511
[info]   CI (99.9%): [≈ 0, 3541.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.045 ±(99.9%) 0.257 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.045, 0.149), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.35% complete, ETA 00:08:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 345452.550 ops/s
[info] # Warmup Iteration   2: 592591.584 ops/s
[info] # Warmup Iteration   3: 648442.148 ops/s
[info] Iteration   1: 656845.297 ops/s
[info]                  ·gc.alloc.rate:               361.290 MB/sec
[info]                  ·gc.alloc.rate.norm:          865.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 612.949 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 659175.786 ops/s
[info]                  ·gc.alloc.rate:               364.479 MB/sec
[info]                  ·gc.alloc.rate.norm:          870.156 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 786.505 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 652347.671 ops/s
[info]                  ·gc.alloc.rate:                   363.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              876.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     794.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 661422.173 ops/s
[info]                  ·gc.alloc.rate:               364.771 MB/sec
[info]                  ·gc.alloc.rate.norm:          867.911 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 784.626 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 651101.979 ops/s
[info]                  ·gc.alloc.rate:               363.235 MB/sec
[info]                  ·gc.alloc.rate.norm:          877.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 797.035 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala":
[info]   656178.581 ±(99.9%) 16935.258 ops/s [Average]
[info]   (min, avg, max) = (651101.979, 656178.581, 661422.173), stdev = 4398.033
[info]   CI (99.9%): [639243.323, 673113.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   363.409 ±(99.9%) 5.288 MB/sec [Average]
[info]   (min, avg, max) = (361.290, 363.409, 364.771), stdev = 1.373
[info]   CI (99.9%): [358.122, 368.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   871.555 ±(99.9%) 20.446 B/op [Average]
[info]   (min, avg, max) = (865.566, 871.555, 877.711), stdev = 5.310
[info]   CI (99.9%): [851.109, 892.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   314.860 ±(99.9%) 127.033 MB/sec [Average]
[info]   (min, avg, max) = (255.847, 314.860, 329.848), stdev = 32.990
[info]   CI (99.9%): [187.827, 441.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   755.165 ±(99.9%) 306.798 B/op [Average]
[info]   (min, avg, max) = (612.949, 755.165, 797.035), stdev = 79.675
[info]   CI (99.9%): [448.366, 1061.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.086 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.050), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 90.59% complete, ETA 00:08:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 362808.139 ops/s
[info] # Warmup Iteration   2: 670989.240 ops/s
[info] # Warmup Iteration   3: 702159.674 ops/s
[info] Iteration   1: 712714.790 ops/s
[info]                  ·gc.alloc.rate:      7.246 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 708789.284 ops/s
[info]                  ·gc.alloc.rate:      8.997 MB/sec
[info]                  ·gc.alloc.rate.norm: 19.968 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 713764.120 ops/s
[info]                  ·gc.alloc.rate:      7.258 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 712591.749 ops/s
[info]                  ·gc.alloc.rate:      7.246 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 712244.134 ops/s
[info]                  ·gc.alloc.rate:      7.244 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   712020.815 ±(99.9%) 7290.679 ops/s [Average]
[info]   (min, avg, max) = (708789.284, 712020.815, 713764.120), stdev = 1893.366
[info]   CI (99.9%): [704730.136, 719311.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   7.598 ±(99.9%) 3.011 MB/sec [Average]
[info]   (min, avg, max) = (7.244, 7.598, 8.997), stdev = 0.782
[info]   CI (99.9%): [4.587, 10.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.794 ±(99.9%) 6.831 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.794, 19.968), stdev = 1.774
[info]   CI (99.9%): [9.963, 23.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 90.82% complete, ETA 00:08:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9701.104 ops/s
[info] # Warmup Iteration   2: 32315.217 ops/s
[info] # Warmup Iteration   3: 33385.115 ops/s
[info] Iteration   1: 34140.536 ops/s
[info]                  ·gc.alloc.rate:                   1842.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              84934.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75937.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.976 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 183.281 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 35485.132 ops/s
[info]                  ·gc.alloc.rate:                   1923.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              85303.408 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1964.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87127.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.386 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 35495.245 ops/s
[info]                  ·gc.alloc.rate:               1950.148 MB/sec
[info]                  ·gc.alloc.rate.norm:          86468.929 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1972.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87457.636 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 35590.949 ops/s
[info]                  ·gc.alloc.rate:                   1942.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              85918.922 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73273.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.921 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 34958.715 ops/s
[info]                  ·gc.alloc.rate:               1923.539 MB/sec
[info]                  ·gc.alloc.rate.norm:          86594.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2003.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 90197.990 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson":
[info]   35134.115 ±(99.9%) 2342.484 ops/s [Average]
[info]   (min, avg, max) = (34140.536, 35134.115, 35590.949), stdev = 608.336
[info]   CI (99.9%): [32791.631, 37476.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1916.510 ±(99.9%) 165.536 MB/sec [Average]
[info]   (min, avg, max) = (1842.574, 1916.510, 1950.148), stdev = 42.989
[info]   CI (99.9%): [1750.973, 2082.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   85844.077 ±(99.9%) 2775.306 B/op [Average]
[info]   (min, avg, max) = (84934.850, 85844.077, 86594.274), stdev = 720.738
[info]   CI (99.9%): [83068.771, 88619.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1848.981 ±(99.9%) 694.163 MB/sec [Average]
[info]   (min, avg, max) = (1647.395, 1848.981, 2003.589), stdev = 180.272
[info]   CI (99.9%): [1154.818, 2543.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   82799.049 ±(99.9%) 29387.931 B/op [Average]
[info]   (min, avg, max) = (73273.950, 82799.049, 90197.990), stdev = 7631.952
[info]   CI (99.9%): [53411.118, 112186.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 6.772 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 3.976), stdev = 1.759
[info]   CI (99.9%): [≈ 0, 7.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   38.318 ±(99.9%) 312.272 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 38.318, 183.281), stdev = 81.096
[info]   CI (99.9%): [≈ 0, 350.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 13.000), stdev = 2.387
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 91.06% complete, ETA 00:08:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1071575.675 ops/s
[info] # Warmup Iteration   2: 3125275.157 ops/s
[info] # Warmup Iteration   3: 3354236.879 ops/s
[info] Iteration   1: 3380163.158 ops/s
[info]                  ·gc.alloc.rate:                   2998.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              1395.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2966.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1381.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 3386566.672 ops/s
[info]                  ·gc.alloc.rate:                   3011.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              1399.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2997.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1392.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 3343064.262 ops/s
[info]                  ·gc.alloc.rate:                   2961.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              1394.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2688.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1265.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 3336876.594 ops/s
[info]                  ·gc.alloc.rate:                   2977.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              1404.267 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3042.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1435.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 3368887.722 ops/s
[info]                  ·gc.alloc.rate:                   2992.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              1397.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2714.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1268.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce":
[info]   3363111.682 ±(99.9%) 85333.930 ops/s [Average]
[info]   (min, avg, max) = (3336876.594, 3363111.682, 3386566.672), stdev = 22160.951
[info]   CI (99.9%): [3277777.752, 3448445.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2988.009 ±(99.9%) 74.819 MB/sec [Average]
[info]   (min, avg, max) = (2961.157, 2988.009, 3011.606), stdev = 19.430
[info]   CI (99.9%): [2913.190, 3062.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1398.248 ±(99.9%) 14.941 B/op [Average]
[info]   (min, avg, max) = (1394.080, 1398.248, 1404.267), stdev = 3.880
[info]   CI (99.9%): [1383.308, 1413.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2881.965 ±(99.9%) 643.726 MB/sec [Average]
[info]   (min, avg, max) = (2688.614, 2881.965, 3042.574), stdev = 167.174
[info]   CI (99.9%): [2238.239, 3525.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1348.588 ±(99.9%) 297.377 B/op [Average]
[info]   (min, avg, max) = (1265.770, 1348.588, 1435.083), stdev = 77.228
[info]   CI (99.9%): [1051.211, 1645.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.042 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.023, 0.039), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.count":
[info]   43.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 9.000), stdev = 0.548
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.000, 13.000), stdev = 1.000
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 91.29% complete, ETA 00:07:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.693 ops/s
[info] # Warmup Iteration   2: 5330207.709 ops/s
[info] # Warmup Iteration   3: 5631166.216 ops/s
[info] Iteration   1: 5870999.793 ops/s
[info]                  ·gc.alloc.rate:                   1133.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     261.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 5675941.429 ops/s
[info]                  ·gc.alloc.rate:                   1105.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              306.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     271.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 5776140.573 ops/s
[info]                  ·gc.alloc.rate:                   1119.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     355.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.305 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 5971914.354 ops/s
[info]                  ·gc.alloc.rate:                   1154.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 5949167.127 ops/s
[info]                  ·gc.alloc.rate:               1164.338 MB/sec
[info]                  ·gc.alloc.rate.norm:          307.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1296.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 342.773 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava":
[info]   5848832.655 ±(99.9%) 475063.227 ops/s [Average]
[info]   (min, avg, max) = (5675941.429, 5848832.655, 5971914.354), stdev = 123372.412
[info]   CI (99.9%): [5373769.428, 6323895.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1135.274 ±(99.9%) 93.605 MB/sec [Average]
[info]   (min, avg, max) = (1105.053, 1135.274, 1164.338), stdev = 24.309
[info]   CI (99.9%): [1041.669, 1228.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   305.425 ±(99.9%) 6.602 B/op [Average]
[info]   (min, avg, max) = (303.660, 305.425, 307.916), stdev = 1.715
[info]   CI (99.9%): [298.823, 312.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1105.111 ±(99.9%) 686.008 MB/sec [Average]
[info]   (min, avg, max) = (971.238, 1105.111, 1304.307), stdev = 178.154
[info]   CI (99.9%): [419.103, 1791.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   297.344 ±(99.9%) 183.855 B/op [Average]
[info]   (min, avg, max) = (255.966, 297.344, 355.391), stdev = 47.747
[info]   CI (99.9%): [113.489, 481.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.990 ±(99.9%) 8.182 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.990, 4.790), stdev = 2.125
[info]   CI (99.9%): [≈ 0, 9.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.269 ±(99.9%) 2.230 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.269, 1.305), stdev = 0.579
[info]   CI (99.9%): [≈ 0, 2.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 11.000), stdev = 2.702
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.53% complete, ETA 00:07:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 991697.671 ops/s
[info] # Warmup Iteration   2: 3829342.599 ops/s
[info] # Warmup Iteration   3: 4014319.889 ops/s
[info] Iteration   1: 3951142.996 ops/s
[info]                  ·gc.alloc.rate:                   2184.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              869.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     781.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 4085704.441 ops/s
[info]                  ·gc.alloc.rate:                   2243.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              863.998 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     883.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 3988783.897 ops/s
[info]                  ·gc.alloc.rate:                   2181.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              860.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     783.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 4144549.200 ops/s
[info]                  ·gc.alloc.rate:                   2298.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              872.699 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2337.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     887.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 4157252.306 ops/s
[info]                  ·gc.alloc.rate:               2312.628 MB/sec
[info]                  ·gc.alloc.rate.norm:          875.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2353.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 890.981 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala":
[info]   4065486.568 ±(99.9%) 355212.068 ops/s [Average]
[info]   (min, avg, max) = (3951142.996, 4065486.568, 4157252.306), stdev = 92247.446
[info]   CI (99.9%): [3710274.500, 4420698.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2244.141 ±(99.9%) 237.036 MB/sec [Average]
[info]   (min, avg, max) = (2181.827, 2244.141, 2312.628), stdev = 61.557
[info]   CI (99.9%): [2007.105, 2481.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   868.533 ±(99.9%) 23.254 B/op [Average]
[info]   (min, avg, max) = (860.884, 868.533, 875.485), stdev = 6.039
[info]   CI (99.9%): [845.278, 891.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2186.658 ±(99.9%) 752.435 MB/sec [Average]
[info]   (min, avg, max) = (1963.086, 2186.658, 2353.562), stdev = 195.405
[info]   CI (99.9%): [1434.223, 2939.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   845.351 ±(99.9%) 221.401 B/op [Average]
[info]   (min, avg, max) = (781.602, 845.351, 890.981), stdev = 57.497
[info]   CI (99.9%): [623.950, 1066.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.142 ±(99.9%) 0.407 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.142, 0.271), stdev = 0.106
[info]   CI (99.9%): [≈ 0, 0.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.055 ±(99.9%) 0.160 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.055, 0.108), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.200, 10.000), stdev = 0.837
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.76% complete, ETA 00:07:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3888823.973 ops/s
[info] # Warmup Iteration   2: 6515418.110 ops/s
[info] # Warmup Iteration   3: 6899752.162 ops/s
[info] Iteration   1: 6642122.165 ops/s
[info]                  ·gc.alloc.rate:                   1297.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     313.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 6787827.441 ops/s
[info]                  ·gc.alloc.rate:                   1316.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     307.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.705 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 6784518.006 ops/s
[info]                  ·gc.alloc.rate:                   1321.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              306.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     305.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6841031.340 ops/s
[info]                  ·gc.alloc.rate:                   1339.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              308.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     303.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 6855453.374 ops/s
[info]                  ·gc.alloc.rate:                   1336.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              306.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     303.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala":
[info]   6782190.465 ±(99.9%) 324952.051 ops/s [Average]
[info]   (min, avg, max) = (6642122.165, 6782190.465, 6855453.374), stdev = 84389.016
[info]   CI (99.9%): [6457238.414, 7107142.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1322.132 ±(99.9%) 64.709 MB/sec [Average]
[info]   (min, avg, max) = (1297.407, 1322.132, 1339.027), stdev = 16.805
[info]   CI (99.9%): [1257.423, 1386.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   306.746 ±(99.9%) 4.230 B/op [Average]
[info]   (min, avg, max) = (305.151, 306.746, 308.061), stdev = 1.098
[info]   CI (99.9%): [302.516, 310.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1322.892 ±(99.9%) 9.590 MB/sec [Average]
[info]   (min, avg, max) = (1319.662, 1322.892, 1325.661), stdev = 2.490
[info]   CI (99.9%): [1313.303, 1332.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   306.961 ±(99.9%) 15.450 B/op [Average]
[info]   (min, avg, max) = (303.897, 306.961, 313.642), stdev = 4.012
[info]   CI (99.9%): [291.511, 322.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.649 ±(99.9%) 5.146 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.649, 3.039), stdev = 1.336
[info]   CI (99.9%): [≈ 0, 5.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.151 ±(99.9%) 1.193 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.151, 0.705), stdev = 0.310
[info]   CI (99.9%): [≈ 0, 1.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 10.000), stdev = 1.924
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 92.00% complete, ETA 00:07:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1163868.994 ops/s
[info] # Warmup Iteration   2: 3879718.510 ops/s
[info] # Warmup Iteration   3: 3991344.166 ops/s
[info] Iteration   1: 4144168.248 ops/s
[info]                  ·gc.alloc.rate:                   2459.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              934.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2290.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     870.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 4063383.697 ops/s
[info]                  ·gc.alloc.rate:                   2445.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              947.256 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     891.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 4192483.278 ops/s
[info]                  ·gc.alloc.rate:               2521.125 MB/sec
[info]                  ·gc.alloc.rate.norm:          946.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2325.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 873.125 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 4185794.536 ops/s
[info]                  ·gc.alloc.rate:                   2532.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              952.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2683.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1008.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 4100674.385 ops/s
[info]                  ·gc.alloc.rate:               2470.551 MB/sec
[info]                  ·gc.alloc.rate.norm:          948.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2363.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 907.127 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson":
[info]   4137300.829 ±(99.9%) 213086.634 ops/s [Average]
[info]   (min, avg, max) = (4063383.697, 4137300.829, 4192483.278), stdev = 55337.922
[info]   CI (99.9%): [3924214.195, 4350387.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2485.774 ±(99.9%) 148.372 MB/sec [Average]
[info]   (min, avg, max) = (2445.695, 2485.774, 2532.164), stdev = 38.532
[info]   CI (99.9%): [2337.402, 2634.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   945.598 ±(99.9%) 26.327 B/op [Average]
[info]   (min, avg, max) = (934.001, 945.598, 952.105), stdev = 6.837
[info]   CI (99.9%): [919.271, 971.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2393.211 ±(99.9%) 633.461 MB/sec [Average]
[info]   (min, avg, max) = (2290.832, 2393.211, 2683.267), stdev = 164.508
[info]   CI (99.9%): [1759.751, 3026.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   910.200 ±(99.9%) 220.220 B/op [Average]
[info]   (min, avg, max) = (870.007, 910.200, 1008.920), stdev = 57.191
[info]   CI (99.9%): [689.979, 1130.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.121 ±(99.9%) 0.908 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.121, 0.541), stdev = 0.236
[info]   CI (99.9%): [≈ 0, 1.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.345 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.206), stdev = 0.090
[info]   CI (99.9%): [≈ 0, 0.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.600, 11.000), stdev = 1.140
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 92.24% complete, ETA 00:07:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 843446.038 ops/s
[info] # Warmup Iteration   2: 2122112.516 ops/s
[info] # Warmup Iteration   3: 2176729.307 ops/s
[info] Iteration   1: 2208222.024 ops/s
[info]                  ·gc.alloc.rate:               1310.148 MB/sec
[info]                  ·gc.alloc.rate.norm:          933.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 930.576 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 2216115.499 ops/s
[info]                  ·gc.alloc.rate:                   1317.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              935.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     931.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2099150.829 ops/s
[info]                  ·gc.alloc.rate:                   1279.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              959.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     988.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2183799.208 ops/s
[info]                  ·gc.alloc.rate:                   1295.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              933.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     956.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2194082.589 ops/s
[info]                  ·gc.alloc.rate:                   1311.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              940.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     958.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce":
[info]   2180274.030 ±(99.9%) 181121.314 ops/s [Average]
[info]   (min, avg, max) = (2099150.829, 2180274.030, 2216115.499), stdev = 47036.630
[info]   CI (99.9%): [1999152.716, 2361395.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1303.057 ±(99.9%) 59.153 MB/sec [Average]
[info]   (min, avg, max) = (1279.821, 1303.057, 1317.900), stdev = 15.362
[info]   CI (99.9%): [1243.905, 1362.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   940.722 ±(99.9%) 42.137 B/op [Average]
[info]   (min, avg, max) = (933.432, 940.722, 959.556), stdev = 10.943
[info]   CI (99.9%): [898.585, 982.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1319.785 ±(99.9%) 46.884 MB/sec [Average]
[info]   (min, avg, max) = (1305.657, 1319.785, 1335.794), stdev = 12.176
[info]   CI (99.9%): [1272.901, 1366.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   953.009 ±(99.9%) 92.594 B/op [Average]
[info]   (min, avg, max) = (930.576, 953.009, 988.922), stdev = 24.046
[info]   CI (99.9%): [860.414, 1045.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.093 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.060), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 92.47% complete, ETA 00:06:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.828 ops/s
[info] # Warmup Iteration   2: 5499937.762 ops/s
[info] # Warmup Iteration   3: 5548423.420 ops/s
[info] Iteration   1: 5833796.873 ops/s
[info]                  ·gc.alloc.rate:               569.833 MB/sec
[info]                  ·gc.alloc.rate.norm:          153.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87.522 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 5808855.086 ops/s
[info]                  ·gc.alloc.rate:                   579.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     175.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.030 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 5667544.263 ops/s
[info]                  ·gc.alloc.rate:                   572.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              158.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 5834075.439 ops/s
[info]                  ·gc.alloc.rate:               570.994 MB/sec
[info]                  ·gc.alloc.rate.norm:          154.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87.881 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 5795084.608 ops/s
[info]                  ·gc.alloc.rate:                   574.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava":
[info]   5787871.254 ±(99.9%) 266884.125 ops/s [Average]
[info]   (min, avg, max) = (5667544.263, 5787871.254, 5834075.439), stdev = 69308.960
[info]   CI (99.9%): [5520987.129, 6054755.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   573.309 ±(99.9%) 14.339 MB/sec [Average]
[info]   (min, avg, max) = (569.833, 573.309, 579.258), stdev = 3.724
[info]   CI (99.9%): [558.970, 587.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   155.902 ±(99.9%) 8.169 B/op [Average]
[info]   (min, avg, max) = (153.705, 155.902, 158.836), stdev = 2.122
[info]   CI (99.9%): [147.733, 164.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   520.442 ±(99.9%) 686.610 MB/sec [Average]
[info]   (min, avg, max) = (324.470, 520.442, 652.165), stdev = 178.310
[info]   CI (99.9%): [≈ 0, 1207.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   141.809 ±(99.9%) 190.308 B/op [Average]
[info]   (min, avg, max) = (87.522, 141.809, 180.553), stdev = 49.422
[info]   CI (99.9%): [≈ 0, 332.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.018 ±(99.9%) 0.074 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.044), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.012), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.71% complete, ETA 00:06:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1820033.233 ops/s
[info] # Warmup Iteration   2: 4413179.186 ops/s
[info] # Warmup Iteration   3: 4555251.915 ops/s
[info] Iteration   1: 4648564.631 ops/s
[info]                  ·gc.alloc.rate:               1260.490 MB/sec
[info]                  ·gc.alloc.rate.norm:          426.750 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 445.108 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   2: 4673268.832 ops/s
[info]                  ·gc.alloc.rate:                   1268.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              427.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     443.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.206 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 4725860.156 ops/s
[info]                  ·gc.alloc.rate:                   1287.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              428.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     327.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4699998.426 ops/s
[info]                  ·gc.alloc.rate:               1281.624 MB/sec
[info]                  ·gc.alloc.rate.norm:          429.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 438.769 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 4738639.995 ops/s
[info]                  ·gc.alloc.rate:               1304.631 MB/sec
[info]                  ·gc.alloc.rate.norm:          433.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 436.970 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala":
[info]   4697266.408 ±(99.9%) 142585.487 ops/s [Average]
[info]   (min, avg, max) = (4648564.631, 4697266.408, 4738639.995), stdev = 37028.998
[info]   CI (99.9%): [4554680.921, 4839851.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1280.501 ±(99.9%) 66.401 MB/sec [Average]
[info]   (min, avg, max) = (1260.490, 1280.501, 1304.631), stdev = 17.244
[info]   CI (99.9%): [1214.100, 1346.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   429.004 ±(99.9%) 10.086 B/op [Average]
[info]   (min, avg, max) = (426.750, 429.004, 433.305), stdev = 2.619
[info]   CI (99.9%): [418.918, 439.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1248.376 ±(99.9%) 569.209 MB/sec [Average]
[info]   (min, avg, max) = (983.981, 1248.376, 1317.058), stdev = 147.822
[info]   CI (99.9%): [679.168, 1817.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   418.412 ±(99.9%) 195.753 B/op [Average]
[info]   (min, avg, max) = (327.669, 418.412, 445.108), stdev = 50.837
[info]   CI (99.9%): [222.659, 614.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.729 ±(99.9%) 6.140 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.729, 3.581), stdev = 1.595
[info]   CI (99.9%): [≈ 0, 6.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.245 ±(99.9%) 2.068 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.245, 1.206), stdev = 0.537
[info]   CI (99.9%): [≈ 0, 2.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 12.000), stdev = 3.564
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.94% complete, ETA 00:06:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3512532.031 ops/s
[info] # Warmup Iteration   2: 5697855.325 ops/s
[info] # Warmup Iteration   3: 5787967.302 ops/s
[info] Iteration   1: 5770718.354 ops/s
[info]                  ·gc.alloc.rate:               565.662 MB/sec
[info]                  ·gc.alloc.rate.norm:          154.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89.845 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 5787330.510 ops/s
[info]                  ·gc.alloc.rate:                   576.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5795435.132 ops/s
[info]                  ·gc.alloc.rate:               582.875 MB/sec
[info]                  ·gc.alloc.rate.norm:          158.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 179.636 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 5793320.333 ops/s
[info]                  ·gc.alloc.rate:                   575.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.204 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179.514 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 5807935.677 ops/s
[info]                  ·gc.alloc.rate:               574.168 MB/sec
[info]                  ·gc.alloc.rate.norm:          155.526 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89.897 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala":
[info]   5790948.001 ±(99.9%) 52256.384 ops/s [Average]
[info]   (min, avg, max) = (5770718.354, 5790948.001, 5807935.677), stdev = 13570.817
[info]   CI (99.9%): [5738691.618, 5843204.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   574.960 ±(99.9%) 23.780 MB/sec [Average]
[info]   (min, avg, max) = (565.662, 574.960, 582.875), stdev = 6.176
[info]   CI (99.9%): [551.180, 598.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   156.205 ±(99.9%) 5.701 B/op [Average]
[info]   (min, avg, max) = (154.275, 156.205, 158.275), stdev = 1.480
[info]   CI (99.9%): [150.504, 161.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   528.923 ±(99.9%) 696.959 MB/sec [Average]
[info]   (min, avg, max) = (329.427, 528.923, 661.540), stdev = 180.998
[info]   CI (99.9%): [≈ 0, 1225.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   143.684 ±(99.9%) 189.159 B/op [Average]
[info]   (min, avg, max) = (89.845, 143.684, 179.636), stdev = 49.124
[info]   CI (99.9%): [≈ 0, 332.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.012 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.342
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 93.18% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4252988.908 ops/s
[info] # Warmup Iteration   2: 6395475.554 ops/s
[info] # Warmup Iteration   3: 6484111.418 ops/s
[info] Iteration   1: 6481853.185 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6366180.222 ops/s
[info]                  ·gc.alloc.rate:      6.767 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.672 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6391606.117 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6379278.534 ops/s
[info]                  ·gc.alloc.rate:      1.026 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.253 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6399550.820 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   6403693.775 ±(99.9%) 175146.525 ops/s [Average]
[info]   (min, avg, max) = (6366180.222, 6403693.775, 6481853.185), stdev = 45484.996
[info]   CI (99.9%): [6228547.251, 6578840.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.559 ±(99.9%) 11.341 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.559, 6.767), stdev = 2.945
[info]   CI (99.9%): [≈ 0, 12.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.385 ±(99.9%) 2.803 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.385, 1.672), stdev = 0.728
[info]   CI (99.9%): [≈ 0, 3.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 93.41% complete, ETA 00:05:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1220770.660 ops/s
[info] # Warmup Iteration   2: 4345644.510 ops/s
[info] # Warmup Iteration   3: 4551555.994 ops/s
[info] Iteration   1: 4538359.061 ops/s
[info]                  ·gc.alloc.rate:               1281.288 MB/sec
[info]                  ·gc.alloc.rate.norm:          444.341 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1304.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 452.327 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 4600564.645 ops/s
[info]                  ·gc.alloc.rate:                   1294.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              442.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     336.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4600911.210 ops/s
[info]                  ·gc.alloc.rate:               1308.051 MB/sec
[info]                  ·gc.alloc.rate.norm:          447.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 450.047 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 4511053.279 ops/s
[info]                  ·gc.alloc.rate:               1284.270 MB/sec
[info]                  ·gc.alloc.rate.norm:          448.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1325.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 462.252 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 4494740.434 ops/s
[info]                  ·gc.alloc.rate:                   1276.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              446.998 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     466.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson":
[info]   4549125.726 ±(99.9%) 191091.391 ops/s [Average]
[info]   (min, avg, max) = (4494740.434, 4549125.726, 4600911.210), stdev = 49625.827
[info]   CI (99.9%): [4358034.335, 4740217.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1288.858 ±(99.9%) 48.025 MB/sec [Average]
[info]   (min, avg, max) = (1276.660, 1288.858, 1308.051), stdev = 12.472
[info]   CI (99.9%): [1240.833, 1336.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   445.904 ±(99.9%) 8.824 B/op [Average]
[info]   (min, avg, max) = (442.680, 445.904, 448.022), stdev = 2.292
[info]   CI (99.9%): [437.080, 454.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1252.048 ±(99.9%) 582.228 MB/sec [Average]
[info]   (min, avg, max) = (982.251, 1252.048, 1333.060), stdev = 151.203
[info]   CI (99.9%): [669.820, 1834.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   433.479 ±(99.9%) 211.451 B/op [Average]
[info]   (min, avg, max) = (336.024, 433.479, 466.745), stdev = 54.913
[info]   CI (99.9%): [222.028, 644.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.025 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 6.000), stdev = 0.894
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 93.65% complete, ETA 00:05:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 271450.779 ops/s
[info] # Warmup Iteration   2: 1354017.998 ops/s
[info] # Warmup Iteration   3: 1448571.781 ops/s
[info] Iteration   1: 1502139.843 ops/s
[info]                  ·gc.alloc.rate:                   2160.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              2263.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2078.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.289 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.446 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1472840.899 ops/s
[info]                  ·gc.alloc.rate:                   2132.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              2278.550 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2114.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1473650.077 ops/s
[info]                  ·gc.alloc.rate:               2153.376 MB/sec
[info]                  ·gc.alloc.rate.norm:          2299.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1988.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2123.660 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 1484857.888 ops/s
[info]                  ·gc.alloc.rate:                   2183.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              2314.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2339.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2479.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1470588.363 ops/s
[info]                  ·gc.alloc.rate:               2151.872 MB/sec
[info]                  ·gc.alloc.rate.norm:          2302.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2018.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2159.817 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce":
[info]   1480815.414 ±(99.9%) 50596.068 ops/s [Average]
[info]   (min, avg, max) = (1470588.363, 1480815.414, 1502139.843), stdev = 13139.638
[info]   CI (99.9%): [1430219.345, 1531411.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2156.295 ±(99.9%) 71.089 MB/sec [Average]
[info]   (min, avg, max) = (2132.311, 2156.295, 2183.564), stdev = 18.462
[info]   CI (99.9%): [2085.205, 2227.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2291.877 ±(99.9%) 78.856 B/op [Average]
[info]   (min, avg, max) = (2263.534, 2291.877, 2314.452), stdev = 20.479
[info]   CI (99.9%): [2213.021, 2370.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2061.734 ±(99.9%) 600.083 MB/sec [Average]
[info]   (min, avg, max) = (1979.192, 2061.734, 2339.176), stdev = 155.840
[info]   CI (99.9%): [1461.651, 2661.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2191.272 ±(99.9%) 630.100 B/op [Average]
[info]   (min, avg, max) = (2078.559, 2191.272, 2479.391), stdev = 163.635
[info]   CI (99.9%): [1561.171, 2821.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.687 ±(99.9%) 5.603 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.687, 3.289), stdev = 1.455
[info]   CI (99.9%): [≈ 0, 6.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.720 ±(99.9%) 5.870 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.720, 3.446), stdev = 1.524
[info]   CI (99.9%): [≈ 0, 6.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 11.000), stdev = 1.643
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 93.88% complete, ETA 00:05:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.648 ops/s
[info] # Warmup Iteration   2: 2493004.848 ops/s
[info] # Warmup Iteration   3: 2691184.079 ops/s
[info] Iteration   1: 2738738.297 ops/s
[info]                  ·gc.alloc.rate:                   531.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     372.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2743705.580 ops/s
[info]                  ·gc.alloc.rate:                   529.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     186.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.030 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2853082.093 ops/s
[info]                  ·gc.alloc.rate:                   554.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     358.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2813302.321 ops/s
[info]                  ·gc.alloc.rate:                   573.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     363.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2829902.368 ops/s
[info]                  ·gc.alloc.rate:                   544.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava":
[info]   2795746.132 ±(99.9%) 199346.548 ops/s [Average]
[info]   (min, avg, max) = (2738738.297, 2795746.132, 2853082.093), stdev = 51769.666
[info]   CI (99.9%): [2596399.584, 2995092.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   546.848 ±(99.9%) 69.868 MB/sec [Average]
[info]   (min, avg, max) = (529.925, 546.848, 573.593), stdev = 18.145
[info]   CI (99.9%): [476.980, 616.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   307.794 ±(99.9%) 28.487 B/op [Average]
[info]   (min, avg, max) = (303.098, 307.794, 320.888), stdev = 7.398
[info]   CI (99.9%): [279.307, 336.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   519.531 ±(99.9%) 684.114 MB/sec [Average]
[info]   (min, avg, max) = (324.417, 519.531, 650.524), stdev = 177.662
[info]   CI (99.9%): [≈ 0, 1203.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   292.274 ±(99.9%) 382.759 B/op [Average]
[info]   (min, avg, max) = (180.980, 292.274, 372.089), stdev = 99.401
[info]   CI (99.9%): [≈ 0, 675.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.018 ±(99.9%) 0.046 MB/sec [Average]
[info]   (min, avg, max) = (0.005, 0.018, 0.032), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.010, 0.018), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.12% complete, ETA 00:05:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 191414.671 ops/s
[info] # Warmup Iteration   2: 1653994.906 ops/s
[info] # Warmup Iteration   3: 1691095.897 ops/s
[info] Iteration   1: 1694571.055 ops/s
[info]                  ·gc.alloc.rate:               935.441 MB/sec
[info]                  ·gc.alloc.rate.norm:          868.804 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 911.958 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 1696990.947 ops/s
[info]                  ·gc.alloc.rate:                   934.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              866.308 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     913.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1693106.955 ops/s
[info]                  ·gc.alloc.rate:                   924.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              859.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     917.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.404 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.164 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1701419.375 ops/s
[info]                  ·gc.alloc.rate:                   927.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              857.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     607.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.424 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1734227.690 ops/s
[info]                  ·gc.alloc.rate:               958.348 MB/sec
[info]                  ·gc.alloc.rate.norm:          869.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 891.102 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala":
[info]   1704063.204 ±(99.9%) 66054.067 ops/s [Average]
[info]   (min, avg, max) = (1693106.955, 1704063.204, 1734227.690), stdev = 17154.031
[info]   CI (99.9%): [1638009.137, 1770117.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   935.970 ±(99.9%) 51.229 MB/sec [Average]
[info]   (min, avg, max) = (924.540, 935.970, 958.348), stdev = 13.304
[info]   CI (99.9%): [884.742, 987.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   864.441 ±(99.9%) 20.930 B/op [Average]
[info]   (min, avg, max) = (857.927, 864.441, 869.738), stdev = 5.435
[info]   CI (99.9%): [843.511, 885.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   918.345 ±(99.9%) 563.029 MB/sec [Average]
[info]   (min, avg, max) = (656.808, 918.345, 986.563), stdev = 146.217
[info]   CI (99.9%): [355.316, 1481.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   848.169 ±(99.9%) 519.353 B/op [Average]
[info]   (min, avg, max) = (607.578, 848.169, 917.079), stdev = 134.874
[info]   CI (99.9%): [328.816, 1367.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.779 ±(99.9%) 5.700 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.779, 3.404), stdev = 1.480
[info]   CI (99.9%): [≈ 0, 6.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.723 ±(99.9%) 5.299 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.723, 3.164), stdev = 1.376
[info]   CI (99.9%): [≈ 0, 6.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.600, 11.000), stdev = 3.912
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.35% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1023575.129 ops/s
[info] # Warmup Iteration   2: 2209038.140 ops/s
[info] # Warmup Iteration   3: 2378480.054 ops/s
[info] Iteration   1: 2398200.175 ops/s
[info]                  ·gc.alloc.rate:               482.990 MB/sec
[info]                  ·gc.alloc.rate.norm:          316.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:      586.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 384.932 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 2430412.407 ops/s
[info]                  ·gc.alloc.rate:               464.725 MB/sec
[info]                  ·gc.alloc.rate.norm:          300.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 214.185 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2422443.254 ops/s
[info]                  ·gc.alloc.rate:                   475.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              309.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     431.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2345611.208 ops/s
[info]                  ·gc.alloc.rate:               452.999 MB/sec
[info]                  ·gc.alloc.rate.norm:          303.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:      332.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 223.040 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 2398389.141 ops/s
[info]                  ·gc.alloc.rate:                   460.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              302.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:          332.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala":
[info]   2399011.237 ±(99.9%) 127532.793 ops/s [Average]
[info]   (min, avg, max) = (2345611.208, 2399011.237, 2430412.407), stdev = 33119.861
[info]   CI (99.9%): [2271478.444, 2526544.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   467.457 ±(99.9%) 46.286 MB/sec [Average]
[info]   (min, avg, max) = (452.999, 467.457, 482.990), stdev = 12.020
[info]   CI (99.9%): [421.171, 513.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   306.618 ±(99.9%) 25.306 B/op [Average]
[info]   (min, avg, max) = (300.945, 306.618, 316.972), stdev = 6.572
[info]   CI (99.9%): [281.311, 331.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   449.206 ±(99.9%) 627.373 MB/sec [Average]
[info]   (min, avg, max) = (330.748, 449.206, 663.772), stdev = 162.927
[info]   CI (99.9%): [≈ 0, 1076.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   294.271 ±(99.9%) 404.869 B/op [Average]
[info]   (min, avg, max) = (214.185, 294.271, 431.074), stdev = 105.143
[info]   CI (99.9%): [≈ 0, 699.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.027), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 94.59% complete, ETA 00:04:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 308854.905 ops/s
[info] # Warmup Iteration   2: 1536982.827 ops/s
[info] # Warmup Iteration   3: 1713697.614 ops/s
[info] Iteration   1: 1696907.569 ops/s
[info]                  ·gc.alloc.rate:                   959.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              889.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     609.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1706878.632 ops/s
[info]                  ·gc.alloc.rate:                   976.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              900.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     909.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1715820.056 ops/s
[info]                  ·gc.alloc.rate:                   984.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              903.075 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     907.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.904 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.664 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1718340.450 ops/s
[info]                  ·gc.alloc.rate:                   983.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              901.142 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     903.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.839 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1711484.845 ops/s
[info]                  ·gc.alloc.rate:                   980.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              901.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     904.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson":
[info]   1709886.310 ±(99.9%) 32601.732 ops/s [Average]
[info]   (min, avg, max) = (1696907.569, 1709886.310, 1718340.450), stdev = 8466.566
[info]   CI (99.9%): [1677284.578, 1742488.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   976.969 ±(99.9%) 40.257 MB/sec [Average]
[info]   (min, avg, max) = (959.141, 976.969, 984.667), stdev = 10.455
[info]   CI (99.9%): [936.712, 1017.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   899.151 ±(99.9%) 20.912 B/op [Average]
[info]   (min, avg, max) = (889.581, 899.151, 903.075), stdev = 5.431
[info]   CI (99.9%): [878.239, 920.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   920.761 ±(99.9%) 568.171 MB/sec [Average]
[info]   (min, avg, max) = (656.841, 920.761, 989.685), stdev = 147.552
[info]   CI (99.9%): [352.590, 1488.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   846.985 ±(99.9%) 511.935 B/op [Average]
[info]   (min, avg, max) = (609.204, 846.985, 909.981), stdev = 132.948
[info]   CI (99.9%): [335.050, 1358.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.779 ±(99.9%) 4.811 MB/sec [Average]
[info]   (min, avg, max) = (0.010, 0.779, 2.904), stdev = 1.250
[info]   CI (99.9%): [≈ 0, 5.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.714 ±(99.9%) 4.412 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.714, 2.664), stdev = 1.146
[info]   CI (99.9%): [≈ 0, 5.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 94.82% complete, ETA 00:04:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 518622.190 ops/s
[info] # Warmup Iteration   2: 1810385.243 ops/s
[info] # Warmup Iteration   3: 1815102.146 ops/s
[info] Iteration   1: 1844714.060 ops/s
[info]                  ·gc.alloc.rate:                   1409.595 MB/sec
[info]                  ·gc.alloc.rate.norm:              1202.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1129.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1784569.026 ops/s
[info]                  ·gc.alloc.rate:                   1382.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              1218.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1167.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.662 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1839797.386 ops/s
[info]                  ·gc.alloc.rate:                   1397.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              1195.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1128.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1863291.515 ops/s
[info]                  ·gc.alloc.rate:                   1423.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              1202.759 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1115.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1888383.244 ops/s
[info]                  ·gc.alloc.rate:                   1433.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              1194.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1105.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce":
[info]   1844151.046 ±(99.9%) 147788.162 ops/s [Average]
[info]   (min, avg, max) = (1784569.026, 1844151.046, 1888383.244), stdev = 38380.116
[info]   CI (99.9%): [1696362.884, 1991939.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1409.164 ±(99.9%) 78.672 MB/sec [Average]
[info]   (min, avg, max) = (1382.158, 1409.164, 1433.113), stdev = 20.431
[info]   CI (99.9%): [1330.491, 1487.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1202.764 ±(99.9%) 37.885 B/op [Average]
[info]   (min, avg, max) = (1194.417, 1202.764, 1218.871), stdev = 9.838
[info]   CI (99.9%): [1164.879, 1240.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1322.874 ±(99.9%) 11.179 MB/sec [Average]
[info]   (min, avg, max) = (1318.920, 1322.874, 1326.303), stdev = 2.903
[info]   CI (99.9%): [1311.695, 1334.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1129.372 ±(99.9%) 91.220 B/op [Average]
[info]   (min, avg, max) = (1105.397, 1129.372, 1167.917), stdev = 23.689
[info]   CI (99.9%): [1038.153, 1220.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.641 ±(99.9%) 5.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.641, 3.019), stdev = 1.329
[info]   CI (99.9%): [≈ 0, 5.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.564 ±(99.9%) 4.517 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.564, 2.662), stdev = 1.173
[info]   CI (99.9%): [≈ 0, 5.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 11.000), stdev = 2.490
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 95.06% complete, ETA 00:04:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.699 ops/s
[info] # Warmup Iteration   2: 2527948.094 ops/s
[info] # Warmup Iteration   3: 2755157.656 ops/s
[info] Iteration   1: 2792783.385 ops/s
[info]                  ·gc.alloc.rate:                   749.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              422.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     550.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 2774987.243 ops/s
[info]                  ·gc.alloc.rate:                   741.174 MB/sec
[info]                  ·gc.alloc.rate.norm:              420.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     369.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2761572.856 ops/s
[info]                  ·gc.alloc.rate:                   733.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              417.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     372.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2781700.634 ops/s
[info]                  ·gc.alloc.rate:               738.630 MB/sec
[info]                  ·gc.alloc.rate.norm:          417.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 370.126 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 2806169.790 ops/s
[info]                  ·gc.alloc.rate:                   746.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              418.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     367.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.221 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.367 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava":
[info]   2783442.781 ±(99.9%) 65477.611 ops/s [Average]
[info]   (min, avg, max) = (2761572.856, 2783442.781, 2806169.790), stdev = 17004.328
[info]   CI (99.9%): [2717965.170, 2848920.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   741.827 ±(99.9%) 24.802 MB/sec [Average]
[info]   (min, avg, max) = (733.209, 741.827, 749.341), stdev = 6.441
[info]   CI (99.9%): [717.026, 766.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   419.432 ±(99.9%) 7.151 B/op [Average]
[info]   (min, avg, max) = (417.861, 419.432, 422.225), stdev = 1.857
[info]   CI (99.9%): [412.281, 426.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   718.158 ±(99.9%) 556.651 MB/sec [Average]
[info]   (min, avg, max) = (652.174, 718.158, 976.749), stdev = 144.561
[info]   CI (99.9%): [161.507, 1274.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   405.935 ±(99.9%) 310.956 B/op [Average]
[info]   (min, avg, max) = (367.250, 405.935, 550.361), stdev = 80.754
[info]   CI (99.9%): [94.979, 716.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.857 ±(99.9%) 7.242 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.857, 4.221), stdev = 1.881
[info]   CI (99.9%): [≈ 0, 8.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.481 ±(99.9%) 4.061 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.481, 2.367), stdev = 1.055
[info]   CI (99.9%): [≈ 0, 4.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 9.000), stdev = 1.225
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.29% complete, ETA 00:04:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 389974.945 ops/s
[info] # Warmup Iteration   2: 2787612.887 ops/s
[info] # Warmup Iteration   3: 2911575.987 ops/s
[info] Iteration   1: 2940835.824 ops/s
[info]                  ·gc.alloc.rate:                   1295.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              693.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     702.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2955037.083 ops/s
[info]                  ·gc.alloc.rate:                   1301.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              692.876 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     701.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.696 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.968 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2946710.055 ops/s
[info]                  ·gc.alloc.rate:               1296.415 MB/sec
[info]                  ·gc.alloc.rate.norm:          692.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 699.509 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 2966115.427 ops/s
[info]                  ·gc.alloc.rate:               1311.676 MB/sec
[info]                  ·gc.alloc.rate.norm:          696.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1308.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 694.548 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 2914819.058 ops/s
[info]                  ·gc.alloc.rate:               1296.176 MB/sec
[info]                  ·gc.alloc.rate.norm:          699.841 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 709.666 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala":
[info]   2944703.489 ±(99.9%) 74001.488 ops/s [Average]
[info]   (min, avg, max) = (2914819.058, 2944703.489, 2966115.427), stdev = 19217.951
[info]   CI (99.9%): [2870702.002, 3018704.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1300.141 ±(99.9%) 26.286 MB/sec [Average]
[info]   (min, avg, max) = (1295.359, 1300.141, 1311.676), stdev = 6.826
[info]   CI (99.9%): [1273.854, 1326.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   694.848 ±(99.9%) 12.038 B/op [Average]
[info]   (min, avg, max) = (692.425, 694.848, 699.841), stdev = 3.126
[info]   CI (99.9%): [682.809, 706.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1312.422 ±(99.9%) 12.196 MB/sec [Average]
[info]   (min, avg, max) = (1308.936, 1312.422, 1316.497), stdev = 3.167
[info]   CI (99.9%): [1300.226, 1324.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   701.428 ±(99.9%) 21.074 B/op [Average]
[info]   (min, avg, max) = (694.548, 701.428, 709.666), stdev = 5.473
[info]   CI (99.9%): [680.354, 722.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.754 ±(99.9%) 6.334 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.754, 3.696), stdev = 1.645
[info]   CI (99.9%): [≈ 0, 7.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.401 ±(99.9%) 3.373 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.401, 1.968), stdev = 0.876
[info]   CI (99.9%): [≈ 0, 3.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 13.000), stdev = 3.742
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.53% complete, ETA 00:04:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1084386.635 ops/s
[info] # Warmup Iteration   2: 3152000.823 ops/s
[info] # Warmup Iteration   3: 3361770.179 ops/s
[info] Iteration   1: 3352079.628 ops/s
[info]                  ·gc.alloc.rate:                   904.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     465.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 3363298.226 ops/s
[info]                  ·gc.alloc.rate:                   895.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              419.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     464.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3371543.961 ops/s
[info]                  ·gc.alloc.rate:               899.251 MB/sec
[info]                  ·gc.alloc.rate.norm:          419.763 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 309.420 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 3358204.416 ops/s
[info]                  ·gc.alloc.rate:                   909.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              426.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     465.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.571 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 3377938.450 ops/s
[info]                  ·gc.alloc.rate:                   903.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              420.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     460.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala":
[info]   3364612.936 ±(99.9%) 39714.395 ops/s [Average]
[info]   (min, avg, max) = (3352079.628, 3364612.936, 3377938.450), stdev = 10313.702
[info]   CI (99.9%): [3324898.541, 3404327.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   902.542 ±(99.9%) 19.636 MB/sec [Average]
[info]   (min, avg, max) = (895.979, 902.542, 909.147), stdev = 5.099
[info]   CI (99.9%): [882.906, 922.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   422.107 ±(99.9%) 12.140 B/op [Average]
[info]   (min, avg, max) = (419.189, 422.107, 426.096), stdev = 3.153
[info]   CI (99.9%): [409.968, 434.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   926.114 ±(99.9%) 566.710 MB/sec [Average]
[info]   (min, avg, max) = (662.865, 926.114, 993.888), stdev = 147.173
[info]   CI (99.9%): [359.404, 1492.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   433.190 ±(99.9%) 266.553 B/op [Average]
[info]   (min, avg, max) = (309.420, 433.190, 465.812), stdev = 69.223
[info]   CI (99.9%): [166.637, 699.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.695 ±(99.9%) 5.718 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.695, 3.352), stdev = 1.485
[info]   CI (99.9%): [≈ 0, 6.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.326 ±(99.9%) 2.680 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.326, 1.571), stdev = 0.696
[info]   CI (99.9%): [≈ 0, 3.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 8.000), stdev = 2.074
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 95.76% complete, ETA 00:03:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1424213.480 ops/s
[info] # Warmup Iteration   2: 3606080.272 ops/s
[info] # Warmup Iteration   3: 3643680.150 ops/s
[info] Iteration   1: 3640768.667 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3640824.496 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3638388.366 ops/s
[info]                  ·gc.alloc.rate:      1.832 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.792 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3641890.627 ops/s
[info]                  ·gc.alloc.rate:      0.137 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.059 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3643019.424 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3640978.316 ±(99.9%) 6606.376 ops/s [Average]
[info]   (min, avg, max) = (3638388.366, 3640978.316, 3643019.424), stdev = 1715.655
[info]   CI (99.9%): [3634371.940, 3647584.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.394 ±(99.9%) 3.103 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.394, 1.832), stdev = 0.806
[info]   CI (99.9%): [≈ 0, 3.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.170 ±(99.9%) 1.342 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.170, 0.792), stdev = 0.349
[info]   CI (99.9%): [≈ 0, 1.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 96.00% complete, ETA 00:03:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 638623.680 ops/s
[info] # Warmup Iteration   2: 2635092.898 ops/s
[info] # Warmup Iteration   3: 2779657.731 ops/s
[info] Iteration   1: 2796342.591 ops/s
[info]                  ·gc.alloc.rate:                   1388.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              781.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     743.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 2843625.332 ops/s
[info]                  ·gc.alloc.rate:                   1426.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              789.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     914.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.487 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.930 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2881800.341 ops/s
[info]                  ·gc.alloc.rate:               1431.158 MB/sec
[info]                  ·gc.alloc.rate.norm:          781.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1316.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 718.921 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 2892285.733 ops/s
[info]                  ·gc.alloc.rate:                   1447.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              787.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     716.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2896053.923 ops/s
[info]                  ·gc.alloc.rate:               1450.640 MB/sec
[info]                  ·gc.alloc.rate.norm:          787.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 718.605 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson":
[info]   2862021.584 ±(99.9%) 162429.982 ops/s [Average]
[info]   (min, avg, max) = (2796342.591, 2862021.584, 2896053.923), stdev = 42182.550
[info]   CI (99.9%): [2699591.603, 3024451.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1428.857 ±(99.9%) 95.388 MB/sec [Average]
[info]   (min, avg, max) = (1388.460, 1428.857, 1450.640), stdev = 24.772
[info]   CI (99.9%): [1333.469, 1524.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   785.561 ±(99.9%) 15.204 B/op [Average]
[info]   (min, avg, max) = (781.252, 785.561, 789.651), stdev = 3.948
[info]   CI (99.9%): [770.357, 800.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1386.150 ±(99.9%) 573.222 MB/sec [Average]
[info]   (min, avg, max) = (1316.975, 1386.150, 1652.404), stdev = 148.864
[info]   CI (99.9%): [812.928, 1959.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   762.477 ±(99.9%) 330.091 B/op [Average]
[info]   (min, avg, max) = (716.659, 762.477, 914.527), stdev = 85.724
[info]   CI (99.9%): [432.385, 1092.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.706 ±(99.9%) 5.987 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.706, 3.487), stdev = 1.555
[info]   CI (99.9%): [≈ 0, 6.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.391 ±(99.9%) 3.313 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.391, 1.930), stdev = 0.860
[info]   CI (99.9%): [≈ 0, 3.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 12.000), stdev = 3.209
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce
[info] # Run progress: 96.24% complete, ETA 00:03:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2280.949 ops/s
[info] # Warmup Iteration   2: 6024.265 ops/s
[info] # Warmup Iteration   3: 11553.262 ops/s
[info] Iteration   1: 11585.748 ops/s
[info]                  ·gc.alloc.rate:                   1356.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              184275.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     178171.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.828 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 11851.501 ops/s
[info]                  ·gc.alloc.rate:                   1387.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              184219.267 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.349 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174276.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.935 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 522.497 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 11915.455 ops/s
[info]                  ·gc.alloc.rate:                   1388.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              183436.326 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172269.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.486 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 11899.503 ops/s
[info]                  ·gc.alloc.rate:                   1403.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              185646.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172369.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.753 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 11836.194 ops/s
[info]                  ·gc.alloc.rate:                   1403.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              186670.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173965.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.575 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce":
[info]   11817.680 ±(99.9%) 514.943 ops/s [Average]
[info]   (min, avg, max) = (11585.748, 11817.680, 11915.455), stdev = 133.729
[info]   CI (99.9%): [11302.737, 12332.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1388.029 ±(99.9%) 74.033 MB/sec [Average]
[info]   (min, avg, max) = (1356.669, 1388.029, 1403.912), stdev = 19.226
[info]   CI (99.9%): [1313.996, 1462.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   184849.604 ±(99.9%) 4973.765 B/op [Average]
[info]   (min, avg, max) = (183436.326, 184849.604, 186670.289), stdev = 1291.671
[info]   CI (99.9%): [179875.839, 189823.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1307.971 ±(99.9%) 16.138 MB/sec [Average]
[info]   (min, avg, max) = (1303.194, 1307.971, 1312.349), stdev = 4.191
[info]   CI (99.9%): [1291.832, 1324.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   174210.344 ±(99.9%) 9214.769 B/op [Average]
[info]   (min, avg, max) = (172269.828, 174210.344, 178171.051), stdev = 2393.046
[info]   CI (99.9%): [164995.576, 183425.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.907 ±(99.9%) 6.574 MB/sec [Average]
[info]   (min, avg, max) = (0.019, 0.907, 3.935), stdev = 1.707
[info]   CI (99.9%): [≈ 0, 7.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   120.428 ±(99.9%) 873.046 B/op [Average]
[info]   (min, avg, max) = (2.575, 120.428, 522.497), stdev = 226.727
[info]   CI (99.9%): [≈ 0, 993.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 15.000), stdev = 4.615
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala
[info] # Run progress: 96.47% complete, ETA 00:03:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3208.401 ops/s
[info] # Warmup Iteration   2: 17947.905 ops/s
[info] # Warmup Iteration   3: 21961.600 ops/s
[info] Iteration   1: 22044.153 ops/s
[info]                  ·gc.alloc.rate:                   332.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              23727.362 B/op
[info]                  ·gc.churn.PS_Eden_Space:          318.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22709.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.972 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 22130.141 ops/s
[info]                  ·gc.alloc.rate:               338.184 MB/sec
[info]                  ·gc.alloc.rate.norm:          24050.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:      318.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22622.105 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 21956.105 ops/s
[info]                  ·gc.alloc.rate:                   345.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              24796.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:          319.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22896.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.984 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 21693.051 ops/s
[info]                  ·gc.alloc.rate:               336.912 MB/sec
[info]                  ·gc.alloc.rate.norm:          24444.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23174.419 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 22189.556 ops/s
[info]                  ·gc.alloc.rate:               339.532 MB/sec
[info]                  ·gc.alloc.rate.norm:          24078.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22749.937 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala":
[info]   22002.601 ±(99.9%) 747.978 ops/s [Average]
[info]   (min, avg, max) = (21693.051, 22002.601, 22189.556), stdev = 194.248
[info]   CI (99.9%): [21254.623, 22750.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   338.586 ±(99.9%) 18.967 MB/sec [Average]
[info]   (min, avg, max) = (332.347, 338.586, 345.953), stdev = 4.926
[info]   CI (99.9%): [319.619, 357.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24219.564 ±(99.9%) 1580.631 B/op [Average]
[info]   (min, avg, max) = (23727.362, 24219.564, 24796.583), stdev = 410.485
[info]   CI (99.9%): [22638.933, 25800.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   319.167 ±(99.9%) 4.352 MB/sec [Average]
[info]   (min, avg, max) = (318.088, 319.167, 320.796), stdev = 1.130
[info]   CI (99.9%): [314.815, 323.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   22830.528 ±(99.9%) 833.218 B/op [Average]
[info]   (min, avg, max) = (22622.105, 22830.528, 23174.419), stdev = 216.384
[info]   CI (99.9%): [21997.310, 23663.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.191 ±(99.9%) 6.282 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.191, 2.984), stdev = 1.631
[info]   CI (99.9%): [≈ 0, 7.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala
[info] # Run progress: 96.71% complete, ETA 00:02:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10392.759 ops/s
[info] # Warmup Iteration   2: 20586.657 ops/s
[info] # Warmup Iteration   3: 22270.876 ops/s
[info] Iteration   1: 21850.836 ops/s
[info]                  ·gc.alloc.rate:                   247.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              17803.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18423.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.499 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 22353.187 ops/s
[info]                  ·gc.alloc.rate:               249.422 MB/sec
[info]                  ·gc.alloc.rate.norm:          17558.629 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18010.162 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 22123.805 ops/s
[info]                  ·gc.alloc.rate:      246.261 MB/sec
[info]                  ·gc.alloc.rate.norm: 17519.013 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 22501.228 ops/s
[info]                  ·gc.alloc.rate:                   254.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              17766.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23063.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.912 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 22466.999 ops/s
[info]                  ·gc.alloc.rate:               251.044 MB/sec
[info]                  ·gc.alloc.rate.norm:          17578.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23098.443 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala":
[info]   22259.211 ±(99.9%) 1046.929 ops/s [Average]
[info]   (min, avg, max) = (21850.836, 22259.211, 22501.228), stdev = 271.884
[info]   CI (99.9%): [21212.282, 23306.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   249.605 ±(99.9%) 11.882 MB/sec [Average]
[info]   (min, avg, max) = (246.261, 249.605, 254.012), stdev = 3.086
[info]   CI (99.9%): [237.723, 261.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   17645.194 ±(99.9%) 500.608 B/op [Average]
[info]   (min, avg, max) = (17519.013, 17645.194, 17803.064), stdev = 130.006
[info]   CI (99.9%): [17144.586, 18145.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   234.272 ±(99.9%) 523.995 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 234.272, 329.878), stdev = 136.080
[info]   CI (99.9%): [≈ 0, 758.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   16519.200 ±(99.9%) 36775.642 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16519.200, 23098.443), stdev = 9550.517
[info]   CI (99.9%): [≈ 0, 53294.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.882 ±(99.9%) 5.034 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.882, 2.912), stdev = 1.307
[info]   CI (99.9%): [≈ 0, 5.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 4.000), stdev = 1.517
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson
[info] # Run progress: 96.94% complete, ETA 00:02:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 150.845 ops/s
[info] # Warmup Iteration   2: 2499.284 ops/s
[info] # Warmup Iteration   3: 5958.013 ops/s
[info] Iteration   1: 7356.665 ops/s
[info]                  ·gc.alloc.rate:                   2060.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              440094.496 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2194.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     468659.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.651 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 352.561 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   2: 7430.330 ops/s
[info]                  ·gc.alloc.rate:                   2064.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              437268.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1901.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     402739.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.980 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1266.515 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 7550.338 ops/s
[info]                  ·gc.alloc.rate:                   2106.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              439145.334 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1897.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     395506.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.034 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 7462.887 ops/s
[info]                  ·gc.alloc.rate:                   2115.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              446199.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2244.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     473298.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.390 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 7513.787 ops/s
[info]                  ·gc.alloc.rate:               2118.405 MB/sec
[info]                  ·gc.alloc.rate.norm:          443705.133 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1960.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 410639.943 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson":
[info]   7462.801 ±(99.9%) 289.321 ops/s [Average]
[info]   (min, avg, max) = (7356.665, 7462.801, 7550.338), stdev = 75.136
[info]   CI (99.9%): [7173.480, 7752.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2093.328 ±(99.9%) 109.077 MB/sec [Average]
[info]   (min, avg, max) = (2060.884, 2093.328, 2118.405), stdev = 28.327
[info]   CI (99.9%): [1984.250, 2202.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   441282.466 ±(99.9%) 13902.214 B/op [Average]
[info]   (min, avg, max) = (437268.054, 441282.466, 446199.314), stdev = 3610.361
[info]   CI (99.9%): [427380.252, 455184.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2039.731 ±(99.9%) 642.869 MB/sec [Average]
[info]   (min, avg, max) = (1897.592, 2039.731, 2244.418), stdev = 166.951
[info]   CI (99.9%): [1396.862, 2682.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   430168.910 ±(99.9%) 145063.769 B/op [Average]
[info]   (min, avg, max) = (395506.983, 430168.910, 473298.973), stdev = 37672.600
[info]   CI (99.9%): [285105.141, 575232.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.555 ±(99.9%) 9.893 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.555, 5.980), stdev = 2.569
[info]   CI (99.9%): [≈ 0, 11.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   329.900 ±(99.9%) 2095.760 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 329.900, 1266.515), stdev = 544.262
[info]   CI (99.9%): [≈ 0, 2425.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.time":
[info]   75.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 15.000, 31.000), stdev = 9.460
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala
[info] # Run progress: 97.18% complete, ETA 00:02:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1790.352 ops/s
[info] # Warmup Iteration   2: 58232.757 ops/s
[info] # Warmup Iteration   3: 60515.292 ops/s
[info] Iteration   1: 61154.573 ops/s
[info]                  ·gc.alloc.rate:                   789.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              20311.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16663.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.607 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 61464.018 ops/s
[info]                  ·gc.alloc.rate:                   796.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              20389.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16614.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.533 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 60753.292 ops/s
[info]                  ·gc.alloc.rate:                   791.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              20493.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25282.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.539 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 61958.840 ops/s
[info]                  ·gc.alloc.rate:                   792.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              20137.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16566.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.247 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107.879 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 62197.762 ops/s
[info]                  ·gc.alloc.rate:                   801.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              20272.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16469.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala":
[info]   61505.697 ±(99.9%) 2257.995 ops/s [Average]
[info]   (min, avg, max) = (60753.292, 61505.697, 62197.762), stdev = 586.394
[info]   CI (99.9%): [59247.702, 63763.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   794.196 ±(99.9%) 18.732 MB/sec [Average]
[info]   (min, avg, max) = (789.235, 794.196, 801.552), stdev = 4.865
[info]   CI (99.9%): [775.465, 812.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   20320.847 ±(99.9%) 511.310 B/op [Average]
[info]   (min, avg, max) = (20137.582, 20320.847, 20493.485), stdev = 132.786
[info]   CI (99.9%): [19809.536, 20832.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   715.142 ±(99.9%) 561.474 MB/sec [Average]
[info]   (min, avg, max) = (647.491, 715.142, 975.959), stdev = 145.813
[info]   CI (99.9%): [153.669, 1276.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   18319.210 ±(99.9%) 14990.624 B/op [Average]
[info]   (min, avg, max) = (16469.339, 18319.210, 25282.070), stdev = 3893.017
[info]   CI (99.9%): [3328.586, 33309.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.029 ±(99.9%) 7.042 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.029, 4.247), stdev = 1.829
[info]   CI (99.9%): [≈ 0, 8.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   26.115 ±(99.9%) 178.875 B/op [Average]
[info]   (min, avg, max) = (0.533, 26.115, 107.879), stdev = 46.453
[info]   CI (99.9%): [≈ 0, 204.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 12.000), stdev = 2.864
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala
[info] # Run progress: 97.41% complete, ETA 00:02:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27156.173 ops/s
[info] # Warmup Iteration   2: 69983.145 ops/s
[info] # Warmup Iteration   3: 70581.019 ops/s
[info] Iteration   1: 70697.746 ops/s
[info]                  ·gc.alloc.rate:                   489.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              10888.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14473.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 69421.273 ops/s
[info]                  ·gc.alloc.rate:               475.006 MB/sec
[info]                  ·gc.alloc.rate.norm:          10768.333 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7384.763 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 69266.678 ops/s
[info]                  ·gc.alloc.rate:                   481.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              10925.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14818.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.946 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 69546.481 ops/s
[info]                  ·gc.alloc.rate:               479.194 MB/sec
[info]                  ·gc.alloc.rate.norm:          10840.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7386.780 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 69509.291 ops/s
[info]                  ·gc.alloc.rate:               481.768 MB/sec
[info]                  ·gc.alloc.rate.norm:          10908.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14811.588 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala":
[info]   69688.294 ±(99.9%) 2212.199 ops/s [Average]
[info]   (min, avg, max) = (69266.678, 69688.294, 70697.746), stdev = 574.501
[info]   CI (99.9%): [67476.094, 71900.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   481.214 ±(99.9%) 19.731 MB/sec [Average]
[info]   (min, avg, max) = (475.006, 481.214, 489.092), stdev = 5.124
[info]   CI (99.9%): [461.483, 500.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   10866.084 ±(99.9%) 243.220 B/op [Average]
[info]   (min, avg, max) = (10768.333, 10866.084, 10925.005), stdev = 63.164
[info]   CI (99.9%): [10622.864, 11109.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   521.803 ±(99.9%) 687.810 MB/sec [Average]
[info]   (min, avg, max) = (325.752, 521.803, 654.149), stdev = 178.622
[info]   CI (99.9%): [≈ 0, 1209.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   11775.045 ±(99.9%) 15438.221 B/op [Average]
[info]   (min, avg, max) = (7384.763, 11775.045, 14818.135), stdev = 4009.257
[info]   CI (99.9%): [≈ 0, 27213.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.070 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.042), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.225 ±(99.9%) 1.580 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.225, 0.946), stdev = 0.410
[info]   CI (99.9%): [≈ 0, 1.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 97.65% complete, ETA 00:02:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30847.816 ops/s
[info] # Warmup Iteration   2: 75015.822 ops/s
[info] # Warmup Iteration   3: 76086.768 ops/s
[info] Iteration   1: 76414.217 ops/s
[info]                  ·gc.alloc.rate:      20.646 MB/sec
[info]                  ·gc.alloc.rate.norm: 425.092 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 75381.555 ops/s
[info]                  ·gc.alloc.rate:      27.923 MB/sec
[info]                  ·gc.alloc.rate.norm: 582.836 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 75662.814 ops/s
[info]                  ·gc.alloc.rate:                   27.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              563.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5320.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.773 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57.685 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 76284.049 ops/s
[info]                  ·gc.alloc.rate:      20.551 MB/sec
[info]                  ·gc.alloc.rate.norm: 424.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 76355.433 ops/s
[info]                  ·gc.alloc.rate:      20.572 MB/sec
[info]                  ·gc.alloc.rate.norm: 424.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   76019.614 ±(99.9%) 1798.747 ops/s [Average]
[info]   (min, avg, max) = (75381.555, 76019.614, 76414.217), stdev = 467.129
[info]   CI (99.9%): [74220.867, 77818.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   23.353 ±(99.9%) 14.618 MB/sec [Average]
[info]   (min, avg, max) = (20.551, 23.353, 27.923), stdev = 3.796
[info]   CI (99.9%): [8.736, 37.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   483.825 ±(99.9%) 314.640 B/op [Average]
[info]   (min, avg, max) = (424.006, 483.825, 582.836), stdev = 81.711
[info]   CI (99.9%): [169.184, 798.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   51.156 ±(99.9%) 440.472 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.156, 255.782), stdev = 114.389
[info]   CI (99.9%): [≈ 0, 491.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   1064.122 ±(99.9%) 9162.413 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1064.122, 5320.611), stdev = 2379.449
[info]   CI (99.9%): [≈ 0, 10226.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.555 ±(99.9%) 4.775 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.555, 2.773), stdev = 1.240
[info]   CI (99.9%): [≈ 0, 5.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   11.537 ±(99.9%) 99.336 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.537, 57.685), stdev = 25.797
[info]   CI (99.9%): [≈ 0, 110.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 97.88% complete, ETA 00:01:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58932.704 ops/s
[info] # Warmup Iteration   2: 284878.476 ops/s
[info] # Warmup Iteration   3: 297469.399 ops/s
[info] Iteration   1: 311088.448 ops/s
[info]                  ·gc.alloc.rate:                   1846.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              9340.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8378.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.289 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.641 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 311250.120 ops/s
[info]                  ·gc.alloc.rate:                   1863.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              9419.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9991.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.368 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 312595.795 ops/s
[info]                  ·gc.alloc.rate:                   1874.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              9438.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8300.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.314 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 312618.003 ops/s
[info]                  ·gc.alloc.rate:                   1890.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              9517.903 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1991.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10027.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 312772.546 ops/s
[info]                  ·gc.alloc.rate:               1878.454 MB/sec
[info]                  ·gc.alloc.rate.norm:          9452.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1670.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8406.816 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce":
[info]   312064.982 ±(99.9%) 3167.058 ops/s [Average]
[info]   (min, avg, max) = (311088.448, 312064.982, 312772.546), stdev = 822.475
[info]   CI (99.9%): [308897.924, 315232.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1870.612 ±(99.9%) 64.282 MB/sec [Average]
[info]   (min, avg, max) = (1846.357, 1870.612, 1890.470), stdev = 16.694
[info]   CI (99.9%): [1806.330, 1934.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9433.809 ±(99.9%) 245.653 B/op [Average]
[info]   (min, avg, max) = (9340.790, 9433.809, 9517.903), stdev = 63.795
[info]   CI (99.9%): [9188.157, 9679.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1788.690 ±(99.9%) 687.393 MB/sec [Average]
[info]   (min, avg, max) = (1648.650, 1788.690, 1991.677), stdev = 178.514
[info]   CI (99.9%): [1101.296, 2476.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9021.010 ±(99.9%) 3477.773 B/op [Average]
[info]   (min, avg, max) = (8300.817, 9021.010, 10027.449), stdev = 903.167
[info]   CI (99.9%): [5543.237, 12498.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.729 ±(99.9%) 5.528 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.729, 3.289), stdev = 1.436
[info]   CI (99.9%): [≈ 0, 6.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.686 ±(99.9%) 27.966 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.686, 16.641), stdev = 7.263
[info]   CI (99.9%): [≈ 0, 31.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 13.000), stdev = 2.702
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.12% complete, ETA 00:01:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79023.509 ops/s
[info] # Warmup Iteration   2: 466383.162 ops/s
[info] # Warmup Iteration   3: 489586.626 ops/s
[info] Iteration   1: 501984.237 ops/s
[info]                  ·gc.alloc.rate:               573.521 MB/sec
[info]                  ·gc.alloc.rate.norm:          1798.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2038.430 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 502531.278 ops/s
[info]                  ·gc.alloc.rate:                   579.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              1814.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2040.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 501780.651 ops/s
[info]                  ·gc.alloc.rate:               571.126 MB/sec
[info]                  ·gc.alloc.rate.norm:          1791.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1023.804 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 480976.369 ops/s
[info]                  ·gc.alloc.rate:                   554.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              1814.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2138.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 481759.195 ops/s
[info]                  ·gc.alloc.rate:                   552.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              1803.299 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2138.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala":
[info]   493806.346 ±(99.9%) 43749.062 ops/s [Average]
[info]   (min, avg, max) = (480976.369, 493806.346, 502531.278), stdev = 11361.492
[info]   CI (99.9%): [450057.284, 537555.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   566.080 ±(99.9%) 46.594 MB/sec [Average]
[info]   (min, avg, max) = (552.064, 566.080, 579.239), stdev = 12.100
[info]   CI (99.9%): [519.486, 612.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1804.274 ±(99.9%) 38.523 B/op [Average]
[info]   (min, avg, max) = (1791.444, 1804.274, 1814.346), stdev = 10.004
[info]   CI (99.9%): [1765.751, 1842.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   587.214 ±(99.9%) 561.468 MB/sec [Average]
[info]   (min, avg, max) = (326.396, 587.214, 654.555), stdev = 145.811
[info]   CI (99.9%): [25.746, 1148.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1875.820 ±(99.9%) 1843.875 B/op [Average]
[info]   (min, avg, max) = (1023.804, 1875.820, 2138.394), stdev = 478.848
[info]   CI (99.9%): [31.946, 3719.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.142 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.068), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 7.000), stdev = 1.789
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.35% complete, ETA 00:01:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 556684.964 ops/s
[info] # Warmup Iteration   2: 1216929.430 ops/s
[info] # Warmup Iteration   3: 1244787.908 ops/s
[info] Iteration   1: 1225218.064 ops/s
[info]                  ·gc.alloc.rate:                   682.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              876.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     847.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1255813.645 ops/s
[info]                  ·gc.alloc.rate:                   671.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              841.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     828.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1260128.973 ops/s
[info]                  ·gc.alloc.rate:               680.307 MB/sec
[info]                  ·gc.alloc.rate.norm:          849.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 827.019 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 1243343.135 ops/s
[info]                  ·gc.alloc.rate:                   670.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              849.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     839.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1257497.837 ops/s
[info]                  ·gc.alloc.rate:                   673.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              842.698 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     831.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.309 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala":
[info]   1248400.331 ±(99.9%) 55743.828 ops/s [Average]
[info]   (min, avg, max) = (1225218.064, 1248400.331, 1260128.973), stdev = 14476.495
[info]   CI (99.9%): [1192656.503, 1304144.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   675.696 ±(99.9%) 20.730 MB/sec [Average]
[info]   (min, avg, max) = (670.796, 675.696, 682.574), stdev = 5.383
[info]   CI (99.9%): [654.966, 696.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   851.938 ±(99.9%) 55.363 B/op [Average]
[info]   (min, avg, max) = (841.514, 851.938, 876.820), stdev = 14.377
[info]   CI (99.9%): [796.576, 907.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   662.050 ±(99.9%) 6.655 MB/sec [Average]
[info]   (min, avg, max) = (659.823, 662.050, 664.139), stdev = 1.728
[info]   CI (99.9%): [655.395, 668.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   834.694 ±(99.9%) 33.452 B/op [Average]
[info]   (min, avg, max) = (827.019, 834.694, 847.595), stdev = 8.687
[info]   CI (99.9%): [801.243, 868.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.550 ±(99.9%) 4.509 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.550, 2.644), stdev = 1.171
[info]   CI (99.9%): [≈ 0, 5.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.688 ±(99.9%) 5.642 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.688, 3.309), stdev = 1.465
[info]   CI (99.9%): [≈ 0, 6.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 98.59% complete, ETA 00:01:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11924.442 ops/s
[info] # Warmup Iteration   2: 83830.807 ops/s
[info] # Warmup Iteration   3: 97772.544 ops/s
[info] Iteration   1: 102462.835 ops/s
[info]                  ·gc.alloc.rate:                   3249.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              49919.594 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3275.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50311.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.075 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 101287.215 ops/s
[info]                  ·gc.alloc.rate:                   3241.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              50373.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2980.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46311.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.647 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 102453.965 ops/s
[info]                  ·gc.alloc.rate:                   3291.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              50567.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3354.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51524.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.959 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 103320.501 ops/s
[info]                  ·gc.alloc.rate:                   3307.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              50377.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3041.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46326.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.585 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 102534.957 ops/s
[info]                  ·gc.alloc.rate:               3284.325 MB/sec
[info]                  ·gc.alloc.rate.norm:          50401.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3053.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46865.931 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson":
[info]   102411.894 ±(99.9%) 2796.678 ops/s [Average]
[info]   (min, avg, max) = (101287.215, 102411.894, 103320.501), stdev = 726.288
[info]   CI (99.9%): [99615.217, 105208.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3275.023 ±(99.9%) 107.561 MB/sec [Average]
[info]   (min, avg, max) = (3241.930, 3275.023, 3307.089), stdev = 27.933
[info]   CI (99.9%): [3167.462, 3382.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   50327.915 ±(99.9%) 931.778 B/op [Average]
[info]   (min, avg, max) = (49919.594, 50327.915, 50567.910), stdev = 241.980
[info]   CI (99.9%): [49396.137, 51259.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3141.037 ±(99.9%) 629.186 MB/sec [Average]
[info]   (min, avg, max) = (2980.488, 3141.037, 3354.111), stdev = 163.398
[info]   CI (99.9%): [2511.851, 3770.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   48267.988 ±(99.9%) 9499.440 B/op [Average]
[info]   (min, avg, max) = (46311.244, 48267.988, 51524.688), stdev = 2466.974
[info]   CI (99.9%): [38768.548, 57767.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.121 ±(99.9%) 0.609 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.121, 0.396), stdev = 0.158
[info]   CI (99.9%): [≈ 0, 0.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.853 ±(99.9%) 9.350 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.853, 6.075), stdev = 2.428
[info]   CI (99.9%): [≈ 0, 11.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   47.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   62.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.400, 14.000), stdev = 1.140
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 98.82% complete, ETA 00:01:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 84711.664 ops/s
[info] # Warmup Iteration   2: 317729.199 ops/s
[info] # Warmup Iteration   3: 325866.312 ops/s
[info] Iteration   1: 318069.702 ops/s
[info]                  ·gc.alloc.rate:                   1124.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              5563.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4888.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 323910.987 ops/s
[info]                  ·gc.alloc.rate:                   1131.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              5495.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6420.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.977 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.465 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 338451.752 ops/s
[info]                  ·gc.alloc.rate:                   1174.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              5462.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4598.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.549 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 337498.840 ops/s
[info]                  ·gc.alloc.rate:                   1190.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              5554.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6125.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 337620.941 ops/s
[info]                  ·gc.alloc.rate:                   1185.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              5526.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4605.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.873 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce":
[info]   331110.444 ±(99.9%) 36478.937 ops/s [Average]
[info]   (min, avg, max) = (318069.702, 331110.444, 338451.752), stdev = 9473.464
[info]   CI (99.9%): [294631.507, 367589.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1161.433 ±(99.9%) 120.302 MB/sec [Average]
[info]   (min, avg, max) = (1124.750, 1161.433, 1190.979), stdev = 31.242
[info]   CI (99.9%): [1041.132, 1281.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5520.543 ±(99.9%) 161.209 B/op [Average]
[info]   (min, avg, max) = (5462.701, 5520.543, 5563.973), stdev = 41.865
[info]   CI (99.9%): [5359.334, 5681.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1120.021 ±(99.9%) 694.203 MB/sec [Average]
[info]   (min, avg, max) = (988.070, 1120.021, 1321.373), stdev = 180.282
[info]   CI (99.9%): [425.818, 1814.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5327.703 ±(99.9%) 3377.509 B/op [Average]
[info]   (min, avg, max) = (4598.610, 5327.703, 6420.302), stdev = 877.128
[info]   CI (99.9%): [1950.194, 8705.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.708 ±(99.9%) 4.910 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.708, 2.977), stdev = 1.275
[info]   CI (99.9%): [≈ 0, 5.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.417 ±(99.9%) 23.894 B/op [Average]
[info]   (min, avg, max) = (0.097, 3.417, 14.465), stdev = 6.205
[info]   CI (99.9%): [≈ 0, 27.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 12.000), stdev = 3.633
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.06% complete, ETA 00:00:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 187392.303 ops/s
[info] # Warmup Iteration   2: 714929.132 ops/s
[info] # Warmup Iteration   3: 737559.192 ops/s
[info] Iteration   1: 730727.941 ops/s
[info]                  ·gc.alloc.rate:                   578.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              1245.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1401.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 720207.515 ops/s
[info]                  ·gc.alloc.rate:               568.224 MB/sec
[info]                  ·gc.alloc.rate.norm:          1241.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1425.160 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 736985.922 ops/s
[info]                  ·gc.alloc.rate:               571.135 MB/sec
[info]                  ·gc.alloc.rate.norm:          1219.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 698.488 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 727175.689 ops/s
[info]                  ·gc.alloc.rate:                   570.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              1234.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1417.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 732825.531 ops/s
[info]                  ·gc.alloc.rate:               573.008 MB/sec
[info]                  ·gc.alloc.rate.norm:          1230.591 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1408.461 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala":
[info]   729584.520 ±(99.9%) 24378.181 ops/s [Average]
[info]   (min, avg, max) = (720207.515, 729584.520, 736985.922), stdev = 6330.936
[info]   CI (99.9%): [705206.338, 753962.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   572.189 ±(99.9%) 14.677 MB/sec [Average]
[info]   (min, avg, max) = (568.224, 572.189, 578.277), stdev = 3.812
[info]   CI (99.9%): [557.512, 586.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1234.310 ±(99.9%) 38.604 B/op [Average]
[info]   (min, avg, max) = (1219.725, 1234.310, 1245.516), stdev = 10.025
[info]   CI (99.9%): [1195.706, 1272.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   588.174 ±(99.9%) 562.104 MB/sec [Average]
[info]   (min, avg, max) = (327.066, 588.174, 655.830), stdev = 145.977
[info]   CI (99.9%): [26.069, 1150.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1270.220 ±(99.9%) 1231.165 B/op [Average]
[info]   (min, avg, max) = (698.488, 1270.220, 1425.160), stdev = 319.730
[info]   CI (99.9%): [39.054, 2501.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.155 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.090), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 7.000), stdev = 1.732
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.29% complete, ETA 00:00:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 749969.476 ops/s
[info] # Warmup Iteration   2: 1517749.655 ops/s
[info] # Warmup Iteration   3: 1650452.989 ops/s
[info] Iteration   1: 1635702.618 ops/s
[info]                  ·gc.alloc.rate:                   780.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              751.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     633.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1634072.033 ops/s
[info]                  ·gc.alloc.rate:               787.334 MB/sec
[info]                  ·gc.alloc.rate.norm:          758.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 635.825 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 1564462.764 ops/s
[info]                  ·gc.alloc.rate:                   746.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              751.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     997.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1651300.831 ops/s
[info]                  ·gc.alloc.rate:                   779.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              742.560 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     631.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.659 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1660422.441 ops/s
[info]                  ·gc.alloc.rate:                   792.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              751.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     626.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.355 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala":
[info]   1629192.137 ±(99.9%) 145616.184 ops/s [Average]
[info]   (min, avg, max) = (1564462.764, 1629192.137, 1660422.441), stdev = 37816.061
[info]   CI (99.9%): [1483575.953, 1774808.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   777.383 ±(99.9%) 69.315 MB/sec [Average]
[info]   (min, avg, max) = (746.629, 777.383, 792.730), stdev = 18.001
[info]   CI (99.9%): [708.067, 846.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   750.925 ±(99.9%) 21.513 B/op [Average]
[info]   (min, avg, max) = (742.560, 750.925, 758.309), stdev = 5.587
[info]   CI (99.9%): [729.412, 772.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   726.826 ±(99.9%) 570.559 MB/sec [Average]
[info]   (min, avg, max) = (658.826, 726.826, 991.875), stdev = 148.172
[info]   CI (99.9%): [156.268, 1297.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   705.006 ±(99.9%) 630.492 B/op [Average]
[info]   (min, avg, max) = (626.370, 705.006, 997.838), stdev = 163.737
[info]   CI (99.9%): [74.515, 1335.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.646 ±(99.9%) 4.655 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.646, 2.791), stdev = 1.209
[info]   CI (99.9%): [≈ 0, 5.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.615 ±(99.9%) 4.434 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.615, 2.659), stdev = 1.152
[info]   CI (99.9%): [≈ 0, 5.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 8.000), stdev = 1.817
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 99.53% complete, ETA 00:00:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 999664.490 ops/s
[info] # Warmup Iteration   2: 1592837.892 ops/s
[info] # Warmup Iteration   3: 1729964.076 ops/s
[info] Iteration   1: 1731023.496 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1742847.822 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1736625.814 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1731250.230 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1725319.606 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   1733413.394 ±(99.9%) 25486.228 ops/s [Average]
[info]   (min, avg, max) = (1725319.606, 1733413.394, 1742847.822), stdev = 6618.693
[info]   CI (99.9%): [1707927.165, 1758899.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 99.76% complete, ETA 00:00:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103828.171 ops/s
[info] # Warmup Iteration   2: 430492.084 ops/s
[info] # Warmup Iteration   3: 454913.030 ops/s
[info] Iteration   1: 454015.498 ops/s
[info]                  ·gc.alloc.rate:               692.030 MB/sec
[info]                  ·gc.alloc.rate.norm:          2398.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2274.513 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 455376.196 ops/s
[info]                  ·gc.alloc.rate:                   698.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              2413.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2270.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 455991.629 ops/s
[info]                  ·gc.alloc.rate:               693.419 MB/sec
[info]                  ·gc.alloc.rate.norm:          2393.468 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2269.371 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 439062.780 ops/s
[info]                  ·gc.alloc.rate:                   671.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              2408.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2360.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 435579.639 ops/s
[info]                  ·gc.alloc.rate:                   666.174 MB/sec
[info]                  ·gc.alloc.rate.norm:              2407.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2381.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.260 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson":
[info]   448005.148 ±(99.9%) 37953.744 ops/s [Average]
[info]   (min, avg, max) = (435579.639, 448005.148, 455991.629), stdev = 9856.467
[info]   CI (99.9%): [410051.404, 485958.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   684.381 ±(99.9%) 55.171 MB/sec [Average]
[info]   (min, avg, max) = (666.174, 684.381, 698.337), stdev = 14.328
[info]   CI (99.9%): [629.209, 739.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2404.340 ±(99.9%) 30.958 B/op [Average]
[info]   (min, avg, max) = (2393.468, 2404.340, 2413.547), stdev = 8.040
[info]   CI (99.9%): [2373.382, 2435.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   657.612 ±(99.9%) 4.673 MB/sec [Average]
[info]   (min, avg, max) = (656.139, 657.612, 659.138), stdev = 1.214
[info]   CI (99.9%): [652.939, 662.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2311.214 ±(99.9%) 212.416 B/op [Average]
[info]   (min, avg, max) = (2269.371, 2311.214, 2381.645), stdev = 55.164
[info]   CI (99.9%): [2098.798, 2523.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.695 ±(99.9%) 5.808 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.695, 3.393), stdev = 1.508
[info]   CI (99.9%): [≈ 0, 6.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.511 ±(99.9%) 20.989 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.511, 12.260), stdev = 5.451
[info]   CI (99.9%): [≈ 0, 23.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # Run complete. Total time: 01:30:25
[info] Benchmark                                                                                        (size)   Mode  Cnt         Score         Error   Units
[info] AdtBenchmark.readCirce                                                                              N/A  thrpt    5    826340.706 ±   20038.328   ops/s
[info] AdtBenchmark.readCirce:·gc.alloc.rate                                                               N/A  thrpt    5      2399.787 ±      53.276  MB/sec
[info] AdtBenchmark.readCirce:·gc.alloc.rate.norm                                                          N/A  thrpt    5      4570.586 ±      97.905    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                      N/A  thrpt    5      2323.062 ±      97.571  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                                 N/A  thrpt    5      4424.500 ±     202.648    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                                  N/A  thrpt    5         0.820 ±       6.571  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                             N/A  thrpt    5         1.551 ±      12.414    B/op
[info] AdtBenchmark.readCirce:·gc.count                                                                    N/A  thrpt    5        35.000                counts
[info] AdtBenchmark.readCirce:·gc.time                                                                     N/A  thrpt    5        51.000                    ms
[info] AdtBenchmark.readJacksonScala                                                                       N/A  thrpt    5   1877183.194 ±  175812.394   ops/s
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate                                                        N/A  thrpt    5      1248.552 ±     133.953  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm                                                   N/A  thrpt    5      1046.738 ±      33.490    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      1241.599 ±     556.979  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5      1040.864 ±     457.812    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.866 ±       7.301  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.712 ±       5.997    B/op
[info] AdtBenchmark.readJacksonScala:·gc.count                                                             N/A  thrpt    5        19.000                counts
[info] AdtBenchmark.readJacksonScala:·gc.time                                                              N/A  thrpt    5        44.000                    ms
[info] AdtBenchmark.readJsoniterScala                                                                      N/A  thrpt    5   5911894.612 ±  103707.262   ops/s
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate                                                       N/A  thrpt    5       403.723 ±      19.165  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       107.471 ±       5.340    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5       382.497 ±     616.947  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       101.845 ±     164.544    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.008 ±       0.044  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.002 ±       0.012    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.count                                                            N/A  thrpt    5         6.000                counts
[info] AdtBenchmark.readJsoniterScala:·gc.time                                                             N/A  thrpt    5        14.000                    ms
[info] AdtBenchmark.readPlayJson                                                                           N/A  thrpt    5    268802.580 ±   19365.909   ops/s
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate                                                            N/A  thrpt    5      2307.488 ±     159.983  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate.norm                                                       N/A  thrpt    5     13508.724 ±     262.892    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                   N/A  thrpt    5      2201.908 ±     626.233  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                              N/A  thrpt    5     12880.232 ±    2807.198    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                               N/A  thrpt    5         0.162 ±       1.221  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                          N/A  thrpt    5         0.944 ±       7.079    B/op
[info] AdtBenchmark.readPlayJson:·gc.count                                                                 N/A  thrpt    5        33.000                counts
[info] AdtBenchmark.readPlayJson:·gc.time                                                                  N/A  thrpt    5        48.000                    ms
[info] AdtBenchmark.writeCirce                                                                             N/A  thrpt    5    901887.676 ±   36508.589   ops/s
[info] AdtBenchmark.writeCirce:·gc.alloc.rate                                                              N/A  thrpt    5      2423.416 ±     118.522  MB/sec
[info] AdtBenchmark.writeCirce:·gc.alloc.rate.norm                                                         N/A  thrpt    5      4228.691 ±      82.419    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                     N/A  thrpt    5      2325.489 ±     101.320  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                                N/A  thrpt    5      4058.053 ±     185.202    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                                 N/A  thrpt    5         0.229 ±       1.839  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                            N/A  thrpt    5         0.401 ±       3.219    B/op
[info] AdtBenchmark.writeCirce:·gc.count                                                                   N/A  thrpt    5        35.000                counts
[info] AdtBenchmark.writeCirce:·gc.time                                                                    N/A  thrpt    5        46.000                    ms
[info] AdtBenchmark.writeJacksonScala                                                                      N/A  thrpt    5   2833338.174 ±  221200.997   ops/s
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate                                                       N/A  thrpt    5      1220.277 ±      88.548  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       677.855 ±      19.625    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      1178.434 ±     689.295  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       654.731 ±     384.620    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.789 ±       5.670  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.433 ±       3.096    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.count                                                            N/A  thrpt    5        18.000                counts
[info] AdtBenchmark.writeJacksonScala:·gc.time                                                             N/A  thrpt    5        38.000                    ms
[info] AdtBenchmark.writeJsoniterScala                                                                     N/A  thrpt    5  13799432.678 ±  905040.739   ops/s
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate                                                      N/A  thrpt    5       727.189 ±      62.615  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                                 N/A  thrpt    5        82.936 ±       7.304    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5       661.035 ±       5.714  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5        75.401 ±       5.346    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.600 ±       5.006  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.070 ±       0.583    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.count                                                           N/A  thrpt    5        10.000                counts
[info] AdtBenchmark.writeJsoniterScala:·gc.time                                                            N/A  thrpt    5        29.000                    ms
[info] AdtBenchmark.writeJsoniterScalaPrealloc                                                             N/A  thrpt    5  16787188.770 ±   82333.256   ops/s
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                              N/A  thrpt    5         0.995 ±       7.433  MB/sec
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                         N/A  thrpt    5         0.093 ±       0.698    B/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                   N/A  thrpt    5           ≈ 0                counts
[info] AdtBenchmark.writePlayJson                                                                          N/A  thrpt    5    646285.625 ±   37754.702   ops/s
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate                                                           N/A  thrpt    5      1993.772 ±      98.763  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate.norm                                                      N/A  thrpt    5      4855.454 ±      93.745    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5      1924.718 ±     553.059  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5      4689.580 ±    1467.415    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5         0.333 ±       2.155  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5         0.814 ±       5.267    B/op
[info] AdtBenchmark.writePlayJson:·gc.count                                                                N/A  thrpt    5        29.000                counts
[info] AdtBenchmark.writePlayJson:·gc.time                                                                 N/A  thrpt    5        43.000                    ms
[info] AnyRefsBenchmark.readCirce                                                                          N/A  thrpt    5   2004638.198 ±   84137.635   ops/s
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate                                                           N/A  thrpt    5      2794.813 ±     107.018  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm                                                      N/A  thrpt    5      2193.827 ±      37.927    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5      2733.591 ±    1073.236  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5      2145.701 ±     836.775    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5         0.062 ±       0.405  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5         0.049 ±       0.313    B/op
[info] AnyRefsBenchmark.readCirce:·gc.count                                                                N/A  thrpt    5        41.000                counts
[info] AnyRefsBenchmark.readCirce:·gc.time                                                                 N/A  thrpt    5        56.000                    ms
[info] AnyRefsBenchmark.readDslJsonJava                                                                    N/A  thrpt    5   9760396.219 ±  451194.651   ops/s
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate                                                     N/A  thrpt    5      1229.899 ±      41.724  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                                N/A  thrpt    5       198.283 ±       3.526    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      1171.093 ±     682.770  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5       188.955 ±     114.518    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.941 ±       7.911  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.155 ±       1.301    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.count                                                          N/A  thrpt    5        18.000                counts
[info] AnyRefsBenchmark.readDslJsonJava:·gc.time                                                           N/A  thrpt    5        40.000                    ms
[info] AnyRefsBenchmark.readJacksonScala                                                                   N/A  thrpt    5   3226621.106 ±  216657.801   ops/s
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate                                                    N/A  thrpt    5      2023.503 ±     135.554  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                               N/A  thrpt    5       986.880 ±      21.405    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      1977.138 ±      75.461  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5       964.430 ±      58.876    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.846 ±       6.967  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         0.410 ±       3.376    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.count                                                         N/A  thrpt    5        30.000                counts
[info] AnyRefsBenchmark.readJacksonScala:·gc.time                                                          N/A  thrpt    5        50.000                    ms
[info] AnyRefsBenchmark.readJsoniterScala                                                                  N/A  thrpt    5  13356660.791 ±  764114.228   ops/s
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate                                                   N/A  thrpt    5      1759.812 ±      72.217  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                              N/A  thrpt    5       207.365 ±       4.111    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1730.138 ±     575.152  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5       203.849 ±      65.870    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.591 ±       4.780  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.069 ±       0.560    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.count                                                        N/A  thrpt    5        26.000                counts
[info] AnyRefsBenchmark.readJsoniterScala:·gc.time                                                         N/A  thrpt    5        40.000                    ms
[info] AnyRefsBenchmark.readPlayJson                                                                       N/A  thrpt    5   1142099.572 ±  163744.622   ops/s
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate                                                        N/A  thrpt    5      2566.081 ±     210.093  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm                                                   N/A  thrpt    5      3537.912 ±     278.154    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      2467.671 ±     713.474  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5      3400.859 ±     878.184    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.375 ±       2.437  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.544 ±       3.609    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.count                                                             N/A  thrpt    5        37.000                counts
[info] AnyRefsBenchmark.readPlayJson:·gc.time                                                              N/A  thrpt    5        57.000                    ms
[info] AnyRefsBenchmark.writeCirce                                                                         N/A  thrpt    5   2431572.188 ±  120774.219   ops/s
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate                                                          N/A  thrpt    5      2146.812 ±     130.248  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm                                                     N/A  thrpt    5      1389.547 ±      47.740    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5      2055.786 ±     562.078  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5      1330.511 ±     346.802    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.779 ±       6.005  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5         0.508 ±       3.926    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.count                                                               N/A  thrpt    5        31.000                counts
[info] AnyRefsBenchmark.writeCirce:·gc.time                                                                N/A  thrpt    5        46.000                    ms
[info] AnyRefsBenchmark.writeDslJsonJava                                                                   N/A  thrpt    5  19730585.520 ±  721443.728   ops/s
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate                                                    N/A  thrpt    5       620.187 ±      24.288  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                               N/A  thrpt    5        49.467 ±       2.669    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5       584.892 ±     559.862  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5        46.719 ±      45.554    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.013 ±       0.060  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         0.001 ±       0.005    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.count                                                         N/A  thrpt    5         9.000                counts
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.time                                                          N/A  thrpt    5        28.000                    ms
[info] AnyRefsBenchmark.writeJacksonScala                                                                  N/A  thrpt    5   6257084.152 ±  394752.715   ops/s
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate                                                   N/A  thrpt    5      1782.475 ±     117.463  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                              N/A  thrpt    5       448.273 ±       8.442    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1776.087 ±     721.497  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5       446.401 ±     165.690    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.793 ±       6.561  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.197 ±       1.625    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.count                                                        N/A  thrpt    5        27.000                counts
[info] AnyRefsBenchmark.writeJacksonScala:·gc.time                                                         N/A  thrpt    5        44.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScala                                                                 N/A  thrpt    5  27736110.124 ± 1849793.266   ops/s
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate                                                  N/A  thrpt    5       871.343 ±      58.176  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                             N/A  thrpt    5        49.427 ±       0.447    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       859.838 ±     692.759  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5        48.814 ±      40.072    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.666 ±       5.467  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.037 ±       0.307    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.count                                                       N/A  thrpt    5        13.000                counts
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.time                                                        N/A  thrpt    5        32.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc                                                         N/A  thrpt    5  31680106.293 ±  123384.303   ops/s
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                          N/A  thrpt    5         0.373 ±       3.212  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                     N/A  thrpt    5         0.019 ±       0.160    B/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                               N/A  thrpt    5           ≈ 0                counts
[info] AnyRefsBenchmark.writePlayJson                                                                      N/A  thrpt    5   1799216.328 ±  189503.182   ops/s
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate                                                       N/A  thrpt    5      3054.077 ±     296.937  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm                                                  N/A  thrpt    5      2671.430 ±      35.684    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space                                     N/A  thrpt    5         0.004 ±       0.032  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm                                N/A  thrpt    5         0.003 ±       0.030    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.Metaspace                                                  N/A  thrpt    5         0.011 ±       0.095  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.Metaspace.norm                                             N/A  thrpt    5         0.010 ±       0.087    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      3000.679 ±     183.685  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5      2625.820 ±     261.098    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen                                                 N/A  thrpt    5         0.505 ±       4.349  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm                                            N/A  thrpt    5         0.464 ±       3.997    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.129 ±       0.360  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.114 ±       0.330    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.count                                                            N/A  thrpt    5        47.000                counts
[info] AnyRefsBenchmark.writePlayJson:·gc.time                                                             N/A  thrpt    5       113.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readCirce                                                            128  thrpt    5    312801.432 ±   19817.690   ops/s
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1923.625 ±     168.765  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5      9677.984 ±     288.265    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1855.372 ±     697.383  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      9330.427 ±    3213.448    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.737 ±       5.816  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         3.808 ±      30.144    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.count                                                  128  thrpt    5        28.000                counts
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.time                                                   128  thrpt    5        44.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala                                                     128  thrpt    5    481430.867 ±   22713.570   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5       630.724 ±      35.840  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      2061.065 ±      48.712    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       587.048 ±     561.816  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1917.993 ±    1831.367    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.021 ±       0.080  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.068 ±       0.263    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        32.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala                                                    128  thrpt    5   1292361.221 ±   52599.269   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       888.012 ±      52.505  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1081.331 ±      40.202    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       861.610 ±     696.369  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1048.878 ±     840.528    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.687 ±       4.204  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.835 ±       5.091    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5        13.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        30.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readPlayJson                                                         128  thrpt    5    114636.418 ±    3261.287   ops/s
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      3642.791 ±      98.239  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     50009.150 ±     606.607    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3486.776 ±     627.214  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     47858.984 ±    7599.251    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.067 ±       0.250  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.912 ±       3.396    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        52.000                counts
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        70.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeCirce                                                           128  thrpt    5    340998.302 ±   23512.463   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1181.045 ±      97.406  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5      5450.306 ±     209.237    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1186.158 ±     694.734  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      5475.781 ±    3246.212    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.716 ±       4.722  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         3.302 ±      21.623    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        18.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        36.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala                                                    128  thrpt    5    887181.092 ±   59468.519   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       658.739 ±      37.825  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5      1168.618 ±      24.286    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       653.773 ±       7.513  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1160.037 ±      78.813    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.733 ±       6.042  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         1.294 ±      10.674    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        10.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        33.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala                                                   128  thrpt    5   2524931.412 ±   98801.874   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1206.679 ±      59.126  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       752.028 ±      13.477    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1124.798 ±     699.233  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       700.690 ±     424.606    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.666 ±       4.728  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.414 ±       2.943    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        17.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        32.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   2923359.595 ±   26693.075   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson                                                        128  thrpt    5    490601.913 ±    7155.707   ops/s
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5       731.535 ±      23.832  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5      2346.564 ±     107.136    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5       720.097 ±     563.527  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      2310.997 ±    1843.035    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.171 ±       1.337  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.549 ±       4.297    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        11.000                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        18.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readCirce                                                               128  thrpt    5     17346.850 ±    1188.113   ops/s
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1394.597 ±      82.437  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5    126528.958 ±    4686.231    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1320.926 ±      16.037  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    119869.885 ±    9102.276    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.762 ±       6.069  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        70.743 ±     564.972    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        20.000                counts
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.time                                                      128  thrpt    5        37.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala                                                        128  thrpt    5     36659.275 ±    2007.033   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1012.143 ±      73.009  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     43447.938 ±    1602.367    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       983.841 ±      13.013  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     42241.849 ±    2679.133    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.845 ±       6.086  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        36.898 ±     266.090    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5        15.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5        38.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala                                                       128  thrpt    5     45226.937 ±    1262.142   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       624.782 ±      10.275  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5     21741.249 ±     609.865    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       595.906 ±     572.345  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     20751.337 ±   20112.063    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.434 ±       1.527    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         9.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        24.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readPlayJson                                                            128  thrpt    5     29534.020 ±    2280.831   ops/s
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1494.060 ±     112.240  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     79605.841 ±    2083.957    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1505.971 ±     696.736  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     80258.729 ±   37531.760    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.920 ±       7.567  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        49.492 ±     407.190    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        23.000                counts
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        48.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeCirce                                                              128  thrpt    5     25132.917 ±     828.661   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1831.452 ±      79.393  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5    114675.148 ±    3424.172    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1786.316 ±     717.328  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    111805.138 ±   42606.107    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.791 ±       6.320  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        49.806 ±     398.115    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        27.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        42.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala                                                       128  thrpt    5     24568.205 ±    1303.532   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1572.905 ±     103.689  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5    100755.335 ±    2715.808    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1507.765 ±     680.248  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     96685.532 ±   47130.587    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.899 ±       5.330  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        58.088 ±     345.435    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5        23.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        42.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala                                                      128  thrpt    5     27294.075 ±    1284.861   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      1626.399 ±      67.493  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5     93783.340 ±    2367.788    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1523.368 ±     680.317  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     87901.730 ±   41477.049    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.716 ±       4.330  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        41.200 ±     248.611    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5        23.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5        38.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5     27493.209 ±     515.931   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5      1581.150 ±      71.308  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5     90506.023 ±    2745.504    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                      128  thrpt    5      1521.153 ±     690.764  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     87075.624 ±   39596.360    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.712 ±       4.431  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5        40.950 ±     254.739    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5        23.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                     128  thrpt    5        39.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writePlayJson                                                           128  thrpt    5      7872.330 ±      99.536   ops/s
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1175.434 ±      38.994  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    234958.841 ±    6892.390    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1184.733 ±     693.058  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    236850.982 ±  139494.965    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.837 ±       4.275  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       167.363 ±     855.247    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        18.000                counts
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        40.000                    ms
[info] ArrayOfBigIntsBenchmark.readCirce                                                                   128  thrpt    5     17600.517 ±     938.973   ops/s
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1621.000 ±      53.462  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5    144934.211 ±    3643.708    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1586.396 ±     570.850  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5    141797.824 ±   49059.451    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.749 ±       4.372  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        66.280 ±     383.854    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        24.000                counts
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        42.000                    ms
[info] ArrayOfBigIntsBenchmark.readJacksonScala                                                            128  thrpt    5     42285.035 ±    3753.843   ops/s
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1203.313 ±      91.603  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     44786.520 ±    2212.202    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1178.302 ±     690.076  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     43874.279 ±   26171.660    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.862 ±       5.044  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        32.295 ±     190.294    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        18.000                counts
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        41.000                    ms
[info] ArrayOfBigIntsBenchmark.readJsoniterScala                                                           128  thrpt    5     66680.932 ±    5007.658   ops/s
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       761.260 ±      49.407  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5     17967.329 ±     316.792    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       729.215 ±     574.523  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     17200.760 ±   13175.489    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.595 ±       4.157  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        13.918 ±      97.246    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5        11.000                counts
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        27.000                    ms
[info] ArrayOfBigIntsBenchmark.readPlayJson                                                                128  thrpt    5     32714.401 ±     797.409   ops/s
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      2166.209 ±      54.202  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5    104219.437 ±    2749.131    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2066.321 ±     587.411  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     99434.972 ±   29746.574    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.171 ±       1.295  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         8.163 ±      61.867    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        31.000                counts
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        52.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJacksonScala                                                           128  thrpt    5     26625.840 ±    1651.029   ops/s
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1717.390 ±     135.350  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5    101489.234 ±    1931.082    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1645.162 ±     883.465  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     97145.490 ±   48848.191    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.799 ±       5.770  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        47.994 ±     346.937    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5        25.000                counts
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        42.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala                                                          128  thrpt    5     34208.237 ±    1433.328   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5      1546.671 ±      69.055  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5     71158.828 ±    2848.698    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1522.746 ±     691.433  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     70074.850 ±   32454.667    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.695 ±       4.136  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        32.361 ±     193.047    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5        23.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        41.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5     34829.152 ±     874.795   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5      1513.720 ±      36.686  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5     68394.710 ±    1284.153    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                          128  thrpt    5      1454.954 ±     693.083  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     65766.312 ±   32387.098    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.687 ±       4.181  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        31.294 ±     191.074    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5        22.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                         128  thrpt    5        39.000                    ms
[info] ArrayOfBooleansBenchmark.readCirce                                                                  128  thrpt    5    332300.476 ±    9341.847   ops/s
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                   128  thrpt    5      1887.253 ±      88.463  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                              128  thrpt    5      8937.144 ±     308.336    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1854.454 ±     715.291  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5      8781.043 ±    3339.642    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.770 ±       6.059  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         3.636 ±      28.587    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.count                                                        128  thrpt    5        28.000                counts
[info] ArrayOfBooleansBenchmark.readCirce:·gc.time                                                         128  thrpt    5        43.000                    ms
[info] ArrayOfBooleansBenchmark.readDslJsonJava                                                            128  thrpt    5   1513805.755 ±  113061.937   ops/s
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate                                             128  thrpt    5       491.601 ±      19.703  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        128  thrpt    5       511.148 ±      36.441    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    128  thrpt    5       520.098 ±     686.091  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       542.136 ±     731.262    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.010 ±       0.040  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.011 ±       0.041    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count                                                  128  thrpt    5         8.000                counts
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time                                                   128  thrpt    5        26.000                    ms
[info] ArrayOfBooleansBenchmark.readJacksonScala                                                           128  thrpt    5    677715.438 ±   15175.083   ops/s
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                            128  thrpt    5       560.431 ±      25.597  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1301.388 ±      51.839    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       522.834 ±     688.025  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1214.175 ±    1598.700    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.029 ±       0.166    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.count                                                 128  thrpt    5         8.000                counts
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.time                                                  128  thrpt    5        26.000                    ms
[info] ArrayOfBooleansBenchmark.readJsoniterScala                                                          128  thrpt    5   1821615.191 ±  127719.183   ops/s
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       367.066 ±      46.179  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       317.121 ±      28.560    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       314.952 ±     127.353  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       271.980 ±     103.149    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         5.000                counts
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5        13.000                    ms
[info] ArrayOfBooleansBenchmark.readPlayJson                                                               128  thrpt    5     98613.196 ±    1400.921   ops/s
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      3318.956 ±      75.643  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     52970.342 ±     610.479    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      3206.705 ±     644.179  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     51172.828 ±    9659.438    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.029 ±       0.072  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.466 ±       1.147    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        48.000                counts
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        63.000                    ms
[info] ArrayOfBooleansBenchmark.writeCirce                                                                 128  thrpt    5    354971.521 ±   23240.432   ops/s
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                  128  thrpt    5      1228.279 ±     112.613  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                             128  thrpt    5      5444.242 ±     165.958    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1187.852 ±     695.644  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5      5261.647 ±    2952.462    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.733 ±       4.985  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         3.284 ±      22.436    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.count                                                       128  thrpt    5        18.000                counts
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.time                                                        128  thrpt    5        34.000                    ms
[info] ArrayOfBooleansBenchmark.writeDslJsonJava                                                           128  thrpt    5   1554789.404 ±   89447.487   ops/s
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate                                            128  thrpt    5       743.604 ±      48.557  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       128  thrpt    5       752.682 ±      25.290    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   128  thrpt    5       717.619 ±     554.648  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       725.761 ±     539.844    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.885 ±       7.512  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.919 ±       7.804    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count                                                 128  thrpt    5        11.000                counts
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time                                                  128  thrpt    5        34.000                    ms
[info] ArrayOfBooleansBenchmark.writeJacksonScala                                                          128  thrpt    5   1043468.009 ±   28563.917   ops/s
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5       757.280 ±      24.859  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      1142.078 ±      25.666    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       723.659 ±     570.471  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1091.846 ±     873.757    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.729 ±       4.827  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.101 ±       7.312    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5        11.000                counts
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5        31.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScala                                                         128  thrpt    5   2774147.010 ±   82825.905   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      1326.665 ±      71.058  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5       752.625 ±      20.245    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1323.727 ±      12.312  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       751.025 ±      26.341    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.641 ±       5.387  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.367 ±       3.082    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5        20.000                counts
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5        33.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5   3235962.125 ±   53388.422   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5           ≈ 0                counts
[info] ArrayOfBooleansBenchmark.writePlayJson                                                              128  thrpt    5    596007.210 ±   42461.298   ops/s
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                               128  thrpt    5       689.570 ±      43.579  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                          128  thrpt    5      1821.003 ±      54.765    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5       657.822 ±       6.166  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1737.542 ±     124.673    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.691 ±       5.773  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.801 ±      15.043    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.count                                                    128  thrpt    5        10.000                counts
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.time                                                     128  thrpt    5        33.000                    ms
[info] ArrayOfBytesBenchmark.readCirce                                                                     128  thrpt    5    158443.084 ±    8774.930   ops/s
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      2011.366 ±     138.228  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     19973.110 ±     414.126    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1922.152 ±     588.281  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     19099.160 ±    6345.221    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.771 ±       6.279  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         7.758 ±      63.237    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.count                                                           128  thrpt    5        29.000                counts
[info] ArrayOfBytesBenchmark.readCirce:·gc.time                                                            128  thrpt    5        44.000                    ms
[info] ArrayOfBytesBenchmark.readJacksonScala                                                              128  thrpt    5    449086.813 ±    6790.941   ops/s
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5       371.684 ±       7.217  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      1302.488 ±      14.751    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       312.315 ±     121.644  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1094.313 ±     420.742    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.029 ±       0.154    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5         5.000                counts
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        17.000                    ms
[info] ArrayOfBytesBenchmark.readJsoniterScala                                                             128  thrpt    5   1272250.532 ±    6925.642   ops/s
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       255.640 ±      32.452  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       316.243 ±      40.864    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       234.221 ±     523.883  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       289.925 ±     648.551    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.008 ±       0.072  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.010 ±       0.089    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5         4.000                counts
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        11.000                    ms
[info] ArrayOfBytesBenchmark.readPlayJson                                                                  128  thrpt    5     80272.022 ±    3229.510   ops/s
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      3217.997 ±     170.308  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     63090.901 ±    1202.377    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      3071.253 ±     539.513  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     60209.648 ±    9662.519    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.325 ±       1.305    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        46.000                counts
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        63.000                    ms
[info] ArrayOfBytesBenchmark.writeCirce                                                                    128  thrpt    5    303290.971 ±   19932.035   ops/s
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      1716.041 ±     109.259  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5      8904.401 ±     192.161    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1653.130 ±      33.740  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5      8579.422 ±     481.469    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.712 ±       5.442  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         3.651 ±      27.829    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        25.000                counts
[info] ArrayOfBytesBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        38.000                    ms
[info] ArrayOfBytesBenchmark.writeJacksonScala                                                             128  thrpt    5   1896369.127 ±  139029.644   ops/s
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1005.626 ±      73.071  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5       834.551 ±      19.199    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       984.462 ±       9.977  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       817.203 ±      58.646    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.762 ±       5.523  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.622 ±       4.492    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5        15.000                counts
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        33.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScala                                                            128  thrpt    5   2824890.826 ±  115527.022   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       783.289 ±      30.020  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       436.400 ±       9.378    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       728.526 ±     571.631  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       405.918 ±     318.878    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.687 ±       4.446  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.379 ±       2.450    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5        11.000                counts
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        29.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5   3043437.724 ±  127616.251   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5         0.749 ±       6.442  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.387 ±       3.327    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfBytesBenchmark.writePlayJson                                                                 128  thrpt    5     49454.380 ±     254.757   ops/s
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      2233.892 ±      77.160  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     71081.800 ±    2478.420    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      2123.132 ±     747.120  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     67557.428 ±   23779.636    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.254 ±       2.097  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         8.091 ±      66.824    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        32.000                counts
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        51.000                    ms
[info] ArrayOfCharsBenchmark.readCirce                                                                     128  thrpt    5    241763.795 ±    6906.584   ops/s
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      2658.565 ±      90.508  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     17303.572 ±     399.458    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      2599.675 ±     541.576  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     16924.334 ±    3833.505    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.125 ±       0.898  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         0.814 ±       5.858    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        39.000                counts
[info] ArrayOfCharsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        52.000                    ms
[info] ArrayOfCharsBenchmark.readJacksonScala                                                              128  thrpt    5    377553.626 ±   30978.566   ops/s
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1952.234 ±     148.066  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      8138.239 ±     229.132    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1850.612 ±     686.863  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      7719.204 ±    3048.858    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.828 ±       6.645  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         3.429 ±      27.513    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        28.000                counts
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        41.000                    ms
[info] ArrayOfCharsBenchmark.readJsoniterScala                                                             128  thrpt    5   2293084.292 ±   23806.509   ops/s
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       816.098 ±      30.458  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       560.135 ±      21.972    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       795.646 ±     699.783  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       546.273 ±     484.309    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.562 ±       4.442  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.386 ±       3.050    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        12.000                counts
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        27.000                    ms
[info] ArrayOfCharsBenchmark.readPlayJson                                                                  128  thrpt    5     87735.528 ±    4262.100   ops/s
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      3465.155 ±     179.386  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     62159.718 ±    1445.751    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      3299.903 ±     544.336  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     59177.560 ±    7141.928    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.054 ±       0.379  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.965 ±       6.745    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        49.000                counts
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        67.000                    ms
[info] ArrayOfCharsBenchmark.writeCirce                                                                    128  thrpt    5    258921.677 ±    9645.574   ops/s
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      2098.933 ±      50.352  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5     12757.708 ±     299.118    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1991.618 ±      65.631  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     12106.402 ±     768.023    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.233 ±       1.830  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         1.404 ±      11.011    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        30.000                counts
[info] ArrayOfCharsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        41.000                    ms
[info] ArrayOfCharsBenchmark.writeJacksonScala                                                             128  thrpt    5   1546125.328 ±  125365.779   ops/s
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       933.946 ±      51.422  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5       950.708 ±      28.610    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       919.586 ±     561.358  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       937.820 ±     611.047    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.749 ±       5.058  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.749 ±       5.029    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5        14.000                counts
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        34.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScala                                                            128  thrpt    5   2807502.694 ±   62805.769   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       982.340 ±      22.180  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       550.649 ±      11.331    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       926.966 ±     568.644  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       519.651 ±     319.786    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.620 ±       4.395  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.349 ±       2.473    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5        14.000                counts
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        29.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5   3170456.538 ±    5523.489   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfCharsBenchmark.writePlayJson                                                                 128  thrpt    5    385751.600 ±   23472.189   ops/s
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      2489.046 ±     119.517  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     10155.690 ±     246.028    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      2387.376 ±     520.431  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5      9741.305 ±    2100.232    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.162 ±       1.047  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.652 ±       4.171    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        36.000                counts
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        47.000                    ms
[info] ArrayOfDoublesBenchmark.readCirce                                                                   128  thrpt    5     25928.032 ±    1311.035   ops/s
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1672.868 ±     100.825  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5    101522.160 ±    2231.643    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1653.928 ±      28.014  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5    100387.968 ±    5292.483    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.804 ±       4.424  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        49.384 ±     272.700    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.count                                                         128  thrpt    5        25.000                counts
[info] ArrayOfDoublesBenchmark.readCirce:·gc.time                                                          128  thrpt    5        45.000                    ms
[info] ArrayOfDoublesBenchmark.readDslJsonJava                                                             128  thrpt    5     95529.761 ±    7355.610   ops/s
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       929.552 ±      80.928  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5     15312.724 ±     175.850    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5       912.048 ±     563.791  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     15010.416 ±    8903.688    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.895 ±       7.207  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        15.090 ±     121.745    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count                                                   128  thrpt    5        14.000                counts
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time                                                    128  thrpt    5        36.000                    ms
[info] ArrayOfDoublesBenchmark.readJacksonScala                                                            128  thrpt    5     67250.475 ±    1291.240   ops/s
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1211.492 ±      34.011  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     28351.402 ±     825.622    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1179.003 ±     694.028  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     27584.923 ±   16059.216    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.858 ±       5.393  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        20.051 ±     126.265    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        18.000                counts
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        39.000                    ms
[info] ArrayOfDoublesBenchmark.readJsoniterScala                                                           128  thrpt    5    136716.722 ±    7010.510   ops/s
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       950.917 ±      39.963  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5     10946.602 ±     125.652    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       927.252 ±     567.865  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     10659.209 ±    6156.584    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.670 ±       4.011  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         7.637 ±      45.601    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5        14.000                counts
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        32.000                    ms
[info] ArrayOfDoublesBenchmark.readPlayJson                                                                128  thrpt    5     36794.423 ±    1328.693   ops/s
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1849.788 ±      63.691  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     79112.208 ±    2001.325    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1776.589 ±     677.556  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     76016.898 ±   30626.857    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.904 ±       7.207  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        38.597 ±     307.679    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        27.000                counts
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        46.000                    ms
[info] ArrayOfDoublesBenchmark.writeCirce                                                                  128  thrpt    5     31250.082 ±    3092.397   ops/s
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5       513.956 ±      42.609  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     25884.097 ±     702.488    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5       525.918 ±     692.947  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     26556.087 ±   35763.764    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.412 ±       2.173    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.count                                                        128  thrpt    5         8.000                counts
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        25.000                    ms
[info] ArrayOfDoublesBenchmark.writeJacksonScala                                                           128  thrpt    5     31894.602 ±    1325.535   ops/s
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       402.734 ±      36.576  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     19869.118 ±    1143.555    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       379.209 ±     607.587  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     18671.761 ±   29407.451    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.204 ±       1.754    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         6.000                counts
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        20.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScala                                                          128  thrpt    5     33732.851 ±    3843.661   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       428.406 ±      44.040  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5     20013.280 ±    4444.367    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       447.543 ±     627.909  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     20984.990 ±   30609.103    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.574 ±       3.289    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        20.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5     34173.080 ±    2210.851   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5       388.047 ±      23.100  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5     17877.580 ±    2190.019    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                          128  thrpt    5       381.494 ±     614.480  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     17528.129 ±   27749.017    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.572 ±       3.280    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5         6.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                         128  thrpt    5        17.000                    ms
[info] ArrayOfDurationsBenchmark.readCirce                                                                 128  thrpt    5     15487.063 ±     230.261   ops/s
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1141.606 ±      37.866  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5    115996.470 ±    4296.294    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1120.852 ±     688.905  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5    113912.712 ±   70819.678    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.824 ±       6.784  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        84.068 ±     692.024    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        17.000                counts
[info] ArrayOfDurationsBenchmark.readCirce:·gc.time                                                        128  thrpt    5        38.000                    ms
[info] ArrayOfDurationsBenchmark.readJacksonScala                                                          128  thrpt    5     15501.264 ±     684.137   ops/s
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1008.560 ±      42.958  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5    102393.198 ±    1926.463    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       984.736 ±      13.657  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     99983.367 ±    4472.179    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.858 ±       6.474  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        85.948 ±     647.933    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5        15.000                counts
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5        38.000                    ms
[info] ArrayOfDurationsBenchmark.readJsoniterScala                                                         128  thrpt    5    104062.807 ±    2191.407   ops/s
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       277.886 ±      13.659  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      4202.271 ±     263.999    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       234.386 ±     524.398  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      3551.215 ±    7938.864    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.126 ±       0.664    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        11.000                    ms
[info] ArrayOfDurationsBenchmark.readPlayJson                                                              128  thrpt    5     13685.073 ±     664.609   ops/s
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      1332.789 ±      84.101  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    153253.179 ±    3088.618    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1245.116 ±     551.250  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    143173.860 ±   63121.030    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.933 ±       6.747  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5       107.578 ±     778.518    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        19.000                counts
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        43.000                    ms
[info] ArrayOfDurationsBenchmark.writeCirce                                                                128  thrpt    5     45021.200 ±    1249.825   ops/s
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1151.361 ±      54.230  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     40246.738 ±    1539.259    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1120.709 ±     691.789  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     39181.232 ±   24348.149    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.749 ±       4.528  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        26.274 ±     158.670    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        17.000                counts
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5        36.000                    ms
[info] ArrayOfDurationsBenchmark.writeJacksonScala                                                         128  thrpt    5     63335.700 ±     418.903   ops/s
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1115.674 ±      22.868  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     27718.571 ±     562.417    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1051.235 ±     571.056  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     26121.112 ±   14328.426    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.771 ±       6.369  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        19.189 ±     158.564    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5        16.000                counts
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        36.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScala                                                        128  thrpt    5    173596.670 ±    2420.521   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       287.195 ±      13.198  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      2603.725 ±     144.801    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       300.109 ±     155.729  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      2720.442 ±    1401.680    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.017 ±       0.105  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.151 ±       0.949    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         5.000                counts
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        14.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    185286.157 ±     633.767   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         0.003 ±       0.002    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ArrayOfDurationsBenchmark.writePlayJson                                                             128  thrpt    5     58228.708 ±    1393.974   ops/s
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5      1131.467 ±      30.372  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     30575.958 ±     372.735    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1119.038 ±     695.276  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     30244.548 ±   18918.673    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.820 ±       4.646  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        22.268 ±     126.436    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        17.000                counts
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        36.000                    ms
[info] ArrayOfEnumsBenchmark.readCirce                                                                     128  thrpt    5     95989.317 ±    3082.994   ops/s
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      2137.816 ±      97.435  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     35051.269 ±    1018.147    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      2050.334 ±     559.488  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     33621.327 ±    9416.616    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.849 ±       6.693  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5        13.859 ±     109.091    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        31.000                counts
[info] ArrayOfEnumsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        45.000                    ms
[info] ArrayOfEnumsBenchmark.readJacksonScala                                                              128  thrpt    5    125308.429 ±    4546.595   ops/s
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1783.572 ±      76.181  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5     22396.722 ±     704.391    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1776.104 ±     728.407  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     22318.944 ±    9845.574    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.879 ±       7.082  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        11.151 ±      89.983    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        27.000                counts
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        50.000                    ms
[info] ArrayOfEnumsBenchmark.readJsoniterScala                                                             128  thrpt    5    166717.050 ±    5575.333   ops/s
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5      1568.197 ±      92.937  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5     14802.115 ±     441.596    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1523.940 ±     696.367  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     14382.873 ±    6472.792    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.712 ±       4.093  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         6.785 ±      39.157    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        23.000                counts
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        38.000                    ms
[info] ArrayOfEnumsBenchmark.readPlayJson                                                                  128  thrpt    5     54245.142 ±    3894.710   ops/s
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      2927.956 ±     186.245  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     84946.116 ±    1936.579    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2888.945 ±     666.288  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     83841.615 ±   20938.887    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.204 ±       1.493  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         5.869 ±      42.949    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        43.000                counts
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        61.000                    ms
[info] ArrayOfEnumsBenchmark.writeCirce                                                                    128  thrpt    5    174196.851 ±    9786.806   ops/s
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      1164.883 ±      86.511  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5     10523.870 ±     276.596    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1119.823 ±     689.557  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     10121.694 ±    6341.163    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.704 ±       5.013  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         6.391 ±      45.508    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        17.000                counts
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        33.000                    ms
[info] ArrayOfEnumsBenchmark.writeJacksonScala                                                             128  thrpt    5    537039.397 ±    8984.105   ops/s
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       557.428 ±      17.233  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      1633.525 ±      52.111    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       520.160 ±     684.533  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      1524.526 ±    2008.573    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.729 ±       6.229  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         2.147 ±      18.352    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5         8.000                counts
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        12.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScala                                                            128  thrpt    5    708582.774 ±   44098.782   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       559.276 ±      39.998  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1241.971 ±      39.757    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       528.972 ±     697.764  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1175.367 ±    1557.402    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.017 ±       0.105  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.037 ±       0.234    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         8.000                counts
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        21.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5    772959.240 ±    6974.268   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfEnumsBenchmark.writePlayJson                                                                 128  thrpt    5    327611.284 ±   22928.698   ops/s
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5       928.667 ±      80.474  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5      4460.591 ±     104.501    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5       909.733 ±     567.420  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5      4364.665 ±    2593.063    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.033 ±       0.072  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.161 ±       0.357    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        14.000                counts
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        21.000                    ms
[info] ArrayOfFloatsBenchmark.readCirce                                                                    128  thrpt    5     37827.073 ±    2390.248   ops/s
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate                                                     128  thrpt    5      1931.126 ±     110.245  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm                                                128  thrpt    5     80344.016 ±     953.874    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1856.341 ±     694.054  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     77211.874 ±   27534.980    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.812 ±       6.142  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5        34.588 ±     262.621    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.count                                                          128  thrpt    5        28.000                counts
[info] ArrayOfFloatsBenchmark.readCirce:·gc.time                                                           128  thrpt    5        45.000                    ms
[info] ArrayOfFloatsBenchmark.readDslJsonJava                                                              128  thrpt    5    298171.145 ±    6676.303   ops/s
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       317.863 ±      10.236  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5      1677.714 ±      30.609    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5       324.026 ±       4.301  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1710.310 ±      52.204    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.877 ±       7.195  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         4.606 ±      37.795    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count                                                    128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time                                                     128  thrpt    5        12.000                    ms
[info] ArrayOfFloatsBenchmark.readJacksonScala                                                             128  thrpt    5    117100.518 ±    5690.276   ops/s
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1409.179 ±      58.221  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5     18939.932 ±     517.687    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1377.493 ±     554.001  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     18533.972 ±    8412.486    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.858 ±       6.688  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        11.519 ±      89.630    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.count                                                   128  thrpt    5        21.000                counts
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.time                                                    128  thrpt    5        43.000                    ms
[info] ArrayOfFloatsBenchmark.readJsoniterScala                                                            128  thrpt    5    540330.483 ±   22210.785   ops/s
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       360.323 ±      18.951  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1049.427 ±      17.579    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       314.980 ±     127.401  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       917.058 ±     356.404    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5        14.000                    ms
[info] ArrayOfFloatsBenchmark.readPlayJson                                                                 128  thrpt    5     41600.757 ±    1447.935   ops/s
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      2066.241 ±      86.620  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     78166.619 ±    2595.568    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1977.087 ±      74.100  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     74797.108 ±    3588.140    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.912 ±       7.495  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        34.706 ±     285.339    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        30.000                counts
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        49.000                    ms
[info] ArrayOfFloatsBenchmark.writeCirce                                                                   128  thrpt    5     75090.662 ±    2373.410   ops/s
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate                                                    128  thrpt    5       611.716 ±      14.570  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm                                               128  thrpt    5     12820.060 ±     458.729    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5       593.215 ±     565.624  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     12444.212 ±   12012.140    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.025 ±       0.067  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.524 ±       1.403    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.count                                                         128  thrpt    5         9.000                counts
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.time                                                          128  thrpt    5        25.000                    ms
[info] ArrayOfFloatsBenchmark.writeDslJsonJava                                                             128  thrpt    5     87407.588 ±    1852.671   ops/s
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       508.769 ±      15.790  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5      9159.952 ±     273.874    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5       520.726 ±     686.458  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      9381.005 ±   12429.623    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.006 ±       0.044  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.114 ±       0.800    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count                                                   128  thrpt    5         8.000                counts
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time                                                    128  thrpt    5        27.000                    ms
[info] ArrayOfFloatsBenchmark.writeJacksonScala                                                            128  thrpt    5     76034.996 ±    2154.543   ops/s
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       458.883 ±      24.545  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      9497.265 ±     323.194    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       392.563 ±     563.623  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      8121.438 ±   11594.528    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.258 ±       0.906    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5         6.000                counts
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5        18.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScala                                                           128  thrpt    5     86777.900 ±    1114.845   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       507.034 ±      21.001  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      9195.513 ±     369.435    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       528.945 ±     697.328  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      9590.699 ±   12619.230    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.008 ±       0.072  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.151 ±       1.299    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5         8.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5        21.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5     87844.459 ±    1833.797   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5       442.177 ±      24.164  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5      7921.898 ±     439.524    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                           128  thrpt    5       447.530 ±     626.490  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      8018.302 ±   11224.568    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.224 ±       1.290    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5         7.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                          128  thrpt    5        19.000                    ms
[info] ArrayOfInstantsBenchmark.readCirce                                                                  128  thrpt    5      9546.342 ±     739.550   ops/s
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate                                                   128  thrpt    5      1605.185 ±     146.806  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm                                              128  thrpt    5    264603.808 ±    8195.946    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1583.931 ±     568.813  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5    261019.550 ±   88046.056    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.812 ±       4.382  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5       136.691 ±     741.744    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.count                                                        128  thrpt    5        24.000                counts
[info] ArrayOfInstantsBenchmark.readCirce:·gc.time                                                         128  thrpt    5        45.000                    ms
[info] ArrayOfInstantsBenchmark.readJacksonScala                                                           128  thrpt    5      9517.398 ±     314.870   ops/s
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1508.378 ±      80.959  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5    249411.781 ±    7654.124    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1508.721 ±     693.607  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    249344.228 ±  109282.580    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.892 ±       6.863  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       147.746 ±    1136.528    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.count                                                 128  thrpt    5        23.000                counts
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.time                                                  128  thrpt    5        46.000                    ms
[info] ArrayOfInstantsBenchmark.readJsoniterScala                                                          128  thrpt    5    150783.073 ±    5582.027   ops/s
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       403.828 ±      10.268  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      4215.184 ±     259.656    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       381.889 ±     613.573  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      3998.094 ±    6621.164    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.262 ±       1.105    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         6.000                counts
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5        16.000                    ms
[info] ArrayOfInstantsBenchmark.readPlayJson                                                               128  thrpt    5      5839.642 ±     347.047   ops/s
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      1531.126 ±     109.140  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5    412549.832 ±   10458.092    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1441.889 ±     686.946  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    388480.796 ±  181814.267    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.946 ±       7.318  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5       253.910 ±    1965.610    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        22.000                counts
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        46.000                    ms
[info] ArrayOfInstantsBenchmark.writeCirce                                                                 128  thrpt    5     20147.644 ±     673.825   ops/s
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate                                                  128  thrpt    5      1573.283 ±      86.346  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm                                             128  thrpt    5    122885.309 ±    4759.537    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1518.670 ±     701.905  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5    118582.807 ±   53220.999    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.779 ±       5.024  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        60.588 ±     390.640    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.count                                                       128  thrpt    5        23.000                counts
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.time                                                        128  thrpt    5        37.000                    ms
[info] ArrayOfInstantsBenchmark.writeJacksonScala                                                          128  thrpt    5     23761.830 ±     659.391   ops/s
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1617.333 ±      56.141  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5    107107.273 ±    2406.954    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1580.942 ±     568.640  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    104735.167 ±   39272.618    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.797 ±       5.254  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        53.142 ±     351.584    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5        24.000                counts
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5        41.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScala                                                         128  thrpt    5    134724.936 ±     970.731   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       307.236 ±      18.680  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      3589.104 ±     232.464    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       300.443 ±     714.001  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      3511.588 ±    8341.827    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.049 ±       0.419    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5         5.000                counts
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5        15.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5    138800.978 ±   11661.972   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5         3.233 ±      27.150  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5        36.560 ±     307.081    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5           ≈ 0                counts
[info] ArrayOfInstantsBenchmark.writePlayJson                                                              128  thrpt    5     23288.842 ±    1381.476   ops/s
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate                                               128  thrpt    5      1616.485 ±     109.717  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    109231.196 ±    2464.503    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1583.381 ±     559.129  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    106896.841 ±   32296.355    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.837 ±       5.135  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        57.702 ±     356.523    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.count                                                    128  thrpt    5        24.000                counts
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.time                                                     128  thrpt    5        38.000                    ms
[info] ArrayOfIntsBenchmark.readCirce                                                                      128  thrpt    5    123702.842 ±    2149.052   ops/s
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate                                                       128  thrpt    5      1766.525 ±      72.078  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                                  128  thrpt    5     22471.088 ±     634.599    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              128  thrpt    5      1721.348 ±     551.172  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         128  thrpt    5     21899.918 ±    7201.363    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          128  thrpt    5         0.741 ±       5.601  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     128  thrpt    5         9.474 ±      71.641    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.count                                                            128  thrpt    5        26.000                counts
[info] ArrayOfIntsBenchmark.readCirce:·gc.time                                                             128  thrpt    5        40.000                    ms
[info] ArrayOfIntsBenchmark.readDslJsonJava                                                                128  thrpt    5    550316.903 ±   33474.317   ops/s
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate                                                 128  thrpt    5       585.663 ±      25.995  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                            128  thrpt    5      1674.971 ±      73.016    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                        128  thrpt    5       521.784 ±     687.833  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      1495.393 ±    2006.172    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.013 ±       0.060  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.036 ±       0.170    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.count                                                      128  thrpt    5         8.000                counts
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.time                                                       128  thrpt    5        25.000                    ms
[info] ArrayOfIntsBenchmark.readJacksonScala                                                               128  thrpt    5    344695.596 ±   26140.346   ops/s
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                                128  thrpt    5       499.706 ±      47.025  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           128  thrpt    5      2281.584 ±     112.539    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                       128  thrpt    5       458.117 ±     690.375  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      2089.258 ±    3111.116    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.021 ±       0.139  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.095 ±       0.632    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.count                                                     128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.time                                                      128  thrpt    5        23.000                    ms
[info] ArrayOfIntsBenchmark.readJsoniterScala                                                              128  thrpt    5    753471.015 ±   54955.067   ops/s
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                               128  thrpt    5       503.422 ±      39.212  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          128  thrpt    5      1051.347 ±      51.967    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       462.893 ±     697.559  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5       968.976 ±    1486.861    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.043 ±       0.117    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.count                                                    128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.time                                                     128  thrpt    5        17.000                    ms
[info] ArrayOfIntsBenchmark.readPlayJson                                                                   128  thrpt    5     75570.914 ±    3414.924   ops/s
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                                    128  thrpt    5      3127.031 ±     134.989  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                               128  thrpt    5     65119.475 ±    1107.220    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                           128  thrpt    5      3001.856 ±     174.646  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     62520.087 ±    4919.502    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.042 ±       0.188  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.863 ±       3.896    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.count                                                         128  thrpt    5        45.000                counts
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.time                                                          128  thrpt    5        64.000                    ms
[info] ArrayOfIntsBenchmark.writeCirce                                                                     128  thrpt    5    201094.668 ±     941.319   ops/s
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                      128  thrpt    5      1477.253 ±      47.725  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     11560.456 ±     393.074    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1455.574 ±     715.099  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     11390.519 ±    5586.610    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.037 ±       0.067  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         0.293 ±       0.524    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.count                                                           128  thrpt    5        22.000                counts
[info] ArrayOfIntsBenchmark.writeCirce:·gc.time                                                            128  thrpt    5        30.000                    ms
[info] ArrayOfIntsBenchmark.writeDslJsonJava                                                               128  thrpt    5    648376.907 ±    4078.401   ops/s
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate                                                128  thrpt    5       363.006 ±      17.965  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                           128  thrpt    5       881.174 ±      46.286    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                       128  thrpt    5       376.710 ±     600.165  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5       914.798 ±    1463.860    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.030 ±       0.174    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count                                                     128  thrpt    5         6.000                counts
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time                                                      128  thrpt    5        19.000                    ms
[info] ArrayOfIntsBenchmark.writeJacksonScala                                                              128  thrpt    5    653032.001 ±   16067.781   ops/s
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                               128  thrpt    5       500.910 ±      27.612  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      1207.233 ±      84.722    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       458.468 ±     690.259  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1106.297 ±    1683.209    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.050 ±       0.136    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.count                                                    128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.time                                                     128  thrpt    5        22.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScala                                                             128  thrpt    5   1114177.567 ±    5348.522   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       623.171 ±      19.376  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       880.258 ±      28.445    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       595.207 ±     569.158  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       840.933 ±     806.265    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.017 ±       0.088  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.024 ±       0.124    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count                                                   128  thrpt    5         9.000                counts
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time                                                    128  thrpt    5        25.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc                                                     128  thrpt    5   1177882.215 ±   60554.738   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           128  thrpt    5           ≈ 0                counts
[info] ArrayOfIntsBenchmark.writePlayJson                                                                  128  thrpt    5     33935.971 ±     408.961   ops/s
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                                   128  thrpt    5      1939.475 ±      56.130  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     89932.371 ±    2445.523    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1850.579 ±     687.185  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     85806.842 ±   31673.978    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.816 ±       6.938  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5        37.916 ±     322.329    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.count                                                        128  thrpt    5        28.000                counts
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.time                                                         128  thrpt    5        44.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readCirce                                                                 128  thrpt    5    129413.248 ±    8052.745   ops/s
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1662.485 ±     137.704  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     20213.644 ±     451.867    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1580.622 ±     545.818  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     19222.632 ±    6712.858    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.787 ±       5.448  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         9.778 ±      68.113    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        24.000                counts
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.time                                                        128  thrpt    5        43.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala                                                          128  thrpt    5    198835.264 ±   17117.249   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1216.504 ±     109.054  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      9628.277 ±      82.385    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1178.092 ±     685.692  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      9315.958 ±    5118.592    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.828 ±       5.724  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         6.533 ±      45.424    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5        18.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5        39.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala                                                         128  thrpt    5    247891.866 ±   13838.849   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      1333.156 ±      94.995  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      8463.196 ±     186.499    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1259.315 ±     577.266  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      7990.997 ±    3517.885    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.654 ±       5.059  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         4.225 ±      32.731    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        19.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        33.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readPlayJson                                                              128  thrpt    5     68422.930 ±    3309.110   ops/s
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2756.817 ±     162.233  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     63406.023 ±    1812.088    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2684.629 ±     110.194  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     61747.839 ±    1088.534    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.208 ±       1.444  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         4.866 ±      33.913    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        40.000                counts
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        56.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeCirce                                                                128  thrpt    5    175414.028 ±   14753.595   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1171.960 ±     114.669  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     10514.711 ±     396.608    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1120.199 ±     691.791  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     10035.930 ±    5655.219    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.737 ±       4.629  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         6.626 ±      41.964    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        17.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5        33.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala                                                         128  thrpt    5    719358.826 ±   13477.723   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       747.794 ±      26.250  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1635.984 ±      52.751    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       721.485 ±     562.329  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1578.851 ±    1242.614    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.758 ±       6.435  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.650 ±      14.008    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5        11.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        34.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala                                                        128  thrpt    5    700777.593 ±   25711.675   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       555.483 ±      28.476  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      1247.278 ±      50.087    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       528.723 ±     695.638  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1187.059 ±    1559.893    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.009 ±       0.080    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         8.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        23.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    779194.147 ±    4263.811   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson                                                             128  thrpt    5    346041.719 ±   16661.266   ops/s
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5       981.584 ±      51.319  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5      4463.877 ±      88.350    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5       983.819 ±      36.776  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      4474.741 ±     311.902    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.071 ±       0.486  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.326 ±       2.241    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        15.000                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        24.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readCirce                                                            128  thrpt    5     11012.612 ±     338.288   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1400.765 ±      59.735  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5    200140.755 ±    5152.445    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1383.315 ±     565.355  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    197639.313 ±   79966.455    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.795 ±       6.281  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       113.150 ±     894.126    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count                                                  128  thrpt    5        21.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time                                                   128  thrpt    5        43.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala                                                     128  thrpt    5     10752.224 ±     676.341   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1257.969 ±      89.642  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5    184092.900 ±    5052.276    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1245.778 ±     554.427  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5    182363.461 ±   82479.697    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.893 ±       5.589  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       129.998 ±     816.270    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        19.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        43.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala                                                    128  thrpt    5    272078.115 ±   16301.329   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5      1835.533 ±     117.514  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5     10617.159 ±     179.966    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1728.063 ±     559.720  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      9996.032 ±    3192.358    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.662 ±       4.945  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         3.902 ±      29.283    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5        26.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        39.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson                                                         128  thrpt    5      8084.248 ±     831.668   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      1459.795 ±     179.778  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5    284121.186 ±    7011.722    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1442.246 ±     705.217  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    280795.392 ±  136598.880    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.928 ±       7.288  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       184.826 ±    1451.948    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        22.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        47.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeCirce                                                           128  thrpt    5     26038.577 ±    1335.739   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1380.617 ±      92.443  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5     83433.763 ±    1334.605    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1384.666 ±     555.708  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     83640.064 ±   30913.000    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.787 ±       5.865  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        47.825 ±     357.104    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        21.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        41.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala                                                    128  thrpt    5     32705.732 ±    2175.325   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1369.072 ±     100.793  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     65874.983 ±     930.469    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1313.458 ±      14.262  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     63215.838 ±    4358.610    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.803 ±       6.746  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        38.824 ±     326.148    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        20.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        40.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala                                                   128  thrpt    5    627273.359 ±   18123.450   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1166.248 ±      55.379  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      2925.693 ±     113.620    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1124.398 ±     701.942  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      2819.755 ±    1728.825    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.668 ±       4.778  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.665 ±      11.886    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        17.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        32.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    770238.452 ±    5304.004   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson                                                        128  thrpt    5     27485.746 ±    1311.077   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1254.285 ±      63.681  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     71810.775 ±    1815.603    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1248.109 ±     569.002  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     71406.363 ±   30683.857    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.845 ±       5.932  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        48.507 ±     339.515    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        19.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        42.000                    ms
[info] ArrayOfLocalDatesBenchmark.readCirce                                                                128  thrpt    5     31991.376 ±    1208.632   ops/s
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1706.803 ±      64.702  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5     83958.171 ±    1847.055    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1650.730 ±      31.403  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     81204.354 ±    3062.550    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.820 ±       6.047  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        40.423 ±     297.758    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.count                                                      128  thrpt    5        25.000                counts
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.time                                                       128  thrpt    5        45.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJacksonScala                                                         128  thrpt    5     33697.037 ±    1689.245   ops/s
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1496.310 ±      49.759  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     69882.749 ±    1921.189    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1442.966 ±     691.267  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     67386.496 ±   32047.900    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.896 ±       7.400  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        42.131 ±     348.300    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        22.000                counts
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        46.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala                                                        128  thrpt    5    476132.884 ±   13568.437   ops/s
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1277.748 ±      47.028  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4222.506 ±     115.062    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1193.950 ±     696.001  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      3945.828 ±    2306.443    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.579 ±       4.508  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         1.928 ±      15.025    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        18.000                counts
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        29.000                    ms
[info] ArrayOfLocalDatesBenchmark.readPlayJson                                                             128  thrpt    5     18459.717 ±    1417.488   ops/s
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1792.369 ±     169.613  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    152772.608 ±    4803.579    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1707.063 ±     567.359  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    145515.754 ±   47076.953    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.934 ±       6.930  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        81.677 ±     609.596    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        26.000                counts
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        46.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeCirce                                                               128  thrpt    5     56186.890 ±    3974.482   ops/s
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1726.351 ±     144.613  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     48351.099 ±    1219.215    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1652.386 ±      34.541  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     46290.932 ±    2607.545    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.779 ±       6.348  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        21.577 ±     175.612    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        25.000                counts
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        42.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala                                                        128  thrpt    5    156542.605 ±   11967.313   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1900.791 ±     132.319  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     19109.673 ±     516.019    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1849.099 ±     674.480  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     18614.230 ±    7813.463    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.767 ±       6.510  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         7.737 ±      65.703    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5        28.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        42.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala                                                       128  thrpt    5   1168998.421 ±   83857.950   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1293.001 ±      48.877  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1740.820 ±      67.211    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1256.703 ±     563.551  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1693.076 ±     799.263    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.701 ±       5.280  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.940 ±       7.056    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5        19.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5        34.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   1382531.600 ±   12112.587   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson                                                            128  thrpt    5     67108.622 ±    3991.166   ops/s
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1705.020 ±      96.300  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     39985.892 ±     862.805    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1650.524 ±      34.478  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     38716.925 ±    3098.808    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.795 ±       6.406  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        18.767 ±     151.420    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5        25.000                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        42.000                    ms
[info] ArrayOfLocalTimesBenchmark.readCirce                                                                128  thrpt    5     15929.670 ±    1228.792   ops/s
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1449.732 ±     104.912  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5    143220.776 ±    4312.663    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1381.846 ±     571.803  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    136770.626 ±   67775.338    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.794 ±       6.750  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        81.043 ±     689.059    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.count                                                      128  thrpt    5        21.000                counts
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.time                                                       128  thrpt    5        43.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJacksonScala                                                         128  thrpt    5     16350.988 ±     840.211   ops/s
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1354.011 ±      89.306  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5    130320.837 ±    3172.649    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1310.412 ±      16.844  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    126150.788 ±    8093.288    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.875 ±       6.754  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        85.115 ±     658.761    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        20.000                counts
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        41.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala                                                        128  thrpt    5    677187.845 ±    6670.659   ops/s
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1816.648 ±      52.001  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4221.710 ±      98.081    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1728.168 ±     548.378  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      4015.516 ±    1234.525    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.654 ±       5.225  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         1.522 ±      12.166    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        26.000                counts
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        41.000                    ms
[info] ArrayOfLocalTimesBenchmark.readPlayJson                                                             128  thrpt    5     12560.013 ±    1320.401   ops/s
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1726.217 ±     216.018  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    216258.450 ±    5657.016    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1707.585 ±     539.185  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    214030.129 ±   68130.183    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.933 ±       5.307  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       120.612 ±     694.803    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        26.000                counts
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        54.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeCirce                                                               128  thrpt    5     44539.436 ±    2483.118   ops/s
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1747.367 ±      80.881  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     61737.371 ±    1749.867    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1719.908 ±     547.263  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     60791.725 ±   20664.085    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.783 ±       5.220  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        27.554 ±     183.428    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        26.000                counts
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        43.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala                                                        128  thrpt    5     56166.249 ±    1522.910   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1733.978 ±      70.882  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     48582.648 ±     948.569    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1712.344 ±     546.060  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     47967.215 ±   14560.672    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.804 ±       5.620  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        22.651 ±     158.736    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5        26.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        44.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala                                                       128  thrpt    5   1346887.182 ±   55181.453   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1267.423 ±      73.930  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1480.772 ±      44.742    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1256.001 ±     572.983  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1468.190 ±     692.509    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.697 ±       5.349  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.811 ±       6.225    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5        19.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5        35.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   1577746.842 ±    1939.314   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5         0.061 ±       0.521  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5         0.061 ±       0.520    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson                                                            128  thrpt    5      3609.630 ±     209.519   ops/s
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5       498.925 ±      59.043  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5    217499.876 ±   20604.659    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5       460.221 ±     693.287  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    200259.558 ±  296664.777    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.033 ±       0.196  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        14.055 ±      83.741    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5         7.000                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        24.000                    ms
[info] ArrayOfLongsBenchmark.readCirce                                                                     128  thrpt    5    123027.025 ±    6504.734   ops/s
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      1951.196 ±     155.379  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     24956.590 ±     727.390    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1855.643 ±     691.221  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     23720.597 ±    7972.479    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.762 ±       6.248  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         9.809 ±      80.444    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        28.000                counts
[info] ArrayOfLongsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        41.000                    ms
[info] ArrayOfLongsBenchmark.readDslJsonJava                                                               128  thrpt    5    374369.434 ±   14944.708   ops/s
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate                                                128  thrpt    5       771.838 ±      36.444  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                           128  thrpt    5      3244.536 ±      70.345    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                       128  thrpt    5       717.512 ±     560.172  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      3016.123 ±    2347.937    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.967 ±       8.083  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         4.037 ±      33.756    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.count                                                     128  thrpt    5        11.000                counts
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.time                                                      128  thrpt    5        36.000                    ms
[info] ArrayOfLongsBenchmark.readJacksonScala                                                              128  thrpt    5    272615.668 ±    4514.573   ops/s
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5       609.947 ±      11.130  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      3521.250 ±      87.510    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       589.426 ±     561.874  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      3404.793 ±    3269.980    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.048 ±       0.254    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5         9.000                counts
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        30.000                    ms
[info] ArrayOfLongsBenchmark.readJsoniterScala                                                             128  thrpt    5    500631.661 ±   35168.279   ops/s
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       650.485 ±      45.929  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5      2044.996 ±      80.904    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       662.292 ±       5.928  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      2082.561 ±     141.183    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.525 ±       4.338  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.666 ±      13.785    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        10.000                counts
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        27.000                    ms
[info] ArrayOfLongsBenchmark.readPlayJson                                                                  128  thrpt    5     73025.298 ±    2266.903   ops/s
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      3086.553 ±     111.467  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     66497.661 ±     591.747    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2935.237 ±     499.224  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     63227.543 ±    9386.935    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.033 ±       0.108  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.720 ±       2.347    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        44.000                counts
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        59.000                    ms
[info] ArrayOfLongsBenchmark.writeCirce                                                                    128  thrpt    5    134930.304 ±    4511.173   ops/s
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      1189.228 ±      66.820  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5     13869.497 ±     459.516    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1186.256 ±     694.193  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     13831.109 ±    7961.263    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.754 ±       4.790  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         8.873 ±      56.530    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        18.000                counts
[info] ArrayOfLongsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        37.000                    ms
[info] ArrayOfLongsBenchmark.writeDslJsonJava                                                              128  thrpt    5    208275.059 ±    1540.161   ops/s
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       167.692 ±      16.174  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5      1267.173 ±     130.695    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5       167.351 ±     598.285  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1266.267 ±    4526.942    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.008 ±       0.047  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.063 ±       0.357    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count                                                    128  thrpt    5         3.000                counts
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time                                                     128  thrpt    5        10.000                    ms
[info] ArrayOfLongsBenchmark.writeJacksonScala                                                             128  thrpt    5    425236.246 ±    9655.420   ops/s
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       429.934 ±      23.392  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      1591.174 ±     106.352    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       443.976 ±     623.058  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      1645.031 ±    2333.575    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.046 ±       0.264    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5         7.000                counts
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        22.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScala                                                            128  thrpt    5    461387.690 ±   24091.689   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       373.482 ±      17.483  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1274.016 ±      85.206    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       381.424 ±     614.846  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1305.434 ±    2166.129    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.028 ±       0.149    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         6.000                counts
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        17.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5    501271.228 ±     397.619   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfLongsBenchmark.writePlayJson                                                                 128  thrpt    5     28703.036 ±    1964.247   ops/s
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      1576.866 ±     131.952  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     86450.519 ±    2078.269    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1513.704 ±     682.428  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     83032.897 ±   38620.690    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.820 ±       4.851  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        45.621 ±     269.621    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        23.000                counts
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        42.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readCirce                                                           128  thrpt    5      8052.352 ±     568.695   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1142.948 ±      77.427  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5    223337.269 ±    5002.035    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1118.593 ±     680.145  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    218737.314 ±  137128.216    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.054 ±       0.292  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        10.530 ±      56.294    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count                                                 128  thrpt    5        17.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time                                                  128  thrpt    5        25.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala                                                    128  thrpt    5      8026.921 ±     199.065   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1051.395 ±      30.456  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5    206102.506 ±    4162.632    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1046.613 ±     554.870  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    205094.569 ±  105669.470    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.908 ±       6.657  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       177.957 ±    1305.756    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        16.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        42.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala                                                   128  thrpt    5    184620.677 ±   13729.420   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1613.992 ±     109.762  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     13758.465 ±     451.117    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1527.024 ±     682.295  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     13039.190 ±    6595.346    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.600 ±       4.507  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         5.048 ±      37.757    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        23.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        35.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson                                                        128  thrpt    5      7686.509 ±     669.291   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      1287.529 ±     108.705  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5    263608.328 ±    3824.484    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1244.527 ±     571.488  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    255201.924 ±  128769.456    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.983 ±       6.899  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       199.067 ±    1392.195    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        19.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        46.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce                                                          128  thrpt    5     21023.146 ±     676.103   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1198.407 ±      62.061  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     89699.467 ±    2858.671    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1120.771 ±     696.222  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     83914.805 ±   52803.943    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.754 ±       5.111  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        56.202 ±     380.605    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count                                                128  thrpt    5        17.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        34.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala                                                   128  thrpt    5     25905.043 ±    1573.250   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1151.010 ±      76.630  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     69926.124 ±    1440.604    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1114.504 ±     691.166  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     67805.629 ±   44811.194    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.801 ±       5.668  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        49.779 ±     354.150    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        17.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        35.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala                                                  128  thrpt    5    370599.689 ±   22522.670   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       864.352 ±      44.275  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      3670.450 ±      87.862    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       794.544 ±     700.294  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      3379.060 ±    3081.284    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.662 ±       5.614  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         2.857 ±      24.218    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        12.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        28.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5    432468.155 ±    5287.742   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5         0.133 ±       0.827  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5         0.485 ±       3.021    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson                                                       128  thrpt    5     24499.488 ±    2470.807   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5      1184.755 ±     106.147  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     76110.064 ±    1627.726    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1181.661 ±     691.427  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     76066.483 ±   48589.692    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.809 ±       5.219  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        51.679 ±     331.016    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        41.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readCirce                                                               128  thrpt    5     13266.524 ±     421.399   ops/s
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1278.166 ±      32.595  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5    151631.312 ±    2041.888    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1252.810 ±     572.606  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    148529.316 ±   64563.168    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.795 ±       5.936  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        93.569 ±     697.889    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.count                                                     128  thrpt    5        19.000                counts
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.time                                                      128  thrpt    5        41.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala                                                        128  thrpt    5     13674.319 ±     552.174   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1227.791 ±      64.133  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5    141305.962 ±    3068.406    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1180.147 ±     688.766  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    135893.019 ±   81110.237    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.887 ±       5.316  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       102.531 ±     615.980    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5        18.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5        42.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala                                                       128  thrpt    5    288071.686 ±   18833.820   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1726.973 ±     140.557  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      9433.718 ±     167.578    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1660.537 ±      30.426  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      9073.330 ±     594.255    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.591 ±       4.738  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         3.323 ±      26.695    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5        25.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        39.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readPlayJson                                                            128  thrpt    5     12446.903 ±     288.471   ops/s
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1544.066 ±      28.635  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5    195191.203 ±    5500.758    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1520.968 ±     695.825  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    192234.248 ±   86629.577    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.233 ±       1.246  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        29.379 ±     157.309    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        23.000                counts
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        39.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeCirce                                                              128  thrpt    5     32836.985 ±    1194.095   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1424.212 ±      75.092  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     68259.955 ±    2175.668    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1384.163 ±     572.944  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     66323.328 ±   26371.908    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.829 ±       6.259  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        39.818 ±     301.017    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        21.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        39.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala                                                       128  thrpt    5     80843.503 ±    5594.382   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      2036.504 ±     161.262  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     39645.801 ±     748.477    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1919.346 ±     526.021  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     37339.910 ±    8093.600    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.791 ±       6.327  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        15.427 ±     123.440    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5        29.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        43.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala                                                      128  thrpt    5    621319.565 ±   33042.555   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       878.739 ±      28.184  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      2225.772 ±      66.673    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       860.366 ±     698.152  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      2183.021 ±    1846.975    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.654 ±       4.261  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.682 ±      11.023    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5        13.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5        29.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5    712013.666 ±    3628.718   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson                                                           128  thrpt    5     70216.671 ±    3809.502   ops/s
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      2037.153 ±     149.032  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     45654.406 ±    1133.411    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1935.027 ±     533.464  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     43351.189 ±   10656.093    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.127 ±       0.920  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         2.872 ±      20.853    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        29.000                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        40.000                    ms
[info] ArrayOfPeriodsBenchmark.readCirce                                                                   128  thrpt    5     15660.381 ±    1465.212   ops/s
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5       836.567 ±      72.190  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     84080.919 ±    3880.193    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5       794.561 ±     701.680  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     79899.996 ±   71250.636    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.783 ±       6.124  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        76.928 ±     600.176    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        12.000                counts
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        33.000                    ms
[info] ArrayOfPeriodsBenchmark.readJacksonScala                                                            128  thrpt    5     16750.973 ±     472.131   ops/s
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5       741.443 ±      33.398  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     69655.576 ±    3289.649    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       721.994 ±     561.613  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     67811.071 ±   52223.283    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.760 ±       6.400  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        71.999 ±     606.465    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        11.000                counts
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        36.000                    ms
[info] ArrayOfPeriodsBenchmark.readJsoniterScala                                                           128  thrpt    5    121414.984 ±    5108.323   ops/s
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       315.330 ±      18.908  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      4088.259 ±     404.161    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       300.509 ±     714.021  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      3912.450 ±    9387.440    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.109 ±       0.573    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         5.000                counts
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        13.000                    ms
[info] ArrayOfPeriodsBenchmark.readPlayJson                                                                128  thrpt    5     14556.219 ±    1361.740   ops/s
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1128.242 ±      95.201  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5    121978.689 ±    3269.075    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1113.243 ±     686.755  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    120483.030 ±   77415.869    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.929 ±       7.033  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5       103.270 ±     783.554    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        17.000                counts
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        44.000                    ms
[info] ArrayOfPeriodsBenchmark.writeCirce                                                                  128  thrpt    5     47130.433 ±    1770.663   ops/s
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1462.410 ±      60.963  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     48833.300 ±    1216.013    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1451.065 ±     706.147  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     48435.990 ±   22756.965    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.833 ±       6.020  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5        27.771 ±     200.380    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        22.000                counts
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        41.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJacksonScala                                                           128  thrpt    5     73882.528 ±    2648.425   ops/s
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1577.940 ±      95.907  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     33609.344 ±    1088.817    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1515.122 ±     694.101  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     32259.529 ±   14232.157    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.767 ±       4.743  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        16.488 ±     101.936    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5        23.000                counts
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        40.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala                                                          128  thrpt    5    288518.652 ±   14746.341   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       568.491 ±      34.447  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      3100.848 ±     103.829    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       529.427 ±     699.011  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      2889.788 ±    3835.164    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.068 ±       0.240    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         8.000                counts
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        22.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    361418.025 ±     385.255   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson                                                               128  thrpt    5     67687.879 ±    2283.220   ops/s
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      1566.228 ±      83.910  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     36415.387 ±     764.403    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1523.033 ±     699.619  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     35397.823 ±   15643.315    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.037 ±       0.154  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.872 ±       3.568    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        23.000                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        32.000                    ms
[info] ArrayOfShortsBenchmark.readCirce                                                                    128  thrpt    5    143301.538 ±    3157.983   ops/s
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate                                                     128  thrpt    5      1883.462 ±      66.897  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm                                                128  thrpt    5     20685.311 ±     646.426    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1853.658 ±     713.958  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     20361.320 ±    7987.772    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.754 ±       6.221  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         8.255 ±      68.121    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.count                                                          128  thrpt    5        28.000                counts
[info] ArrayOfShortsBenchmark.readCirce:·gc.time                                                           128  thrpt    5        43.000                    ms
[info] ArrayOfShortsBenchmark.readDslJsonJava                                                              128  thrpt    5    851084.787 ±   25407.153   ops/s
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       486.544 ±      25.805  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5       899.634 ±      31.708    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5       520.745 ±     686.565  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5       962.328 ±    1262.172    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.015 ±       0.077  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.028 ±       0.142    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.count                                                    128  thrpt    5         8.000                counts
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.time                                                     128  thrpt    5        26.000                    ms
[info] ArrayOfShortsBenchmark.readJacksonScala                                                             128  thrpt    5    432007.451 ±    4949.081   ops/s
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate                                              128  thrpt    5       444.515 ±      12.688  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      1619.354 ±      54.725    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       443.261 ±     622.067  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      1616.048 ±    2284.804    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.008 ±       0.072  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.030 ±       0.262    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.count                                                   128  thrpt    5         7.000                counts
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.time                                                    128  thrpt    5        24.000                    ms
[info] ArrayOfShortsBenchmark.readJsoniterScala                                                            128  thrpt    5   1152758.866 ±   13782.213   ops/s
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       410.911 ±      24.953  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       560.967 ±      34.146    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       381.486 ±     611.423  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       520.920 ±     836.174    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.023 ±       0.092    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         6.000                counts
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5        15.000                    ms
[info] ArrayOfShortsBenchmark.readPlayJson                                                                 128  thrpt    5     80240.798 ±    1309.636   ops/s
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      3238.811 ±     112.981  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     63522.006 ±    1750.609    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      3073.599 ±     540.396  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     60278.413 ±   10127.475    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.062 ±       0.363  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         1.226 ±       7.128    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        46.000                counts
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        64.000                    ms
[info] ArrayOfShortsBenchmark.writeCirce                                                                   128  thrpt    5    263426.646 ±   27923.512   ops/s
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate                                                    128  thrpt    5      1595.240 ±     165.910  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm                                               128  thrpt    5      9530.221 ±     217.892    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1584.111 ±     581.893  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5      9477.083 ±    3945.076    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.754 ±       4.770  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         4.673 ±      29.994    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.count                                                         128  thrpt    5        24.000                counts
[info] ArrayOfShortsBenchmark.writeCirce:·gc.time                                                          128  thrpt    5        42.000                    ms
[info] ArrayOfShortsBenchmark.writeDslJsonJava                                                             128  thrpt    5   1237254.550 ±   38672.078   ops/s
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       433.002 ±      18.125  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5       550.764 ±      25.182    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5       390.661 ±     559.998  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       497.474 ±     723.186    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.011 ±       0.056    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count                                                   128  thrpt    5         6.000                counts
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time                                                    128  thrpt    5        19.000                    ms
[info] ArrayOfShortsBenchmark.writeJacksonScala                                                            128  thrpt    5   1511873.293 ±  168871.433   ops/s
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       913.354 ±      96.471  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5       950.843 ±      35.399    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       854.785 ±     694.049  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       890.421 ±     729.922    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.770 ±       5.122  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.790 ±       5.263    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5        13.000                counts
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5        32.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScala                                                           128  thrpt    5   1844485.093 ±  181433.366   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       646.253 ±      71.289  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       551.374 ±       8.845    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       661.036 ±       5.536  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       564.305 ±      53.719    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.537 ±       4.490  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.443 ±       3.700    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5        10.000                counts
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5        28.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5   2003030.473 ±    3942.483   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfShortsBenchmark.writePlayJson                                                                128  thrpt    5     42821.702 ±    1929.436   ops/s
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate                                                 128  thrpt    5      2112.946 ±      97.580  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     77657.738 ±    1785.210    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2053.384 ±     560.022  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     75476.311 ±   20893.823    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.837 ±       6.805  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        31.346 ±     255.178    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.count                                                      128  thrpt    5        31.000                counts
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.time                                                       128  thrpt    5        46.000                    ms
[info] ArrayOfUUIDsBenchmark.readCirce                                                                     128  thrpt    5     14875.338 ±     620.614   ops/s
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      1838.264 ±      69.729  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5    194458.536 ±    4847.971    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1788.954 ±     687.534  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5    189177.722 ±   69151.787    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.866 ±       5.652  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5        92.762 ±     608.582    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        27.000                counts
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        43.000                    ms
[info] ArrayOfUUIDsBenchmark.readJacksonScala                                                              128  thrpt    5     99613.961 ±    1714.562   ops/s
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1349.266 ±      32.730  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5     21315.226 ±     412.094    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1312.581 ±      15.694  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     20736.044 ±     494.833    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.841 ±       6.627  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        13.279 ±     104.557    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        20.000                counts
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        40.000                    ms
[info] ArrayOfUUIDsBenchmark.readJsoniterScala                                                             128  thrpt    5    250119.028 ±   27685.869   ops/s
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       837.456 ±      98.879  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5      5269.299 ±     169.549    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       795.153 ±     696.923  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      5002.282 ±    4325.682    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.608 ±       4.745  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         3.921 ±      30.747    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        12.000                counts
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        28.000                    ms
[info] ArrayOfUUIDsBenchmark.readPlayJson                                                                  128  thrpt    5     13150.423 ±     159.604   ops/s
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      2230.137 ±      56.768  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5    266864.507 ±    6960.037    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2112.895 ±     682.086  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5    252835.508 ±   81698.497    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.937 ±       7.932  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5       112.259 ±     950.515    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        32.000                counts
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        49.000                    ms
[info] ArrayOfUUIDsBenchmark.writeCirce                                                                    128  thrpt    5     32907.333 ±     737.587   ops/s
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      2758.901 ±      91.280  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5    131939.986 ±    2721.531    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      2671.637 ±     125.069  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5    127767.332 ±    5260.868    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.071 ±       0.270  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         3.389 ±      12.907    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        40.000                counts
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        56.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJacksonScala                                                             128  thrpt    5    105532.454 ±    5982.177   ops/s
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1495.164 ±      94.724  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5     22298.242 ±     670.002    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1448.294 ±     703.707  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     21614.415 ±   11020.042    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.783 ±       4.824  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        11.714 ±      71.809    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5        22.000                counts
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        38.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala                                                            128  thrpt    5    178341.910 ±    4137.660   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       584.925 ±      13.633  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      5161.437 ±     160.243    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       529.195 ±     698.106  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      4675.395 ±    6231.057    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.111 ±       0.389    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         8.000                counts
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        23.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5    194365.960 ±    1956.253   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5         0.011 ±       0.096  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.093 ±       0.781    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson                                                                 128  thrpt    5     48491.765 ±    2726.113   ops/s
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      3436.087 ±     180.694  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5    111502.010 ±    1096.102    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      3291.509 ±     540.374  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5    106826.654 ±   18574.084    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.025 ±       0.067  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.810 ±       2.173    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        49.000                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        66.000                    ms
[info] ArrayOfYearMonthsBenchmark.readCirce                                                                128  thrpt    5     26234.088 ±    2123.431   ops/s
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1414.827 ±     118.447  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5     84875.654 ±    2615.770    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1384.077 ±     581.642  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     83057.752 ±   35403.009    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.795 ±       6.668  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        48.498 ±     406.722    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.count                                                      128  thrpt    5        21.000                counts
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.time                                                       128  thrpt    5        43.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJacksonScala                                                         128  thrpt    5     28682.814 ±    1987.712   ops/s
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1182.074 ±      70.178  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     64858.010 ±    1729.905    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1179.962 ±     690.301  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     64774.644 ±   38745.443    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.870 ±       5.202  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        47.211 ±     281.658    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        18.000                counts
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        41.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala                                                        128  thrpt    5    654669.991 ±   23891.796   ops/s
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1767.497 ±      53.356  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4249.148 ±      99.963    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1727.496 ±     550.824  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      4152.296 ±    1274.046    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.629 ±       4.536  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         1.505 ±      10.860    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        26.000                counts
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        41.000                    ms
[info] ArrayOfYearMonthsBenchmark.readPlayJson                                                             128  thrpt    5     23336.878 ±    1845.543   ops/s
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1755.443 ±     165.463  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    118371.867 ±    2266.499    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1656.708 ±      55.599  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    111744.503 ±    5733.581    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.271 ±       2.197  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        18.193 ±     147.519    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        25.000                counts
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        39.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeCirce                                                               128  thrpt    5     71844.850 ±    3137.836   ops/s
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1905.486 ±      84.781  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     41739.349 ±    1124.579    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1854.376 ±     696.670  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     40627.897 ±   15565.604    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.779 ±       6.168  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        17.236 ±     136.637    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        28.000                counts
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        44.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala                                                        128  thrpt    5    176108.336 ±   11027.434   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1971.736 ±     176.150  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     17617.736 ±     616.071    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1917.852 ±     588.156  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     17123.681 ±    4311.435    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.787 ±       6.112  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         7.220 ±      56.274    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5        29.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        44.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala                                                       128  thrpt    5   1449866.703 ±   82886.275   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1239.624 ±      89.646  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1345.537 ±      28.135    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1191.257 ±     693.671  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1294.256 ±     784.717    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.641 ±       4.690  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.698 ±       5.105    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5        18.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5        34.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   1720173.534 ±    9496.256   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5         0.017 ±       0.145  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5         0.016 ±       0.132    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson                                                            128  thrpt    5    131099.823 ±    4661.953   ops/s
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1702.982 ±      79.609  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     20443.194 ±     542.503    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1657.515 ±      71.702  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     19898.829 ±    1107.451    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.121 ±       0.693  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.453 ±       8.323    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5        25.000                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        37.000                    ms
[info] ArrayOfYearsBenchmark.readJacksonScala                                                              128  thrpt    5     42944.226 ±    4486.106   ops/s
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1591.017 ±     130.552  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5     58313.898 ±    1652.271    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1509.947 ±     670.943  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     55275.151 ±   21269.472    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.874 ±       5.226  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        33.000 ±     200.757    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        23.000                counts
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        42.000                    ms
[info] ArrayOfYearsBenchmark.readJsoniterScala                                                             128  thrpt    5    725968.202 ±  123218.155   ops/s
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5      1463.061 ±     257.796  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5      3170.191 ±      72.119    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1393.966 ±     560.262  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      3019.613 ±    1006.262    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.633 ±       3.598  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.416 ±       8.220    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        21.000                counts
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        39.000                    ms
[info] ArrayOfYearsBenchmark.readPlayJson                                                                  128  thrpt    5     30460.246 ±    1238.657   ops/s
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      2130.932 ±     101.170  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5    110042.258 ±    1749.939    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2063.636 ±     508.939  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5    106583.738 ±   27112.516    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.292 ±       2.107  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5        15.078 ±     109.033    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        31.000                counts
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        54.000                    ms
[info] ArrayOfYearsBenchmark.writeJacksonScala                                                             128  thrpt    5    376496.931 ±   26824.539   ops/s
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1078.800 ±      84.497  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      4509.647 ±      66.320    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1051.596 ±     558.436  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      4393.313 ±    2189.918    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.804 ±       6.475  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         3.281 ±      26.404    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5        16.000                counts
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        37.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScala                                                            128  thrpt    5   1967821.362 ±   26194.371   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5      1186.637 ±      56.840  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       948.928 ±      34.542    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1124.942 ±     699.046  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       899.454 ±     553.928    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.679 ±       4.645  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.544 ±       3.719    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5        17.000                counts
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        34.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5   2253257.690 ±   28857.908   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearsBenchmark.writePlayJson                                                                 128  thrpt    5    248469.513 ±   17022.462   ops/s
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      1664.012 ±     137.880  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     10537.443 ±     185.195    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space                                128  thrpt    5         0.004 ±       0.035  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm                           128  thrpt    5         0.027 ±       0.231    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.Metaspace                                             128  thrpt    5         0.012 ±       0.104  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.Metaspace.norm                                        128  thrpt    5         0.079 ±       0.679    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1644.186 ±      40.940  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     10415.473 ±     857.068    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen                                            128  thrpt    5         0.360 ±       3.101  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm                                       128  thrpt    5         2.350 ±      20.237    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.878 ±       7.430  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         5.730 ±      48.489    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        27.000                counts
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        71.000                    ms
[info] ArrayOfZoneIdsBenchmark.readCirce                                                                   128  thrpt    5     73653.824 ±    1847.587   ops/s
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1634.788 ±      81.555  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     34930.837 ±    1238.422    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1581.027 ±     576.241  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     33789.475 ±   12595.000    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.820 ±       5.572  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        17.683 ±     120.458    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        24.000                counts
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        43.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJacksonScala                                                            128  thrpt    5     78303.805 ±    6390.921   ops/s
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1028.725 ±      87.409  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     20675.775 ±     479.858    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1047.366 ±     553.201  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     21042.033 ±   10565.649    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.845 ±       6.572  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        16.955 ±     132.001    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        16.000                counts
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        40.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala                                                           128  thrpt    5     99037.386 ±    2036.600   ops/s
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5      1226.178 ±      47.439  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5     19484.021 ±     742.600    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1190.111 ±     699.588  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     18912.388 ±   11159.037    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.633 ±       4.639  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        10.042 ±      73.599    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5        18.000                counts
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        33.000                    ms
[info] ArrayOfZoneIdsBenchmark.readPlayJson                                                                128  thrpt    5     45866.333 ±    3063.077   ops/s
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      2159.079 ±     122.139  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     74084.361 ±    1566.074    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2108.386 ±     702.513  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     72433.344 ±   28486.178    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.958 ±       8.155  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        33.802 ±     287.974    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        32.000                counts
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        51.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeCirce                                                                  128  thrpt    5    113187.432 ±    1915.194   ops/s
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1088.215 ±      33.589  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     15131.184 ±     227.602    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1052.396 ±     574.044  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     14633.482 ±    7982.000    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.770 ±       6.146  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5        10.709 ±      85.451    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        16.000                counts
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        33.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala                                                           128  thrpt    5    322776.426 ±    8407.056   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       492.376 ±      32.268  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      2400.697 ±     103.259    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       457.635 ±     689.589  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      2229.346 ±    3332.530    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.061 ±       0.347    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         7.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        23.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala                                                          128  thrpt    5    661433.056 ±   39120.911   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       844.121 ±      38.368  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      2008.645 ±      73.466    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       794.536 ±     700.427  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1894.139 ±    1743.126    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.629 ±       4.836  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.505 ±      11.583    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5        12.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        27.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    764397.657 ±    9753.028   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5         0.008 ±       0.062  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.016 ±       0.129    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson                                                               128  thrpt    5    234645.383 ±   14229.564   ops/s
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5       771.676 ±      46.473  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5      5175.576 ±      66.838    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5       722.184 ±     570.041  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      4841.368 ±    3736.707    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.804 ±       5.611  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         5.349 ±      37.367    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        11.000                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        34.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readCirce                                                               128  thrpt    5    123798.603 ±    3176.794   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1750.248 ±      39.171  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5     22250.661 ±     469.057    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1714.845 ±     548.521  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     21796.374 ±    6687.367    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.804 ±       5.231  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        10.186 ±      66.362    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        26.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time                                                      128  thrpt    5        45.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala                                                        128  thrpt    5    178892.540 ±    8558.107   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1096.305 ±      34.254  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5      9644.316 ±     294.867    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1049.736 ±     556.747  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      9242.221 ±    5199.959    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.841 ±       6.665  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         7.304 ±      57.767    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5        16.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5        36.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala                                                       128  thrpt    5    443161.049 ±   16611.795   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       298.634 ±      12.430  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1060.557 ±      40.104    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       313.638 ±     124.520  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1113.611 ±     432.919    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.629 ±       5.413  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         2.213 ±      19.052    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         5.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        11.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson                                                            128  thrpt    5     67627.029 ±     956.707   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      2729.205 ±      81.302  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     63512.434 ±    1298.899    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2616.989 ±     529.495  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     60896.125 ±   11820.781    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.229 ±       1.579  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         5.334 ±      36.803    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        39.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        56.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeCirce                                                              128  thrpt    5    183531.990 ±    7355.568   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1202.139 ±      36.087  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     10308.226 ±     173.684    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1186.920 ±     699.071  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     10172.542 ±    5831.429    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.725 ±       5.053  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         6.189 ±      43.167    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        18.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        35.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala                                                       128  thrpt    5    545946.872 ±   15145.074   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5       553.815 ±      33.344  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1596.480 ±      77.831    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       524.122 ±     689.681  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1510.505 ±    1982.821    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.021 ±       0.113  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.060 ±       0.324    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         8.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        24.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala                                                      128  thrpt    5   1134898.028 ±   31295.748   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       869.548 ±      33.551  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      1205.489 ±      22.395    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       860.065 ±     695.645  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1192.792 ±     973.129    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.662 ±       5.523  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.912 ±       7.604    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5        13.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5        30.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5   1287154.216 ±    4278.547   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson                                                           128  thrpt    5    353693.222 ±   23752.318   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5       990.364 ±      63.216  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5      4406.609 ±      71.178    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5       981.724 ±      11.664  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      4369.068 ±     277.654    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.858 ±       6.453  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         3.767 ±      28.227    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        15.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        40.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readCirce                                                            128  thrpt    5       590.245 ±      28.994   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1267.018 ±      65.170  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5   3376824.893 ±   89032.396    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1237.950 ±     544.860  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5   3298690.180 ± 1424054.191    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         1.140 ±       7.940  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5      3028.048 ±   21004.274    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count                                                  128  thrpt    5        19.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time                                                   128  thrpt    5        42.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala                                                     128  thrpt    5       592.462 ±       8.725   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1260.740 ±      42.074  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5   3347402.694 ±   93006.859    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1166.354 ±     679.028  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5   3097844.874 ± 1833037.017    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.198 ±       9.189  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5      3187.790 ±   24449.653    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        18.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        44.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala                                                    128  thrpt    5     49765.684 ±    1161.297   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       836.526 ±      49.896  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5     26454.798 ±    1635.715    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       855.360 ±     688.654  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     27031.270 ±   21374.605    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.053 ±       7.983  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        33.397 ±     253.389    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5        13.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        39.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson                                                         128  thrpt    5       561.329 ±      48.658   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      1234.454 ±     107.953  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5   3458964.589 ±   99421.572    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1236.872 ±     564.803  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5   3468970.888 ± 1672499.878    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.090 ±       7.211  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5      3011.120 ±   19885.356    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        19.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        51.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeCirce                                                           128  thrpt    5     14700.855 ±     808.501   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1162.214 ±      65.307  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5    124422.396 ±    3304.129    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1106.193 ±     673.458  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    118294.155 ±   67462.268    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         1.145 ±       7.857  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       124.430 ±     859.881    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        17.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        44.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala                                                    128  thrpt    5     17540.490 ±     919.688   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1059.585 ±      66.610  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     95057.518 ±    1683.027    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       973.398 ±      22.854  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     87336.655 ±    3526.772    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.174 ±       9.975  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       104.872 ±     891.029    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        15.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        40.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala                                                   128  thrpt    5    216033.645 ±    9113.764   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       788.431 ±      56.342  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      5742.729 ±     216.189    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       790.464 ±     690.181  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      5752.684 ±    4900.492    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         1.054 ±       7.627  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         7.793 ±      56.647    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        12.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        36.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    247720.155 ±    4420.458   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         2.355 ±      20.277  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5        15.042 ±     129.497    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson                                                        128  thrpt    5     17961.307 ±     809.530   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1156.137 ±      43.117  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5    101298.865 ±    3620.465    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1111.816 ±     687.078  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     97451.027 ±   61353.541    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.854 ±       5.188  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        74.319 ±     452.666    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        17.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        38.000                    ms
[info] BitSetBenchmark.readJsoniterScala                                                                   128  thrpt    5   1545688.957 ±   42691.560   ops/s
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                                    128  thrpt    5        63.908 ±       8.191  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                               128  thrpt    5        65.077 ±       9.274    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                           128  thrpt    5        51.159 ±     440.497  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5        52.468 ±     451.768    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.145 ±       1.246  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.148 ±       1.278    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.count                                                         128  thrpt    5         1.000                counts
[info] BitSetBenchmark.readJsoniterScala:·gc.time                                                          128  thrpt    5         3.000                    ms
[info] BitSetBenchmark.readPlayJson                                                                        128  thrpt    5     80538.184 ±    2372.350   ops/s
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate                                                         128  thrpt    5      3441.969 ±     132.035  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                                    128  thrpt    5     67253.689 ±    1425.168    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                128  thrpt    5      3304.260 ±     548.242  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                           128  thrpt    5     64553.968 ±    9501.331    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                            128  thrpt    5         0.021 ±       0.098  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                       128  thrpt    5         0.406 ±       1.904    B/op
[info] BitSetBenchmark.readPlayJson:·gc.count                                                              128  thrpt    5        49.000                counts
[info] BitSetBenchmark.readPlayJson:·gc.time                                                               128  thrpt    5        69.000                    ms
[info] BitSetBenchmark.writeJacksonScala                                                                   128  thrpt    5   1841978.368 ±   51508.782   ops/s
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                                    128  thrpt    5       993.259 ±      37.190  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                               128  thrpt    5       848.518 ±      19.129    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                           128  thrpt    5       917.254 ±     568.900  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5       783.491 ±     483.345    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.825 ±       6.876  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.698 ±       5.818    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.count                                                         128  thrpt    5        14.000                counts
[info] BitSetBenchmark.writeJacksonScala:·gc.time                                                          128  thrpt    5        35.000                    ms
[info] BitSetBenchmark.writeJsoniterScala                                                                  128  thrpt    5   2349489.570 ±   54537.911   ops/s
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                                   128  thrpt    5       649.369 ±      16.899  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                              128  thrpt    5       434.983 ±       7.696    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                          128  thrpt    5       595.401 ±     568.173  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5       398.623 ±     377.848    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.004 ±       0.036  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.003 ±       0.024    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.count                                                        128  thrpt    5         9.000                counts
[info] BitSetBenchmark.writeJsoniterScala:·gc.time                                                         128  thrpt    5        25.000                    ms
[info] BitSetBenchmark.writeJsoniterScalaPrealloc                                                          128  thrpt    5   2385872.217 ±    4870.343   ops/s
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                           128  thrpt    5        24.257 ±       0.051  MB/sec
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                      128  thrpt    5        16.000 ±       0.001    B/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                128  thrpt    5           ≈ 0                counts
[info] BitSetBenchmark.writePlayJson                                                                       128  thrpt    5     50868.381 ±    2478.885   ops/s
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate                                                        128  thrpt    5      2195.345 ±     103.708  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                                   128  thrpt    5     67916.081 ±    1211.099    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                               128  thrpt    5      2116.780 ±     720.725  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                          128  thrpt    5     65548.043 ±   25449.118    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                           128  thrpt    5         0.254 ±       1.668  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                      128  thrpt    5         7.836 ±      51.228    B/op
[info] BitSetBenchmark.writePlayJson:·gc.count                                                             128  thrpt    5        32.000                counts
[info] BitSetBenchmark.writePlayJson:·gc.time                                                              128  thrpt    5        45.000                    ms
[info] ExtractFieldsBenchmark.readCirce                                                                    N/A  thrpt    5    865235.981 ±   54856.955   ops/s
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate                                                     N/A  thrpt    5      2795.353 ±     164.472  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm                                                N/A  thrpt    5      5084.916 ±     119.818    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      2688.357 ±     108.828  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5      4891.523 ±     443.375    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.033 ±       0.122  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.060 ±       0.219    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.count                                                          N/A  thrpt    5        40.000                counts
[info] ExtractFieldsBenchmark.readCirce:·gc.time                                                           N/A  thrpt    5        57.000                    ms
[info] ExtractFieldsBenchmark.readDslJsonJava                                                              N/A  thrpt    5   4744330.738 ±  243907.285   ops/s
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate                                               N/A  thrpt    5       295.121 ±      17.678  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          N/A  thrpt    5        97.903 ±       5.163    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       245.896 ±     541.578  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5        81.617 ±     180.759    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.011 ±       0.060  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.004 ±       0.020    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.count                                                    N/A  thrpt    5         4.000                counts
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.time                                                     N/A  thrpt    5        13.000                    ms
[info] ExtractFieldsBenchmark.readJacksonScala                                                             N/A  thrpt    5    978826.435 ±   87814.485   ops/s
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate                                              N/A  thrpt    5      1154.701 ±      88.689  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         N/A  thrpt    5      1856.685 ±      29.444    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5      1109.926 ±     688.287  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5      1785.293 ±    1115.767    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.883 ±       7.489  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         1.372 ±      11.632    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.count                                                   N/A  thrpt    5        17.000                counts
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.time                                                    N/A  thrpt    5        41.000                    ms
[info] ExtractFieldsBenchmark.readJsoniterScala                                                            N/A  thrpt    5   9179618.245 ±  319361.977   ops/s
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate                                             N/A  thrpt    5       434.129 ±      29.048  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        N/A  thrpt    5        74.410 ±       3.400    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       448.962 ±     760.800  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5        76.836 ±     129.195    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.017 ±       0.067  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.003 ±       0.011    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.count                                                  N/A  thrpt    5         7.000                counts
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.time                                                   N/A  thrpt    5        16.000                    ms
[info] ExtractFieldsBenchmark.readPlayJson                                                                 N/A  thrpt    5    478068.193 ±   27310.825   ops/s
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate                                                  N/A  thrpt    5      2279.055 ±     149.383  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             N/A  thrpt    5      7502.564 ±     207.793    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      2265.831 ±     582.139  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5      7454.660 ±    1541.074    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.312 ±       1.639  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         1.027 ±       5.393    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.count                                                       N/A  thrpt    5        34.000                counts
[info] ExtractFieldsBenchmark.readPlayJson:·gc.time                                                        N/A  thrpt    5        56.000                    ms
[info] GeoJSONBenchmark.readCirce                                                                          N/A  thrpt    5      4529.258 ±     438.126   ops/s
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate                                                           N/A  thrpt    5      2280.124 ±     251.072  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm                                                      N/A  thrpt    5    792150.636 ±   23796.271    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.Compressed_Class_Space                                         N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.Compressed_Class_Space.norm                                    N/A  thrpt    5         1.516 ±      13.054    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.Metaspace                                                      N/A  thrpt    5         0.012 ±       0.105  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.Metaspace.norm                                                 N/A  thrpt    5         4.452 ±      38.332    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5      2190.425 ±     647.657  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5    760835.614 ±  198386.690    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Old_Gen                                                     N/A  thrpt    5         0.128 ±       1.106  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Old_Gen.norm                                                N/A  thrpt    5        46.727 ±     402.331    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5         1.299 ±       8.150  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5       466.788 ±    2973.993    B/op
[info] GeoJSONBenchmark.readCirce:·gc.count                                                                N/A  thrpt    5        35.000                counts
[info] GeoJSONBenchmark.readCirce:·gc.time                                                                 N/A  thrpt    5        87.000                    ms
[info] GeoJSONBenchmark.readJacksonScala                                                                   N/A  thrpt    5      6735.455 ±     124.123   ops/s
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate                                                    N/A  thrpt    5      2302.518 ±      53.988  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm                                               N/A  thrpt    5    537959.939 ±   12793.596    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      2264.865 ±     545.338  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5    529268.349 ±  134854.029    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.296 ±       2.041  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5        68.915 ±     475.584    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.count                                                         N/A  thrpt    5        34.000                counts
[info] GeoJSONBenchmark.readJacksonScala:·gc.time                                                          N/A  thrpt    5        53.000                    ms
[info] GeoJSONBenchmark.readJsoniterScala                                                                  N/A  thrpt    5     45565.898 ±    3518.050   ops/s
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate                                                   N/A  thrpt    5       758.459 ±      26.450  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                              N/A  thrpt    5     26199.127 ±    1362.681    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5       728.978 ±     574.852  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5     25159.016 ±   19195.446    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.587 ±       4.202  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5        20.058 ±     143.648    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.count                                                        N/A  thrpt    5        11.000                counts
[info] GeoJSONBenchmark.readJsoniterScala:·gc.time                                                         N/A  thrpt    5        29.000                    ms
[info] GeoJSONBenchmark.writeCirce                                                                         N/A  thrpt    5      4600.896 ±      81.955   ops/s
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate                                                          N/A  thrpt    5      1009.103 ±      20.176  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm                                                     N/A  thrpt    5    345184.051 ±    5685.758    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5       983.946 ±      13.411  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5    336585.395 ±    9616.286    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.883 ±       6.307  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5       301.991 ±    2158.299    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.count                                                               N/A  thrpt    5        15.000                counts
[info] GeoJSONBenchmark.writeCirce:·gc.time                                                                N/A  thrpt    5        41.000                    ms
[info] GeoJSONBenchmark.writeJacksonScala                                                                  N/A  thrpt    5      5115.880 ±     206.566   ops/s
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate                                                   N/A  thrpt    5       645.168 ±      11.638  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                              N/A  thrpt    5    198484.188 ±    5443.123    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5       646.382 ±      18.141  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5    198872.821 ±   12718.956    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.021 ±       0.080  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         6.432 ±      24.824    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.count                                                        N/A  thrpt    5        10.000                counts
[info] GeoJSONBenchmark.writeJacksonScala:·gc.time                                                         N/A  thrpt    5        18.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScala                                                                 N/A  thrpt    5      6566.330 ±      58.461   ops/s
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate                                                  N/A  thrpt    5       331.097 ±       5.094  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                             N/A  thrpt    5     79352.746 ±    1207.457    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       327.748 ±       3.140  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5     78549.975 ±     756.413    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.702 ±       5.602  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5       167.852 ±    1339.096    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.count                                                       N/A  thrpt    5         5.000                counts
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.time                                                        N/A  thrpt    5        11.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc                                                         N/A  thrpt    5      6608.592 ±     133.377   ops/s
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                          N/A  thrpt    5       281.859 ±       6.984  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                     N/A  thrpt    5     67121.252 ±    2171.914    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5       300.231 ±     156.213  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5     71507.888 ±   37623.808    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.008 ±       0.044  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         1.989 ±      10.486    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count                                               N/A  thrpt    5         5.000                counts
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time                                                N/A  thrpt    5        16.000                    ms
[info] GoogleMapsAPIBenchmark.readCirce                                                                    N/A  thrpt    5      7961.909 ±     543.656   ops/s
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate                                                     N/A  thrpt    5      1697.102 ±     147.369  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm                                                N/A  thrpt    5    335430.776 ±    7241.210    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      1647.836 ±      30.487  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5    325799.256 ±   23717.658    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.926 ±       5.433  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5       186.840 ±    1105.801    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.count                                                          N/A  thrpt    5        25.000                counts
[info] GoogleMapsAPIBenchmark.readCirce:·gc.time                                                           N/A  thrpt    5        46.000                    ms
[info] GoogleMapsAPIBenchmark.readDslJsonJava                                                              N/A  thrpt    5     18370.860 ±     512.006   ops/s
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate                                               N/A  thrpt    5       466.687 ±      11.129  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          N/A  thrpt    5     39979.928 ±    1817.164    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       454.615 ±     683.946  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5     39034.037 ±   59845.420    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.017 ±       0.086  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         1.484 ±       7.436    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count                                                    N/A  thrpt    5         7.000                counts
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time                                                     N/A  thrpt    5        23.000                    ms
[info] GoogleMapsAPIBenchmark.readJacksonScala                                                             N/A  thrpt    5     15594.263 ±     752.859   ops/s
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate                                              N/A  thrpt    5       431.320 ±      49.281  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         N/A  thrpt    5     43532.264 ±    5373.625    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       448.535 ±     677.186  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5     45290.314 ±   68677.677    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.count                                                   N/A  thrpt    5         7.000                counts
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.time                                                    N/A  thrpt    5        10.000                    ms
[info] GoogleMapsAPIBenchmark.readJsoniterScala                                                            N/A  thrpt    5     22854.654 ±     861.345   ops/s
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                             N/A  thrpt    5       434.943 ±      14.403  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        N/A  thrpt    5     29954.925 ±    1789.157    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       396.616 ±     568.707  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5     27354.794 ±   39955.783    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.009 ±       0.051  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.654 ±       3.497    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count                                                  N/A  thrpt    5         6.000                counts
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time                                                   N/A  thrpt    5        16.000                    ms
[info] GoogleMapsAPIBenchmark.readPlayJson                                                                 N/A  thrpt    5      4111.928 ±     197.443   ops/s
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate                                                  N/A  thrpt    5      2526.356 ±      91.660  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                             N/A  thrpt    5    966861.835 ±   23560.597    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      2406.259 ±     549.518  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5    920644.562 ±  184354.840    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.362 ±       2.349  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5       137.331 ±     891.563    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.count                                                       N/A  thrpt    5        36.000                counts
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.time                                                        N/A  thrpt    5        58.000                    ms
[info] GoogleMapsAPIBenchmark.writeCirce                                                                   N/A  thrpt    5     10287.367 ±     422.656   ops/s
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate                                                    N/A  thrpt    5      2209.369 ±     112.130  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm                                               N/A  thrpt    5    337999.823 ±    6940.509    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      2186.049 ±     716.174  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5    334624.763 ±  118708.848    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.805 ±       6.748  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5       125.066 ±    1049.543    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.count                                                         N/A  thrpt    5        33.000                counts
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.time                                                          N/A  thrpt    5        49.000                    ms
[info] GoogleMapsAPIBenchmark.writeDslJsonJava                                                             N/A  thrpt    5     56312.450 ±    1935.171   ops/s
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate                                              N/A  thrpt    5       543.984 ±      23.898  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         N/A  thrpt    5     15202.423 ±     479.389    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       584.589 ±     559.350  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5     16346.367 ±   15751.049    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.020 ±       0.092  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.574 ±       2.602    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count                                                   N/A  thrpt    5         9.000                counts
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time                                                    N/A  thrpt    5        31.000                    ms
[info] GoogleMapsAPIBenchmark.writeJacksonScala                                                            N/A  thrpt    5     44048.663 ±    2844.434   ops/s
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                             N/A  thrpt    5       652.413 ±      45.911  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        N/A  thrpt    5     23308.875 ±     434.189    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       647.465 ±      17.857  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5     23136.366 ±    1260.622    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.029 ±       0.072  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         1.045 ±       2.584    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count                                                  N/A  thrpt    5        10.000                counts
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time                                                   N/A  thrpt    5        16.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScala                                                           N/A  thrpt    5     89645.138 ±    2610.994   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                            N/A  thrpt    5       691.466 ±      21.564  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       N/A  thrpt    5     12138.659 ±     247.866    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       661.128 ±       4.523  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5     11606.505 ±     339.930    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.595 ±       4.992  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5        10.527 ±      88.284    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count                                                 N/A  thrpt    5        10.000                counts
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time                                                  N/A  thrpt    5        30.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc                                                   N/A  thrpt    5    104154.294 ±    1534.481   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    N/A  thrpt    5         0.188 ±       1.619  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               N/A  thrpt    5         2.853 ±      24.525    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         N/A  thrpt    5           ≈ 0                counts
[info] GoogleMapsAPIBenchmark.writePlayJson                                                                N/A  thrpt    5      7678.571 ±     267.996   ops/s
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate                                                 N/A  thrpt    5      2324.703 ±      68.533  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm                                            N/A  thrpt    5    476439.698 ±    9655.339    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      2268.383 ±     577.942  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5    465081.235 ±  130025.494    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.237 ±       1.780  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5        48.696 ±     365.378    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.count                                                      N/A  thrpt    5        34.000                counts
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.time                                                       N/A  thrpt    5        54.000                    ms
[info] IntBenchmark.readCirce                                                                              N/A  thrpt    5   8421290.046 ±  238968.332   ops/s
[info] IntBenchmark.readCirce:·gc.alloc.rate                                                               N/A  thrpt    5      4629.049 ±     125.804  MB/sec
[info] IntBenchmark.readCirce:·gc.alloc.rate.norm                                                          N/A  thrpt    5       865.089 ±       3.059    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                      N/A  thrpt    5      4461.904 ±     438.365  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                                 N/A  thrpt    5       833.917 ±      90.801    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                                  N/A  thrpt    5         0.062 ±       0.057  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                             N/A  thrpt    5         0.012 ±       0.010    B/op
[info] IntBenchmark.readCirce:·gc.count                                                                    N/A  thrpt    5        66.000                counts
[info] IntBenchmark.readCirce:·gc.time                                                                     N/A  thrpt    5        84.000                    ms
[info] IntBenchmark.readDslJsonJava                                                                        N/A  thrpt    5  37434412.448 ±  235639.954   ops/s
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate                                                         N/A  thrpt    5         4.840 ±      41.671  MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                                    N/A  thrpt    5         0.204 ±       1.757    B/op
[info] IntBenchmark.readDslJsonJava:·gc.count                                                              N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readJacksonScala                                                                       N/A  thrpt    5  10841750.188 ±  300127.163   ops/s
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate                                                        N/A  thrpt    5      3711.078 ±     105.411  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate.norm                                                   N/A  thrpt    5       538.689 ±      14.656    B/op
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      3561.378 ±     707.884  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5       516.877 ±      94.606    B/op
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.054 ±       0.108  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.008 ±       0.016    B/op
[info] IntBenchmark.readJacksonScala:·gc.count                                                             N/A  thrpt    5        53.000                counts
[info] IntBenchmark.readJacksonScala:·gc.time                                                              N/A  thrpt    5        71.000                    ms
[info] IntBenchmark.readJsoniterScala                                                                      N/A  thrpt    5  48930122.476 ±  749965.952   ops/s
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate                                                       N/A  thrpt    5         2.021 ±      13.903  MB/sec
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5         0.065 ±       0.450    B/op
[info] IntBenchmark.readJsoniterScala:·gc.count                                                            N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readNaiveScala                                                                         N/A  thrpt    5  31310237.185 ± 1131952.635   ops/s
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate                                                          N/A  thrpt    5       822.453 ±      30.498  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate.norm                                                     N/A  thrpt    5        41.343 ±       2.274    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5       796.751 ±     700.360  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5        40.117 ±      36.732    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.591 ±       3.544  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5         0.030 ±       0.177    B/op
[info] IntBenchmark.readNaiveScala:·gc.count                                                               N/A  thrpt    5        12.000                counts
[info] IntBenchmark.readNaiveScala:·gc.time                                                                N/A  thrpt    5        27.000                    ms
[info] IntBenchmark.readPlayJson                                                                           N/A  thrpt    5   9122870.854 ±   86963.719   ops/s
[info] IntBenchmark.readPlayJson:·gc.alloc.rate                                                            N/A  thrpt    5      3856.268 ±      55.215  MB/sec
[info] IntBenchmark.readPlayJson:·gc.alloc.rate.norm                                                       N/A  thrpt    5       665.253 ±       6.087    B/op
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                   N/A  thrpt    5      3700.073 ±     885.637  MB/sec
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                              N/A  thrpt    5       638.293 ±     151.799    B/op
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                               N/A  thrpt    5         0.050 ±       0.108  MB/sec
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                          N/A  thrpt    5         0.009 ±       0.019    B/op
[info] IntBenchmark.readPlayJson:·gc.count                                                                 N/A  thrpt    5        55.000                counts
[info] IntBenchmark.readPlayJson:·gc.time                                                                  N/A  thrpt    5        73.000                    ms
[info] IntBenchmark.writeCirce                                                                             N/A  thrpt    5  13902658.186 ±  691843.999   ops/s
[info] IntBenchmark.writeCirce:·gc.alloc.rate                                                              N/A  thrpt    5      1688.043 ±      94.582  MB/sec
[info] IntBenchmark.writeCirce:·gc.alloc.rate.norm                                                         N/A  thrpt    5       191.085 ±       1.526    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                     N/A  thrpt    5      1656.303 ±      27.428  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                                N/A  thrpt    5       187.512 ±       6.728    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                                 N/A  thrpt    5         0.666 ±       4.441  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                            N/A  thrpt    5         0.076 ±       0.506    B/op
[info] IntBenchmark.writeCirce:·gc.count                                                                   N/A  thrpt    5        25.000                counts
[info] IntBenchmark.writeCirce:·gc.time                                                                    N/A  thrpt    5        41.000                    ms
[info] IntBenchmark.writeDslJsonJava                                                                       N/A  thrpt    5  41607647.839 ± 1369835.786   ops/s
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate                                                        N/A  thrpt    5       874.651 ±      38.440  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                                   N/A  thrpt    5        33.080 ±       0.650    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5       912.313 ±     558.681  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5        34.500 ±      20.998    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.932 ±       7.798  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.035 ±       0.291    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.count                                                             N/A  thrpt    5        14.000                counts
[info] IntBenchmark.writeDslJsonJava:·gc.time                                                              N/A  thrpt    5        38.000                    ms
[info] IntBenchmark.writeJacksonScala                                                                      N/A  thrpt    5  13284891.743 ±  172126.124   ops/s
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate                                                       N/A  thrpt    5      2731.775 ±      44.704  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       323.618 ±       4.563    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      2596.588 ±     505.234  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       307.604 ±      59.836    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.046 ±       0.154  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.005 ±       0.018    B/op
[info] IntBenchmark.writeJacksonScala:·gc.count                                                            N/A  thrpt    5        39.000                counts
[info] IntBenchmark.writeJacksonScala:·gc.time                                                             N/A  thrpt    5        52.000                    ms
[info] IntBenchmark.writeJsoniterScala                                                                     N/A  thrpt    5  47517443.750 ± 1632269.248   ops/s
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate                                                      N/A  thrpt    5       994.002 ±      30.096  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                                 N/A  thrpt    5        32.922 ±       0.306    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5       926.402 ±     571.708  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5        30.707 ±      19.493    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.654 ±       5.494  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.022 ±       0.181    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.count                                                           N/A  thrpt    5        14.000                counts
[info] IntBenchmark.writeJsoniterScala:·gc.time                                                            N/A  thrpt    5        31.000                    ms
[info] IntBenchmark.writeJsoniterScalaPrealloc                                                             N/A  thrpt    5  61499777.677 ±  737333.584   ops/s
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                              N/A  thrpt    5         2.479 ±      21.342  MB/sec
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                         N/A  thrpt    5         0.064 ±       0.549    B/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                   N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeNaiveScala                                                                        N/A  thrpt    5  17698262.944 ±  607815.909   ops/s
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate                                                         N/A  thrpt    5      1673.817 ±      82.601  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm                                                    N/A  thrpt    5       148.836 ±       3.952    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space                                                N/A  thrpt    5      1605.075 ±     557.352  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm                                           N/A  thrpt    5       142.766 ±      51.225    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space                                            N/A  thrpt    5         0.279 ±       1.479  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm                                       N/A  thrpt    5         0.025 ±       0.131    B/op
[info] IntBenchmark.writeNaiveScala:·gc.count                                                              N/A  thrpt    5        24.000                counts
[info] IntBenchmark.writeNaiveScala:·gc.time                                                               N/A  thrpt    5        34.000                    ms
[info] IntBenchmark.writePlayJson                                                                          N/A  thrpt    5   2703950.361 ±   93772.002   ops/s
[info] IntBenchmark.writePlayJson:·gc.alloc.rate                                                           N/A  thrpt    5      2181.163 ±      90.747  MB/sec
[info] IntBenchmark.writePlayJson:·gc.alloc.rate.norm                                                      N/A  thrpt    5      1269.518 ±      19.139    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5      2059.151 ±     563.739  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5      1198.456 ±     320.587    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5         0.729 ±       6.139  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5         0.430 ±       3.624    B/op
[info] IntBenchmark.writePlayJson:·gc.count                                                                N/A  thrpt    5        31.000                counts
[info] IntBenchmark.writePlayJson:·gc.time                                                                 N/A  thrpt    5        45.000                    ms
[info] IntMapOfBooleansBenchmark.readJsoniterScala                                                         128  thrpt    5    169311.589 ±    2552.077   ops/s
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      3222.653 ±     103.594  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5     29953.206 ±     648.595    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3094.530 ±     607.380  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     28761.845 ±    5548.867    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.087 ±       0.360  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.815 ±       3.367    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        46.000                counts
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        61.000                    ms
[info] IntMapOfBooleansBenchmark.readPlayJson                                                              128  thrpt    5     34827.207 ±    1402.584   ops/s
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2493.068 ±     106.330  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    112653.210 ±    2450.941    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2475.379 ±     689.381  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    111851.242 ±   30646.123    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.050 ±       0.185  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         2.242 ±       8.220    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        37.000                counts
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        53.000                    ms
[info] IntMapOfBooleansBenchmark.writeJacksonScala                                                         128  thrpt    5    151135.780 ±    7518.601   ops/s
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1317.553 ±      64.729  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     13720.310 ±     325.086    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1309.075 ±      14.267  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     13633.867 ±     782.118    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.879 ±       7.121  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         9.111 ±      73.839    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5        20.000                counts
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        41.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScala                                                        128  thrpt    5    432878.020 ±   31765.316   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1736.677 ±     123.204  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      6313.744 ±     163.103    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1658.472 ±      30.732  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      6030.774 ±     395.277    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.687 ±       5.384  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         2.457 ±      19.210    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5        25.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        37.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    479072.921 ±   12978.130   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5      1381.920 ±      52.508  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5      4539.560 ±      86.018    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                        128  thrpt    5      1323.048 ±      12.248  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4346.411 ±     143.672    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.658 ±       5.531  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         2.184 ±      18.363    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5        20.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                                       128  thrpt    5        35.000                    ms
[info] IntMapOfBooleansBenchmark.writePlayJson                                                             128  thrpt    5     74824.723 ±    5307.581   ops/s
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5      1554.898 ±     133.093  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     32701.552 ±     625.415    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1521.576 ±     669.015  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     31985.223 ±   13155.173    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.171 ±       1.382  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         3.594 ±      29.106    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        23.000                counts
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        36.000                    ms
[info] ListOfBooleansBenchmark.readCirce                                                                   128  thrpt    5    315248.651 ±    6928.412   ops/s
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      2357.555 ±      98.427  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     11768.538 ±     327.057    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      2262.215 ±     617.653  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     11290.947 ±    2962.639    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.192 ±       1.382  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.961 ±       6.948    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.count                                                         128  thrpt    5        34.000                counts
[info] ListOfBooleansBenchmark.readCirce:·gc.time                                                          128  thrpt    5        47.000                    ms
[info] ListOfBooleansBenchmark.readJacksonScala                                                            128  thrpt    5    495604.133 ±   35417.160   ops/s
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1305.191 ±     113.401  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      4146.162 ±      71.055    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1242.330 ±     557.763  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      3941.996 ±    1578.728    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.914 ±       7.331  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.915 ±      23.401    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        19.000                counts
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        47.000                    ms
[info] ListOfBooleansBenchmark.readJsoniterScala                                                           128  thrpt    5   1317284.514 ±   51980.608   ops/s
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5      2659.867 ±      76.095  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      3177.681 ±      50.592    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      2546.421 ±     696.506  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      3043.794 ±     932.297    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.200 ±       0.774  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.240 ±       0.937    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5        38.000                counts
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        53.000                    ms
[info] ListOfBooleansBenchmark.readPlayJson                                                                128  thrpt    5    104353.048 ±    6289.570   ops/s
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      3492.900 ±     224.913  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     52677.128 ±     547.040    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      3351.294 ±     182.303  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     50557.517 ±    5206.170    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.142 ±       0.492  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         2.152 ±       7.608    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        50.000                counts
[info] ListOfBooleansBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        69.000                    ms
[info] ListOfBooleansBenchmark.writeCirce                                                                  128  thrpt    5    351210.971 ±   16620.434   ops/s
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1213.545 ±      75.190  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5      5437.564 ±      84.077    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1184.663 ±     690.398  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5      5306.869 ±    3038.515    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.733 ±       4.918  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         3.326 ±      22.433    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        18.000                counts
[info] ListOfBooleansBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        36.000                    ms
[info] ListOfBooleansBenchmark.writeJacksonScala                                                           128  thrpt    5    817605.552 ±   38721.461   ops/s
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       606.251 ±      30.533  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1166.934 ±      29.077    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       588.985 ±     567.408  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1133.557 ±    1090.403    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.025 ±       0.067  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.048 ±       0.130    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         9.000                counts
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        30.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScala                                                          128  thrpt    5   2078121.892 ±   91384.706   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       988.425 ±      57.420  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       748.530 ±      11.959    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       992.469 ±       9.615  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       751.684 ±      28.931    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.649 ±       4.821  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.486 ±       3.599    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5        15.000                counts
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        30.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   2333312.173 ±  197997.322   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5         0.670 ±       5.769  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.471 ±       4.050    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ListOfBooleansBenchmark.writePlayJson                                                               128  thrpt    5    452514.731 ±   39421.529   ops/s
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5       674.800 ±      37.770  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5      2347.240 ±     126.553    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5       657.332 ±       6.232  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      2286.876 ±     180.869    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.691 ±       5.682  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         2.324 ±      19.068    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        10.000                counts
[info] ListOfBooleansBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        31.000                    ms
[info] MapOfIntsToBooleansBenchmark.readCirce                                                              128  thrpt    5     59535.289 ±    2807.111   ops/s
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      2088.954 ±     115.361  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5     55212.779 ±     913.701    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1988.922 ±      60.993  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     52574.695 ±    2503.597    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.766 ±       6.375  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        20.194 ±     167.930    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.count                                                    128  thrpt    5        30.000                counts
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.time                                                     128  thrpt    5        46.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJacksonScala                                                       128  thrpt    5     93875.992 ±    6324.262   ops/s
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1744.333 ±     144.716  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     29241.152 ±     866.054    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1705.084 ±     603.263  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     28572.457 ±    9154.572    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.937 ±       6.834  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        15.672 ±     114.113    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5        26.000                counts
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5        46.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala                                                      128  thrpt    5    164740.416 ±   12173.222   ops/s
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      2615.099 ±     198.224  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5     24980.035 ±     759.787    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      2540.569 ±     711.497  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     24251.291 ±    5340.243    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.167 ±       0.567  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.591 ±       5.346    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5        38.000                counts
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5        48.000                    ms
[info] MapOfIntsToBooleansBenchmark.readPlayJson                                                           128  thrpt    5     31969.063 ±    2008.080   ops/s
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      2135.275 ±     123.622  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    105120.016 ±    2962.252    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      2063.818 ±     497.210  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    101661.035 ±   28369.163    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.306 ±       1.345  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        15.145 ±      66.743    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        31.000                counts
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        49.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala                                                      128  thrpt    5    154718.680 ±   10130.355   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1041.795 ±      78.607  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     10596.473 ±     256.392    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1045.782 ±     554.341  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     10644.367 ±    5867.650    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.833 ±       7.081  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         8.313 ±      70.665    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5        16.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5        37.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala                                                     128  thrpt    5    454120.220 ±   24582.965   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       518.948 ±      28.531  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1798.742 ±     118.726    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       528.257 ±     696.048  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1833.366 ±    2443.679    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.017 ±       0.105  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.059 ±       0.371    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5         8.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5        23.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5    511141.255 ±    3562.469   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5         5.197 ±       0.036  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5        16.001 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson                                                          128  thrpt    5     74025.818 ±    2935.083   ops/s
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5      1322.838 ±      57.199  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     28124.972 ±     699.504    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1319.098 ±      45.801  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     28047.791 ±    1534.553    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.200 ±       1.458  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         4.310 ±      31.544    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                                128  thrpt    5        20.000                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5        31.000                    ms
[info] MissingReqFieldBenchmark.readCirce                                                                  N/A  thrpt    5   2876742.079 ±  109453.258   ops/s
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      3704.245 ±     160.407  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5      2026.299 ±      21.152    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      3563.952 ±     692.780  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5      1950.173 ±     425.655    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.050 ±       0.044  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.027 ±       0.024    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        53.000                counts
[info] MissingReqFieldBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        70.000                    ms
[info] MissingReqFieldBenchmark.readDslJsonJava                                                            N/A  thrpt    5    798745.699 ±   49092.581   ops/s
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate                                             N/A  thrpt    5       471.725 ±      31.183  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        N/A  thrpt    5       929.446 ±      54.386    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       456.095 ±     687.027  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5       900.662 ±    1381.572    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.022 ±       0.052  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.043 ±       0.103    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.count                                                  N/A  thrpt    5         7.000                counts
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.time                                                   N/A  thrpt    5        24.000                    ms
[info] MissingReqFieldBenchmark.readJacksonScala                                                           N/A  thrpt    5    326697.224 ±   13676.313   ops/s
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5       779.136 ±      37.129  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5      3753.527 ±     142.245    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       786.811 ±     691.968  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5      3795.600 ±    3446.565    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.918 ±       7.793  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         4.486 ±      38.089    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5        12.000                counts
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5        42.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterScala                                                          N/A  thrpt    5    743094.105 ±   38299.184   ops/s
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5       678.886 ±      31.448  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5      1437.879 ±      75.893    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       663.401 ±       6.999  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5      1405.128 ±      62.526    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.017 ±       0.067  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.035 ±       0.144    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5        10.000                counts
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5        24.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStackless                                                      N/A  thrpt    5   3303329.312 ±  158543.572   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate                                       N/A  thrpt    5      1998.753 ±     159.591  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm                                  N/A  thrpt    5       952.213 ±      30.930    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space                              N/A  thrpt    5      1931.957 ±     594.813  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5       919.944 ±     250.049    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.587 ±       4.523  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.281 ±       2.167    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.count                                            N/A  thrpt    5        29.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.time                                             N/A  thrpt    5        44.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump                                                N/A  thrpt    5   7131457.535 ±  236475.420   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate                                 N/A  thrpt    5       784.734 ±      15.370  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm                            N/A  thrpt    5       173.145 ±       2.918    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space                        N/A  thrpt    5       796.535 ±     697.829  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm                   N/A  thrpt    5       175.951 ±     158.519    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space                    N/A  thrpt    5         0.504 ±       4.204  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm               N/A  thrpt    5         0.111 ±       0.930    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count                                      N/A  thrpt    5        12.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time                                       N/A  thrpt    5        26.000                    ms
[info] MissingReqFieldBenchmark.readPlayJson                                                               N/A  thrpt    5    234667.310 ±    7545.076   ops/s
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate                                                N/A  thrpt    5      2091.236 ±      81.642  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm                                           N/A  thrpt    5     14023.824 ±     373.703    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1994.536 ±      65.525  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5     13376.490 ±     779.989    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.379 ±       1.902  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         2.527 ±      12.632    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.count                                                     N/A  thrpt    5        30.000                counts
[info] MissingReqFieldBenchmark.readPlayJson:·gc.time                                                      N/A  thrpt    5        49.000                    ms
[info] MutableBitSetBenchmark.readJsoniterScala                                                            128  thrpt    5   1548567.258 ±   62658.732   ops/s
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5        90.053 ±      13.828  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5        91.542 ±      16.056    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       102.330 ±     539.557  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       104.706 ±     552.148    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.139 ±       1.151  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.144 ±       1.192    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         2.000                counts
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5         5.000                    ms
[info] MutableBitSetBenchmark.readPlayJson                                                                 128  thrpt    5     74740.714 ±    2751.574   ops/s
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      3297.617 ±     121.269  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     69425.688 ±    1099.494    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      3231.446 ±     701.194  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     68025.076 ±   13912.730    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.029 ±       0.122  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.613 ±       2.547    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        48.000                counts
[info] MutableBitSetBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        65.000                    ms
[info] MutableBitSetBenchmark.writeJacksonScala                                                            128  thrpt    5   1547522.419 ±  108115.476   ops/s
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       835.800 ±      64.915  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5       849.989 ±      17.357    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       787.149 ±     689.303  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       799.113 ±     664.930    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.791 ±       6.589  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.822 ±       6.852    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5        12.000                counts
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5        33.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScala                                                           128  thrpt    5   1626694.534 ±  133644.144   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       472.044 ±      35.862  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       456.814 ±      47.017    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       462.465 ±     697.327  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       449.349 ±     700.211    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.012 ±       0.072  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.012 ±       0.070    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5         7.000                counts
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5        19.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5   1765561.415 ±  134118.113   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5        20.848 ±      19.424  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5        18.638 ±      18.589    B/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                           128  thrpt    5        51.172 ±     440.608  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5        46.657 ±     401.727    B/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5         1.000                counts
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.time                                          128  thrpt    5         3.000                    ms
[info] MutableBitSetBenchmark.writePlayJson                                                                128  thrpt    5     51494.272 ±    3024.195   ops/s
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate                                                 128  thrpt    5      2224.083 ±      93.892  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     67977.284 ±    1895.795    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2183.112 ±     714.848  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     66779.064 ±   24562.864    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.279 ±       1.915  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         8.502 ±      58.434    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.count                                                      128  thrpt    5        33.000                counts
[info] MutableBitSetBenchmark.writePlayJson:·gc.time                                                       128  thrpt    5        49.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala                                                 128  thrpt    5    269429.920 ±   10580.371   ops/s
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1085.359 ±      64.706  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      6338.810 ±     139.349    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1058.277 ±     572.822  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      6182.305 ±    3388.966    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.677 ±       5.669  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         3.961 ±      33.183    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        16.000                counts
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        32.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readPlayJson                                                      128  thrpt    5     39315.712 ±     938.130   ops/s
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      1957.854 ±      55.049  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     78369.355 ±    2273.722    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1858.273 ±     682.400  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     74399.082 ±   28060.579    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.207 ±       1.690  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         8.295 ±      67.878    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        28.000                counts
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        40.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala                                                 128  thrpt    5    113017.695 ±    2805.302   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1139.150 ±      28.932  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     15862.242 ±     432.804    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1113.913 ±     685.982  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     15523.144 ±    9937.857    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.858 ±       5.303  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        11.927 ±      73.769    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        17.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        38.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala                                                128  thrpt    5    332536.021 ±   29619.783   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       462.058 ±      30.132  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      2186.927 ±      73.807    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       462.358 ±     697.307  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2199.166 ±    3450.786    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.021 ±       0.057  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.100 ±       0.280    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         7.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        20.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    366226.385 ±     619.892   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         3.723 ±       0.006  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5        16.001 ±       0.001    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson                                                     128  thrpt    5     57151.195 ±    2995.901   ops/s
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1382.118 ±      49.358  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     38062.604 ±     873.349    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1373.434 ±     574.179  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     37810.617 ±   15083.126    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.958 ±       7.755  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        26.137 ±     211.675    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        21.000                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        52.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readCirce                                                       128  thrpt    5     72892.320 ±    2144.960   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1706.829 ±      69.656  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5     36851.678 ±    1028.764    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1649.688 ±      30.840  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     35619.327 ±    1053.682    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.766 ±       5.464  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        16.638 ±     118.746    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count                                             128  thrpt    5        25.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time                                              128  thrpt    5        42.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala                                                128  thrpt    5    130485.780 ±    6556.030   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5       895.884 ±      44.125  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     10805.199 ±      85.379    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       850.854 ±     694.952  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     10263.567 ±    8400.442    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.924 ±       7.735  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5        11.038 ±      92.337    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        13.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        39.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala                                               128  thrpt    5    259205.799 ±   14321.551   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1103.724 ±      52.656  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      6701.743 ±     210.310    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1124.344 ±     693.184  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      6833.229 ±    4400.950    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.670 ±       5.682  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         4.036 ±      34.201    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        17.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        35.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson                                                    128  thrpt    5     27490.993 ±    1245.809   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1399.131 ±      71.780  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     80096.170 ±    1683.587    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1318.616 ±      38.083  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     75491.310 ±    2118.157    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.358 ±       1.847  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        20.412 ±     104.920    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        20.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        33.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala                                               128  thrpt    5    177890.925 ±   12808.422   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5      1012.891 ±      69.133  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5      8961.334 ±     190.592    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       983.142 ±      11.207  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      8700.396 ±     650.494    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.870 ±       6.317  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         7.604 ±      55.170    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        15.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        37.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala                                              128  thrpt    5    463047.838 ±   30053.868   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1399.939 ±     113.111  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      4757.876 ±      88.595    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      1387.975 ±     578.786  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      4719.275 ±    2027.236    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.712 ±       4.416  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         2.435 ±      15.075    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        21.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        37.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5    525190.548 ±   12237.657   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5       991.703 ±      22.267  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5      2971.802 ±      29.594    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space              128  thrpt    5       992.050 ±       8.754  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm         128  thrpt    5      2972.936 ±      85.095    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space          128  thrpt    5         0.670 ±       5.325  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5         2.003 ±      15.910    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5        15.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                             128  thrpt    5        33.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson                                                   128  thrpt    5     74265.393 ±    4507.738   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1471.849 ±      63.694  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5     31193.170 ±     929.399    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      1451.827 ±     678.304  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     30791.532 ±   15227.870    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.004 ±       0.036  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.087 ±       0.748    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        22.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        31.000                    ms
[info] MutableSetOfIntsBenchmark.readCirce                                                                 128  thrpt    5     96329.111 ±    3237.035   ops/s
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1585.269 ±      21.017  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     25898.334 ±     664.708    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1518.394 ±     686.792  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     24807.032 ±   11279.498    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.787 ±       4.139  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        12.767 ±      67.131    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        23.000                counts
[info] MutableSetOfIntsBenchmark.readCirce:·gc.time                                                        128  thrpt    5        40.000                    ms
[info] MutableSetOfIntsBenchmark.readJacksonScala                                                          128  thrpt    5    174173.451 ±   13421.349   ops/s
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       741.587 ±      46.162  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      6700.289 ±     215.079    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       719.725 ±     558.812  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      6516.501 ±    5433.427    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.891 ±       7.448  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         8.111 ±      67.807    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5        11.000                counts
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5        37.000                    ms
[info] MutableSetOfIntsBenchmark.readJsoniterScala                                                         128  thrpt    5    273884.146 ±    7151.401   ops/s
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      1005.196 ±      43.853  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      5775.406 ±     128.301    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       927.146 ±     570.238  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      5324.038 ±    3201.437    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.666 ±       4.726  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         3.802 ±      26.912    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        14.000                counts
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        29.000                    ms
[info] MutableSetOfIntsBenchmark.readPlayJson                                                              128  thrpt    5     67752.358 ±    3870.068   ops/s
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2568.852 ±     181.880  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     59662.628 ±    1686.857    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2524.116 ±     719.142  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     58618.202 ±   15891.258    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.212 ±       1.566  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         4.965 ±      36.622    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        38.000                counts
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        55.000                    ms
[info] MutableSetOfIntsBenchmark.writeCirce                                                                128  thrpt    5    207202.453 ±    4090.750   ops/s
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1449.543 ±      52.607  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     11008.551 ±     210.604    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1384.534 ±     555.125  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     10514.703 ±    4192.971    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.770 ±       6.058  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         5.844 ±      45.939    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        21.000                counts
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5        38.000                    ms
[info] MutableSetOfIntsBenchmark.writeJacksonScala                                                         128  thrpt    5    505480.483 ±   15534.502   ops/s
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       411.600 ±      21.221  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1281.587 ±      75.995    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       377.315 ±     602.614  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1173.331 ±    1855.848    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.008 ±       0.072  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.026 ±       0.222    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         6.000                counts
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        19.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScala                                                        128  thrpt    5    636793.982 ±   26881.362   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       353.860 ±      18.552  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5       874.522 ±      35.963    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       314.981 ±     127.402  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       778.651 ±     322.686    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.004 ±       0.036  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.010 ±       0.088    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         5.000                counts
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        15.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    689303.077 ±    3306.304   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5         7.009 ±       0.036  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5        16.001 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] MutableSetOfIntsBenchmark.writePlayJson                                                             128  thrpt    5     35484.768 ±    1170.662   ops/s
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5      1940.777 ±      83.627  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     86075.248 ±    1618.372    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1917.489 ±     588.679  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     85065.143 ±   27142.400    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.804 ±       6.432  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        36.029 ±     288.577    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        29.000                counts
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        47.000                    ms
[info] PrimitivesBenchmark.readCirce                                                                       N/A  thrpt    5    851919.290 ±   30740.532   ops/s
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate                                                        N/A  thrpt    5      2295.908 ±     122.680  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm                                                   N/A  thrpt    5      4241.165 ±     100.733    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      2188.433 ±     706.865  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5      4041.851 ±    1248.269    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.824 ±       6.920  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         1.546 ±      12.985    B/op
[info] PrimitivesBenchmark.readCirce:·gc.count                                                             N/A  thrpt    5        33.000                counts
[info] PrimitivesBenchmark.readCirce:·gc.time                                                              N/A  thrpt    5        48.000                    ms
[info] PrimitivesBenchmark.readJacksonScala                                                                N/A  thrpt    5   1781000.589 ±  129855.657   ops/s
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate                                                 N/A  thrpt    5      1137.586 ±      88.277  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                            N/A  thrpt    5      1005.263 ±      23.050    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      1108.643 ±     688.188  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5       979.801 ±     605.950    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.922 ±       7.784  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.823 ±       6.947    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.count                                                      N/A  thrpt    5        17.000                counts
[info] PrimitivesBenchmark.readJacksonScala:·gc.time                                                       N/A  thrpt    5        44.000                    ms
[info] PrimitivesBenchmark.readJsoniterScala                                                               N/A  thrpt    5   8483518.160 ±  214237.350   ops/s
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate                                                N/A  thrpt    5       266.792 ±       5.230  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                           N/A  thrpt    5        49.493 ±       1.500    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       285.799 ±     158.027  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5        53.043 ±      30.202    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.017 ±       0.105  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.003 ±       0.019    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.count                                                     N/A  thrpt    5         5.000                counts
[info] PrimitivesBenchmark.readJsoniterScala:·gc.time                                                      N/A  thrpt    5        12.000                    ms
[info] PrimitivesBenchmark.readPlayJson                                                                    N/A  thrpt    5    286392.563 ±   42757.564   ops/s
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate                                                     N/A  thrpt    5      1904.379 ±     191.154  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm                                                N/A  thrpt    5     10470.498 ±     794.773    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      1852.454 ±     677.942  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5     10197.418 ±    4269.046    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.458 ±       2.475  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         2.575 ±      13.820    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.count                                                          N/A  thrpt    5        28.000                counts
[info] PrimitivesBenchmark.readPlayJson:·gc.time                                                           N/A  thrpt    5        45.000                    ms
[info] PrimitivesBenchmark.writeCirce                                                                      N/A  thrpt    5   1087411.280 ±   38188.417   ops/s
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate                                                       N/A  thrpt    5      1788.408 ±      83.678  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm                                                  N/A  thrpt    5      2588.327 ±      45.807    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      1715.368 ±     546.811  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5      2482.486 ±     774.207    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.804 ±       6.472  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         1.178 ±       9.498    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.count                                                            N/A  thrpt    5        26.000                counts
[info] PrimitivesBenchmark.writeCirce:·gc.time                                                             N/A  thrpt    5        44.000                    ms
[info] PrimitivesBenchmark.writeJacksonScala                                                               N/A  thrpt    5   2670759.502 ±  244730.922   ops/s
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5      1177.784 ±     124.896  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5       693.980 ±      21.943    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1179.280 ±     692.383  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5       694.615 ±     394.110    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.758 ±       6.278  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.440 ±       3.642    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.count                                                     N/A  thrpt    5        18.000                counts
[info] PrimitivesBenchmark.writeJacksonScala:·gc.time                                                      N/A  thrpt    5        40.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScala                                                              N/A  thrpt    5   6236191.278 ±  389116.012   ops/s
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5       718.947 ±      44.587  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5       181.430 ±       2.718    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       662.073 ±       4.668  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5       167.109 ±       9.737    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.566 ±       4.786  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.143 ±       1.211    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.count                                                    N/A  thrpt    5        10.000                counts
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.time                                                     N/A  thrpt    5        29.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc                                                      N/A  thrpt    5   6610357.001 ±  430200.914   ops/s
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                       N/A  thrpt    5       416.545 ±      25.531  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                  N/A  thrpt    5        99.180 ±       3.738    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       394.097 ±     564.116  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5        93.908 ±     135.519    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.662 ±       5.610  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.160 ±       1.356    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                            N/A  thrpt    5         6.000                counts
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                             N/A  thrpt    5        11.000                    ms
[info] PrimitivesBenchmark.writePlayJson                                                                   N/A  thrpt    5    414791.535 ±   33202.640   ops/s
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate                                                    N/A  thrpt    5      2607.437 ±     217.435  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm                                               N/A  thrpt    5      9892.225 ±     173.940    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      2510.242 ±     638.801  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5      9531.503 ±    2848.718    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.964 ±       8.209  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         3.757 ±      32.009    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.count                                                         N/A  thrpt    5        38.000                counts
[info] PrimitivesBenchmark.writePlayJson:·gc.time                                                          N/A  thrpt    5        63.000                    ms
[info] SetOfIntsBenchmark.readCirce                                                                        128  thrpt    5     76908.361 ±    2791.502   ops/s
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                         128  thrpt    5      2150.023 ±     109.650  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                                    128  thrpt    5     43996.000 ±    1433.959    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                128  thrpt    5      2057.343 ±     560.649  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                           128  thrpt    5     42084.040 ±   10110.122    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                            128  thrpt    5         0.820 ±       6.394  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                       128  thrpt    5        16.765 ±     130.774    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.count                                                              128  thrpt    5        31.000                counts
[info] SetOfIntsBenchmark.readCirce:·gc.time                                                               128  thrpt    5        44.000                    ms
[info] SetOfIntsBenchmark.readJacksonScala                                                                 128  thrpt    5    125551.880 ±    9829.738   ops/s
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                                  128  thrpt    5      1983.078 ±     178.229  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                             128  thrpt    5     24854.981 ±     539.904    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1907.909 ±     588.251  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     23896.332 ±    6102.231    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.916 ±       7.488  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        11.404 ±      93.146    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.count                                                       128  thrpt    5        29.000                counts
[info] SetOfIntsBenchmark.readJacksonScala:·gc.time                                                        128  thrpt    5        48.000                    ms
[info] SetOfIntsBenchmark.readJsoniterScala                                                                128  thrpt    5    175880.951 ±   10586.190   ops/s
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                                 128  thrpt    5      2670.524 ±     162.785  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                            128  thrpt    5     23895.150 ±     690.131    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2543.022 ±     718.669  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     22750.119 ±    6063.940    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.058 ±       0.250  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.518 ±       2.192    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.count                                                      128  thrpt    5        38.000                counts
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.time                                                       128  thrpt    5        53.000                    ms
[info] SetOfIntsBenchmark.readPlayJson                                                                     128  thrpt    5     60391.393 ±    2451.735   ops/s
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                                      128  thrpt    5      3067.575 ±     106.379  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                                 128  thrpt    5     79943.450 ±    1063.831    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                             128  thrpt    5      2936.222 ±     533.110  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     76523.348 ±   13999.898    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.058 ±       0.458  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         1.525 ±      11.982    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.count                                                           128  thrpt    5        44.000                counts
[info] SetOfIntsBenchmark.readPlayJson:·gc.time                                                            128  thrpt    5        58.000                    ms
[info] SetOfIntsBenchmark.writeCirce                                                                       128  thrpt    5    187815.635 ±    7925.852   ops/s
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                        128  thrpt    5      1328.643 ±      74.255  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                                   128  thrpt    5     11132.878 ±     228.194    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                               128  thrpt    5      1251.525 ±     571.872  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                          128  thrpt    5     10491.550 ±    4935.425    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                           128  thrpt    5         0.712 ±       6.085  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                      128  thrpt    5         6.030 ±      51.544    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.count                                                             128  thrpt    5        19.000                counts
[info] SetOfIntsBenchmark.writeCirce:·gc.time                                                              128  thrpt    5        36.000                    ms
[info] SetOfIntsBenchmark.writeJacksonScala                                                                128  thrpt    5    448662.115 ±   29482.807   ops/s
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                                 128  thrpt    5       400.235 ±      16.076  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                            128  thrpt    5      1403.940 ±      48.366    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                        128  thrpt    5       377.487 ±     602.955  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      1329.366 ±    2212.236    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.012 ±       0.072  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.045 ±       0.257    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.count                                                      128  thrpt    5         6.000                counts
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.time                                                       128  thrpt    5        21.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScala                                                               128  thrpt    5    656178.581 ±   16935.258   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                                128  thrpt    5       363.409 ±       5.288  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                           128  thrpt    5       871.555 ±      20.446    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                       128  thrpt    5       314.860 ±     127.033  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5       755.165 ±     306.798    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.004 ±       0.036  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.010 ±       0.086    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.count                                                     128  thrpt    5         5.000                counts
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.time                                                      128  thrpt    5        14.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc                                                       128  thrpt    5    712020.815 ±    7290.679   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                        128  thrpt    5         7.598 ±       3.011  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                   128  thrpt    5        16.794 ±       6.831    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                             128  thrpt    5           ≈ 0                counts
[info] SetOfIntsBenchmark.writePlayJson                                                                    128  thrpt    5     35134.115 ±    2342.484   ops/s
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                                     128  thrpt    5      1916.510 ±     165.536  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                                128  thrpt    5     85844.077 ±    2775.306    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1848.981 ±     694.163  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     82799.049 ±   29387.931    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.833 ±       6.772  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5        38.318 ±     312.272    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.count                                                          128  thrpt    5        28.000                counts
[info] SetOfIntsBenchmark.writePlayJson:·gc.time                                                           128  thrpt    5        44.000                    ms
[info] StringOfAsciiCharsBenchmark.readCirce                                                               128  thrpt    5   3363111.682 ±   85333.930   ops/s
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      2988.009 ±      74.819  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5      1398.248 ±      14.941    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2881.965 ±     643.726  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      1348.588 ±     297.377    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.050 ±       0.091  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.023 ±       0.042    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        43.000                counts
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.time                                                      128  thrpt    5        60.000                    ms
[info] StringOfAsciiCharsBenchmark.readDslJsonJava                                                         128  thrpt    5   5848832.655 ±  475063.227   ops/s
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                          128  thrpt    5      1135.274 ±      93.605  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                     128  thrpt    5       305.425 ±       6.602    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1105.111 ±     686.008  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       297.344 ±     183.855    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.990 ±       8.182  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.269 ±       2.230    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count                                               128  thrpt    5        17.000                counts
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time                                                128  thrpt    5        42.000                    ms
[info] StringOfAsciiCharsBenchmark.readJacksonScala                                                        128  thrpt    5   4065486.568 ±  355212.068   ops/s
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      2244.141 ±     237.036  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5       868.533 ±      23.254    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      2186.658 ±     752.435  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       845.351 ±     221.401    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.142 ±       0.407  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.055 ±       0.160    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5        33.000                counts
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5        46.000                    ms
[info] StringOfAsciiCharsBenchmark.readJsoniterScala                                                       128  thrpt    5   6782190.465 ±  324952.051   ops/s
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1322.132 ±      64.709  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5       306.746 ±       4.230    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1322.892 ±       9.590  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       306.961 ±      15.450    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.649 ±       5.146  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.151 ±       1.193    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5        20.000                counts
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        34.000                    ms
[info] StringOfAsciiCharsBenchmark.readPlayJson                                                            128  thrpt    5   4137300.829 ±  213086.634   ops/s
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      2485.774 ±     148.372  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5       945.598 ±      26.327    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2393.211 ±     633.461  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       910.200 ±     220.220    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.121 ±       0.908  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.046 ±       0.345    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        36.000                counts
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        48.000                    ms
[info] StringOfAsciiCharsBenchmark.writeCirce                                                              128  thrpt    5   2180274.030 ±  181121.314   ops/s
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1303.057 ±      59.153  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5       940.722 ±      42.137    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1319.785 ±      46.884  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5       953.009 ±      92.594    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.042 ±       0.127  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.030 ±       0.093    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        20.000                counts
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        29.000                    ms
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava                                                        128  thrpt    5   5787871.254 ±  266884.125   ops/s
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                         128  thrpt    5       573.309 ±      14.339  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                    128  thrpt    5       155.902 ±       8.169    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                128  thrpt    5       520.442 ±     686.610  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       141.809 ±     190.308    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.018 ±       0.074  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.005 ±       0.020    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                              128  thrpt    5         8.000                counts
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                               128  thrpt    5        25.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJacksonScala                                                       128  thrpt    5   4697266.408 ±  142585.487   ops/s
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1280.501 ±      66.401  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5       429.004 ±      10.086    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1248.376 ±     569.209  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       418.412 ±     195.753    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.729 ±       6.140  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.245 ±       2.068    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5        19.000                counts
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        36.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala                                                      128  thrpt    5   5790948.001 ±   52256.384   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       574.960 ±      23.780  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5       156.205 ±       5.701    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       528.923 ±     696.959  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       143.684 ±     189.159    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.008 ±       0.044  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.002 ±       0.012    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         8.000                counts
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5        22.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5   6403693.775 ±  175146.525   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5         1.559 ±      11.341  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5         0.385 ±       2.803    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson                                                           128  thrpt    5   4549125.726 ±  191091.391   ops/s
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1288.858 ±      48.025  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5       445.904 ±       8.824    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1252.048 ±     582.228  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       433.479 ±     211.451    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.012 ±       0.072  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.004 ±       0.025    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        19.000                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        27.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readCirce                                                            128  thrpt    5   1480815.414 ±   50596.068   ops/s
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      2156.295 ±      71.089  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5      2291.877 ±      78.856    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2061.734 ±     600.083  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      2191.272 ±     630.100    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.687 ±       5.603  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.720 ±       5.870    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.count                                                  128  thrpt    5        31.000                counts
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.time                                                   128  thrpt    5        44.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava                                                      128  thrpt    5   2795746.132 ±  199346.548   ops/s
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       546.848 ±      69.868  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5       307.794 ±      28.487    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       519.531 ±     684.114  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       292.274 ±     382.759    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.018 ±       0.046  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.010 ±       0.026    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count                                            128  thrpt    5         8.000                counts
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time                                             128  thrpt    5        25.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala                                                     128  thrpt    5   1704063.204 ±   66054.067   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5       935.970 ±      51.229  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5       864.441 ±      20.930    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       918.345 ±     563.029  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       848.169 ±     519.353    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.779 ±       5.700  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.723 ±       5.299    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        14.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        38.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala                                                    128  thrpt    5   2399011.237 ±  127532.793   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       467.457 ±      46.286  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       306.618 ±      25.306    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       449.206 ±     627.373  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       294.271 ±     404.869    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.017 ±       0.088  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.011 ±       0.057    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         7.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        16.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readPlayJson                                                         128  thrpt    5   1709886.310 ±   32601.732   ops/s
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5       976.969 ±      40.257  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5       899.151 ±      20.912    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5       920.761 ±     568.171  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       846.985 ±     511.935    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.779 ±       4.811  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.714 ±       4.412    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        14.000                counts
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        34.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeCirce                                                           128  thrpt    5   1844151.046 ±  147788.162   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1409.164 ±      78.672  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5      1202.764 ±      37.885    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1322.874 ±      11.179  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1129.372 ±      91.220    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.641 ±       5.119  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.564 ±       4.517    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        20.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        34.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava                                                     128  thrpt    5   2783442.781 ±   65477.611   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       741.827 ±      24.802  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5       419.432 ±       7.151    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       718.158 ±     556.651  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       405.935 ±     310.956    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.857 ±       7.242  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.481 ±       4.061    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                           128  thrpt    5        11.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                            128  thrpt    5        35.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala                                                    128  thrpt    5   2944703.489 ±   74001.488   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1300.141 ±      26.286  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5       694.848 ±      12.038    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1312.422 ±      12.196  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       701.428 ±      21.074    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.754 ±       6.334  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.401 ±       3.373    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        20.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        40.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala                                                   128  thrpt    5   3364612.936 ±   39714.395   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       902.542 ±      19.636  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       422.107 ±      12.140    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       926.114 ±     566.710  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       433.190 ±     266.553    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.695 ±       5.718  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.326 ±       2.680    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        14.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        32.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   3640978.316 ±    6606.376   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         0.394 ±       3.103  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.170 ±       1.342    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson                                                        128  thrpt    5   2862021.584 ±  162429.982   ops/s
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1428.857 ±      95.388  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5       785.561 ±      15.204    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1386.150 ±     573.222  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       762.477 ±     330.091    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.706 ±       5.987  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.391 ±       3.313    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        21.000                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        38.000                    ms
[info] TwitterAPIBenchmark.readCirce                                                                       N/A  thrpt    5     11817.680 ±     514.943   ops/s
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate                                                        N/A  thrpt    5      1388.029 ±      74.033  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm                                                   N/A  thrpt    5    184849.604 ±    4973.765    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      1307.971 ±      16.138  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5    174210.344 ±    9214.769    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.907 ±       6.574  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5       120.428 ±     873.046    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.count                                                             N/A  thrpt    5        20.000                counts
[info] TwitterAPIBenchmark.readCirce:·gc.time                                                              N/A  thrpt    5        43.000                    ms
[info] TwitterAPIBenchmark.readJacksonScala                                                                N/A  thrpt    5     22002.601 ±     747.978   ops/s
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate                                                 N/A  thrpt    5       338.586 ±      18.967  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                            N/A  thrpt    5     24219.564 ±    1580.631    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5       319.167 ±       4.352  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5     22830.528 ±     833.218    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.017 ±       0.088  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         1.191 ±       6.282    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.count                                                      N/A  thrpt    5         5.000                counts
[info] TwitterAPIBenchmark.readJacksonScala:·gc.time                                                       N/A  thrpt    5         9.000                    ms
[info] TwitterAPIBenchmark.readJsoniterScala                                                               N/A  thrpt    5     22259.211 ±    1046.929   ops/s
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                                N/A  thrpt    5       249.605 ±      11.882  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                           N/A  thrpt    5     17645.194 ±     500.608    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       234.272 ±     523.995  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5     16519.200 ±   36775.642    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.012 ±       0.072  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.882 ±       5.034    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.count                                                     N/A  thrpt    5         4.000                counts
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.time                                                      N/A  thrpt    5        13.000                    ms
[info] TwitterAPIBenchmark.readPlayJson                                                                    N/A  thrpt    5      7462.801 ±     289.321   ops/s
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate                                                     N/A  thrpt    5      2093.328 ±     109.077  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                                N/A  thrpt    5    441282.466 ±   13902.214    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      2039.731 ±     642.869  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5    430168.910 ±  145063.769    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         1.555 ±       9.893  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5       329.900 ±    2095.760    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.count                                                          N/A  thrpt    5        32.000                counts
[info] TwitterAPIBenchmark.readPlayJson:·gc.time                                                           N/A  thrpt    5        75.000                    ms
[info] TwitterAPIBenchmark.writeJacksonScala                                                               N/A  thrpt    5     61505.697 ±    2257.995   ops/s
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5       794.196 ±      18.732  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5     20320.847 ±     511.310    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       715.142 ±     561.474  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5     18319.210 ±   14990.624    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         1.029 ±       7.042  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5        26.115 ±     178.875    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.count                                                     N/A  thrpt    5        11.000                counts
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.time                                                      N/A  thrpt    5        39.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScala                                                              N/A  thrpt    5     69688.294 ±    2212.199   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5       481.214 ±      19.731  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5     10866.084 ±     243.220    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       521.803 ±     687.810  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5     11775.045 ±   15438.221    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.010 ±       0.070  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.225 ±       1.580    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.count                                                    N/A  thrpt    5         8.000                counts
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.time                                                     N/A  thrpt    5        25.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc                                                      N/A  thrpt    5     76019.614 ±    1798.747   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                       N/A  thrpt    5        23.353 ±      14.618  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                  N/A  thrpt    5       483.825 ±     314.640    B/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                              N/A  thrpt    5        51.156 ±     440.472  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5      1064.122 ±    9162.413    B/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.555 ±       4.775  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5        11.537 ±      99.336    B/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                            N/A  thrpt    5         1.000                counts
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.time                                             N/A  thrpt    5         3.000                    ms
[info] VectorOfBooleansBenchmark.readCirce                                                                 128  thrpt    5    312064.982 ±    3167.058   ops/s
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1870.612 ±      64.282  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5      9433.809 ±     245.653    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1788.690 ±     687.393  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5      9021.010 ±    3477.773    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.729 ±       5.528  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         3.686 ±      27.966    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.count                                                       128  thrpt    5        27.000                counts
[info] VectorOfBooleansBenchmark.readCirce:·gc.time                                                        128  thrpt    5        43.000                    ms
[info] VectorOfBooleansBenchmark.readJacksonScala                                                          128  thrpt    5    493806.346 ±   43749.062   ops/s
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       566.080 ±      46.594  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      1804.274 ±      38.523    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       587.214 ±     561.468  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1875.820 ±    1843.875    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.012 ±       0.044  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.040 ±       0.142    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         9.000                counts
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5        31.000                    ms
[info] VectorOfBooleansBenchmark.readJsoniterScala                                                         128  thrpt    5   1248400.331 ±   55743.828   ops/s
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       675.696 ±      20.730  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5       851.938 ±      55.363    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       662.050 ±       6.655  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       834.694 ±      33.452    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.550 ±       4.509  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.688 ±       5.642    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        10.000                counts
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        29.000                    ms
[info] VectorOfBooleansBenchmark.readPlayJson                                                              128  thrpt    5    102411.894 ±    2796.678   ops/s
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      3275.023 ±     107.561  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     50327.915 ±     931.778    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      3141.037 ±     629.186  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     48267.988 ±    9499.440    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.121 ±       0.609  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.853 ±       9.350    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        47.000                counts
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        62.000                    ms
[info] VectorOfBooleansBenchmark.writeCirce                                                                128  thrpt    5    331110.444 ±   36478.937   ops/s
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1161.433 ±     120.302  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5      5520.543 ±     161.209    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1120.021 ±     694.203  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      5327.703 ±    3377.509    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.708 ±       4.910  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         3.417 ±      23.894    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        17.000                counts
[info] VectorOfBooleansBenchmark.writeCirce:·gc.time                                                       128  thrpt    5        36.000                    ms
[info] VectorOfBooleansBenchmark.writeJacksonScala                                                         128  thrpt    5    729584.520 ±   24378.181   ops/s
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       572.189 ±      14.677  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1234.310 ±      38.604    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       588.174 ±     562.104  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1270.220 ±    1231.165    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.012 ±       0.072  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.027 ±       0.155    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         9.000                counts
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        30.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScala                                                        128  thrpt    5   1629192.137 ±  145616.184   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       777.383 ±      69.315  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5       750.925 ±      21.513    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       726.826 ±     570.559  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       705.006 ±     630.492    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.646 ±       4.655  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.615 ±       4.434    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5        11.000                counts
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        28.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5   1733413.394 ±   25486.228   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.writePlayJson                                                             128  thrpt    5    448005.148 ±   37953.744   ops/s
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5       684.381 ±      55.171  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5      2404.340 ±      30.958    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5       657.612 ±       4.673  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      2311.214 ±     212.416    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.695 ±       5.808  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         2.511 ±      20.989    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        10.000                counts
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        33.000                    ms
[info] Benchmark result is saved to graalvmce1.json
[success] Total time: 5644 s, completed May 3, 2018 12:50:26 AM
