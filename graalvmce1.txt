[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[info] Setting Scala version to 2.12.6 on 4 projects.
[info] Reapplying settings...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Apr 30, 2018 9:56:29 PM
[info] Updating core...
[info] Done updating.
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 5 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:986:79: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toDouble(pos: Int): Double = java.lang.Double.parseDouble(new String(buf, 0, mark, pos - mark))
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:445:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:453:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:964:14: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       zoneId.getBytes(0, len, buf, pos)
[warn]              ^
[warn] four warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.25.2-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.25.2-SNAPSHOT.jar ...
[info] Compiling 57 Scala sources and 1 Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:48: Generated JSON codec for type 'Int':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Int] {
[info]       def nullValue: Int = 0;
[info]       def decodeValue(in: JsonReader, default: Int): Int = in.readInt();
[info]       def encodeValue(x: Int, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intCodec: JsonValueCodec[Int] = make[Int](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:57: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[String] {
[info]       def nullValue: String = null;
[info]       def decodeValue(in: JsonReader, default: String): String = in.readString(default);
[info]       def encodeValue(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonValueCodec[String] = make[String](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:65: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("a");
[info]       private[this] val r1: Array[String] = Array("b");
[info]       private[this] val r2: Array[String] = Array("l", "r");
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _a = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readString(_b)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = JsoniterCodecs.this.adtCodec.decodeValue(in, _l)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _r = JsoniterCodecs.this.adtCodec.decodeValue(in, _r)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d2(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d3(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("A")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("a");
[info]           out.writeVal(x.a)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("B")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("C")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.l, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("r");
[info]           JsoniterCodecs.this.adtCodec.encodeValue(x.r, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val adtCodec: JsonValueCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "bd");
[info]       private[this] def d1(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _os = d1(in, _os)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bd");
[info]           out.writeVal(x.bd)
[info]         };
[info]         {
[info]           val v = x.os;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("os");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val anyRefsCodec: JsonValueCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:97: Generated JSON codec for type 'Array[BigDecimal]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigDecimal]] {
[info]       def nullValue: Array[BigDecimal] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = d0(in, default);
[info]       def encodeValue(x: Array[BigDecimal], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigDecimal] = new Array[scala.math.BigDecimal](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigDecimal](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigDecimal(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigDecimal], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigDecimalArrayCodec: JsonValueCodec[Array[BigDecimal]] = make[Array[BigDecimal]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:85: Generated JSON codec for type 'Array[BigInt]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigInt]] {
[info]       def nullValue: Array[BigInt] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigInt]): Array[BigInt] = d0(in, default);
[info]       def encodeValue(x: Array[BigInt], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private[this] def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigInt](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigInt(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigIntArrayCodec: JsonValueCodec[Array[BigInt]] = make[Array[BigInt]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:122: Generated JSON codec for type 'scala.collection.mutable.ArrayBuffer[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.ArrayBuffer[Boolean]] {
[info]       def nullValue: scala.collection.mutable.ArrayBuffer[Boolean] = ArrayBuffer.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               ArrayBuffer.empty[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayBufferCodec: JsonValueCodec[mutable.ArrayBuffer[Boolean]] = make[mutable.ArrayBuffer[Boolean]](CodecMakerConfig())
[info]                                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:88: Generated JSON codec for type 'Array[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Boolean]] {
[info]       def nullValue: Array[Boolean] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Boolean]): Array[Boolean] = d0(in, default);
[info]       def encodeValue(x: Array[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Boolean] = new Array[Boolean](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Boolean]): Array[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Boolean](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBoolean());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayCodec: JsonValueCodec[Array[Boolean]] = make[Array[Boolean]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:85: Generated JSON codec for type 'List[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[List[Boolean]] {
[info]       def nullValue: List[Boolean] = List.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: List[Boolean]): List[Boolean] = d0(in, default);
[info]       def encodeValue(x: List[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: List[Boolean]): List[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: List[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var l = x;
[info]         while (l.isEmpty.`unary_!`) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(l.head);
[info]             l = l.tail
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanListCodec: JsonValueCodec[List[Boolean]] = make[List[Boolean]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:91: Generated JSON codec for type 'scala.collection.immutable.Vector[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Vector[Boolean]] {
[info]       def nullValue: scala.collection.immutable.Vector[Boolean] = Vector.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanVectorCodec: JsonValueCodec[Vector[Boolean]] = make[Vector[Boolean]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:27:79: Generated JSON codec for type 'Array[Byte]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Byte]] {
[info]       def nullValue: Array[Byte] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Byte]): Array[Byte] = d0(in, default);
[info]       def encodeValue(x: Array[Byte], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Byte] = new Array[Byte](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Byte]): Array[Byte] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Byte](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readByte());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Byte], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val byteArrayCodec: JsonValueCodec[Array[Byte]] = make[Array[Byte]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:28:79: Generated JSON codec for type 'Array[Char]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Char]] {
[info]       def nullValue: Array[Char] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Char]): Array[Char] = d0(in, default);
[info]       def encodeValue(x: Array[Char], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Char] = new Array[Char](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Char]): Array[Char] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Char](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readChar());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Char], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val charArrayCodec: JsonValueCodec[Array[Char]] = make[Array[Char]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:29:85: Generated JSON codec for type 'Array[Double]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Double]] {
[info]       def nullValue: Array[Double] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Double]): Array[Double] = d0(in, default);
[info]       def encodeValue(x: Array[Double], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Double] = new Array[Double](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Double]): Array[Double] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Double](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDouble());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Double], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val doubleArrayCodec: JsonValueCodec[Array[Double]] = make[Array[Double]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:30:91: Generated JSON codec for type 'Array[java.time.Duration]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Duration]] {
[info]       def nullValue: Array[java.time.Duration] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Duration], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Duration] = new Array[java.time.Duration](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Duration](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDuration(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Duration], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val durationArrayCodec: JsonValueCodec[Array[Duration]] = make[Array[Duration]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:31:87: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value): com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val len = in.readStringAsCharBuf();
[info]           SuitEnum.values.iterator.find(((e) => in.isCharBufEqualsTo(len, e.toString))).getOrElse(in.enumValueError(len))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value, out: JsonWriter): Unit = out.writeVal(x.toString);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val enumArrayCodec: JsonValueCodec[Array[SuitEnum]] = make[Array[SuitEnum]](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:32:82: Generated JSON codec for type 'Array[Float]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Float]] {
[info]       def nullValue: Array[Float] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Float]): Array[Float] = d0(in, default);
[info]       def encodeValue(x: Array[Float], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Float] = new Array[Float](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Float]): Array[Float] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Float](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readFloat());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Float], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val floatArrayCodec: JsonValueCodec[Array[Float]] = make[Array[Float]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:33:88: Generated JSON codec for type 'Array[java.time.Instant]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Instant]] {
[info]       def nullValue: Array[java.time.Instant] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Instant], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Instant] = new Array[java.time.Instant](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Instant](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInstant(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Instant], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val instantArrayCodec: JsonValueCodec[Array[Instant]] = make[Array[Instant]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:34:76: Generated JSON codec for type 'Array[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Int]] {
[info]       def nullValue: Array[Int] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Int]): Array[Int] = d0(in, default);
[info]       def encodeValue(x: Array[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Int] = new Array[Int](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intArrayCodec: JsonValueCodec[Array[Int]] = make[Array[Int]](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:35:83: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](0);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Suit): com.github.plokhotnyuk.jsoniter_scala.macros.Suit = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val v = in.readString(null);
[info]           try {
[info]             Suit.valueOf(v)
[info]           } catch {
[info]             case ((_): IllegalArgumentException) => in.enumValueError(v)
[info]           }
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Suit, out: JsonWriter): Unit = out.writeVal(x.name);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val javaEnumArrayCodec: JsonValueCodec[Array[Suit]] = make[Array[Suit]](CodecMakerConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:36:79: Generated JSON codec for type 'Array[Long]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Long]] {
[info]       def nullValue: Array[Long] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Long]): Array[Long] = d0(in, default);
[info]       def encodeValue(x: Array[Long], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Long] = new Array[Long](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Long]): Array[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLong());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val longArrayCodec: JsonValueCodec[Array[Long]] = make[Array[Long]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:37:94: Generated JSON codec for type 'Array[java.time.LocalDate]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDate]] {
[info]       def nullValue: Array[java.time.LocalDate] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDate], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDate] = new Array[java.time.LocalDate](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDate](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDate(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDate], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateArrayCodec: JsonValueCodec[Array[LocalDate]] = make[Array[LocalDate]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:38:106: Generated JSON codec for type 'Array[java.time.LocalDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDateTime]] {
[info]       def nullValue: Array[java.time.LocalDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalDateTime] = new Array[java.time.LocalDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateTimeArrayCodec: JsonValueCodec[Array[LocalDateTime]] = make[Array[LocalDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:39:94: Generated JSON codec for type 'Array[java.time.LocalTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalTime]] {
[info]       def nullValue: Array[java.time.LocalTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.LocalTime] = new Array[java.time.LocalTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localTimeArrayCodec: JsonValueCodec[Array[LocalTime]] = make[Array[LocalTime]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:40:109: Generated JSON codec for type 'Array[java.time.OffsetDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetDateTime]] {
[info]       def nullValue: Array[java.time.OffsetDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetDateTime] = new Array[java.time.OffsetDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetDateTimeArrayCodec: JsonValueCodec[Array[OffsetDateTime]] = make[Array[OffsetDateTime]](CodecMakerConfig())
[info]                                                                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:41:97: Generated JSON codec for type 'Array[java.time.OffsetTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetTime]] {
[info]       def nullValue: Array[java.time.OffsetTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.OffsetTime] = new Array[java.time.OffsetTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetTimeArrayCodec: JsonValueCodec[Array[OffsetTime]] = make[Array[OffsetTime]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:42:85: Generated JSON codec for type 'Array[java.time.Period]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Period]] {
[info]       def nullValue: Array[java.time.Period] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Period], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Period] = new Array[java.time.Period](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Period](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readPeriod(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Period], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val periodArrayCodec: JsonValueCodec[Array[Period]] = make[Array[Period]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:43:82: Generated JSON codec for type 'Array[Short]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Short]] {
[info]       def nullValue: Array[Short] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Short]): Array[Short] = d0(in, default);
[info]       def encodeValue(x: Array[Short], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[Short] = new Array[Short](0);
[info]       private[this] def d0(in: JsonReader, default: Array[Short]): Array[Short] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Short](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readShort());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Short], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val shortArrayCodec: JsonValueCodec[Array[Short]] = make[Array[Short]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:44:79: Generated JSON codec for type 'Array[java.util.UUID]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.util.UUID]] {
[info]       def nullValue: Array[java.util.UUID] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = d0(in, default);
[info]       def encodeValue(x: Array[java.util.UUID], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.util.UUID] = new Array[java.util.UUID](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.util.UUID](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readUUID(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.util.UUID], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val uuidArrayCodec: JsonValueCodec[Array[UUID]] = make[Array[UUID]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:45:79: Generated JSON codec for type 'Array[java.time.Year]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Year]] {
[info]       def nullValue: Array[java.time.Year] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Year], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.Year] = new Array[java.time.Year](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Year](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYear(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Year], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearArrayCodec: JsonValueCodec[Array[Year]] = make[Array[Year]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:46:94: Generated JSON codec for type 'Array[java.time.YearMonth]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.YearMonth]] {
[info]       def nullValue: Array[java.time.YearMonth] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.YearMonth], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.YearMonth] = new Array[java.time.YearMonth](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.YearMonth](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYearMonth(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.YearMonth], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearMonthArrayCodec: JsonValueCodec[Array[YearMonth]] = make[Array[YearMonth]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:47:106: Generated JSON codec for type 'Array[java.time.ZonedDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZonedDateTime]] {
[info]       def nullValue: Array[java.time.ZonedDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZonedDateTime] = new Array[java.time.ZonedDateTime](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZonedDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZonedDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zonedDateTimeArrayCodec: JsonValueCodec[Array[ZonedDateTime]] = make[Array[ZonedDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:48:85: Generated JSON codec for type 'Array[java.time.ZoneId]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneId]] {
[info]       def nullValue: Array[java.time.ZoneId] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneId], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneId] = new Array[java.time.ZoneId](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneId](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneId(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneId], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneIdArrayCodec: JsonValueCodec[Array[ZoneId]] = make[Array[ZoneId]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:49:97: Generated JSON codec for type 'Array[java.time.ZoneOffset]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneOffset]] {
[info]       def nullValue: Array[java.time.ZoneOffset] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val v0: Array[java.time.ZoneOffset] = new Array[java.time.ZoneOffset](0);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneOffset](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneOffset(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneOffsetArrayCodec: JsonValueCodec[Array[ZoneOffset]] = make[Array[ZoneOffset]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:50:66: Generated JSON codec for type 'scala.collection.immutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.BitSet] {
[info]       def nullValue: scala.collection.immutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             var mi = 0;
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>(mi))
[info]                   {
[info]                     mi = i;
[info]                     if (i.>=(x.length))
[info]                       x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                     else
[info]                       ()
[info]                   }
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               {
[info]                 if (mi.>(1).&&(mi.+(1).!=(x.length)))
[info]                   x = java.util.Arrays.copyOf(x, mi.+(1))
[info]                 else
[info]                   ();
[info]                 BitSet.fromBitMaskNoCopy(x)
[info]               }
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bitSetCodec: JsonValueCodec[BitSet] = make[BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:51:87: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "l");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val extractFieldsCodec: JsonValueCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:52:94: Generated JSON codec for type 'scala.collection.immutable.IntMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.IntMap[Boolean]] {
[info]       def nullValue: scala.collection.immutable.IntMap[Boolean] = IntMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intMapOfBooleansCodec: JsonValueCodec[IntMap[Boolean]] = make[IntMap[Boolean]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:53:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("geometry");
[info]       private[this] val r1: Array[String] = Array("coordinates");
[info]       private[this] def d2(in: JsonReader, default: scala.collection.immutable.Map[String,String]): scala.collection.immutable.Map[String,String] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[String, String];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: (Double, Double)): (Double, Double) = if (in.isNextToken('['))
[info]         {
[info]           val _1: Double = in.readDouble();
[info]           val _2: Double = if (in.isNextToken(','))
[info]             in.readDouble()
[info]           else
[info]             in.commaError();
[info]           if (in.isNextToken(']'))
[info]             new (Double, Double)(_1, _2)
[info]           else
[info]             in.arrayEndError()
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: IndexedSeq[(Double, Double)]): IndexedSeq[(Double, Double)] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[(Double, Double)];
[info]             do 
[info]               x.+=(d7(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: IndexedSeq[IndexedSeq[(Double, Double)]]): IndexedSeq[IndexedSeq[(Double, Double)]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[(Double, Double)]];
[info]             do 
[info]               x.+=(d6(in, IndexedSeq.empty[(Double, Double)]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d4(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]]): IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]             do 
[info]               x.+=(d5(in, IndexedSeq.empty[IndexedSeq[(Double, Double)]]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = IndexedSeq.empty[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d10(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d12(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _geometries: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 203916432 => if (in.isCharBufEqualsTo(l, "geometries"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometries = d12(in, _geometries)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection(geometries = _geometries)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Polygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d14(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Point): com.github.plokhotnyuk.jsoniter_scala.macros.Point = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: (Double, Double) = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Point(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d15(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.LineString): com.github.plokhotnyuk.jsoniter_scala.macros.LineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d6(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.LineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry): com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case -627102946 => if (in.isCharBufEqualsTo(l, "MultiLineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d4(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1065891849 => if (in.isCharBufEqualsTo(l, "MultiPoint"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d8(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -2116761119 => if (in.isCharBufEqualsTo(l, "MultiPolygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d9(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1950410960 => if (in.isCharBufEqualsTo(l, "GeometryCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d11(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1267133722 => if (in.isCharBufEqualsTo(l, "Polygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d13(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 77292912 => if (in.isCharBufEqualsTo(l, "Point"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d14(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1806700869 => if (in.isCharBufEqualsTo(l, "LineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d15(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Feature): com.github.plokhotnyuk.jsoniter_scala.macros.Feature = if (in.isNextToken('{'))
[info]         {
[info]           var _properties: scala.collection.immutable.Map[String,String] = Map.empty[String, String];
[info]           var _geometry: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -926053069 => if (in.isCharBufEqualsTo(l, "properties"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _properties = d2(in, _properties)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1846020210 => if (in.isCharBufEqualsTo(l, "geometry"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometry = d3(in, _geometry)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(2).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Feature(properties = _properties, geometry = _geometry)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d17(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]             do 
[info]               x.+=(JsoniterCodecs.this.geoJSONCodec.decodeValue(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d16(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _features: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -290659267 => if (in.isCharBufEqualsTo(l, "features"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _features = d17(in, _features)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection(features = _features)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 685445846 => if (in.isCharBufEqualsTo(l, "Feature"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1377727980 => if (in.isCharBufEqualsTo(l, "FeatureCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d16(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e2(x: scala.collection.immutable.Map[String,String], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: (Double, Double), out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._1)
[info]         };
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._2)
[info]         };
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: IndexedSeq[(Double, Double)], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e7(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: IndexedSeq[IndexedSeq[(Double, Double)]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e6(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e4(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiLineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPoint")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPolygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e10(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("GeometryCollection")
[info]         };
[info]         {
[info]           val v = x.geometries;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geometries");
[info]               e12(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Polygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e14(x: com.github.plokhotnyuk.jsoniter_scala.macros.Point, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Point")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("coordinates");
[info]           e7(x.coordinates, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e15(x: com.github.plokhotnyuk.jsoniter_scala.macros.LineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("LineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString)) => e4(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint)) => e8(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon)) => e9(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection)) => e11(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon)) => e13(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Point)) => e14(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.LineString)) => e15(x, out)
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Feature, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Feature")
[info]         };
[info]         {
[info]           val v = x.properties;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("properties");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geometry");
[info]           e3(x.geometry, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e17(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             JsoniterCodecs.this.geoJSONCodec.encodeValue(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e16(x: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("FeatureCollection")
[info]         };
[info]         {
[info]           val v = x.features;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("features");
[info]               e17(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Feature)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection)) => e16(x, out)
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val geoJSONCodec: JsonValueCodec[GeoJSON] = make[GeoJSON](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:54:89: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("status");
[info]       private[this] val r1: Array[String] = Array("distance", "duration", "status");
[info]       private[this] val r2: Array[String] = Array("text", "value");
[info]       private[this] def d1(in: JsonReader, default: IndexedSeq[String]): IndexedSeq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _value = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _distance = d6(in, _distance)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _duration = d6(in, _duration)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _elements = d4(in, _elements)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _origin_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _rows: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _destination_addresses = d1(in, _destination_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _origin_addresses = d1(in, _origin_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _rows = d2(in, _rows)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(8).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e1(x: IndexedSeq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("value");
[info]           out.writeVal(x.value)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("distance");
[info]           e6(x.distance, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("duration");
[info]           e6(x.duration, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.elements;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("elements");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.destination_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("destination_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.origin_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("origin_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.rows;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("rows");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val googleMapsAPICodec: JsonValueCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:55:101: Generated JSON codec for type 'scala.collection.immutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.immutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mapOfIntsToBooleansCodec: JsonValueCodec[Map[Int, Boolean]] = make[Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:56:95: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("s", "i");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val missingReqFieldCodec: JsonValueCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:57:89: Generated JSON codec for type 'scala.collection.mutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.BitSet] {
[info]       def nullValue: scala.collection.mutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>=(x.length))
[info]                   x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               BitSet.fromBitMaskNoCopy(x)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableBitSetCodec: JsonValueCodec[mutable.BitSet] = make[mutable.BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:58:120: Generated JSON codec for type 'scala.collection.mutable.LongMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.LongMap[Boolean]] {
[info]       def nullValue: scala.collection.mutable.LongMap[Boolean] = LongMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[Boolean];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableLongMapOfBooleansCodec: JsonValueCodec[mutable.LongMap[Boolean]] = make[mutable.LongMap[Boolean]](CodecMakerConfig())
[info]                                                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:59:124: Generated JSON codec for type 'scala.collection.mutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.mutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, Boolean];
[info]             do 
[info]               x.update(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableMapOfIntsToBooleansCodec: JsonValueCodec[mutable.Map[Int, Boolean]] = make[mutable.Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:60:96: Generated JSON codec for type 'scala.collection.mutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Set[Int]] {
[info]       def nullValue: scala.collection.mutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Set.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableSetOfIntsCodec: JsonValueCodec[mutable.Set[Int]] = make[mutable.Set[Int]](CodecMakerConfig())
[info]                                                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:61:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = ((0): Byte);
[info]           var _s: Short = ((0): Short);
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = '\u0000';
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var p0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(255).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("ch");
[info]           out.writeVal(x.ch)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val primitivesCodec: JsonValueCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:62:73: Generated JSON codec for type 'scala.collection.immutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Set[Int]] {
[info]       def nullValue: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val setOfIntsCodec: JsonValueCodec[Set[Int]] = make[Set[Int]](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:63:78: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decodeValue(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encodeValue(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private[this] val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private[this] val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private[this] val r4: Array[String] = Array("url", "description");
[info]       private[this] val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private[this] def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 31;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(15).!=(0))
[info]             in.requiredFieldError(r1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _expanded_url = in.readString(_expanded_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _display_url = in.readString(_display_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(r2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _hashtags = d3(in, _hashtags)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _symbols = d3(in, _symbols)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user_mentions = d4(in, _user_mentions)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = d12(in, _url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = d12(in, _description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(r4(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var p0 = -1;
[info]           var p1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _location = in.readString(_location)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = in.readString(_description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d11(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _protected = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _followers_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _friends_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _listed_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favourites_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _utc_offset = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _time_zone = in.readString(_time_zone)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _verified = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _statuses_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translator = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translation_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_color = in.readString(_profile_background_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         if (p0.&(33554432).!=(0))
[info]                           p0.^=(33554432)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         if (p0.&(67108864).!=(0))
[info]                           p0.^=(67108864)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_tile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         if (p0.&(134217728).!=(0))
[info]                           p0.^=(134217728)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url = in.readString(_profile_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         if (p0.&(268435456).!=(0))
[info]                           p0.^=(268435456)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         if (p0.&(536870912).!=(0))
[info]                           p0.^=(536870912)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_banner_url = in.readString(_profile_banner_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         if (p0.&(1073741824).!=(0))
[info]                           p0.^=(1073741824)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_link_color = in.readString(_profile_link_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         if (p0.&(-2147483648).!=(0))
[info]                           p0.^=(-2147483648)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         if (p1.&(1).!=(0))
[info]                           p1.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         if (p1.&(2).!=(0))
[info]                           p1.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_text_color = in.readString(_profile_text_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         if (p1.&(4).!=(0))
[info]                           p1.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_use_background_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         if (p1.&(8).!=(0))
[info]                           p1.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _has_extended_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         if (p1.&(16).!=(0))
[info]                           p1.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         if (p1.&(32).!=(0))
[info]                           p1.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         if (p1.&(64).!=(0))
[info]                           p1.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _following = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         if (p1.&(128).!=(0))
[info]                           p1.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _follow_request_sent = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         if (p1.&(256).!=(0))
[info]                           p1.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _notifications = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         if (p1.&(512).!=(0))
[info]                           p1.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _translator_type = in.readString(_translator_type)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(-1).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           if (p1.&(1023).!=(0))
[info]             in.requiredFieldError(r3(Integer.numberOfTrailingZeros(p1).+(32)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 16777215;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(16650367).!=(0))
[info]             in.requiredFieldError(r5(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 33554431;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted_status = d13(in, _retweeted_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(33427583).!=(0))
[info]             in.requiredFieldError(r0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("expanded_url");
[info]           out.writeVal(x.expanded_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("display_url");
[info]           out.writeVal(x.display_url)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.hashtags;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("hashtags");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.symbols;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("symbols");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.user_mentions;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("user_mentions");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           e11(x.url, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           e11(x.description, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("location");
[info]           out.writeVal(x.location)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           out.writeVal(x.description)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e10(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("protected");
[info]           out.writeVal(x.`protected`)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("followers_count");
[info]           out.writeVal(x.followers_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("friends_count");
[info]           out.writeVal(x.friends_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("listed_count");
[info]           out.writeVal(x.listed_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favourites_count");
[info]           out.writeVal(x.favourites_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("utc_offset");
[info]           out.writeVal(x.utc_offset)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("time_zone");
[info]           out.writeVal(x.time_zone)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geo_enabled");
[info]           out.writeVal(x.geo_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("verified");
[info]           out.writeVal(x.verified)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("statuses_count");
[info]           out.writeVal(x.statuses_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("contributors_enabled");
[info]           out.writeVal(x.contributors_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translator");
[info]           out.writeVal(x.is_translator)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]           out.writeVal(x.is_translation_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_color");
[info]           out.writeVal(x.profile_background_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]           out.writeVal(x.profile_background_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]           out.writeVal(x.profile_background_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_tile");
[info]           out.writeVal(x.profile_background_tile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url");
[info]           out.writeVal(x.profile_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]           out.writeVal(x.profile_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_banner_url");
[info]           out.writeVal(x.profile_banner_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_link_color");
[info]           out.writeVal(x.profile_link_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]           out.writeVal(x.profile_sidebar_border_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]           out.writeVal(x.profile_sidebar_fill_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_text_color");
[info]           out.writeVal(x.profile_text_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]           out.writeVal(x.profile_use_background_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("has_extended_profile");
[info]           out.writeVal(x.has_extended_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile");
[info]           out.writeVal(x.default_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile_image");
[info]           out.writeVal(x.default_profile_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("following");
[info]           out.writeVal(x.following)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("follow_request_sent");
[info]           out.writeVal(x.follow_request_sent)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("notifications");
[info]           out.writeVal(x.notifications)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("translator_type");
[info]           out.writeVal(x.translator_type)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted_status");
[info]           e12(x.retweeted_status, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val twitterAPICodec: JsonValueCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:35:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:42:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:44:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:64:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:65:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:66:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:70:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:71:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:72:18: local val v3 in value twitterAPIFormat is never used
[warn]     implicit val v3: OFormat[UserEntities] = Json.format[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:73:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:74:18: local val v5 in value twitterAPIFormat is never used
[warn]     implicit val v5: OFormat[Entities] = Json.format[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:75:18: local val v6 in value twitterAPIFormat is never used
[warn]     implicit val v6: Format[User] = Jsonx.formatCaseClass[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:76:18: local val v7 in value twitterAPIFormat is never used
[warn]     implicit val v7: Format[RetweetedStatus] = Jsonx.formatCaseClass[RetweetedStatus]
[warn]                  ^
[warn] 14 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.2-SNAPSHOT.jar ...
[info] Compiling 49 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 421 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 617 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.2-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.25.2-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -p size=128 -jvm /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java -prof gc -rf json -rff graalvmce1.json .*Benchmark.*
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce
[info] # Run progress: 0.00% complete, ETA 00:56:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46834.261 ops/s
[info] # Warmup Iteration   2: 582968.225 ops/s
[info] # Warmup Iteration   3: 805353.738 ops/s
[info] Iteration   1: 804308.967 ops/s
[info]                  ·gc.alloc.rate:                   2317.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              4534.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2303.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4506.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.872 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.576 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 798831.359 ops/s
[info]                  ·gc.alloc.rate:                   2314.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              4559.870 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4520.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 783118.062 ops/s
[info]                  ·gc.alloc.rate:                   2271.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              4565.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1982.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3983.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 810488.683 ops/s
[info]                  ·gc.alloc.rate:                   2363.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              4587.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2335.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4533.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 790606.476 ops/s
[info]                  ·gc.alloc.rate:               2307.621 MB/sec
[info]                  ·gc.alloc.rate.norm:          4593.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2353.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4684.825 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce":
[info]   797470.709 ±(99.9%) 41793.101 ops/s [Average]
[info]   (min, avg, max) = (783118.062, 797470.709, 810488.683), stdev = 10853.536
[info]   CI (99.9%): [755677.608, 839263.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate":
[info]   2315.029 ±(99.9%) 125.339 MB/sec [Average]
[info]   (min, avg, max) = (2271.962, 2315.029, 2363.208), stdev = 32.550
[info]   CI (99.9%): [2189.690, 2440.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4568.116 ±(99.9%) 90.197 B/op [Average]
[info]   (min, avg, max) = (4534.784, 4568.116, 4593.198), stdev = 23.424
[info]   CI (99.9%): [4477.919, 4658.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2253.837 ±(99.9%) 590.813 MB/sec [Average]
[info]   (min, avg, max) = (1982.713, 2253.837, 2353.655), stdev = 153.432
[info]   CI (99.9%): [1663.024, 2844.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4445.680 ±(99.9%) 1031.878 B/op [Average]
[info]   (min, avg, max) = (3983.968, 4445.680, 4684.825), stdev = 267.976
[info]   CI (99.9%): [3413.802, 5477.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.795 ±(99.9%) 6.624 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.795, 3.872), stdev = 1.720
[info]   CI (99.9%): [≈ 0, 7.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.556 ±(99.9%) 12.959 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.556, 7.576), stdev = 3.365
[info]   CI (99.9%): [≈ 0, 14.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.000, 16.000), stdev = 3.464
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala
[info] # Run progress: 0.24% complete, ETA 01:29:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53887.464 ops/s
[info] # Warmup Iteration   2: 1332653.496 ops/s
[info] # Warmup Iteration   3: 1915371.253 ops/s
[info] Iteration   1: 1927354.345 ops/s
[info]                  ·gc.alloc.rate:                   1277.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              1042.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1067.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 1889000.844 ops/s
[info]                  ·gc.alloc.rate:                   1252.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              1043.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1092.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.914 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.261 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 1949759.289 ops/s
[info]                  ·gc.alloc.rate:                   1293.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              1044.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1054.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.302 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1938594.191 ops/s
[info]                  ·gc.alloc.rate:                   1276.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              1035.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     792.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1858917.781 ops/s
[info]                  ·gc.alloc.rate:                   1251.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              1059.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1104.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala":
[info]   1912725.290 ±(99.9%) 145522.041 ops/s [Average]
[info]   (min, avg, max) = (1858917.781, 1912725.290, 1949759.289), stdev = 37791.612
[info]   CI (99.9%): [1767203.249, 2058247.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1270.233 ±(99.9%) 69.096 MB/sec [Average]
[info]   (min, avg, max) = (1251.903, 1270.233, 1293.605), stdev = 17.944
[info]   CI (99.9%): [1201.138, 1339.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1045.132 ±(99.9%) 34.055 B/op [Average]
[info]   (min, avg, max) = (1035.809, 1045.132, 1059.812), stdev = 8.844
[info]   CI (99.9%): [1011.077, 1079.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1241.174 ±(99.9%) 570.842 MB/sec [Average]
[info]   (min, avg, max) = (976.020, 1241.174, 1311.229), stdev = 148.246
[info]   CI (99.9%): [670.333, 1812.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1022.176 ±(99.9%) 500.602 B/op [Average]
[info]   (min, avg, max) = (792.262, 1022.176, 1104.268), stdev = 130.005
[info]   CI (99.9%): [521.574, 1522.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.887 ±(99.9%) 6.540 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.887, 3.914), stdev = 1.698
[info]   CI (99.9%): [≈ 0, 7.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.737 ±(99.9%) 5.451 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.737, 3.261), stdev = 1.416
[info]   CI (99.9%): [≈ 0, 6.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.600, 14.000), stdev = 4.159
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala
[info] # Run progress: 0.47% complete, ETA 01:29:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1536636.928 ops/s
[info] # Warmup Iteration   2: 5113479.581 ops/s
[info] # Warmup Iteration   3: 6017967.633 ops/s
[info] Iteration   1: 6034975.624 ops/s
[info]                  ·gc.alloc.rate:               405.869 MB/sec
[info]                  ·gc.alloc.rate.norm:          105.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 66.706 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 5807620.859 ops/s
[info]                  ·gc.alloc.rate:               392.641 MB/sec
[info]                  ·gc.alloc.rate.norm:          106.400 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89.628 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 5978630.488 ops/s
[info]                  ·gc.alloc.rate:               408.773 MB/sec
[info]                  ·gc.alloc.rate.norm:          107.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87.067 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 5946693.588 ops/s
[info]                  ·gc.alloc.rate:               416.035 MB/sec
[info]                  ·gc.alloc.rate.norm:          110.100 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 175.421 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 5722812.041 ops/s
[info]                  ·gc.alloc.rate:                   390.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              107.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala":
[info]   5898146.520 ±(99.9%) 496470.934 ops/s [Average]
[info]   (min, avg, max) = (5722812.041, 5898146.520, 6034975.624), stdev = 128931.925
[info]   CI (99.9%): [5401675.586, 6394617.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   402.715 ±(99.9%) 42.214 MB/sec [Average]
[info]   (min, avg, max) = (390.258, 402.715, 416.035), stdev = 10.963
[info]   CI (99.9%): [360.501, 444.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   107.451 ±(99.9%) 6.315 B/op [Average]
[info]   (min, avg, max) = (105.839, 107.451, 110.100), stdev = 1.640
[info]   CI (99.9%): [101.135, 113.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   382.387 ±(99.9%) 616.664 MB/sec [Average]
[info]   (min, avg, max) = (255.800, 382.387, 662.864), stdev = 160.146
[info]   CI (99.9%): [≈ 0, 999.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   102.010 ±(99.9%) 162.555 B/op [Average]
[info]   (min, avg, max) = (66.706, 102.010, 175.421), stdev = 42.215
[info]   CI (99.9%): [≈ 0, 264.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.010 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson
[info] # Run progress: 0.71% complete, ETA 01:28:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 562.823 ops/s
[info] # Warmup Iteration   2: 177902.848 ops/s
[info] # Warmup Iteration   3: 248698.448 ops/s
[info] Iteration   1: 255148.186 ops/s
[info]                  ·gc.alloc.rate:                   2222.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              13709.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2307.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14229.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.457 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.988 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 261010.069 ops/s
[info]                  ·gc.alloc.rate:                   2273.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              13709.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2319.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13986.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 261478.874 ops/s
[info]                  ·gc.alloc.rate:               2292.325 MB/sec
[info]                  ·gc.alloc.rate.norm:          13797.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2002.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12052.552 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 260167.971 ops/s
[info]                  ·gc.alloc.rate:                   2296.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              13888.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2351.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14224.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 260012.667 ops/s
[info]                  ·gc.alloc.rate:               2280.559 MB/sec
[info]                  ·gc.alloc.rate.norm:          13803.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2025.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12261.571 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson":
[info]   259563.553 ±(99.9%) 9783.848 ops/s [Average]
[info]   (min, avg, max) = (255148.186, 259563.553, 261478.874), stdev = 2540.834
[info]   CI (99.9%): [249779.705, 269347.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2273.092 ±(99.9%) 113.789 MB/sec [Average]
[info]   (min, avg, max) = (2222.750, 2273.092, 2296.171), stdev = 29.551
[info]   CI (99.9%): [2159.303, 2386.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   13781.438 ±(99.9%) 289.704 B/op [Average]
[info]   (min, avg, max) = (13709.016, 13781.438, 13888.446), stdev = 75.235
[info]   CI (99.9%): [13491.734, 14071.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2201.343 ±(99.9%) 661.758 MB/sec [Average]
[info]   (min, avg, max) = (2002.463, 2201.343, 2351.714), stdev = 171.856
[info]   CI (99.9%): [1539.585, 2863.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   13350.808 ±(99.9%) 4222.832 B/op [Average]
[info]   (min, avg, max) = (12052.552, 13350.808, 14229.415), stdev = 1096.656
[info]   CI (99.9%): [9127.976, 17573.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.308 ±(99.9%) 2.476 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.308, 1.457), stdev = 0.643
[info]   CI (99.9%): [≈ 0, 2.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.898 ±(99.9%) 15.273 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.898, 8.988), stdev = 3.966
[info]   CI (99.9%): [≈ 0, 17.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.200, 12.000), stdev = 1.095
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce
[info] # Run progress: 0.94% complete, ETA 01:28:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41824.500 ops/s
[info] # Warmup Iteration   2: 750059.059 ops/s
[info] # Warmup Iteration   3: 882138.378 ops/s
[info] Iteration   1: 897184.387 ops/s
[info]                  ·gc.alloc.rate:                   2391.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              4194.765 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4038.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.646 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 897022.367 ops/s
[info]                  ·gc.alloc.rate:                   2408.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              4225.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4032.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 886619.014 ops/s
[info]                  ·gc.alloc.rate:               2389.891 MB/sec
[info]                  ·gc.alloc.rate.norm:          4241.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2319.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4117.210 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 899782.592 ops/s
[info]                  ·gc.alloc.rate:                   2425.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              4242.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2341.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4095.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 872578.775 ops/s
[info]                  ·gc.alloc.rate:               2356.312 MB/sec
[info]                  ·gc.alloc.rate.norm:          4249.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2357.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4252.096 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce":
[info]   890637.427 ±(99.9%) 43459.713 ops/s [Average]
[info]   (min, avg, max) = (872578.775, 890637.427, 899782.592), stdev = 11286.350
[info]   CI (99.9%): [847177.714, 934097.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate":
[info]   2394.280 ±(99.9%) 98.968 MB/sec [Average]
[info]   (min, avg, max) = (2356.312, 2394.280, 2425.463), stdev = 25.702
[info]   CI (99.9%): [2295.312, 2493.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   4230.802 ±(99.9%) 84.903 B/op [Average]
[info]   (min, avg, max) = (4194.765, 4230.802, 4249.816), stdev = 22.049
[info]   CI (99.9%): [4145.900, 4315.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2323.944 ±(99.9%) 97.583 MB/sec [Average]
[info]   (min, avg, max) = (2298.779, 2323.944, 2357.576), stdev = 25.342
[info]   CI (99.9%): [2226.361, 2421.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4107.223 ±(99.9%) 341.618 B/op [Average]
[info]   (min, avg, max) = (4032.917, 4107.223, 4252.096), stdev = 88.717
[info]   CI (99.9%): [3765.604, 4448.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.766 ±(99.9%) 6.506 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.766, 3.789), stdev = 1.690
[info]   CI (99.9%): [≈ 0, 7.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.344 ±(99.9%) 11.414 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.344, 6.646), stdev = 2.964
[info]   CI (99.9%): [≈ 0, 12.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 10.400, 12.000), stdev = 0.894
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala
[info] # Run progress: 1.18% complete, ETA 01:28:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 217351.114 ops/s
[info] # Warmup Iteration   2: 2253535.304 ops/s
[info] # Warmup Iteration   3: 2774934.543 ops/s
[info] Iteration   1: 2813541.197 ops/s
[info]                  ·gc.alloc.rate:                   1208.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              676.203 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     731.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2813590.962 ops/s
[info]                  ·gc.alloc.rate:                   1200.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              671.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     550.734 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2708264.987 ops/s
[info]                  ·gc.alloc.rate:                   1169.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              679.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     762.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.925 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.280 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2785447.725 ops/s
[info]                  ·gc.alloc.rate:                   1192.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              673.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     553.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2814713.109 ops/s
[info]                  ·gc.alloc.rate:               1226.337 MB/sec
[info]                  ·gc.alloc.rate.norm:          685.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 730.984 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala":
[info]   2787111.596 ±(99.9%) 176259.838 ops/s [Average]
[info]   (min, avg, max) = (2708264.987, 2787111.596, 2814713.109), stdev = 45774.120
[info]   CI (99.9%): [2610851.758, 2963371.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1199.553 ±(99.9%) 81.114 MB/sec [Average]
[info]   (min, avg, max) = (1169.285, 1199.553, 1226.337), stdev = 21.065
[info]   CI (99.9%): [1118.439, 1280.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   677.221 ±(99.9%) 20.950 B/op [Average]
[info]   (min, avg, max) = (671.522, 677.221, 685.457), stdev = 5.441
[info]   CI (99.9%): [656.270, 698.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1178.504 ±(99.9%) 690.563 MB/sec [Average]
[info]   (min, avg, max) = (979.270, 1178.504, 1311.998), stdev = 179.337
[info]   CI (99.9%): [487.941, 1869.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   665.823 ±(99.9%) 403.038 B/op [Average]
[info]   (min, avg, max) = (550.734, 665.823, 762.187), stdev = 104.668
[info]   CI (99.9%): [262.785, 1068.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.802 ±(99.9%) 6.724 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.802, 3.925), stdev = 1.746
[info]   CI (99.9%): [≈ 0, 7.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.465 ±(99.9%) 3.907 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.465, 2.280), stdev = 1.015
[info]   CI (99.9%): [≈ 0, 4.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 13.000), stdev = 3.421
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala
[info] # Run progress: 1.41% complete, ETA 01:27:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1504412.297 ops/s
[info] # Warmup Iteration   2: 12206645.125 ops/s
[info] # Warmup Iteration   3: 13214667.559 ops/s
[info] Iteration   1: 13722053.149 ops/s
[info]                  ·gc.alloc.rate:                   713.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              81.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 13656425.890 ops/s
[info]                  ·gc.alloc.rate:                   710.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              81.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 14232351.987 ops/s
[info]                  ·gc.alloc.rate:               754.350 MB/sec
[info]                  ·gc.alloc.rate.norm:          83.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 73.145 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 14477428.205 ops/s
[info]                  ·gc.alloc.rate:                   754.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              81.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 14583941.574 ops/s
[info]                  ·gc.alloc.rate:                   763.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.375 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.217 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.347 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala":
[info]   14134440.161 ±(99.9%) 1642560.014 ops/s [Average]
[info]   (min, avg, max) = (13656425.890, 14134440.161, 14583941.574), stdev = 426567.619
[info]   CI (99.9%): [12491880.148, 15777000.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   739.184 ±(99.9%) 96.669 MB/sec [Average]
[info]   (min, avg, max) = (710.232, 739.184, 763.396), stdev = 25.105
[info]   CI (99.9%): [642.515, 835.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   82.289 ±(99.9%) 2.552 B/op [Average]
[info]   (min, avg, max) = (81.845, 82.289, 83.410), stdev = 0.663
[info]   CI (99.9%): [79.737, 84.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   727.850 ±(99.9%) 575.073 MB/sec [Average]
[info]   (min, avg, max) = (659.562, 727.850, 994.998), stdev = 149.345
[info]   CI (99.9%): [152.777, 1302.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   80.856 ±(99.9%) 57.441 B/op [Average]
[info]   (min, avg, max) = (72.014, 80.856, 107.366), stdev = 14.917
[info]   CI (99.9%): [23.415, 138.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.664 ±(99.9%) 5.495 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.664, 3.217), stdev = 1.427
[info]   CI (99.9%): [≈ 0, 6.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.072 ±(99.9%) 0.593 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.072, 0.347), stdev = 0.154
[info]   CI (99.9%): [≈ 0, 0.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.095
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 1.65% complete, ETA 01:27:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1583195.772 ops/s
[info] # Warmup Iteration   2: 14189183.525 ops/s
[info] # Warmup Iteration   3: 16285231.591 ops/s
[info] Iteration   1: 16304011.385 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 16327272.995 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 16304241.176 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 16306649.275 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 16290766.061 ops/s
[info]                  ·gc.alloc.rate:      0.499 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.048 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc":
[info]   16306588.178 ±(99.9%) 50587.008 ops/s [Average]
[info]   (min, avg, max) = (16290766.061, 16306588.178, 16327272.995), stdev = 13137.285
[info]   CI (99.9%): [16256001.170, 16357175.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.100 ±(99.9%) 0.858 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.100, 0.499), stdev = 0.223
[info]   CI (99.9%): [≈ 0, 0.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.010 ±(99.9%) 0.083 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.010, 0.048), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson
[info] # Run progress: 1.88% complete, ETA 01:27:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8430.920 ops/s
[info] # Warmup Iteration   2: 134894.620 ops/s
[info] # Warmup Iteration   3: 469377.946 ops/s
[info] Iteration   1: 526794.584 ops/s
[info]                  ·gc.alloc.rate:                   1598.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              4775.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3872.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.218 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 530707.374 ops/s
[info]                  ·gc.alloc.rate:                   1610.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              4775.856 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1635.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4848.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.521 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.544 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 519409.662 ops/s
[info]                  ·gc.alloc.rate:                   1586.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              4806.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4998.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.577 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 529998.428 ops/s
[info]                  ·gc.alloc.rate:               1605.613 MB/sec
[info]                  ·gc.alloc.rate.norm:          4765.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1657.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4918.567 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 531538.841 ops/s
[info]                  ·gc.alloc.rate:               1622.770 MB/sec
[info]                  ·gc.alloc.rate.norm:          4804.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1335.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3952.663 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson":
[info]   527689.778 ±(99.9%) 19119.206 ops/s [Average]
[info]   (min, avg, max) = (519409.662, 527689.778, 531538.841), stdev = 4965.197
[info]   CI (99.9%): [508570.572, 546808.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1604.776 ±(99.9%) 52.267 MB/sec [Average]
[info]   (min, avg, max) = (1586.347, 1604.776, 1622.770), stdev = 13.574
[info]   CI (99.9%): [1552.509, 1657.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4785.480 ±(99.9%) 72.371 B/op [Average]
[info]   (min, avg, max) = (4765.139, 4785.480, 4806.567), stdev = 18.795
[info]   CI (99.9%): [4713.109, 4857.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1514.731 ±(99.9%) 702.142 MB/sec [Average]
[info]   (min, avg, max) = (1296.408, 1514.731, 1657.310), stdev = 182.344
[info]   CI (99.9%): [812.589, 2216.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4518.251 ±(99.9%) 2141.050 B/op [Average]
[info]   (min, avg, max) = (3872.809, 4518.251, 4998.717), stdev = 556.024
[info]   CI (99.9%): [2377.201, 6659.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.223 ±(99.9%) 1.053 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.223, 0.521), stdev = 0.273
[info]   CI (99.9%): [≈ 0, 1.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.668 ±(99.9%) 3.157 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.668, 1.577), stdev = 0.820
[info]   CI (99.9%): [≈ 0, 3.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 9.000), stdev = 1.140
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce
[info] # Run progress: 2.12% complete, ETA 01:27:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 180082.951 ops/s
[info] # Warmup Iteration   2: 1637515.758 ops/s
[info] # Warmup Iteration   3: 2090025.458 ops/s
[info] Iteration   1: 2139018.507 ops/s
[info]                  ·gc.alloc.rate:                   2989.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              2198.911 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2960.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2177.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2152172.193 ops/s
[info]                  ·gc.alloc.rate:                   3014.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              2204.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2647.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1935.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2139365.888 ops/s
[info]                  ·gc.alloc.rate:                   3012.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              2215.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3011.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2214.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 2131835.204 ops/s
[info]                  ·gc.alloc.rate:                   3003.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              2217.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3035.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2240.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 2149030.827 ops/s
[info]                  ·gc.alloc.rate:               3017.821 MB/sec
[info]                  ·gc.alloc.rate.norm:          2210.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2710.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1985.098 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce":
[info]   2142284.524 ±(99.9%) 31732.916 ops/s [Average]
[info]   (min, avg, max) = (2131835.204, 2142284.524, 2152172.193), stdev = 8240.937
[info]   CI (99.9%): [2110551.608, 2174017.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate":
[info]   3007.656 ±(99.9%) 44.825 MB/sec [Average]
[info]   (min, avg, max) = (2989.196, 3007.656, 3017.821), stdev = 11.641
[info]   CI (99.9%): [2962.832, 3052.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2209.272 ±(99.9%) 29.536 B/op [Average]
[info]   (min, avg, max) = (2198.911, 2209.272, 2217.083), stdev = 7.670
[info]   CI (99.9%): [2179.737, 2238.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2873.023 ±(99.9%) 695.154 MB/sec [Average]
[info]   (min, avg, max) = (2647.441, 2873.023, 3035.474), stdev = 180.529
[info]   CI (99.9%): [2177.869, 3568.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2110.778 ±(99.9%) 539.659 B/op [Average]
[info]   (min, avg, max) = (1935.804, 2110.778, 2240.728), stdev = 140.148
[info]   CI (99.9%): [1571.118, 2650.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.422 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.079, 0.271), stdev = 0.110
[info]   CI (99.9%): [≈ 0, 0.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.058 ±(99.9%) 0.310 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.199), stdev = 0.081
[info]   CI (99.9%): [≈ 0, 0.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.count":
[info]   43.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 9.000), stdev = 0.548
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.800, 13.000), stdev = 1.789
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava
[info] # Run progress: 2.35% complete, ETA 01:27:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.741 ops/s
[info] # Warmup Iteration   2: 8686946.578 ops/s
[info] # Warmup Iteration   3: 9313693.664 ops/s
[info] Iteration   1: 10006214.017 ops/s
[info]                  ·gc.alloc.rate:                   1261.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              198.471 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 10128725.153 ops/s
[info]                  ·gc.alloc.rate:                   1282.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              199.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     203.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.309 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.669 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 9793381.695 ops/s
[info]                  ·gc.alloc.rate:                   1225.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              196.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     157.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 10142783.378 ops/s
[info]                  ·gc.alloc.rate:               1269.855 MB/sec
[info]                  ·gc.alloc.rate.norm:          196.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1300.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 201.763 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 10043363.623 ops/s
[info]                  ·gc.alloc.rate:               1276.893 MB/sec
[info]                  ·gc.alloc.rate.norm:          200.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1303.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 204.242 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava":
[info]   10022893.573 ±(99.9%) 540966.896 ops/s [Average]
[info]   (min, avg, max) = (9793381.695, 10022893.573, 10142783.378), stdev = 140487.385
[info]   CI (99.9%): [9481926.677, 10563860.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1263.331 ±(99.9%) 85.824 MB/sec [Average]
[info]   (min, avg, max) = (1225.841, 1263.331, 1282.122), stdev = 22.288
[info]   CI (99.9%): [1177.507, 1349.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   198.340 ±(99.9%) 5.278 B/op [Average]
[info]   (min, avg, max) = (196.970, 198.340, 200.078), stdev = 1.371
[info]   CI (99.9%): [193.062, 203.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1239.396 ±(99.9%) 562.928 MB/sec [Average]
[info]   (min, avg, max) = (977.947, 1239.396, 1309.715), stdev = 146.191
[info]   CI (99.9%): [676.467, 1802.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   194.379 ±(99.9%) 80.302 B/op [Average]
[info]   (min, avg, max) = (157.144, 194.379, 205.257), stdev = 20.854
[info]   CI (99.9%): [114.077, 274.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.881 ±(99.9%) 7.379 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.881, 4.309), stdev = 1.916
[info]   CI (99.9%): [≈ 0, 8.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.137 ±(99.9%) 1.146 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.137, 0.669), stdev = 0.298
[info]   CI (99.9%): [≈ 0, 1.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 13.000), stdev = 3.647
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala
[info] # Run progress: 2.59% complete, ETA 01:27:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 38864.195 ops/s
[info] # Warmup Iteration   2: 2608325.154 ops/s
[info] # Warmup Iteration   3: 3120027.693 ops/s
[info] Iteration   1: 3175825.944 ops/s
[info]                  ·gc.alloc.rate:                   2066.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1964.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     973.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.174 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.068 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 3088390.304 ops/s
[info]                  ·gc.alloc.rate:                   2017.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              1028.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     996.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3142130.564 ops/s
[info]                  ·gc.alloc.rate:                   2033.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              1018.299 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     985.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 3204078.870 ops/s
[info]                  ·gc.alloc.rate:                   2092.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              1027.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     976.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3174557.631 ops/s
[info]                  ·gc.alloc.rate:                   2080.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              1031.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2003.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     993.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala":
[info]   3156996.663 ±(99.9%) 170121.529 ops/s [Average]
[info]   (min, avg, max) = (3088390.304, 3156996.663, 3204078.870), stdev = 44180.021
[info]   CI (99.9%): [2986875.134, 3327118.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2058.015 ±(99.9%) 120.968 MB/sec [Average]
[info]   (min, avg, max) = (2017.651, 2058.015, 2092.055), stdev = 31.415
[info]   CI (99.9%): [1937.046, 2178.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1025.821 ±(99.9%) 18.767 B/op [Average]
[info]   (min, avg, max) = (1018.299, 1025.821, 1031.109), stdev = 4.874
[info]   CI (99.9%): [1007.055, 1044.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1975.796 ±(99.9%) 74.985 MB/sec [Average]
[info]   (min, avg, max) = (1955.426, 1975.796, 2003.854), stdev = 19.473
[info]   CI (99.9%): [1900.811, 2050.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   984.925 ±(99.9%) 38.801 B/op [Average]
[info]   (min, avg, max) = (973.697, 984.925, 996.304), stdev = 10.077
[info]   CI (99.9%): [946.124, 1023.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.905 ±(99.9%) 7.037 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.905, 4.174), stdev = 1.827
[info]   CI (99.9%): [≈ 0, 7.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.449 ±(99.9%) 3.486 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.449, 2.068), stdev = 0.905
[info]   CI (99.9%): [≈ 0, 3.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 16.000), stdev = 3.391
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala
[info] # Run progress: 2.82% complete, ETA 01:26:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4427417.503 ops/s
[info] # Warmup Iteration   2: 12377663.692 ops/s
[info] # Warmup Iteration   3: 12192915.504 ops/s
[info] Iteration   1: 12816044.435 ops/s
[info]                  ·gc.alloc.rate:                   1674.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              205.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1664.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     204.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 12699883.374 ops/s
[info]                  ·gc.alloc.rate:                   1678.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              207.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 13001413.477 ops/s
[info]                  ·gc.alloc.rate:               1717.768 MB/sec
[info]                  ·gc.alloc.rate.norm:          207.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1658.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 200.790 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 12950210.157 ops/s
[info]                  ·gc.alloc.rate:               1711.647 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1664.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 202.314 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 12595958.882 ops/s
[info]                  ·gc.alloc.rate:                   1666.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     209.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala":
[info]   12812702.065 ±(99.9%) 650739.764 ops/s [Average]
[info]   (min, avg, max) = (12595958.882, 12812702.065, 13001413.477), stdev = 168995.050
[info]   CI (99.9%): [12161962.301, 13463441.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1689.682 ±(99.9%) 89.840 MB/sec [Average]
[info]   (min, avg, max) = (1666.464, 1689.682, 1717.768), stdev = 23.331
[info]   CI (99.9%): [1599.842, 1779.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   207.533 ±(99.9%) 4.176 B/op [Average]
[info]   (min, avg, max) = (205.604, 207.533, 208.201), stdev = 1.084
[info]   CI (99.9%): [203.357, 211.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1664.171 ±(99.9%) 21.091 MB/sec [Average]
[info]   (min, avg, max) = (1658.880, 1664.171, 1672.873), stdev = 5.477
[info]   CI (99.9%): [1643.079, 1685.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   204.432 ±(99.9%) 12.220 B/op [Average]
[info]   (min, avg, max) = (200.790, 204.432, 209.001), stdev = 3.173
[info]   CI (99.9%): [192.212, 216.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.554 ±(99.9%) 3.454 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.554, 2.082), stdev = 0.897
[info]   CI (99.9%): [≈ 0, 4.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.424 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.068, 0.256), stdev = 0.110
[info]   CI (99.9%): [≈ 0, 0.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 11.000), stdev = 2.302
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson
[info] # Run progress: 3.06% complete, ETA 01:26:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9567.737 ops/s
[info] # Warmup Iteration   2: 259807.476 ops/s
[info] # Warmup Iteration   3: 530993.208 ops/s
[info] Iteration   1: 1020796.833 ops/s
[info]                  ·gc.alloc.rate:                   2555.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              3939.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2630.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4055.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.665 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.568 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 1080062.258 ops/s
[info]                  ·gc.alloc.rate:                   2679.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              3903.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2312.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3369.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.364 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1123045.466 ops/s
[info]                  ·gc.alloc.rate:                   2804.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              3929.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2996.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4198.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1103192.134 ops/s
[info]                  ·gc.alloc.rate:                   2776.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              3960.311 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2687.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3833.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1113157.439 ops/s
[info]                  ·gc.alloc.rate:               2802.028 MB/sec
[info]                  ·gc.alloc.rate.norm:          3960.310 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2703.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3820.798 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson":
[info]   1088050.826 ±(99.9%) 157254.645 ops/s [Average]
[info]   (min, avg, max) = (1020796.833, 1088050.826, 1123045.466), stdev = 40838.532
[info]   CI (99.9%): [930796.181, 1245305.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2723.430 ±(99.9%) 411.064 MB/sec [Average]
[info]   (min, avg, max) = (2555.582, 2723.430, 2804.010), stdev = 106.752
[info]   CI (99.9%): [2312.366, 3134.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   3938.659 ±(99.9%) 91.361 B/op [Average]
[info]   (min, avg, max) = (3903.680, 3938.659, 3960.311), stdev = 23.726
[info]   CI (99.9%): [3847.298, 4030.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2666.106 ±(99.9%) 937.105 MB/sec [Average]
[info]   (min, avg, max) = (2312.826, 2666.106, 2996.272), stdev = 243.363
[info]   CI (99.9%): [1729.001, 3603.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3855.672 ±(99.9%) 1210.696 B/op [Average]
[info]   (min, avg, max) = (3369.768, 3855.672, 4198.621), stdev = 314.414
[info]   CI (99.9%): [2644.976, 5066.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.421 ±(99.9%) 2.706 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.421, 1.665), stdev = 0.703
[info]   CI (99.9%): [≈ 0, 3.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.639 ±(99.9%) 4.186 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.639, 2.568), stdev = 1.087
[info]   CI (99.9%): [≈ 0, 4.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 8.000, 9.000), stdev = 0.707
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.600, 16.000), stdev = 2.074
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce
[info] # Run progress: 3.29% complete, ETA 01:26:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 224852.900 ops/s
[info] # Warmup Iteration   2: 2062202.016 ops/s
[info] # Warmup Iteration   3: 2390850.503 ops/s
[info] Iteration   1: 2476847.417 ops/s
[info]                  ·gc.alloc.rate:                   2173.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              1380.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1977.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1256.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.602 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.288 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2455619.249 ops/s
[info]                  ·gc.alloc.rate:                   2179.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              1396.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1472.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2483608.330 ops/s
[info]                  ·gc.alloc.rate:                   2199.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              1393.629 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1257.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2470521.710 ops/s
[info]                  ·gc.alloc.rate:                   2189.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              1394.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2000.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1273.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 2484888.035 ops/s
[info]                  ·gc.alloc.rate:                   2215.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              1403.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2351.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1489.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce":
[info]   2474296.948 ±(99.9%) 45905.374 ops/s [Average]
[info]   (min, avg, max) = (2455619.249, 2474296.948, 2484888.035), stdev = 11921.480
[info]   CI (99.9%): [2428391.574, 2520202.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2191.547 ±(99.9%) 64.210 MB/sec [Average]
[info]   (min, avg, max) = (2173.557, 2191.547, 2215.612), stdev = 16.675
[info]   CI (99.9%): [2127.337, 2255.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1393.803 ±(99.9%) 31.196 B/op [Average]
[info]   (min, avg, max) = (1380.951, 1393.803, 1403.190), stdev = 8.101
[info]   CI (99.9%): [1362.607, 1424.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2122.384 ±(99.9%) 716.218 MB/sec [Average]
[info]   (min, avg, max) = (1977.965, 2122.384, 2351.511), stdev = 185.999
[info]   CI (99.9%): [1406.167, 2838.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1349.954 ±(99.9%) 462.228 B/op [Average]
[info]   (min, avg, max) = (1256.683, 1349.954, 1489.258), stdev = 120.039
[info]   CI (99.9%): [887.726, 1812.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.745 ±(99.9%) 6.149 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.745, 3.602), stdev = 1.597
[info]   CI (99.9%): [≈ 0, 6.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.474 ±(99.9%) 3.906 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.474, 2.288), stdev = 1.014
[info]   CI (99.9%): [≈ 0, 4.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.600, 13.000), stdev = 1.949
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava
[info] # Run progress: 3.53% complete, ETA 01:26:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.632 ops/s
[info] # Warmup Iteration   2: 18068259.964 ops/s
[info] # Warmup Iteration   3: 18834052.494 ops/s
[info] Iteration   1: 19124991.284 ops/s
[info]                  ·gc.alloc.rate:                   606.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 19188897.249 ops/s
[info]                  ·gc.alloc.rate:               593.589 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26.716 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 19122581.447 ops/s
[info]                  ·gc.alloc.rate:                   605.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 20195477.324 ops/s
[info]                  ·gc.alloc.rate:                   633.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.387 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 20161451.781 ops/s
[info]                  ·gc.alloc.rate:               641.351 MB/sec
[info]                  ·gc.alloc.rate.norm:          50.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 51.063 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava":
[info]   19558679.817 ±(99.9%) 2181528.093 ops/s [Average]
[info]   (min, avg, max) = (19122581.447, 19558679.817, 20195477.324), stdev = 566535.918
[info]   CI (99.9%): [17377151.724, 21740207.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   616.087 ±(99.9%) 78.594 MB/sec [Average]
[info]   (min, avg, max) = (593.589, 616.087, 641.351), stdev = 20.411
[info]   CI (99.9%): [537.493, 694.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   49.565 ±(99.9%) 2.127 B/op [Average]
[info]   (min, avg, max) = (48.680, 49.565, 50.048), stdev = 0.552
[info]   CI (99.9%): [47.439, 51.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   587.611 ±(99.9%) 563.655 MB/sec [Average]
[info]   (min, avg, max) = (325.766, 587.611, 654.357), stdev = 146.379
[info]   CI (99.9%): [23.956, 1151.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   47.209 ±(99.9%) 44.412 B/op [Average]
[info]   (min, avg, max) = (26.716, 47.209, 53.726), stdev = 11.534
[info]   CI (99.9%): [2.797, 91.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.015 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.005 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 7.000), stdev = 1.517
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala
[info] # Run progress: 3.76% complete, ETA 01:26:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 594507.897 ops/s
[info] # Warmup Iteration   2: 5295737.198 ops/s
[info] # Warmup Iteration   3: 6339774.261 ops/s
[info] Iteration   1: 6046024.775 ops/s
[info]                  ·gc.alloc.rate:                   1712.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              445.860 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     427.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.612 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.940 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 6570112.999 ops/s
[info]                  ·gc.alloc.rate:                   1845.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              442.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     391.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 6471512.205 ops/s
[info]                  ·gc.alloc.rate:               1853.642 MB/sec
[info]                  ·gc.alloc.rate.norm:          450.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1963.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 477.426 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 6516440.415 ops/s
[info]                  ·gc.alloc.rate:               1853.849 MB/sec
[info]                  ·gc.alloc.rate.norm:          447.696 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1648.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 398.172 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 6487489.078 ops/s
[info]                  ·gc.alloc.rate:                   1859.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              451.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     483.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala":
[info]   6418315.894 ±(99.9%) 814313.865 ops/s [Average]
[info]   (min, avg, max) = (6046024.775, 6418315.894, 6570112.999), stdev = 211474.725
[info]   CI (99.9%): [5604002.030, 7232629.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1825.219 ±(99.9%) 242.449 MB/sec [Average]
[info]   (min, avg, max) = (1712.925, 1825.219, 1859.699), stdev = 62.963
[info]   CI (99.9%): [1582.770, 2067.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   447.505 ±(99.9%) 14.301 B/op [Average]
[info]   (min, avg, max) = (442.122, 447.505, 451.120), stdev = 3.714
[info]   CI (99.9%): [433.204, 461.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1776.482 ±(99.9%) 714.552 MB/sec [Average]
[info]   (min, avg, max) = (1633.584, 1776.482, 1995.165), stdev = 185.567
[info]   CI (99.9%): [1061.930, 2491.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   435.617 ±(99.9%) 167.042 B/op [Average]
[info]   (min, avg, max) = (391.252, 435.617, 483.981), stdev = 43.380
[info]   CI (99.9%): [268.575, 602.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.785 ±(99.9%) 6.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.785, 3.612), stdev = 1.585
[info]   CI (99.9%): [≈ 0, 6.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.203 ±(99.9%) 1.591 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.203, 0.940), stdev = 0.413
[info]   CI (99.9%): [≈ 0, 1.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 15.000), stdev = 3.464
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala
[info] # Run progress: 4.00% complete, ETA 01:26:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7824863.321 ops/s
[info] # Warmup Iteration   2: 27305307.936 ops/s
[info] # Warmup Iteration   3: 26871610.606 ops/s
[info] Iteration   1: 26882179.038 ops/s
[info]                  ·gc.alloc.rate:                   855.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              50.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 27095836.966 ops/s
[info]                  ·gc.alloc.rate:                   843.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 26684368.235 ops/s
[info]                  ·gc.alloc.rate:                   834.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 28304874.303 ops/s
[info]                  ·gc.alloc.rate:                   890.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 27982739.859 ops/s
[info]                  ·gc.alloc.rate:               892.186 MB/sec
[info]                  ·gc.alloc.rate.norm:          50.175 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55.707 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala":
[info]   27389999.680 ±(99.9%) 2743611.319 ops/s [Average]
[info]   (min, avg, max) = (26684368.235, 27389999.680, 28304874.303), stdev = 712507.147
[info]   CI (99.9%): [24646388.361, 30133610.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   863.235 ±(99.9%) 102.491 MB/sec [Average]
[info]   (min, avg, max) = (834.189, 863.235, 892.186), stdev = 26.616
[info]   CI (99.9%): [760.745, 965.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   49.596 ±(99.9%) 2.005 B/op [Average]
[info]   (min, avg, max) = (49.021, 49.596, 50.175), stdev = 0.521
[info]   CI (99.9%): [47.591, 51.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   860.404 ±(99.9%) 696.397 MB/sec [Average]
[info]   (min, avg, max) = (661.805, 860.404, 995.923), stdev = 180.852
[info]   CI (99.9%): [164.007, 1556.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   49.325 ±(99.9%) 37.335 B/op [Average]
[info]   (min, avg, max) = (38.439, 49.325, 58.014), stdev = 9.696
[info]   CI (99.9%): [11.990, 86.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.641 ±(99.9%) 5.342 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.641, 3.123), stdev = 1.387
[info]   CI (99.9%): [≈ 0, 5.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.297 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.036, 0.174), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 8.000), stdev = 1.483
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 4.24% complete, ETA 01:25:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6901908.085 ops/s
[info] # Warmup Iteration   2: 32588412.318 ops/s
[info] # Warmup Iteration   3: 33907360.356 ops/s
[info] Iteration   1: 34346677.047 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 34335914.677 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 34341853.121 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 34436986.849 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 34384371.044 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc":
[info]   34369160.548 ±(99.9%) 163235.714 ops/s [Average]
[info]   (min, avg, max) = (34335914.677, 34369160.548, 34436986.849), stdev = 42391.796
[info]   CI (99.9%): [34205924.834, 34532396.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson
[info] # Run progress: 4.47% complete, ETA 01:25:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58683.803 ops/s
[info] # Warmup Iteration   2: 1526703.183 ops/s
[info] # Warmup Iteration   3: 1789216.372 ops/s
[info] Iteration   1: 1808612.451 ops/s
[info]                  ·gc.alloc.rate:                   2946.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              2563.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2934.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2552.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 1769725.907 ops/s
[info]                  ·gc.alloc.rate:                   2928.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              2604.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2966.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2638.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1821694.824 ops/s
[info]                  ·gc.alloc.rate:                   2976.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              2571.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2673.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2309.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1820733.753 ops/s
[info]                  ·gc.alloc.rate:                   3008.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              2600.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3031.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2620.280 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1834463.991 ops/s
[info]                  ·gc.alloc.rate:                   3035.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              2603.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3046.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2613.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson":
[info]   1811046.185 ±(99.9%) 95665.924 ops/s [Average]
[info]   (min, avg, max) = (1769725.907, 1811046.185, 1834463.991), stdev = 24844.137
[info]   CI (99.9%): [1715380.261, 1906712.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2979.014 ±(99.9%) 168.229 MB/sec [Average]
[info]   (min, avg, max) = (2928.678, 2979.014, 3035.114), stdev = 43.689
[info]   CI (99.9%): [2810.784, 3147.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2588.675 ±(99.9%) 75.589 B/op [Average]
[info]   (min, avg, max) = (2563.497, 2588.675, 2604.357), stdev = 19.630
[info]   CI (99.9%): [2513.086, 2664.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2930.355 ±(99.9%) 581.585 MB/sec [Average]
[info]   (min, avg, max) = (2673.029, 2930.355, 3046.259), stdev = 151.036
[info]   CI (99.9%): [2348.770, 3511.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2546.806 ±(99.9%) 526.150 B/op [Average]
[info]   (min, avg, max) = (2309.199, 2546.806, 2638.237), stdev = 136.639
[info]   CI (99.9%): [2020.656, 3072.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.092 ±(99.9%) 0.434 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.092, 0.291), stdev = 0.113
[info]   CI (99.9%): [≈ 0, 0.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.079 ±(99.9%) 0.375 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.079, 0.252), stdev = 0.097
[info]   CI (99.9%): [≈ 0, 0.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.count":
[info]   44.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.800, 9.000), stdev = 0.447
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.000, 15.000), stdev = 1.225
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 4.71% complete, ETA 01:25:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 75189.231 ops/s
[info] # Warmup Iteration   2: 286119.487 ops/s
[info] # Warmup Iteration   3: 298060.178 ops/s
[info] Iteration   1: 292234.359 ops/s
[info]                  ·gc.alloc.rate:                   1788.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              9633.763 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1986.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10697.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.610 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 303563.824 ops/s
[info]                  ·gc.alloc.rate:                   1846.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              9570.992 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8530.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.079 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 299340.841 ops/s
[info]                  ·gc.alloc.rate:                   1854.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              9748.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10403.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.657 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 300302.939 ops/s
[info]                  ·gc.alloc.rate:                   1846.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              9677.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8697.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.218 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 304083.670 ops/s
[info]                  ·gc.alloc.rate:                   1870.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              9678.397 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1670.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8646.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.215 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce":
[info]   299905.126 ±(99.9%) 18281.805 ops/s [Average]
[info]   (min, avg, max) = (292234.359, 299905.126, 304083.670), stdev = 4747.727
[info]   CI (99.9%): [281623.321, 318186.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1841.295 ±(99.9%) 118.801 MB/sec [Average]
[info]   (min, avg, max) = (1788.875, 1841.295, 1870.105), stdev = 30.852
[info]   CI (99.9%): [1722.494, 1960.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9661.961 ±(99.9%) 251.976 B/op [Average]
[info]   (min, avg, max) = (9570.992, 9661.961, 9748.757), stdev = 65.437
[info]   CI (99.9%): [9409.985, 9913.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1788.279 ±(99.9%) 684.657 MB/sec [Average]
[info]   (min, avg, max) = (1645.366, 1788.279, 1986.423), stdev = 177.803
[info]   CI (99.9%): [1103.622, 2472.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9395.121 ±(99.9%) 4088.263 B/op [Average]
[info]   (min, avg, max) = (8530.062, 9395.121, 10697.632), stdev = 1061.709
[info]   CI (99.9%): [5306.858, 13483.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.774 ±(99.9%) 5.778 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.774, 3.456), stdev = 1.500
[info]   CI (99.9%): [≈ 0, 6.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.156 ±(99.9%) 31.143 B/op [Average]
[info]   (min, avg, max) = (0.215, 4.156, 18.610), stdev = 8.088
[info]   CI (99.9%): [≈ 0, 35.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 14.000), stdev = 3.347
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.94% complete, ETA 01:25:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 61672.344 ops/s
[info] # Warmup Iteration   2: 469694.717 ops/s
[info] # Warmup Iteration   3: 455539.865 ops/s
[info] Iteration   1: 502624.395 ops/s
[info]                  ·gc.alloc.rate:                   669.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              2096.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2037.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 500964.486 ops/s
[info]                  ·gc.alloc.rate:                   670.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              2106.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2048.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 500923.872 ops/s
[info]                  ·gc.alloc.rate:                   672.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              2112.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2053.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 499817.186 ops/s
[info]                  ·gc.alloc.rate:               666.273 MB/sec
[info]                  ·gc.alloc.rate.norm:          2097.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2060.868 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 501600.957 ops/s
[info]                  ·gc.alloc.rate:                   667.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              2092.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2055.589 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.144 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.998 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala":
[info]   501186.179 ±(99.9%) 3961.020 ops/s [Average]
[info]   (min, avg, max) = (499817.186, 501186.179, 502624.395), stdev = 1028.664
[info]   CI (99.9%): [497225.159, 505147.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   669.177 ±(99.9%) 9.569 MB/sec [Average]
[info]   (min, avg, max) = (666.273, 669.177, 672.336), stdev = 2.485
[info]   CI (99.9%): [659.608, 678.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   2101.161 ±(99.9%) 31.061 B/op [Average]
[info]   (min, avg, max) = (2092.528, 2101.161, 2112.304), stdev = 8.066
[info]   CI (99.9%): [2070.100, 2132.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   653.282 ±(99.9%) 6.951 MB/sec [Average]
[info]   (min, avg, max) = (650.837, 653.282, 655.357), stdev = 1.805
[info]   CI (99.9%): [646.331, 660.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2051.260 ±(99.9%) 33.303 B/op [Average]
[info]   (min, avg, max) = (2037.888, 2051.260, 2060.868), stdev = 8.649
[info]   CI (99.9%): [2017.957, 2084.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.841 ±(99.9%) 7.109 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.841, 4.144), stdev = 1.846
[info]   CI (99.9%): [≈ 0, 7.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.639 ±(99.9%) 22.299 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.639, 12.998), stdev = 5.791
[info]   CI (99.9%): [≈ 0, 24.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.18% complete, ETA 01:25:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 473260.104 ops/s
[info] # Warmup Iteration   2: 1229526.095 ops/s
[info] # Warmup Iteration   3: 1333016.388 ops/s
[info] Iteration   1: 1294400.831 ops/s
[info]                  ·gc.alloc.rate:               894.600 MB/sec
[info]                  ·gc.alloc.rate.norm:          1087.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1206.015 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 1312494.093 ops/s
[info]                  ·gc.alloc.rate:                   910.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              1091.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1191.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1349778.420 ops/s
[info]                  ·gc.alloc.rate:                   918.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              1071.154 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     773.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1320849.104 ops/s
[info]                  ·gc.alloc.rate:                   912.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              1086.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1184.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.269 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.894 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1298961.187 ops/s
[info]                  ·gc.alloc.rate:                   897.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              1087.408 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1199.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala":
[info]   1315296.727 ±(99.9%) 84608.189 ops/s [Average]
[info]   (min, avg, max) = (1294400.831, 1315296.727, 1349778.420), stdev = 21972.478
[info]   CI (99.9%): [1230688.538, 1399904.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   906.641 ±(99.9%) 39.406 MB/sec [Average]
[info]   (min, avg, max) = (894.600, 906.641, 918.751), stdev = 10.234
[info]   CI (99.9%): [867.235, 946.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1084.856 ±(99.9%) 30.176 B/op [Average]
[info]   (min, avg, max) = (1071.154, 1084.856, 1091.109), stdev = 7.837
[info]   CI (99.9%): [1054.680, 1115.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   926.669 ±(99.9%) 566.459 MB/sec [Average]
[info]   (min, avg, max) = (663.532, 926.669, 994.021), stdev = 147.108
[info]   CI (99.9%): [360.209, 1493.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1110.995 ±(99.9%) 726.948 B/op [Average]
[info]   (min, avg, max) = (773.599, 1110.995, 1206.015), stdev = 188.786
[info]   CI (99.9%): [384.047, 1837.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.666 ±(99.9%) 5.602 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.666, 3.269), stdev = 1.455
[info]   CI (99.9%): [≈ 0, 6.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.794 ±(99.9%) 6.674 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.794, 3.894), stdev = 1.733
[info]   CI (99.9%): [≈ 0, 7.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 9.000), stdev = 1.949
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 5.41% complete, ETA 01:24:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14523.671 ops/s
[info] # Warmup Iteration   2: 93243.238 ops/s
[info] # Warmup Iteration   3: 109470.408 ops/s
[info] Iteration   1: 112686.081 ops/s
[info]                  ·gc.alloc.rate:                   3598.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              50246.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3615.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50491.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.872 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 110070.128 ops/s
[info]                  ·gc.alloc.rate:                   3503.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              50090.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3334.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47678.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.786 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 110107.061 ops/s
[info]                  ·gc.alloc.rate:                   3508.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              50138.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3370.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48169.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.785 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 109835.943 ops/s
[info]                  ·gc.alloc.rate:                   3505.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              50231.545 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3388.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48545.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.298 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 112315.392 ops/s
[info]                  ·gc.alloc.rate:                   3572.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              50059.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3396.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47594.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson":
[info]   111002.921 ±(99.9%) 5304.293 ops/s [Average]
[info]   (min, avg, max) = (109835.943, 111002.921, 112686.081), stdev = 1377.508
[info]   CI (99.9%): [105698.628, 116307.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3537.640 ±(99.9%) 171.432 MB/sec [Average]
[info]   (min, avg, max) = (3503.476, 3537.640, 3598.026), stdev = 44.520
[info]   CI (99.9%): [3366.208, 3709.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   50153.396 ±(99.9%) 321.104 B/op [Average]
[info]   (min, avg, max) = (50059.664, 50153.396, 50246.900), stdev = 83.390
[info]   CI (99.9%): [49832.293, 50474.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3421.138 ±(99.9%) 428.399 MB/sec [Average]
[info]   (min, avg, max) = (3334.807, 3421.138, 3615.559), stdev = 111.254
[info]   CI (99.9%): [2992.739, 3849.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   48496.044 ±(99.9%) 4544.959 B/op [Average]
[info]   (min, avg, max) = (47594.237, 48496.044, 50491.748), stdev = 1180.311
[info]   CI (99.9%): [43951.085, 53041.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.007 ±(99.9%) 2.884 B/op [Average]
[info]   (min, avg, max) = (0.292, 1.007, 1.786), stdev = 0.749
[info]   CI (99.9%): [≈ 0, 3.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   51.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.200, 11.000), stdev = 0.447
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 13.600, 14.000), stdev = 0.548
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 5.65% complete, ETA 01:24:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 105082.033 ops/s
[info] # Warmup Iteration   2: 322876.755 ops/s
[info] # Warmup Iteration   3: 343756.969 ops/s
[info] Iteration   1: 346597.253 ops/s
[info]                  ·gc.alloc.rate:                   1196.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              5432.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5986.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 349894.189 ops/s
[info]                  ·gc.alloc.rate:                   1201.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              5402.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4460.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.998 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.484 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 355796.039 ops/s
[info]                  ·gc.alloc.rate:                   1232.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              5449.254 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5827.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.934 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 348738.446 ops/s
[info]                  ·gc.alloc.rate:               1209.084 MB/sec
[info]                  ·gc.alloc.rate.norm:          5456.141 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5929.925 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 355575.373 ops/s
[info]                  ·gc.alloc.rate:               1230.576 MB/sec
[info]                  ·gc.alloc.rate.norm:          5446.462 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4370.971 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce":
[info]   351320.260 ±(99.9%) 16009.700 ops/s [Average]
[info]   (min, avg, max) = (346597.253, 351320.260, 355796.039), stdev = 4157.668
[info]   CI (99.9%): [335310.560, 367329.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1213.967 ±(99.9%) 63.358 MB/sec [Average]
[info]   (min, avg, max) = (1196.734, 1213.967, 1232.068), stdev = 16.454
[info]   CI (99.9%): [1150.609, 1277.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5437.352 ±(99.9%) 81.547 B/op [Average]
[info]   (min, avg, max) = (5402.888, 5437.352, 5456.141), stdev = 21.177
[info]   CI (99.9%): [5355.805, 5518.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1185.944 ±(99.9%) 689.990 MB/sec [Average]
[info]   (min, avg, max) = (987.579, 1185.944, 1318.795), stdev = 179.188
[info]   CI (99.9%): [495.954, 1875.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5314.861 ±(99.9%) 3171.020 B/op [Average]
[info]   (min, avg, max) = (4370.971, 5314.861, 5986.055), stdev = 823.504
[info]   CI (99.9%): [2143.841, 8485.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.691 ±(99.9%) 5.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.691, 2.998), stdev = 1.303
[info]   CI (99.9%): [≈ 0, 5.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.102 ±(99.9%) 22.571 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.102, 13.484), stdev = 5.862
[info]   CI (99.9%): [≈ 0, 25.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 12.000), stdev = 3.391
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.88% complete, ETA 01:24:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 238843.681 ops/s
[info] # Warmup Iteration   2: 849030.291 ops/s
[info] # Warmup Iteration   3: 855741.829 ops/s
[info] Iteration   1: 856795.894 ops/s
[info]                  ·gc.alloc.rate:                   638.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              1172.384 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1198.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 868648.983 ops/s
[info]                  ·gc.alloc.rate:               636.779 MB/sec
[info]                  ·gc.alloc.rate.norm:          1153.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 591.969 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 857111.993 ops/s
[info]                  ·gc.alloc.rate:                   636.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              1169.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1202.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 857898.277 ops/s
[info]                  ·gc.alloc.rate:                   639.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              1173.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1202.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 865504.069 ops/s
[info]                  ·gc.alloc.rate:                   638.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1194.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala":
[info]   861191.843 ±(99.9%) 21180.411 ops/s [Average]
[info]   (min, avg, max) = (856795.894, 861191.843, 868648.983), stdev = 5500.485
[info]   CI (99.9%): [840011.432, 882372.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   638.039 ±(99.9%) 4.879 MB/sec [Average]
[info]   (min, avg, max) = (636.769, 638.039, 639.731), stdev = 1.267
[info]   CI (99.9%): [633.160, 642.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1165.938 ±(99.9%) 32.593 B/op [Average]
[info]   (min, avg, max) = (1153.631, 1165.938, 1173.569), stdev = 8.464
[info]   CI (99.9%): [1133.345, 1198.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   589.311 ±(99.9%) 565.205 MB/sec [Average]
[info]   (min, avg, max) = (326.754, 589.311, 656.848), stdev = 146.782
[info]   CI (99.9%): [24.106, 1154.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1077.914 ±(99.9%) 1046.113 B/op [Average]
[info]   (min, avg, max) = (591.969, 1077.914, 1202.460), stdev = 271.672
[info]   CI (99.9%): [31.801, 2124.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.123 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.076), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 7.000), stdev = 1.643
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.12% complete, ETA 01:24:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1012494.456 ops/s
[info] # Warmup Iteration   2: 2332140.061 ops/s
[info] # Warmup Iteration   3: 2547520.761 ops/s
[info] Iteration   1: 2430083.647 ops/s
[info]                  ·gc.alloc.rate:                   1158.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              750.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     643.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2544883.336 ops/s
[info]                  ·gc.alloc.rate:                   1216.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.552 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     821.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.935 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.815 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2481534.075 ops/s
[info]                  ·gc.alloc.rate:                   1179.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.323 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     629.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2484451.194 ops/s
[info]                  ·gc.alloc.rate:                   1182.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     834.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2493689.067 ops/s
[info]                  ·gc.alloc.rate:                   1192.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.749 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     625.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala":
[info]   2486928.264 ±(99.9%) 157253.463 ops/s [Average]
[info]   (min, avg, max) = (2430083.647, 2486928.264, 2544883.336), stdev = 40838.225
[info]   CI (99.9%): [2329674.801, 2644181.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1186.060 ±(99.9%) 81.777 MB/sec [Average]
[info]   (min, avg, max) = (1158.505, 1186.060, 1216.858), stdev = 21.237
[info]   CI (99.9%): [1104.283, 1267.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   750.477 ±(99.9%) 8.222 B/op [Average]
[info]   (min, avg, max) = (748.323, 750.477, 752.749), stdev = 2.135
[info]   CI (99.9%): [742.255, 758.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1124.102 ±(99.9%) 697.786 MB/sec [Average]
[info]   (min, avg, max) = (990.589, 1124.102, 1327.678), stdev = 181.213
[info]   CI (99.9%): [426.316, 1821.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   710.484 ±(99.9%) 412.810 B/op [Average]
[info]   (min, avg, max) = (625.169, 710.484, 834.088), stdev = 107.205
[info]   CI (99.9%): [297.674, 1123.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.679 ±(99.9%) 4.875 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.679, 2.935), stdev = 1.266
[info]   CI (99.9%): [≈ 0, 5.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.421 ±(99.9%) 3.012 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.421, 1.815), stdev = 0.782
[info]   CI (99.9%): [≈ 0, 3.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 10.000), stdev = 2.408
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 6.35% complete, ETA 01:24:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1314243.037 ops/s
[info] # Warmup Iteration   2: 2667444.584 ops/s
[info] # Warmup Iteration   3: 2906708.760 ops/s
[info] Iteration   1: 2869020.743 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2875885.679 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2907961.381 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2908035.485 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2913428.571 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2894866.372 ±(99.9%) 79795.787 ops/s [Average]
[info]   (min, avg, max) = (2869020.743, 2894866.372, 2913428.571), stdev = 20722.713
[info]   CI (99.9%): [2815070.584, 2974662.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 6.59% complete, ETA 01:23:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 95598.328 ops/s
[info] # Warmup Iteration   2: 442855.192 ops/s
[info] # Warmup Iteration   3: 473194.229 ops/s
[info] Iteration   1: 472649.418 ops/s
[info]                  ·gc.alloc.rate:                   704.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              2347.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2184.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 477800.019 ops/s
[info]                  ·gc.alloc.rate:               711.312 MB/sec
[info]                  ·gc.alloc.rate.norm:          2342.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2164.525 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 475964.497 ops/s
[info]                  ·gc.alloc.rate:                   703.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              2326.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2175.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 474062.999 ops/s
[info]                  ·gc.alloc.rate:                   705.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              2340.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2187.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 475195.359 ops/s
[info]                  ·gc.alloc.rate:                   699.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              2317.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2184.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.376 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson":
[info]   475134.458 ±(99.9%) 7486.839 ops/s [Average]
[info]   (min, avg, max) = (472649.418, 475134.458, 477800.019), stdev = 1944.308
[info]   CI (99.9%): [467647.619, 482621.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   704.940 ±(99.9%) 15.953 MB/sec [Average]
[info]   (min, avg, max) = (699.835, 704.940, 711.312), stdev = 4.143
[info]   CI (99.9%): [688.987, 720.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2334.700 ±(99.9%) 48.304 B/op [Average]
[info]   (min, avg, max) = (2317.123, 2334.700, 2347.042), stdev = 12.544
[info]   CI (99.9%): [2286.396, 2383.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   657.965 ±(99.9%) 5.232 MB/sec [Average]
[info]   (min, avg, max) = (656.165, 657.965, 659.682), stdev = 1.359
[info]   CI (99.9%): [652.734, 663.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2179.142 ±(99.9%) 36.096 B/op [Average]
[info]   (min, avg, max) = (2164.525, 2179.142, 2187.081), stdev = 9.374
[info]   CI (99.9%): [2143.046, 2215.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.700 ±(99.9%) 5.890 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.700, 3.436), stdev = 1.530
[info]   CI (99.9%): [≈ 0, 6.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.317 ±(99.9%) 19.501 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.317, 11.376), stdev = 5.064
[info]   CI (99.9%): [≈ 0, 21.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 6.82% complete, ETA 01:23:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4089.448 ops/s
[info] # Warmup Iteration   2: 14838.547 ops/s
[info] # Warmup Iteration   3: 17001.166 ops/s
[info] Iteration   1: 17298.597 ops/s
[info]                  ·gc.alloc.rate:                   1381.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              125631.246 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120299.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.788 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 17279.892 ops/s
[info]                  ·gc.alloc.rate:                   1389.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              126548.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120492.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 341.274 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 17163.966 ops/s
[info]                  ·gc.alloc.rate:                   1380.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              126599.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120573.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.635 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 16994.209 ops/s
[info]                  ·gc.alloc.rate:               1383.029 MB/sec
[info]                  ·gc.alloc.rate.norm:          128064.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 121679.972 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 17345.272 ops/s
[info]                  ·gc.alloc.rate:                   1400.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              127027.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119580.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.889 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce":
[info]   17216.387 ±(99.9%) 542.906 ops/s [Average]
[info]   (min, avg, max) = (16994.209, 17216.387, 17345.272), stdev = 140.991
[info]   CI (99.9%): [16673.482, 17759.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate":
[info]   1387.017 ±(99.9%) 31.842 MB/sec [Average]
[info]   (min, avg, max) = (1380.821, 1387.017, 1400.227), stdev = 8.269
[info]   CI (99.9%): [1355.175, 1418.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   126774.318 ±(99.9%) 3399.084 B/op [Average]
[info]   (min, avg, max) = (125631.246, 126774.318, 128064.612), stdev = 882.731
[info]   CI (99.9%): [123375.234, 130173.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1318.639 ±(99.9%) 16.239 MB/sec [Average]
[info]   (min, avg, max) = (1314.078, 1318.639, 1323.465), stdev = 4.217
[info]   CI (99.9%): [1302.400, 1334.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   120525.319 ±(99.9%) 2906.969 B/op [Average]
[info]   (min, avg, max) = (119580.818, 120525.319, 121679.972), stdev = 754.931
[info]   CI (99.9%): [117618.349, 123432.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.779 ±(99.9%) 6.393 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.779, 3.748), stdev = 1.660
[info]   CI (99.9%): [≈ 0, 7.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   70.917 ±(99.9%) 582.065 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 70.917, 341.274), stdev = 151.161
[info]   CI (99.9%): [≈ 0, 652.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 14.000), stdev = 3.674
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.06% complete, ETA 01:23:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9007.688 ops/s
[info] # Warmup Iteration   2: 32123.354 ops/s
[info] # Warmup Iteration   3: 36802.463 ops/s
[info] Iteration   1: 35855.992 ops/s
[info]                  ·gc.alloc.rate:                   1013.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              44481.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43228.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.741 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 36776.673 ops/s
[info]                  ·gc.alloc.rate:                   1013.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              43380.121 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42214.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.454 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 35817.790 ops/s
[info]                  ·gc.alloc.rate:                   980.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              43093.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43436.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.914 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 171.962 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 36794.357 ops/s
[info]                  ·gc.alloc.rate:                   1017.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              43493.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41998.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.466 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 37057.574 ops/s
[info]                  ·gc.alloc.rate:                   1017.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              43219.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41586.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.884 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala":
[info]   36460.477 ±(99.9%) 2234.062 ops/s [Average]
[info]   (min, avg, max) = (35817.790, 36460.477, 37057.574), stdev = 580.179
[info]   CI (99.9%): [34226.416, 38694.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1008.654 ±(99.9%) 60.392 MB/sec [Average]
[info]   (min, avg, max) = (980.804, 1008.654, 1017.777), stdev = 15.684
[info]   CI (99.9%): [948.262, 1069.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   43533.513 ±(99.9%) 2123.396 B/op [Average]
[info]   (min, avg, max) = (43093.298, 43533.513, 44481.529), stdev = 551.439
[info]   CI (99.9%): [41410.117, 45656.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   984.381 ±(99.9%) 14.099 MB/sec [Average]
[info]   (min, avg, max) = (979.326, 984.381, 988.627), stdev = 3.661
[info]   CI (99.9%): [970.282, 998.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   42493.161 ±(99.9%) 3090.182 B/op [Average]
[info]   (min, avg, max) = (41586.584, 42493.161, 43436.992), stdev = 802.510
[info]   CI (99.9%): [39402.979, 45583.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.879 ±(99.9%) 6.546 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.879, 3.914), stdev = 1.700
[info]   CI (99.9%): [≈ 0, 7.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   38.501 ±(99.9%) 287.788 B/op [Average]
[info]   (min, avg, max) = (0.884, 38.501, 171.962), stdev = 74.738
[info]   CI (99.9%): [≈ 0, 326.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 10.000), stdev = 2.881
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.29% complete, ETA 01:23:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17763.678 ops/s
[info] # Warmup Iteration   2: 42400.208 ops/s
[info] # Warmup Iteration   3: 44276.582 ops/s
[info] Iteration   1: 45011.600 ops/s
[info]                  ·gc.alloc.rate:               616.096 MB/sec
[info]                  ·gc.alloc.rate.norm:          21539.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11540.858 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 43160.254 ops/s
[info]                  ·gc.alloc.rate:                   605.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              22058.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24096.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.759 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 43431.887 ops/s
[info]                  ·gc.alloc.rate:               602.460 MB/sec
[info]                  ·gc.alloc.rate.norm:          21829.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23994.764 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 43890.814 ops/s
[info]                  ·gc.alloc.rate:               617.706 MB/sec
[info]                  ·gc.alloc.rate.norm:          22148.801 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23766.672 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 45025.316 ops/s
[info]                  ·gc.alloc.rate:               618.748 MB/sec
[info]                  ·gc.alloc.rate.norm:          21619.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23190.445 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala":
[info]   44103.974 ±(99.9%) 3368.160 ops/s [Average]
[info]   (min, avg, max) = (43160.254, 44103.974, 45025.316), stdev = 874.701
[info]   CI (99.9%): [40735.814, 47472.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   612.037 ±(99.9%) 29.355 MB/sec [Average]
[info]   (min, avg, max) = (602.460, 612.037, 618.748), stdev = 7.623
[info]   CI (99.9%): [582.682, 641.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   21839.212 ±(99.9%) 1021.752 B/op [Average]
[info]   (min, avg, max) = (21539.888, 21839.212, 22148.801), stdev = 265.346
[info]   CI (99.9%): [20817.460, 22860.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   595.990 ±(99.9%) 572.365 MB/sec [Average]
[info]   (min, avg, max) = (330.098, 595.990, 663.698), stdev = 148.641
[info]   CI (99.9%): [23.625, 1168.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   21317.911 ±(99.9%) 21089.216 B/op [Average]
[info]   (min, avg, max) = (11540.858, 21317.911, 24096.819), stdev = 5476.802
[info]   CI (99.9%): [228.696, 42407.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 1.307 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.152, 0.759), stdev = 0.339
[info]   CI (99.9%): [≈ 0, 1.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 6.000), stdev = 1.517
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 7.53% complete, ETA 01:23:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4225.441 ops/s
[info] # Warmup Iteration   2: 20891.102 ops/s
[info] # Warmup Iteration   3: 29186.096 ops/s
[info] Iteration   1: 29076.562 ops/s
[info]                  ·gc.alloc.rate:                   1471.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              79642.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71174.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.507 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 29018.582 ops/s
[info]                  ·gc.alloc.rate:                   1488.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              80713.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89091.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.477 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 242.734 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 29366.278 ops/s
[info]                  ·gc.alloc.rate:                   1482.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              79444.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69900.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.347 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 29162.651 ops/s
[info]                  ·gc.alloc.rate:                   1468.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              79233.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1633.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88130.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.370 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 28815.022 ops/s
[info]                  ·gc.alloc.rate:                   1449.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              79143.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71803.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.137 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson":
[info]   29087.819 ±(99.9%) 776.070 ops/s [Average]
[info]   (min, avg, max) = (28815.022, 29087.819, 29366.278), stdev = 201.543
[info]   CI (99.9%): [28311.749, 29863.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1471.963 ±(99.9%) 58.508 MB/sec [Average]
[info]   (min, avg, max) = (1449.083, 1471.963, 1488.567), stdev = 15.194
[info]   CI (99.9%): [1413.454, 1530.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   79635.439 ±(99.9%) 2436.471 B/op [Average]
[info]   (min, avg, max) = (79143.354, 79635.439, 80713.084), stdev = 632.744
[info]   CI (99.9%): [77198.968, 82071.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1442.047 ±(99.9%) 689.444 MB/sec [Average]
[info]   (min, avg, max) = (1304.366, 1442.047, 1643.086), stdev = 179.047
[info]   CI (99.9%): [752.602, 2131.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   78019.857 ±(99.9%) 37345.166 B/op [Average]
[info]   (min, avg, max) = (69900.307, 78019.857, 89091.387), stdev = 9698.421
[info]   CI (99.9%): [40674.692, 115365.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.941 ±(99.9%) 7.611 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.941, 4.477), stdev = 1.977
[info]   CI (99.9%): [≈ 0, 8.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   51.019 ±(99.9%) 412.708 B/op [Average]
[info]   (min, avg, max) = (1.137, 51.019, 242.734), stdev = 107.179
[info]   CI (99.9%): [≈ 0, 463.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 16.000), stdev = 4.494
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 7.76% complete, ETA 01:22:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6613.422 ops/s
[info] # Warmup Iteration   2: 23355.050 ops/s
[info] # Warmup Iteration   3: 24017.965 ops/s
[info] Iteration   1: 24675.540 ops/s
[info]                  ·gc.alloc.rate:                   1784.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              113784.467 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105367.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 219.073 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 24200.145 ops/s
[info]                  ·gc.alloc.rate:                   1774.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              115374.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128234.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.661 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 24480.849 ops/s
[info]                  ·gc.alloc.rate:                   1771.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              113884.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105735.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.059 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 24590.912 ops/s
[info]                  ·gc.alloc.rate:                   1778.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              113808.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105957.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.329 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 24385.802 ops/s
[info]                  ·gc.alloc.rate:                   1777.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              114697.221 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1666.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107544.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.092 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce":
[info]   24466.650 ±(99.9%) 712.211 ops/s [Average]
[info]   (min, avg, max) = (24200.145, 24466.650, 24675.540), stdev = 184.959
[info]   CI (99.9%): [23754.439, 25178.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1777.196 ±(99.9%) 18.543 MB/sec [Average]
[info]   (min, avg, max) = (1771.627, 1777.196, 1784.399), stdev = 4.816
[info]   CI (99.9%): [1758.653, 1795.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   114309.772 ±(99.9%) 2717.083 B/op [Average]
[info]   (min, avg, max) = (113784.467, 114309.772, 115374.322), stdev = 705.618
[info]   CI (99.9%): [111592.689, 117026.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1718.294 ±(99.9%) 547.073 MB/sec [Average]
[info]   (min, avg, max) = (1644.861, 1718.294, 1972.063), stdev = 142.073
[info]   CI (99.9%): [1171.221, 2265.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   110567.881 ±(99.9%) 38163.054 B/op [Average]
[info]   (min, avg, max) = (105367.442, 110567.881, 128234.381), stdev = 9910.824
[info]   CI (99.9%): [72404.827, 148730.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 5.560 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 0.858, 3.436), stdev = 1.444
[info]   CI (99.9%): [≈ 0, 6.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   54.843 ±(99.9%) 354.259 B/op [Average]
[info]   (min, avg, max) = (5.329, 54.843, 219.073), stdev = 92.000
[info]   CI (99.9%): [≈ 0, 409.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 13.000), stdev = 2.608
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.00% complete, ETA 01:22:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5962.925 ops/s
[info] # Warmup Iteration   2: 21488.893 ops/s
[info] # Warmup Iteration   3: 24915.977 ops/s
[info] Iteration   1: 24753.339 ops/s
[info]                  ·gc.alloc.rate:                   1547.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              98388.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104357.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 189.265 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 24599.032 ops/s
[info]                  ·gc.alloc.rate:                   1537.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              98390.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104755.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.245 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 25230.121 ops/s
[info]                  ·gc.alloc.rate:               1569.496 MB/sec
[info]                  ·gc.alloc.rate.norm:          97892.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 81442.796 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 24924.188 ops/s
[info]                  ·gc.alloc.rate:               1578.103 MB/sec
[info]                  ·gc.alloc.rate.norm:          99641.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1639.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 103490.624 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 25192.016 ops/s
[info]                  ·gc.alloc.rate:                   1594.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              99578.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103123.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.300 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala":
[info]   24939.739 ±(99.9%) 1052.841 ops/s [Average]
[info]   (min, avg, max) = (24599.032, 24939.739, 25230.121), stdev = 273.420
[info]   CI (99.9%): [23886.898, 25992.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1565.634 ±(99.9%) 88.021 MB/sec [Average]
[info]   (min, avg, max) = (1537.980, 1565.634, 1594.650), stdev = 22.859
[info]   CI (99.9%): [1477.613, 1653.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   98778.172 ±(99.9%) 3026.143 B/op [Average]
[info]   (min, avg, max) = (97892.788, 98778.172, 99641.056), stdev = 785.880
[info]   CI (99.9%): [95752.029, 101804.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1575.116 ±(99.9%) 580.190 MB/sec [Average]
[info]   (min, avg, max) = (1305.757, 1575.116, 1651.424), stdev = 150.674
[info]   CI (99.9%): [994.926, 2155.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   99433.971 ±(99.9%) 38809.017 B/op [Average]
[info]   (min, avg, max) = (81442.796, 99433.971, 104755.317), stdev = 10078.578
[info]   CI (99.9%): [60624.954, 138242.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.841 ±(99.9%) 5.016 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.841, 2.978), stdev = 1.303
[info]   CI (99.9%): [≈ 0, 5.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   53.562 ±(99.9%) 318.961 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 53.562, 189.265), stdev = 82.833
[info]   CI (99.9%): [≈ 0, 372.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 16.000), stdev = 4.219
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.24% complete, ETA 01:22:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8759.768 ops/s
[info] # Warmup Iteration   2: 24894.659 ops/s
[info] # Warmup Iteration   3: 26653.510 ops/s
[info] Iteration   1: 26642.341 ops/s
[info]                  ·gc.alloc.rate:                   1614.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              95380.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98018.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.665 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 157.397 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 26486.358 ops/s
[info]                  ·gc.alloc.rate:                   1626.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              96617.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98081.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.897 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 26849.602 ops/s
[info]                  ·gc.alloc.rate:                   1616.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              94715.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96524.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.220 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 26941.439 ops/s
[info]                  ·gc.alloc.rate:               1624.554 MB/sec
[info]                  ·gc.alloc.rate.norm:          94884.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1323.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77280.289 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 26871.436 ops/s
[info]                  ·gc.alloc.rate:                   1640.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              96068.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97421.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.219 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala":
[info]   26758.235 ±(99.9%) 725.708 ops/s [Average]
[info]   (min, avg, max) = (26486.358, 26758.235, 26941.439), stdev = 188.464
[info]   CI (99.9%): [26032.527, 27483.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1624.360 ±(99.9%) 39.457 MB/sec [Average]
[info]   (min, avg, max) = (1614.747, 1624.360, 1640.347), stdev = 10.247
[info]   CI (99.9%): [1584.903, 1663.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   95533.281 ±(99.9%) 3089.324 B/op [Average]
[info]   (min, avg, max) = (94715.881, 95533.281, 96617.186), stdev = 802.288
[info]   CI (99.9%): [92443.957, 98622.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1588.733 ±(99.9%) 572.251 MB/sec [Average]
[info]   (min, avg, max) = (1323.150, 1588.733, 1663.438), stdev = 148.612
[info]   CI (99.9%): [1016.482, 2160.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   93465.310 ±(99.9%) 34922.558 B/op [Average]
[info]   (min, avg, max) = (77280.289, 93465.310, 98081.358), stdev = 9069.277
[info]   CI (99.9%): [58542.752, 128387.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.733 ±(99.9%) 4.446 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.733, 2.665), stdev = 1.155
[info]   CI (99.9%): [≈ 0, 5.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   43.347 ±(99.9%) 262.715 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 43.347, 157.397), stdev = 68.226
[info]   CI (99.9%): [≈ 0, 306.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 13.000), stdev = 2.864
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 8.47% complete, ETA 01:22:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11101.115 ops/s
[info] # Warmup Iteration   2: 25122.581 ops/s
[info] # Warmup Iteration   3: 26403.274 ops/s
[info] Iteration   1: 27370.774 ops/s
[info]                  ·gc.alloc.rate:                   1570.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              90295.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95351.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 155.599 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 27303.893 ops/s
[info]                  ·gc.alloc.rate:                   1583.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              91282.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76176.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.196 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 27705.569 ops/s
[info]                  ·gc.alloc.rate:                   1588.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              90253.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93691.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.365 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 27738.936 ops/s
[info]                  ·gc.alloc.rate:                   1588.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              90134.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93957.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.897 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 27648.125 ops/s
[info]                  ·gc.alloc.rate:                   1570.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              89377.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75762.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.110 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc":
[info]   27553.460 ±(99.9%) 775.305 ops/s [Average]
[info]   (min, avg, max) = (27303.893, 27553.460, 27738.936), stdev = 201.344
[info]   CI (99.9%): [26778.155, 28328.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1580.387 ±(99.9%) 36.488 MB/sec [Average]
[info]   (min, avg, max) = (1570.003, 1580.387, 1588.924), stdev = 9.476
[info]   CI (99.9%): [1543.899, 1616.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   90268.637 ±(99.9%) 2613.050 B/op [Average]
[info]   (min, avg, max) = (89377.096, 90268.637, 91282.601), stdev = 678.601
[info]   CI (99.9%): [87655.587, 92881.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1523.304 ±(99.9%) 692.872 MB/sec [Average]
[info]   (min, avg, max) = (1321.672, 1523.304, 1658.438), stdev = 179.937
[info]   CI (99.9%): [830.432, 2216.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   86987.704 ±(99.9%) 38811.333 B/op [Average]
[info]   (min, avg, max) = (75762.299, 86987.704, 95351.205), stdev = 10079.180
[info]   CI (99.9%): [48176.371, 125799.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.749 ±(99.9%) 4.278 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.749, 2.706), stdev = 1.111
[info]   CI (99.9%): [≈ 0, 5.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   43.034 ±(99.9%) 246.096 B/op [Average]
[info]   (min, avg, max) = (2.365, 43.034, 155.599), stdev = 63.910
[info]   CI (99.9%): [≈ 0, 289.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 14.000), stdev = 3.564
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 8.71% complete, ETA 01:22:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1857.040 ops/s
[info] # Warmup Iteration   2: 6160.464 ops/s
[info] # Warmup Iteration   3: 7618.401 ops/s
[info] Iteration   1: 7661.386 ops/s
[info]                  ·gc.alloc.rate:                   1142.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              234701.720 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     203585.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.551 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 7600.095 ops/s
[info]                  ·gc.alloc.rate:               1124.714 MB/sec
[info]                  ·gc.alloc.rate.norm:          232880.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 205246.131 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 7773.622 ops/s
[info]                  ·gc.alloc.rate:                   1166.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              236119.829 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     267302.589 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.997 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 809.190 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 7827.643 ops/s
[info]                  ·gc.alloc.rate:                   1165.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              234259.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     197687.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.669 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 7825.093 ops/s
[info]                  ·gc.alloc.rate:               1170.619 MB/sec
[info]                  ·gc.alloc.rate.norm:          235356.456 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1311.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 263718.137 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson":
[info]   7737.568 ±(99.9%) 393.523 ops/s [Average]
[info]   (min, avg, max) = (7600.095, 7737.568, 7827.643), stdev = 102.197
[info]   CI (99.9%): [7344.045, 8131.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1153.938 ±(99.9%) 75.661 MB/sec [Average]
[info]   (min, avg, max) = (1124.714, 1153.938, 1170.619), stdev = 19.649
[info]   CI (99.9%): [1078.277, 1229.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   234663.777 ±(99.9%) 4693.542 B/op [Average]
[info]   (min, avg, max) = (232880.968, 234663.777, 236119.829), stdev = 1218.898
[info]   CI (99.9%): [229970.235, 239357.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1119.584 ±(99.9%) 690.895 MB/sec [Average]
[info]   (min, avg, max) = (983.367, 1119.584, 1320.458), stdev = 179.423
[info]   CI (99.9%): [428.689, 1810.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   227508.089 ±(99.9%) 134109.285 B/op [Average]
[info]   (min, avg, max) = (197687.850, 227508.089, 267302.589), stdev = 34827.755
[info]   CI (99.9%): [93398.804, 361617.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.845 ±(99.9%) 6.792 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.845, 3.997), stdev = 1.764
[info]   CI (99.9%): [≈ 0, 7.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   171.082 ±(99.9%) 1374.868 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 171.082, 809.190), stdev = 357.049
[info]   CI (99.9%): [≈ 0, 1545.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 11.000), stdev = 3.033
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 8.94% complete, ETA 01:21:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3515.187 ops/s
[info] # Warmup Iteration   2: 15922.958 ops/s
[info] # Warmup Iteration   3: 17977.359 ops/s
[info] Iteration   1: 17883.122 ops/s
[info]                  ·gc.alloc.rate:                   1631.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              143570.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145852.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 267.464 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 17988.967 ops/s
[info]                  ·gc.alloc.rate:                   1644.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              143870.857 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115381.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.558 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 17646.899 ops/s
[info]                  ·gc.alloc.rate:               1620.954 MB/sec
[info]                  ·gc.alloc.rate.norm:          144551.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1643.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 146554.699 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 17828.552 ops/s
[info]                  ·gc.alloc.rate:               1656.981 MB/sec
[info]                  ·gc.alloc.rate.norm:          146259.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1650.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 145646.989 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 17940.605 ops/s
[info]                  ·gc.alloc.rate:               1660.876 MB/sec
[info]                  ·gc.alloc.rate.norm:          145681.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1661.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 145710.224 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce":
[info]   17857.629 ±(99.9%) 509.528 ops/s [Average]
[info]   (min, avg, max) = (17646.899, 17857.629, 17988.967), stdev = 132.323
[info]   CI (99.9%): [17348.101, 18367.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1642.993 ±(99.9%) 64.880 MB/sec [Average]
[info]   (min, avg, max) = (1620.954, 1642.993, 1660.876), stdev = 16.849
[info]   CI (99.9%): [1578.113, 1707.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   144786.751 ±(99.9%) 4450.100 B/op [Average]
[info]   (min, avg, max) = (143570.679, 144786.751, 146259.439), stdev = 1155.677
[info]   CI (99.9%): [140336.651, 149236.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1586.216 ±(99.9%) 575.873 MB/sec [Average]
[info]   (min, avg, max) = (1318.969, 1586.216, 1661.204), stdev = 149.552
[info]   CI (99.9%): [1010.342, 2162.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   139829.173 ±(99.9%) 52643.229 B/op [Average]
[info]   (min, avg, max) = (115381.821, 139829.173, 146554.699), stdev = 13671.279
[info]   CI (99.9%): [87185.944, 192472.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.758 ±(99.9%) 5.068 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.758, 3.039), stdev = 1.316
[info]   CI (99.9%): [≈ 0, 5.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   66.604 ±(99.9%) 445.969 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 66.604, 267.464), stdev = 115.817
[info]   CI (99.9%): [≈ 0, 512.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 15.000), stdev = 3.899
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.18% complete, ETA 01:21:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8301.972 ops/s
[info] # Warmup Iteration   2: 38804.972 ops/s
[info] # Warmup Iteration   3: 42357.659 ops/s
[info] Iteration   1: 40862.610 ops/s
[info]                  ·gc.alloc.rate:                   1185.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              45642.583 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37945.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.802 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 41824.051 ops/s
[info]                  ·gc.alloc.rate:                   1186.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              44645.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49516.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.493 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 42401.728 ops/s
[info]                  ·gc.alloc.rate:                   1200.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              44569.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48671.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.543 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 42812.178 ops/s
[info]                  ·gc.alloc.rate:                   1210.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              44504.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35995.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.296 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 42655.516 ops/s
[info]                  ·gc.alloc.rate:                   1219.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              44995.613 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48269.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala":
[info]   42111.217 ±(99.9%) 3052.402 ops/s [Average]
[info]   (min, avg, max) = (40862.610, 42111.217, 42812.178), stdev = 792.699
[info]   CI (99.9%): [39058.814, 45163.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1200.634 ±(99.9%) 57.631 MB/sec [Average]
[info]   (min, avg, max) = (1185.131, 1200.634, 1219.620), stdev = 14.967
[info]   CI (99.9%): [1143.003, 1258.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   44871.577 ±(99.9%) 1813.157 B/op [Average]
[info]   (min, avg, max) = (44504.432, 44871.577, 45642.583), stdev = 470.871
[info]   CI (99.9%): [43058.420, 46684.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1180.114 ±(99.9%) 695.569 MB/sec [Average]
[info]   (min, avg, max) = (979.266, 1180.114, 1316.212), stdev = 180.637
[info]   CI (99.9%): [484.544, 1875.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   44079.723 ±(99.9%) 25189.444 B/op [Average]
[info]   (min, avg, max) = (35995.673, 44079.723, 49516.228), stdev = 6541.619
[info]   CI (99.9%): [18890.279, 69269.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.849 ±(99.9%) 5.121 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.849, 3.123), stdev = 1.330
[info]   CI (99.9%): [≈ 0, 5.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   31.841 ±(99.9%) 192.667 B/op [Average]
[info]   (min, avg, max) = (0.802, 31.841, 117.493), stdev = 50.035
[info]   CI (99.9%): [≈ 0, 224.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 14.000), stdev = 3.564
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.41% complete, ETA 01:21:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36277.571 ops/s
[info] # Warmup Iteration   2: 64789.743 ops/s
[info] # Warmup Iteration   3: 65534.302 ops/s
[info] Iteration   1: 65987.774 ops/s
[info]                  ·gc.alloc.rate:                   754.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              17994.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15776.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.496 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 64401.345 ops/s
[info]                  ·gc.alloc.rate:                   736.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              17997.827 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16196.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.509 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 66218.784 ops/s
[info]                  ·gc.alloc.rate:                   760.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              18064.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23668.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.495 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 66460.195 ops/s
[info]                  ·gc.alloc.rate:                   752.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              17826.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15743.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.718 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 66624.627 ops/s
[info]                  ·gc.alloc.rate:                   760.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              17963.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15687.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.818 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala":
[info]   65938.545 ±(99.9%) 3436.994 ops/s [Average]
[info]   (min, avg, max) = (64401.345, 65938.545, 66624.627), stdev = 892.576
[info]   CI (99.9%): [62501.551, 69375.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   752.933 ±(99.9%) 37.577 MB/sec [Average]
[info]   (min, avg, max) = (736.532, 752.933, 760.486), stdev = 9.759
[info]   CI (99.9%): [715.356, 790.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   17969.309 ±(99.9%) 338.279 B/op [Average]
[info]   (min, avg, max) = (17826.760, 17969.309, 18064.638), stdev = 87.850
[info]   CI (99.9%): [17631.030, 18307.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   729.887 ±(99.9%) 572.715 MB/sec [Average]
[info]   (min, avg, max) = (661.672, 729.887, 995.938), stdev = 148.732
[info]   CI (99.9%): [157.172, 1302.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   17414.571 ±(99.9%) 13484.819 B/op [Average]
[info]   (min, avg, max) = (15687.965, 17414.571, 23668.636), stdev = 3501.965
[info]   CI (99.9%): [3929.752, 30899.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.566 ±(99.9%) 3.825 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.566, 2.311), stdev = 0.993
[info]   CI (99.9%): [≈ 0, 4.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   13.407 ±(99.9%) 90.574 B/op [Average]
[info]   (min, avg, max) = (0.495, 13.407, 54.718), stdev = 23.522
[info]   CI (99.9%): [≈ 0, 103.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 8.000), stdev = 1.817
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 9.65% complete, ETA 01:21:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2032.095 ops/s
[info] # Warmup Iteration   2: 22309.682 ops/s
[info] # Warmup Iteration   3: 32863.666 ops/s
[info] Iteration   1: 32226.483 ops/s
[info]                  ·gc.alloc.rate:               2126.313 MB/sec
[info]                  ·gc.alloc.rate.norm:          103830.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2289.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 111786.301 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 32170.099 ops/s
[info]                  ·gc.alloc.rate:                   2137.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              104555.367 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97209.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.276 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 33034.690 ops/s
[info]                  ·gc.alloc.rate:               2190.220 MB/sec
[info]                  ·gc.alloc.rate.norm:          104340.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2005.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 95524.160 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 32968.664 ops/s
[info]                  ·gc.alloc.rate:                   2187.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              104410.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96348.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.994 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 32821.705 ops/s
[info]                  ·gc.alloc.rate:               2191.413 MB/sec
[info]                  ·gc.alloc.rate.norm:          105073.531 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2365.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113424.314 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson":
[info]   32644.328 ±(99.9%) 1597.584 ops/s [Average]
[info]   (min, avg, max) = (32170.099, 32644.328, 33034.690), stdev = 414.888
[info]   CI (99.9%): [31046.744, 34241.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2166.545 ±(99.9%) 122.980 MB/sec [Average]
[info]   (min, avg, max) = (2126.313, 2166.545, 2191.413), stdev = 31.937
[info]   CI (99.9%): [2043.565, 2289.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   104442.116 ±(99.9%) 1718.139 B/op [Average]
[info]   (min, avg, max) = (103830.950, 104442.116, 105073.531), stdev = 446.195
[info]   CI (99.9%): [102723.977, 106160.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2133.134 ±(99.9%) 692.064 MB/sec [Average]
[info]   (min, avg, max) = (1987.234, 2133.134, 2365.577), stdev = 179.727
[info]   CI (99.9%): [1441.069, 2825.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   102858.489 ±(99.9%) 34410.508 B/op [Average]
[info]   (min, avg, max) = (95524.160, 102858.489, 113424.314), stdev = 8936.300
[info]   CI (99.9%): [68447.981, 137268.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.530 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.312), stdev = 0.138
[info]   CI (99.9%): [≈ 0, 0.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.254 ±(99.9%) 25.931 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.254, 15.276), stdev = 6.734
[info]   CI (99.9%): [≈ 0, 29.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.400, 11.000), stdev = 1.140
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.88% complete, ETA 01:21:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5899.580 ops/s
[info] # Warmup Iteration   2: 24898.117 ops/s
[info] # Warmup Iteration   3: 27217.146 ops/s
[info] Iteration   1: 26960.570 ops/s
[info]                  ·gc.alloc.rate:                   1755.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              102454.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115212.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 222.366 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 27227.331 ops/s
[info]                  ·gc.alloc.rate:                   1747.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              101001.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94600.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.813 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 27872.062 ops/s
[info]                  ·gc.alloc.rate:                   1778.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              100438.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92512.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.351 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 27873.239 ops/s
[info]                  ·gc.alloc.rate:                   1798.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              101564.677 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93141.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.701 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 27798.214 ops/s
[info]                  ·gc.alloc.rate:               1808.645 MB/sec
[info]                  ·gc.alloc.rate.norm:          102387.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1995.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 112984.488 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala":
[info]   27546.283 ±(99.9%) 1635.155 ops/s [Average]
[info]   (min, avg, max) = (26960.570, 27546.283, 27873.239), stdev = 424.645
[info]   CI (99.9%): [25911.128, 29181.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1777.863 ±(99.9%) 102.160 MB/sec [Average]
[info]   (min, avg, max) = (1747.652, 1777.863, 1808.645), stdev = 26.531
[info]   CI (99.9%): [1675.703, 1880.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   101569.483 ±(99.9%) 3364.293 B/op [Average]
[info]   (min, avg, max) = (100438.737, 101569.483, 102454.251), stdev = 873.696
[info]   CI (99.9%): [98205.190, 104933.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1778.950 ±(99.9%) 724.586 MB/sec [Average]
[info]   (min, avg, max) = (1636.889, 1778.950, 1995.830), stdev = 188.173
[info]   CI (99.9%): [1054.364, 2503.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   101690.380 ±(99.9%) 43818.442 B/op [Average]
[info]   (min, avg, max) = (92512.561, 101690.380, 115212.322), stdev = 11379.510
[info]   CI (99.9%): [57871.937, 145508.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 6.472 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.804, 3.810), stdev = 1.681
[info]   CI (99.9%): [≈ 0, 7.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   46.846 ±(99.9%) 377.896 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 46.846, 222.366), stdev = 98.138
[info]   CI (99.9%): [≈ 0, 424.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.600, 17.000), stdev = 4.219
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 10.12% complete, ETA 01:20:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15898.287 ops/s
[info] # Warmup Iteration   2: 31612.381 ops/s
[info] # Warmup Iteration   3: 33446.340 ops/s
[info] Iteration   1: 32657.920 ops/s
[info]                  ·gc.alloc.rate:                   1493.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              71934.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80059.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 120.378 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 33493.025 ops/s
[info]                  ·gc.alloc.rate:                   1501.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              70558.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62227.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.585 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 33239.715 ops/s
[info]                  ·gc.alloc.rate:                   1495.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              70823.323 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62575.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.899 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 33634.580 ops/s
[info]                  ·gc.alloc.rate:                   1513.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              70797.993 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77534.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.974 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 33812.633 ops/s
[info]                  ·gc.alloc.rate:                   1534.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              71410.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61997.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.752 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala":
[info]   33367.574 ±(99.9%) 1727.502 ops/s [Average]
[info]   (min, avg, max) = (32657.920, 33367.574, 33812.633), stdev = 448.627
[info]   CI (99.9%): [31640.072, 35095.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1507.661 ±(99.9%) 64.449 MB/sec [Average]
[info]   (min, avg, max) = (1493.224, 1507.661, 1534.288), stdev = 16.737
[info]   CI (99.9%): [1443.212, 1572.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   71105.058 ±(99.9%) 2156.628 B/op [Average]
[info]   (min, avg, max) = (70558.322, 71105.058, 71934.939), stdev = 560.069
[info]   CI (99.9%): [68948.430, 73261.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1459.432 ±(99.9%) 703.409 MB/sec [Average]
[info]   (min, avg, max) = (1321.678, 1459.432, 1661.876), stdev = 182.673
[info]   CI (99.9%): [756.023, 2162.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   68878.875 ±(99.9%) 35041.651 B/op [Average]
[info]   (min, avg, max) = (61997.389, 68878.875, 80059.652), stdev = 9100.206
[info]   CI (99.9%): [33837.224, 103920.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.645 ±(99.9%) 4.023 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.645, 2.499), stdev = 1.045
[info]   CI (99.9%): [≈ 0, 4.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   30.918 ±(99.9%) 194.119 B/op [Average]
[info]   (min, avg, max) = (0.974, 30.918, 120.378), stdev = 50.412
[info]   CI (99.9%): [≈ 0, 225.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 13.000), stdev = 3.564
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 10.35% complete, ETA 01:20:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17650.837 ops/s
[info] # Warmup Iteration   2: 32222.753 ops/s
[info] # Warmup Iteration   3: 34107.683 ops/s
[info] Iteration   1: 33326.126 ops/s
[info]                  ·gc.alloc.rate:                   1467.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              69319.897 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78394.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 121.902 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 34743.377 ops/s
[info]                  ·gc.alloc.rate:                   1496.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              67790.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59928.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.606 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 34716.001 ops/s
[info]                  ·gc.alloc.rate:                   1487.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              67447.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59794.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.944 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 34450.461 ops/s
[info]                  ·gc.alloc.rate:                   1502.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              68599.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75513.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.902 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 34293.354 ops/s
[info]                  ·gc.alloc.rate:                   1495.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              68624.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60975.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.911 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   34305.864 ±(99.9%) 2229.205 ops/s [Average]
[info]   (min, avg, max) = (33326.126, 34305.864, 34743.377), stdev = 578.917
[info]   CI (99.9%): [32076.659, 36535.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1490.011 ±(99.9%) 51.412 MB/sec [Average]
[info]   (min, avg, max) = (1467.919, 1490.011, 1502.156), stdev = 13.352
[info]   CI (99.9%): [1438.598, 1541.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   68356.316 ±(99.9%) 2859.411 B/op [Average]
[info]   (min, avg, max) = (67447.084, 68356.316, 69319.897), stdev = 742.580
[info]   CI (99.9%): [65496.905, 71215.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1456.909 ±(99.9%) 702.913 MB/sec [Average]
[info]   (min, avg, max) = (1319.095, 1456.909, 1660.087), stdev = 182.544
[info]   CI (99.9%): [753.995, 2159.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   66921.309 ±(99.9%) 35527.580 B/op [Average]
[info]   (min, avg, max) = (59794.381, 66921.309, 78394.678), stdev = 9226.400
[info]   CI (99.9%): [31393.729, 102448.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.712 ±(99.9%) 4.261 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.712, 2.581), stdev = 1.107
[info]   CI (99.9%): [≈ 0, 4.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   33.253 ±(99.9%) 201.084 B/op [Average]
[info]   (min, avg, max) = (0.944, 33.253, 121.902), stdev = 52.221
[info]   CI (99.9%): [≈ 0, 234.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 13.000), stdev = 3.209
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 10.59% complete, ETA 01:20:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46379.019 ops/s
[info] # Warmup Iteration   2: 292682.982 ops/s
[info] # Warmup Iteration   3: 316365.405 ops/s
[info] Iteration   1: 319323.764 ops/s
[info]                  ·gc.alloc.rate:                   1818.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              8960.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9782.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.031 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 321998.939 ops/s
[info]                  ·gc.alloc.rate:                   1811.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              8851.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8038.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.119 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 319142.643 ops/s
[info]                  ·gc.alloc.rate:                   1808.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              8919.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8121.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.205 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 323361.802 ops/s
[info]                  ·gc.alloc.rate:                   1852.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              9015.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9674.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.405 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 328879.180 ops/s
[info]                  ·gc.alloc.rate:                   1869.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              8947.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1668.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7983.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce":
[info]   322541.265 ±(99.9%) 15286.560 ops/s [Average]
[info]   (min, avg, max) = (319142.643, 322541.265, 328879.180), stdev = 3969.871
[info]   CI (99.9%): [307254.706, 337827.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1832.094 ±(99.9%) 105.484 MB/sec [Average]
[info]   (min, avg, max) = (1808.587, 1832.094, 1869.731), stdev = 27.394
[info]   CI (99.9%): [1726.610, 1937.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   8938.818 ±(99.9%) 231.221 B/op [Average]
[info]   (min, avg, max) = (8851.660, 8938.818, 9015.505), stdev = 60.047
[info]   CI (99.9%): [8707.597, 9170.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1786.611 ±(99.9%) 702.941 MB/sec [Average]
[info]   (min, avg, max) = (1645.076, 1786.611, 1987.820), stdev = 182.552
[info]   CI (99.9%): [1083.670, 2489.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8720.058 ±(99.9%) 3551.920 B/op [Average]
[info]   (min, avg, max) = (7983.483, 8720.058, 9782.179), stdev = 922.422
[info]   CI (99.9%): [5168.138, 12271.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.774 ±(99.9%) 5.779 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.774, 3.456), stdev = 1.501
[info]   CI (99.9%): [≈ 0, 6.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.812 ±(99.9%) 28.490 B/op [Average]
[info]   (min, avg, max) = (0.205, 3.812, 17.031), stdev = 7.399
[info]   CI (99.9%): [≈ 0, 32.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 16.000), stdev = 3.937
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 10.82% complete, ETA 01:20:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.775 ops/s
[info] # Warmup Iteration   2: 1335269.923 ops/s
[info] # Warmup Iteration   3: 1449416.561 ops/s
[info] Iteration   1: 1485991.449 ops/s
[info]                  ·gc.alloc.rate:               476.698 MB/sec
[info]                  ·gc.alloc.rate.norm:          504.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 344.283 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1513770.218 ops/s
[info]                  ·gc.alloc.rate:                   497.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              517.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     676.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1519283.695 ops/s
[info]                  ·gc.alloc.rate:               487.728 MB/sec
[info]                  ·gc.alloc.rate.norm:          505.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 337.089 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1514750.426 ops/s
[info]                  ·gc.alloc.rate:                   494.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              514.260 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     676.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1519545.990 ops/s
[info]                  ·gc.alloc.rate:               488.027 MB/sec
[info]                  ·gc.alloc.rate.norm:          505.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 338.057 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava":
[info]   1510668.356 ±(99.9%) 54055.656 ops/s [Average]
[info]   (min, avg, max) = (1485991.449, 1510668.356, 1519545.990), stdev = 14038.082
[info]   CI (99.9%): [1456612.700, 1564724.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   489.035 ±(99.9%) 31.410 MB/sec [Average]
[info]   (min, avg, max) = (476.698, 489.035, 497.746), stdev = 8.157
[info]   CI (99.9%): [457.626, 520.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   509.435 ±(99.9%) 22.958 B/op [Average]
[info]   (min, avg, max) = (504.847, 509.435, 517.431), stdev = 5.962
[info]   CI (99.9%): [486.477, 532.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   455.800 ±(99.9%) 686.283 MB/sec [Average]
[info]   (min, avg, max) = (325.087, 455.800, 651.521), stdev = 178.226
[info]   CI (99.9%): [≈ 0, 1142.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   474.522 ±(99.9%) 710.377 B/op [Average]
[info]   (min, avg, max) = (337.089, 474.522, 676.902), stdev = 184.483
[info]   CI (99.9%): [≈ 0, 1184.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.014 ±(99.9%) 0.075 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.042), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.078 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.043), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.06% complete, ETA 01:20:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 178896.244 ops/s
[info] # Warmup Iteration   2: 614451.181 ops/s
[info] # Warmup Iteration   3: 640131.170 ops/s
[info] Iteration   1: 675226.499 ops/s
[info]                  ·gc.alloc.rate:               539.633 MB/sec
[info]                  ·gc.alloc.rate.norm:          1257.699 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1521.556 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 673553.048 ops/s
[info]                  ·gc.alloc.rate:               527.639 MB/sec
[info]                  ·gc.alloc.rate.norm:          1232.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 764.218 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 660622.042 ops/s
[info]                  ·gc.alloc.rate:                   532.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              1267.856 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1559.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 659998.349 ops/s
[info]                  ·gc.alloc.rate:                   520.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              1240.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     781.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 660494.220 ops/s
[info]                  ·gc.alloc.rate:               527.354 MB/sec
[info]                  ·gc.alloc.rate.norm:          1256.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1563.409 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala":
[info]   665978.832 ±(99.9%) 29666.858 ops/s [Average]
[info]   (min, avg, max) = (659998.349, 665978.832, 675226.499), stdev = 7704.389
[info]   CI (99.9%): [636311.973, 695645.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   529.395 ±(99.9%) 27.635 MB/sec [Average]
[info]   (min, avg, max) = (520.124, 529.395, 539.633), stdev = 7.177
[info]   CI (99.9%): [501.759, 557.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1251.020 ±(99.9%) 54.657 B/op [Average]
[info]   (min, avg, max) = (1232.803, 1251.020, 1267.856), stdev = 14.194
[info]   CI (99.9%): [1196.363, 1305.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   523.737 ±(99.9%) 690.101 MB/sec [Average]
[info]   (min, avg, max) = (327.085, 523.737, 656.167), stdev = 179.217
[info]   CI (99.9%): [≈ 0, 1213.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1238.131 ±(99.9%) 1636.830 B/op [Average]
[info]   (min, avg, max) = (764.218, 1238.131, 1563.409), stdev = 425.079
[info]   CI (99.9%): [≈ 0, 2874.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.171 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.099), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 7.000), stdev = 1.817
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.29% complete, ETA 01:20:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1059457.458 ops/s
[info] # Warmup Iteration   2: 1805418.449 ops/s
[info] # Warmup Iteration   3: 1781137.005 ops/s
[info] Iteration   1: 1811275.071 ops/s
[info]                  ·gc.alloc.rate:               359.841 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 222.263 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1821258.168 ops/s
[info]                  ·gc.alloc.rate:               361.262 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 284.662 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1874713.385 ops/s
[info]                  ·gc.alloc.rate:                   370.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              310.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     276.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1873757.161 ops/s
[info]                  ·gc.alloc.rate:               368.727 MB/sec
[info]                  ·gc.alloc.rate.norm:          309.687 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 277.233 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 1877659.985 ops/s
[info]                  ·gc.alloc.rate:               374.619 MB/sec
[info]                  ·gc.alloc.rate.norm:          313.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 276.650 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala":
[info]   1851732.754 ±(99.9%) 125529.364 ops/s [Average]
[info]   (min, avg, max) = (1811275.071, 1851732.754, 1877659.985), stdev = 32599.577
[info]   CI (99.9%): [1726203.390, 1977262.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   366.910 ±(99.9%) 23.954 MB/sec [Average]
[info]   (min, avg, max) = (359.841, 366.910, 374.619), stdev = 6.221
[info]   CI (99.9%): [342.956, 390.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   311.800 ±(99.9%) 6.353 B/op [Average]
[info]   (min, avg, max) = (309.687, 311.800, 313.912), stdev = 1.650
[info]   CI (99.9%): [305.447, 318.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   314.996 ±(99.9%) 127.240 MB/sec [Average]
[info]   (min, avg, max) = (255.888, 314.996, 330.150), stdev = 33.044
[info]   CI (99.9%): [187.756, 442.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   267.468 ±(99.9%) 98.190 B/op [Average]
[info]   (min, avg, max) = (222.263, 267.468, 284.662), stdev = 25.500
[info]   CI (99.9%): [169.278, 365.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.030 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 11.53% complete, ETA 01:19:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6044.790 ops/s
[info] # Warmup Iteration   2: 75649.246 ops/s
[info] # Warmup Iteration   3: 97617.606 ops/s
[info] Iteration   1: 100236.537 ops/s
[info]                  ·gc.alloc.rate:                   3331.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              52314.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3265.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51274.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.961 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 100896.179 ops/s
[info]                  ·gc.alloc.rate:                   3387.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              52830.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3312.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51668.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.948 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 99573.006 ops/s
[info]                  ·gc.alloc.rate:                   3346.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              52883.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3019.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47714.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.329 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 100609.959 ops/s
[info]                  ·gc.alloc.rate:                   3396.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              53119.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3379.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52860.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.977 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 100860.263 ops/s
[info]                  ·gc.alloc.rate:               3388.702 MB/sec
[info]                  ·gc.alloc.rate.norm:          52862.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3055.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47659.238 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson":
[info]   100435.189 ±(99.9%) 2114.847 ops/s [Average]
[info]   (min, avg, max) = (99573.006, 100435.189, 100896.179), stdev = 549.219
[info]   CI (99.9%): [98320.341, 102550.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3369.987 ±(99.9%) 111.280 MB/sec [Average]
[info]   (min, avg, max) = (3331.967, 3369.987, 3396.042), stdev = 28.899
[info]   CI (99.9%): [3258.707, 3481.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52802.093 ±(99.9%) 1138.743 B/op [Average]
[info]   (min, avg, max) = (52314.480, 52802.093, 53119.891), stdev = 295.728
[info]   CI (99.9%): [51663.350, 53940.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3206.404 ±(99.9%) 617.117 MB/sec [Average]
[info]   (min, avg, max) = (3019.040, 3206.404, 3379.438), stdev = 160.263
[info]   CI (99.9%): [2589.287, 3823.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   50235.398 ±(99.9%) 9236.200 B/op [Average]
[info]   (min, avg, max) = (47659.238, 50235.398, 52860.184), stdev = 2398.612
[info]   CI (99.9%): [40999.197, 59471.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.222 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.125), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.043 ±(99.9%) 3.479 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.043, 1.961), stdev = 0.903
[info]   CI (99.9%): [≈ 0, 4.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.200, 15.000), stdev = 1.304
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 11.76% complete, ETA 01:19:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 125095.862 ops/s
[info] # Warmup Iteration   2: 353559.846 ops/s
[info] # Warmup Iteration   3: 365231.506 ops/s
[info] Iteration   1: 364509.868 ops/s
[info]                  ·gc.alloc.rate:                   1254.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              5414.404 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5699.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 367040.543 ops/s
[info]                  ·gc.alloc.rate:                   1263.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              5419.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4256.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.081 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.211 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 366698.762 ops/s
[info]                  ·gc.alloc.rate:                   1275.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              5472.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5649.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.608 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 364973.345 ops/s
[info]                  ·gc.alloc.rate:               1269.698 MB/sec
[info]                  ·gc.alloc.rate.norm:          5474.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5667.575 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 363705.482 ops/s
[info]                  ·gc.alloc.rate:               1272.358 MB/sec
[info]                  ·gc.alloc.rate.norm:          5505.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5707.305 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce":
[info]   365385.600 ±(99.9%) 5520.972 ops/s [Average]
[info]   (min, avg, max) = (363705.482, 365385.600, 367040.543), stdev = 1433.779
[info]   CI (99.9%): [359864.628, 370906.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1267.008 ±(99.9%) 31.965 MB/sec [Average]
[info]   (min, avg, max) = (1254.160, 1267.008, 1275.032), stdev = 8.301
[info]   CI (99.9%): [1235.044, 1298.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5457.122 ±(99.9%) 150.591 B/op [Average]
[info]   (min, avg, max) = (5414.404, 5457.122, 5505.138), stdev = 39.108
[info]   CI (99.9%): [5306.531, 5607.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1252.505 ±(99.9%) 559.557 MB/sec [Average]
[info]   (min, avg, max) = (992.590, 1252.505, 1320.177), stdev = 145.315
[info]   CI (99.9%): [692.948, 1812.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5395.927 ±(99.9%) 2455.080 B/op [Average]
[info]   (min, avg, max) = (4256.176, 5395.927, 5707.305), stdev = 637.576
[info]   CI (99.9%): [2940.847, 7851.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.695 ±(99.9%) 5.172 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.695, 3.081), stdev = 1.343
[info]   CI (99.9%): [≈ 0, 5.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.982 ±(99.9%) 22.177 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.982, 13.211), stdev = 5.759
[info]   CI (99.9%): [≈ 0, 25.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 12.000), stdev = 2.915
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 12.00% complete, ETA 01:19:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.682 ops/s
[info] # Warmup Iteration   2: 1272249.422 ops/s
[info] # Warmup Iteration   3: 1643703.536 ops/s
[info] Iteration   1: 1668563.305 ops/s
[info]                  ·gc.alloc.rate:               794.054 MB/sec
[info]                  ·gc.alloc.rate.norm:          748.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 612.602 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 1654158.046 ops/s
[info]                  ·gc.alloc.rate:                   788.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              749.545 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     618.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1664318.178 ops/s
[info]                  ·gc.alloc.rate:                   797.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     924.734 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1695858.668 ops/s
[info]                  ·gc.alloc.rate:               809.266 MB/sec
[info]                  ·gc.alloc.rate.norm:          750.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 606.469 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1695667.503 ops/s
[info]                  ·gc.alloc.rate:                   810.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     909.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.421 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.103 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava":
[info]   1675713.140 ±(99.9%) 73304.123 ops/s [Average]
[info]   (min, avg, max) = (1654158.046, 1675713.140, 1695858.668), stdev = 19036.848
[info]   CI (99.9%): [1602409.017, 1749017.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   799.794 ±(99.9%) 37.786 MB/sec [Average]
[info]   (min, avg, max) = (788.024, 799.794, 810.584), stdev = 9.813
[info]   CI (99.9%): [762.009, 837.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   751.040 ±(99.9%) 7.524 B/op [Average]
[info]   (min, avg, max) = (748.892, 751.040, 753.668), stdev = 1.954
[info]   CI (99.9%): [743.515, 758.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   782.292 ±(99.9%) 691.396 MB/sec [Average]
[info]   (min, avg, max) = (649.545, 782.292, 979.994), stdev = 179.553
[info]   CI (99.9%): [90.897, 1473.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   734.366 ±(99.9%) 642.896 B/op [Average]
[info]   (min, avg, max) = (606.469, 734.366, 924.734), stdev = 166.958
[info]   CI (99.9%): [91.471, 1377.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.901 ±(99.9%) 7.578 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.901, 4.421), stdev = 1.968
[info]   CI (99.9%): [≈ 0, 8.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.836 ±(99.9%) 7.032 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.836, 4.103), stdev = 1.826
[info]   CI (99.9%): [≈ 0, 7.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 9.000), stdev = 1.304
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.24% complete, ETA 01:19:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 317202.392 ops/s
[info] # Warmup Iteration   2: 956284.697 ops/s
[info] # Warmup Iteration   3: 995400.471 ops/s
[info] Iteration   1: 1000220.090 ops/s
[info]                  ·gc.alloc.rate:               723.671 MB/sec
[info]                  ·gc.alloc.rate.norm:          1138.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1029.288 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 999449.429 ops/s
[info]                  ·gc.alloc.rate:                   737.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              1161.384 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1548.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1005709.834 ops/s
[info]                  ·gc.alloc.rate:               725.853 MB/sec
[info]                  ·gc.alloc.rate.norm:          1135.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1028.847 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 1045078.928 ops/s
[info]                  ·gc.alloc.rate:               760.266 MB/sec
[info]                  ·gc.alloc.rate.norm:          1144.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 991.097 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1042441.990 ops/s
[info]                  ·gc.alloc.rate:                   759.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              1146.625 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     995.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.539 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.343 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala":
[info]   1018580.054 ±(99.9%) 89071.770 ops/s [Average]
[info]   (min, avg, max) = (999449.429, 1018580.054, 1045078.928), stdev = 23131.656
[info]   CI (99.9%): [929508.284, 1107651.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   741.396 ±(99.9%) 68.202 MB/sec [Average]
[info]   (min, avg, max) = (723.671, 741.396, 760.266), stdev = 17.712
[info]   CI (99.9%): [673.194, 809.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1145.447 ±(99.9%) 38.318 B/op [Average]
[info]   (min, avg, max) = (1135.779, 1145.447, 1161.384), stdev = 9.951
[info]   CI (99.9%): [1107.129, 1183.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   722.614 ±(99.9%) 562.042 MB/sec [Average]
[info]   (min, avg, max) = (654.194, 722.614, 983.693), stdev = 145.961
[info]   CI (99.9%): [160.571, 1284.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1118.719 ±(99.9%) 928.240 B/op [Average]
[info]   (min, avg, max) = (991.097, 1118.719, 1548.747), stdev = 241.061
[info]   CI (99.9%): [190.479, 2046.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.720 ±(99.9%) 6.068 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.720, 3.539), stdev = 1.576
[info]   CI (99.9%): [≈ 0, 6.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.088 ±(99.9%) 9.159 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.088, 5.343), stdev = 2.379
[info]   CI (99.9%): [≈ 0, 10.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 9.000), stdev = 1.517
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.47% complete, ETA 01:19:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1113456.849 ops/s
[info] # Warmup Iteration   2: 2655142.266 ops/s
[info] # Warmup Iteration   3: 2736520.946 ops/s
[info] Iteration   1: 2724547.672 ops/s
[info]                  ·gc.alloc.rate:                   1290.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.587 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     765.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 2717680.579 ops/s
[info]                  ·gc.alloc.rate:                   1303.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              754.525 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     767.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.868 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2750848.290 ops/s
[info]                  ·gc.alloc.rate:                   1309.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              749.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     754.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2763777.987 ops/s
[info]                  ·gc.alloc.rate:               1330.862 MB/sec
[info]                  ·gc.alloc.rate.norm:          757.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 751.458 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 2783542.566 ops/s
[info]                  ·gc.alloc.rate:               1339.804 MB/sec
[info]                  ·gc.alloc.rate.norm:          757.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1324.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 748.771 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala":
[info]   2748079.419 ±(99.9%) 105270.913 ops/s [Average]
[info]   (min, avg, max) = (2717680.579, 2748079.419, 2783542.566), stdev = 27338.522
[info]   CI (99.9%): [2642808.506, 2853350.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1314.847 ±(99.9%) 77.639 MB/sec [Average]
[info]   (min, avg, max) = (1290.732, 1314.847, 1339.804), stdev = 20.163
[info]   CI (99.9%): [1237.208, 1392.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   752.907 ±(99.9%) 20.368 B/op [Average]
[info]   (min, avg, max) = (745.587, 752.907, 757.592), stdev = 5.290
[info]   CI (99.9%): [732.538, 773.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1323.087 ±(99.9%) 11.470 MB/sec [Average]
[info]   (min, avg, max) = (1319.670, 1323.087, 1325.674), stdev = 2.979
[info]   CI (99.9%): [1311.617, 1334.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   757.718 ±(99.9%) 32.776 B/op [Average]
[info]   (min, avg, max) = (748.771, 757.718, 767.647), stdev = 8.512
[info]   CI (99.9%): [724.942, 790.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.666 ±(99.9%) 5.513 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.666, 3.227), stdev = 1.432
[info]   CI (99.9%): [≈ 0, 6.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.386 ±(99.9%) 3.192 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.386, 1.868), stdev = 0.829
[info]   CI (99.9%): [≈ 0, 3.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 11.000), stdev = 2.510
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 12.71% complete, ETA 01:18:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1749540.013 ops/s
[info] # Warmup Iteration   2: 3204299.493 ops/s
[info] # Warmup Iteration   3: 3215311.997 ops/s
[info] Iteration   1: 3213376.148 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3197334.284 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3211683.026 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3188042.345 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3215689.591 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   3205225.078 ±(99.9%) 46174.102 ops/s [Average]
[info]   (min, avg, max) = (3188042.345, 3205225.078, 3215689.591), stdev = 11991.268
[info]   CI (99.9%): [3159050.976, 3251399.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 12.94% complete, ETA 01:18:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 126673.573 ops/s
[info] # Warmup Iteration   2: 440101.932 ops/s
[info] # Warmup Iteration   3: 456021.280 ops/s
[info] Iteration   1: 465007.386 ops/s
[info]                  ·gc.alloc.rate:               558.156 MB/sec
[info]                  ·gc.alloc.rate.norm:          1888.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2222.916 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 462607.948 ops/s
[info]                  ·gc.alloc.rate:                   556.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              1893.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2236.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 489885.226 ops/s
[info]                  ·gc.alloc.rate:               579.652 MB/sec
[info]                  ·gc.alloc.rate.norm:          1861.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1057.216 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 486607.074 ops/s
[info]                  ·gc.alloc.rate:                   583.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              1888.633 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2129.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 481567.207 ops/s
[info]                  ·gc.alloc.rate:                   572.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              1870.698 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2154.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson":
[info]   477134.968 ±(99.9%) 48327.007 ops/s [Average]
[info]   (min, avg, max) = (462607.948, 477134.968, 489885.226), stdev = 12550.370
[info]   CI (99.9%): [428807.961, 525461.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   570.155 ±(99.9%) 47.773 MB/sec [Average]
[info]   (min, avg, max) = (556.550, 570.155, 583.983), stdev = 12.406
[info]   CI (99.9%): [522.383, 617.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1880.605 ±(99.9%) 52.149 B/op [Average]
[info]   (min, avg, max) = (1861.936, 1880.605, 1893.271), stdev = 13.543
[info]   CI (99.9%): [1828.455, 1932.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   592.278 ±(99.9%) 566.457 MB/sec [Average]
[info]   (min, avg, max) = (329.129, 592.278, 659.188), stdev = 147.107
[info]   CI (99.9%): [25.821, 1158.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1960.175 ±(99.9%) 1951.413 B/op [Average]
[info]   (min, avg, max) = (1057.216, 1960.175, 2236.789), stdev = 506.776
[info]   CI (99.9%): [8.762, 3911.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.055 ±(99.9%) 0.227 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.055, 0.142), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 7.000), stdev = 1.225
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 13.18% complete, ETA 01:18:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46537.448 ops/s
[info] # Warmup Iteration   2: 144102.806 ops/s
[info] # Warmup Iteration   3: 152430.118 ops/s
[info] Iteration   1: 158877.720 ops/s
[info]                  ·gc.alloc.rate:                   1997.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              19783.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19631.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.643 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.087 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 161472.666 ops/s
[info]                  ·gc.alloc.rate:                   2030.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              19789.640 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1971.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19218.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.203 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 158292.126 ops/s
[info]                  ·gc.alloc.rate:               2019.303 MB/sec
[info]                  ·gc.alloc.rate.norm:          20076.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1981.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19700.663 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 156080.044 ops/s
[info]                  ·gc.alloc.rate:                   1993.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              20097.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20137.925 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 156183.533 ops/s
[info]                  ·gc.alloc.rate:                   1989.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              20044.563 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20275.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce":
[info]   158181.218 ±(99.9%) 8553.442 ops/s [Average]
[info]   (min, avg, max) = (156080.044, 158181.218, 161472.666), stdev = 2221.302
[info]   CI (99.9%): [149627.776, 166734.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate":
[info]   2006.031 ±(99.9%) 68.946 MB/sec [Average]
[info]   (min, avg, max) = (1989.335, 2006.031, 2030.505), stdev = 17.905
[info]   CI (99.9%): [1937.085, 2074.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   19958.332 ±(99.9%) 607.277 B/op [Average]
[info]   (min, avg, max) = (19783.997, 19958.332, 20097.423), stdev = 157.708
[info]   CI (99.9%): [19351.056, 20565.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1989.051 ±(99.9%) 61.226 MB/sec [Average]
[info]   (min, avg, max) = (1971.914, 1989.051, 2012.208), stdev = 15.900
[info]   CI (99.9%): [1927.825, 2050.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19792.658 ±(99.9%) 1629.159 B/op [Average]
[info]   (min, avg, max) = (19218.602, 19792.658, 20275.033), stdev = 423.087
[info]   CI (99.9%): [18163.499, 21421.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.741 ±(99.9%) 6.247 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.741, 3.643), stdev = 1.622
[info]   CI (99.9%): [≈ 0, 6.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7.342 ±(99.9%) 61.876 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.342, 36.087), stdev = 16.069
[info]   CI (99.9%): [≈ 0, 69.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.000, 13.000), stdev = 2.236
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.41% complete, ETA 01:18:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 95197.820 ops/s
[info] # Warmup Iteration   2: 412826.771 ops/s
[info] # Warmup Iteration   3: 448526.941 ops/s
[info] Iteration   1: 450498.566 ops/s
[info]                  ·gc.alloc.rate:                   367.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              1282.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     893.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 453225.362 ops/s
[info]                  ·gc.alloc.rate:               377.517 MB/sec
[info]                  ·gc.alloc.rate.norm:          1310.831 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1133.423 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 452145.692 ops/s
[info]                  ·gc.alloc.rate:                   374.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              1302.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1136.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 451779.439 ops/s
[info]                  ·gc.alloc.rate:                   374.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1139.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 452014.915 ops/s
[info]                  ·gc.alloc.rate:               370.240 MB/sec
[info]                  ·gc.alloc.rate.norm:          1289.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1138.761 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala":
[info]   451932.795 ±(99.9%) 3754.787 ops/s [Average]
[info]   (min, avg, max) = (450498.566, 451932.795, 453225.362), stdev = 975.106
[info]   CI (99.9%): [448178.007, 455687.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   372.733 ±(99.9%) 15.658 MB/sec [Average]
[info]   (min, avg, max) = (367.121, 372.733, 377.517), stdev = 4.066
[info]   CI (99.9%): [357.075, 388.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1297.879 ±(99.9%) 45.440 B/op [Average]
[info]   (min, avg, max) = (1282.301, 1297.879, 1310.831), stdev = 11.801
[info]   CI (99.9%): [1252.439, 1343.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   312.577 ±(99.9%) 122.136 MB/sec [Average]
[info]   (min, avg, max) = (255.841, 312.577, 327.098), stdev = 31.718
[info]   CI (99.9%): [190.441, 434.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1088.278 ±(99.9%) 419.125 B/op [Average]
[info]   (min, avg, max) = (893.615, 1088.278, 1139.413), stdev = 108.846
[info]   CI (99.9%): [669.153, 1507.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.280 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.073, 0.145), stdev = 0.073
[info]   CI (99.9%): [≈ 0, 0.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.65% complete, ETA 01:17:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 578479.852 ops/s
[info] # Warmup Iteration   2: 1195604.024 ops/s
[info] # Warmup Iteration   3: 1271148.735 ops/s
[info] Iteration   1: 1268503.640 ops/s
[info]                  ·gc.alloc.rate:               252.040 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 317.383 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1273142.842 ops/s
[info]                  ·gc.alloc.rate:      252.075 MB/sec
[info]                  ·gc.alloc.rate.norm: 311.578 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1262860.152 ops/s
[info]                  ·gc.alloc.rate:               248.272 MB/sec
[info]                  ·gc.alloc.rate.norm:          309.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 318.779 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1268189.773 ops/s
[info]                  ·gc.alloc.rate:                   255.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              317.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     409.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1266985.663 ops/s
[info]                  ·gc.alloc.rate:               256.421 MB/sec
[info]                  ·gc.alloc.rate.norm:          318.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 409.583 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala":
[info]   1267936.414 ±(99.9%) 14169.794 ops/s [Average]
[info]   (min, avg, max) = (1262860.152, 1267936.414, 1273142.842), stdev = 3679.850
[info]   CI (99.9%): [1253766.620, 1282106.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   252.901 ±(99.9%) 12.635 MB/sec [Average]
[info]   (min, avg, max) = (248.272, 252.901, 256.421), stdev = 3.281
[info]   CI (99.9%): [240.267, 265.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   313.884 ±(99.9%) 14.874 B/op [Average]
[info]   (min, avg, max) = (309.392, 313.884, 318.485), stdev = 3.863
[info]   CI (99.9%): [299.010, 328.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   234.234 ±(99.9%) 523.922 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 234.234, 329.767), stdev = 136.061
[info]   CI (99.9%): [≈ 0, 758.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   290.988 ±(99.9%) 650.578 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 290.988, 409.583), stdev = 168.953
[info]   CI (99.9%): [≈ 0, 941.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.044 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.026), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 13.88% complete, ETA 01:17:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8230.042 ops/s
[info] # Warmup Iteration   2: 64025.152 ops/s
[info] # Warmup Iteration   3: 82457.244 ops/s
[info] Iteration   1: 87674.159 ops/s
[info]                  ·gc.alloc.rate:                   3497.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              62776.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3598.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64588.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.109 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 87035.014 ops/s
[info]                  ·gc.alloc.rate:                   3500.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              63294.695 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3318.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59996.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.376 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 87906.098 ops/s
[info]                  ·gc.alloc.rate:                   3530.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              63194.482 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3360.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60157.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.745 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 86173.175 ops/s
[info]                  ·gc.alloc.rate:                   3464.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              63264.691 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3384.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61801.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.380 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 84812.758 ops/s
[info]                  ·gc.alloc.rate:               3398.853 MB/sec
[info]                  ·gc.alloc.rate.norm:          63065.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3055.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56698.826 B/op
[info]                  ·gc.count:                    9.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson":
[info]   86720.241 ±(99.9%) 4852.833 ops/s [Average]
[info]   (min, avg, max) = (84812.758, 86720.241, 87906.098), stdev = 1260.265
[info]   CI (99.9%): [81867.408, 91573.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3478.428 ±(99.9%) 192.945 MB/sec [Average]
[info]   (min, avg, max) = (3398.853, 3478.428, 3530.066), stdev = 50.107
[info]   CI (99.9%): [3285.483, 3671.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63119.204 ±(99.9%) 812.521 B/op [Average]
[info]   (min, avg, max) = (62776.232, 63119.204, 63294.695), stdev = 211.009
[info]   CI (99.9%): [62306.683, 63931.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3343.555 ±(99.9%) 747.240 MB/sec [Average]
[info]   (min, avg, max) = (3055.707, 3343.555, 3598.778), stdev = 194.056
[info]   CI (99.9%): [2596.315, 4090.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   60648.546 ±(99.9%) 11080.773 B/op [Average]
[info]   (min, avg, max) = (56698.826, 60648.546, 64588.801), stdev = 2877.642
[info]   CI (99.9%): [49567.773, 71729.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.363 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.229), stdev = 0.094
[info]   CI (99.9%): [≈ 0, 0.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.122 ±(99.9%) 6.508 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.122, 4.109), stdev = 1.690
[info]   CI (99.9%): [≈ 0, 7.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.count":
[info]   50.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 10.000, 11.000), stdev = 0.707
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.time":
[info]   73.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 14.600, 16.000), stdev = 0.894
[info]   CI (99.9%): [73.000, 73.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 14.12% complete, ETA 01:17:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77045.671 ops/s
[info] # Warmup Iteration   2: 277248.378 ops/s
[info] # Warmup Iteration   3: 299706.726 ops/s
[info] Iteration   1: 302528.159 ops/s
[info]                  ·gc.alloc.rate:                   1703.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              8861.246 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8596.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.461 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 305530.072 ops/s
[info]                  ·gc.alloc.rate:                   1714.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              8829.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8471.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.930 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 304612.063 ops/s
[info]                  ·gc.alloc.rate:               1728.913 MB/sec
[info]                  ·gc.alloc.rate.norm:          8932.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1643.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8490.647 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 295252.643 ops/s
[info]                  ·gc.alloc.rate:                   1678.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              8947.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8812.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 302163.704 ops/s
[info]                  ·gc.alloc.rate:                   1717.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              8944.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1664.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8666.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce":
[info]   302017.328 ±(99.9%) 15536.211 ops/s [Average]
[info]   (min, avg, max) = (295252.643, 302017.328, 305530.072), stdev = 4034.705
[info]   CI (99.9%): [286481.117, 317553.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1708.519 ±(99.9%) 72.728 MB/sec [Average]
[info]   (min, avg, max) = (1678.919, 1708.519, 1728.913), stdev = 18.887
[info]   CI (99.9%): [1635.792, 1781.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   8902.864 ±(99.9%) 208.736 B/op [Average]
[info]   (min, avg, max) = (8829.006, 8902.864, 8947.111), stdev = 54.208
[info]   CI (99.9%): [8694.128, 9111.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1651.649 ±(99.9%) 31.847 MB/sec [Average]
[info]   (min, avg, max) = (1643.397, 1651.649, 1664.015), stdev = 8.271
[info]   CI (99.9%): [1619.802, 1683.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8607.632 ±(99.9%) 537.351 B/op [Average]
[info]   (min, avg, max) = (8471.699, 8607.632, 8812.757), stdev = 139.548
[info]   CI (99.9%): [8070.281, 9144.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.716 ±(99.9%) 5.304 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.716, 3.164), stdev = 1.377
[info]   CI (99.9%): [≈ 0, 6.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.722 ±(99.9%) 27.596 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.722, 16.461), stdev = 7.167
[info]   CI (99.9%): [≈ 0, 31.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 14.000), stdev = 3.493
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.35% complete, ETA 01:17:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 709943.432 ops/s
[info] # Warmup Iteration   2: 1754132.343 ops/s
[info] # Warmup Iteration   3: 1929035.581 ops/s
[info] Iteration   1: 1913487.308 ops/s
[info]                  ·gc.alloc.rate:               1031.169 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 808.984 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 1924473.710 ops/s
[info]                  ·gc.alloc.rate:                   1018.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     806.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1920101.904 ops/s
[info]                  ·gc.alloc.rate:                   1007.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              826.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     810.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.373 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.764 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1936205.421 ops/s
[info]                  ·gc.alloc.rate:                   1026.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              834.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     800.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1916043.181 ops/s
[info]                  ·gc.alloc.rate:                   1016.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              834.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     807.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala":
[info]   1922062.305 ±(99.9%) 34411.391 ops/s [Average]
[info]   (min, avg, max) = (1913487.308, 1922062.305, 1936205.421), stdev = 8936.529
[info]   CI (99.9%): [1887650.914, 1956473.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1020.028 ±(99.9%) 35.506 MB/sec [Average]
[info]   (min, avg, max) = (1007.831, 1020.028, 1031.169), stdev = 9.221
[info]   CI (99.9%): [984.521, 1055.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   835.180 ±(99.9%) 30.948 B/op [Average]
[info]   (min, avg, max) = (826.010, 835.180, 848.083), stdev = 8.037
[info]   CI (99.9%): [804.232, 866.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   985.204 ±(99.9%) 8.347 MB/sec [Average]
[info]   (min, avg, max) = (983.244, 985.204, 988.607), stdev = 2.168
[info]   CI (99.9%): [976.857, 993.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   806.669 ±(99.9%) 14.893 B/op [Average]
[info]   (min, avg, max) = (800.296, 806.669, 810.254), stdev = 3.868
[info]   CI (99.9%): [791.776, 821.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.737 ±(99.9%) 5.679 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.737, 3.373), stdev = 1.475
[info]   CI (99.9%): [≈ 0, 6.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.604 ±(99.9%) 4.655 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.604, 2.764), stdev = 1.209
[info]   CI (99.9%): [≈ 0, 5.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 10.000), stdev = 2.550
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.59% complete, ETA 01:17:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1355697.839 ops/s
[info] # Warmup Iteration   2: 2583361.503 ops/s
[info] # Warmup Iteration   3: 2806184.560 ops/s
[info] Iteration   1: 2838255.881 ops/s
[info]                  ·gc.alloc.rate:               778.713 MB/sec
[info]                  ·gc.alloc.rate.norm:          431.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 366.414 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 2801342.661 ops/s
[info]                  ·gc.alloc.rate:                   774.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              434.828 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     371.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2856005.569 ops/s
[info]                  ·gc.alloc.rate:                   792.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     547.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2854768.400 ops/s
[info]                  ·gc.alloc.rate:                   795.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              438.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     365.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.769 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.526 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2841344.256 ops/s
[info]                  ·gc.alloc.rate:                   785.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              435.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     366.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.288 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala":
[info]   2838343.353 ±(99.9%) 85233.294 ops/s [Average]
[info]   (min, avg, max) = (2801342.661, 2838343.353, 2856005.569), stdev = 22134.816
[info]   CI (99.9%): [2753110.059, 2923576.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   785.101 ±(99.9%) 34.073 MB/sec [Average]
[info]   (min, avg, max) = (774.039, 785.101, 795.044), stdev = 8.849
[info]   CI (99.9%): [751.028, 819.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   435.296 ±(99.9%) 9.243 B/op [Average]
[info]   (min, avg, max) = (431.777, 435.296, 438.271), stdev = 2.400
[info]   CI (99.9%): [426.053, 444.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   728.401 ±(99.9%) 571.710 MB/sec [Average]
[info]   (min, avg, max) = (660.830, 728.401, 993.989), stdev = 148.471
[info]   CI (99.9%): [156.692, 1300.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   403.653 ±(99.9%) 310.205 B/op [Average]
[info]   (min, avg, max) = (365.764, 403.653, 547.702), stdev = 80.559
[info]   CI (99.9%): [93.448, 713.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.672 ±(99.9%) 4.588 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.672, 2.769), stdev = 1.192
[info]   CI (99.9%): [≈ 0, 5.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.371 ±(99.9%) 2.529 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.371, 1.526), stdev = 0.657
[info]   CI (99.9%): [≈ 0, 2.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 8.000), stdev = 1.789
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 14.82% complete, ETA 01:16:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1880692.255 ops/s
[info] # Warmup Iteration   2: 2780237.857 ops/s
[info] # Warmup Iteration   3: 3048145.520 ops/s
[info] Iteration   1: 3046740.654 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3045662.012 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3047610.403 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3049527.384 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3034413.022 ops/s
[info]                  ·gc.alloc.rate:      1.233 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.639 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc":
[info]   3044790.695 ±(99.9%) 22994.875 ops/s [Average]
[info]   (min, avg, max) = (3034413.022, 3044790.695, 3049527.384), stdev = 5971.696
[info]   CI (99.9%): [3021795.820, 3067785.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.247 ±(99.9%) 2.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.247, 1.233), stdev = 0.551
[info]   CI (99.9%): [≈ 0, 2.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.128 ±(99.9%) 1.101 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.128, 0.639), stdev = 0.286
[info]   CI (99.9%): [≈ 0, 1.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 15.06% complete, ETA 01:16:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9042.601 ops/s
[info] # Warmup Iteration   2: 39938.515 ops/s
[info] # Warmup Iteration   3: 47233.313 ops/s
[info] Iteration   1: 47518.727 ops/s
[info]                  ·gc.alloc.rate:                   2165.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              71710.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2300.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76204.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 133.755 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 48516.602 ops/s
[info]                  ·gc.alloc.rate:                   2194.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              71174.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1963.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63700.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.675 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 48066.711 ops/s
[info]                  ·gc.alloc.rate:               2196.184 MB/sec
[info]                  ·gc.alloc.rate.norm:          71901.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2309.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75603.992 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 48625.132 ops/s
[info]                  ·gc.alloc.rate:                   2208.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              71486.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64668.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.674 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 48736.567 ops/s
[info]                  ·gc.alloc.rate:               2213.475 MB/sec
[info]                  ·gc.alloc.rate.norm:          71475.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2012.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 64986.113 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson":
[info]   48292.748 ±(99.9%) 1932.784 ops/s [Average]
[info]   (min, avg, max) = (47518.727, 48292.748, 48736.567), stdev = 501.938
[info]   CI (99.9%): [46359.963, 50225.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2195.599 ±(99.9%) 72.592 MB/sec [Average]
[info]   (min, avg, max) = (2165.200, 2195.599, 2213.475), stdev = 18.852
[info]   CI (99.9%): [2123.006, 2268.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   71549.677 ±(99.9%) 1053.481 B/op [Average]
[info]   (min, avg, max) = (71174.988, 71549.677, 71901.455), stdev = 273.586
[info]   CI (99.9%): [70496.196, 72603.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2116.945 ±(99.9%) 664.954 MB/sec [Average]
[info]   (min, avg, max) = (1963.847, 2116.945, 2309.276), stdev = 172.687
[info]   CI (99.9%): [1451.991, 2781.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   69032.741 ±(99.9%) 24237.182 B/op [Average]
[info]   (min, avg, max) = (63700.662, 69032.741, 76204.715), stdev = 6294.319
[info]   CI (99.9%): [44795.559, 93269.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.816 ±(99.9%) 6.937 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.816, 4.039), stdev = 1.801
[info]   CI (99.9%): [≈ 0, 7.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   27.021 ±(99.9%) 229.758 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 27.021, 133.755), stdev = 59.667
[info]   CI (99.9%): [≈ 0, 256.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.800, 16.000), stdev = 3.633
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 15.29% complete, ETA 01:16:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64801.277 ops/s
[info] # Warmup Iteration   2: 208445.794 ops/s
[info] # Warmup Iteration   3: 233891.840 ops/s
[info] Iteration   1: 235607.289 ops/s
[info]                  ·gc.alloc.rate:                   2587.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              17279.639 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2305.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15396.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.894 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 237420.551 ops/s
[info]                  ·gc.alloc.rate:                   2621.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              17374.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2644.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17526.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.276 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 240282.208 ops/s
[info]                  ·gc.alloc.rate:                   2653.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              17373.728 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2671.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17491.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 240436.964 ops/s
[info]                  ·gc.alloc.rate:                   2642.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              17292.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2355.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15419.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 241824.610 ops/s
[info]                  ·gc.alloc.rate:               2672.203 MB/sec
[info]                  ·gc.alloc.rate.norm:          17384.375 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2706.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17607.770 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce":
[info]   239114.324 ±(99.9%) 9746.606 ops/s [Average]
[info]   (min, avg, max) = (235607.289, 239114.324, 241824.610), stdev = 2531.163
[info]   CI (99.9%): [229367.718, 248860.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2635.164 ±(99.9%) 125.414 MB/sec [Average]
[info]   (min, avg, max) = (2587.131, 2635.164, 2672.203), stdev = 32.570
[info]   CI (99.9%): [2509.750, 2760.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   17340.969 ±(99.9%) 193.732 B/op [Average]
[info]   (min, avg, max) = (17279.639, 17340.969, 17384.375), stdev = 50.312
[info]   CI (99.9%): [17147.236, 17534.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2536.590 ±(99.9%) 732.583 MB/sec [Average]
[info]   (min, avg, max) = (2305.162, 2536.590, 2706.541), stdev = 190.250
[info]   CI (99.9%): [1804.007, 3269.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   16688.352 ±(99.9%) 4503.430 B/op [Average]
[info]   (min, avg, max) = (15396.350, 16688.352, 17607.770), stdev = 1169.526
[info]   CI (99.9%): [12184.922, 21191.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.142 ±(99.9%) 0.953 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.142, 0.583), stdev = 0.247
[info]   CI (99.9%): [≈ 0, 1.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.943 ±(99.9%) 6.368 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.943, 3.894), stdev = 1.654
[info]   CI (99.9%): [≈ 0, 7.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.000, 11.000), stdev = 1.000
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.53% complete, ETA 01:16:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 114172.682 ops/s
[info] # Warmup Iteration   2: 324905.697 ops/s
[info] # Warmup Iteration   3: 369393.157 ops/s
[info] Iteration   1: 381788.717 ops/s
[info]                  ·gc.alloc.rate:                   1961.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              8084.898 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8139.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.915 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.133 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 379423.887 ops/s
[info]                  ·gc.alloc.rate:                   1940.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              8049.704 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6788.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.777 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 380317.450 ops/s
[info]                  ·gc.alloc.rate:               1978.418 MB/sec
[info]                  ·gc.alloc.rate.norm:          8186.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1971.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8159.481 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 382144.792 ops/s
[info]                  ·gc.alloc.rate:                   1988.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              8186.750 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8194.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.171 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 383323.005 ops/s
[info]                  ·gc.alloc.rate:               1996.253 MB/sec
[info]                  ·gc.alloc.rate.norm:          8192.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2006.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8235.441 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala":
[info]   381399.570 ±(99.9%) 5928.210 ops/s [Average]
[info]   (min, avg, max) = (379423.887, 381399.570, 383323.005), stdev = 1539.537
[info]   CI (99.9%): [375471.360, 387327.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1973.099 ±(99.9%) 85.080 MB/sec [Average]
[info]   (min, avg, max) = (1940.818, 1973.099, 1996.253), stdev = 22.095
[info]   CI (99.9%): [1888.019, 2058.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   8140.103 ±(99.9%) 260.558 B/op [Average]
[info]   (min, avg, max) = (8049.704, 8140.103, 8192.962), stdev = 67.666
[info]   CI (99.9%): [7879.545, 8400.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1916.115 ±(99.9%) 603.557 MB/sec [Average]
[info]   (min, avg, max) = (1636.805, 1916.115, 2006.603), stdev = 156.742
[info]   CI (99.9%): [1312.558, 2519.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   7903.595 ±(99.9%) 2403.843 B/op [Average]
[info]   (min, avg, max) = (6788.786, 7903.595, 8235.441), stdev = 624.270
[info]   CI (99.9%): [5499.752, 10307.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.829 ±(99.9%) 6.650 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.829, 3.915), stdev = 1.727
[info]   CI (99.9%): [≈ 0, 7.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.416 ±(99.9%) 27.401 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.416, 16.133), stdev = 7.116
[info]   CI (99.9%): [≈ 0, 30.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 12.000), stdev = 1.949
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.76% complete, ETA 01:16:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1432950.354 ops/s
[info] # Warmup Iteration   2: 2196544.772 ops/s
[info] # Warmup Iteration   3: 2262002.795 ops/s
[info] Iteration   1: 2202617.872 ops/s
[info]                  ·gc.alloc.rate:                   807.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              577.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     708.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2256106.923 ops/s
[info]                  ·gc.alloc.rate:                   798.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              556.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     461.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2242361.642 ops/s
[info]                  ·gc.alloc.rate:                   795.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              558.106 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     465.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2150856.350 ops/s
[info]                  ·gc.alloc.rate:                   778.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              569.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     729.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.782 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2283915.708 ops/s
[info]                  ·gc.alloc.rate:                   815.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              562.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     456.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala":
[info]   2227171.699 ±(99.9%) 199294.418 ops/s [Average]
[info]   (min, avg, max) = (2150856.350, 2227171.699, 2283915.708), stdev = 51756.127
[info]   CI (99.9%): [2027877.281, 2426466.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   799.045 ±(99.9%) 54.362 MB/sec [Average]
[info]   (min, avg, max) = (778.343, 799.045, 815.720), stdev = 14.118
[info]   CI (99.9%): [744.683, 853.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   564.726 ±(99.9%) 32.758 B/op [Average]
[info]   (min, avg, max) = (556.836, 564.726, 577.111), stdev = 8.507
[info]   CI (99.9%): [531.968, 597.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   795.131 ±(99.9%) 699.387 MB/sec [Average]
[info]   (min, avg, max) = (662.167, 795.131, 996.590), stdev = 181.629
[info]   CI (99.9%): [95.744, 1494.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   564.258 ±(99.9%) 544.289 B/op [Average]
[info]   (min, avg, max) = (456.265, 564.258, 729.205), stdev = 141.350
[info]   CI (99.9%): [19.969, 1108.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.541 ±(99.9%) 4.090 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.541, 2.436), stdev = 1.062
[info]   CI (99.9%): [≈ 0, 4.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.394 ±(99.9%) 2.996 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.394, 1.782), stdev = 0.778
[info]   CI (99.9%): [≈ 0, 3.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 7.000), stdev = 2.049
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 16.00% complete, ETA 01:15:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3709.244 ops/s
[info] # Warmup Iteration   2: 65687.216 ops/s
[info] # Warmup Iteration   3: 84955.423 ops/s
[info] Iteration   1: 87772.965 ops/s
[info]                  ·gc.alloc.rate:                   3446.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              61791.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3319.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59516.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.359 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 87578.979 ops/s
[info]                  ·gc.alloc.rate:                   3467.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              62308.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3357.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60324.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.122 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 88343.093 ops/s
[info]                  ·gc.alloc.rate:                   3497.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              62302.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3382.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60251.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.742 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 87284.798 ops/s
[info]                  ·gc.alloc.rate:                   3457.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              62345.905 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3394.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61196.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.751 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 86958.716 ops/s
[info]                  ·gc.alloc.rate:                   3405.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              61627.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3398.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61487.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.448 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.106 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson":
[info]   87587.710 ±(99.9%) 2012.297 ops/s [Average]
[info]   (min, avg, max) = (86958.716, 87587.710, 88343.093), stdev = 522.587
[info]   CI (99.9%): [85575.413, 89600.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3455.039 ±(99.9%) 128.527 MB/sec [Average]
[info]   (min, avg, max) = (3405.876, 3455.039, 3497.468), stdev = 33.378
[info]   CI (99.9%): [3326.512, 3583.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   62075.090 ±(99.9%) 1306.551 B/op [Average]
[info]   (min, avg, max) = (61627.139, 62075.090, 62345.905), stdev = 339.307
[info]   CI (99.9%): [60768.539, 63381.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3370.257 ±(99.9%) 125.405 MB/sec [Average]
[info]   (min, avg, max) = (3319.506, 3370.257, 3398.149), stdev = 32.567
[info]   CI (99.9%): [3244.852, 3495.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   60555.253 ±(99.9%) 3047.668 B/op [Average]
[info]   (min, avg, max) = (59516.291, 60555.253, 61487.331), stdev = 791.470
[info]   CI (99.9%): [57507.585, 63602.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.156 ±(99.9%) 0.670 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.156, 0.448), stdev = 0.174
[info]   CI (99.9%): [≈ 0, 0.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.816 ±(99.9%) 12.134 B/op [Average]
[info]   (min, avg, max) = (0.742, 2.816, 8.106), stdev = 3.151
[info]   CI (99.9%): [≈ 0, 14.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.count":
[info]   50.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.000, 10.000), stdev = 0.001
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.time":
[info]   73.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.600, 17.000), stdev = 1.517
[info]   CI (99.9%): [73.000, 73.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 16.24% complete, ETA 01:15:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86202.998 ops/s
[info] # Warmup Iteration   2: 218001.479 ops/s
[info] # Warmup Iteration   3: 250475.690 ops/s
[info] Iteration   1: 250267.438 ops/s
[info]                  ·gc.alloc.rate:                   2034.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              12794.662 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12450.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.386 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 263702.900 ops/s
[info]                  ·gc.alloc.rate:                   2129.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              12709.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11771.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.248 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 263733.754 ops/s
[info]                  ·gc.alloc.rate:                   2136.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              12748.362 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11842.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.248 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 264077.458 ops/s
[info]                  ·gc.alloc.rate:                   2146.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              12792.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1999.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11917.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 264037.268 ops/s
[info]                  ·gc.alloc.rate:                   2160.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              12877.221 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2350.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14009.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.248 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce":
[info]   261163.763 ±(99.9%) 23464.345 ops/s [Average]
[info]   (min, avg, max) = (250267.438, 261163.763, 264077.458), stdev = 6093.616
[info]   CI (99.9%): [237699.418, 284628.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2121.622 ±(99.9%) 192.355 MB/sec [Average]
[info]   (min, avg, max) = (2034.730, 2121.622, 2160.650), stdev = 49.954
[info]   CI (99.9%): [1929.267, 2313.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12784.508 ±(99.9%) 240.980 B/op [Average]
[info]   (min, avg, max) = (12709.706, 12784.508, 12877.221), stdev = 62.582
[info]   CI (99.9%): [12543.528, 13025.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2057.491 ±(99.9%) 632.279 MB/sec [Average]
[info]   (min, avg, max) = (1972.514, 2057.491, 2350.681), stdev = 164.201
[info]   CI (99.9%): [1425.212, 2689.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   12398.240 ±(99.9%) 3618.745 B/op [Average]
[info]   (min, avg, max) = (11771.568, 12398.240, 14009.786), stdev = 939.777
[info]   CI (99.9%): [8779.495, 16016.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.741 ±(99.9%) 6.068 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.741, 3.560), stdev = 1.576
[info]   CI (99.9%): [≈ 0, 6.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.651 ±(99.9%) 38.176 B/op [Average]
[info]   (min, avg, max) = (0.124, 4.651, 22.386), stdev = 9.914
[info]   CI (99.9%): [≈ 0, 42.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.200, 10.000), stdev = 0.837
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.47% complete, ETA 01:15:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 486730.183 ops/s
[info] # Warmup Iteration   2: 1376145.821 ops/s
[info] # Warmup Iteration   3: 1447254.774 ops/s
[info] Iteration   1: 1444198.340 ops/s
[info]                  ·gc.alloc.rate:                   876.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              954.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1071.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1450860.516 ops/s
[info]                  ·gc.alloc.rate:                   869.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              943.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     712.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1446976.007 ops/s
[info]                  ·gc.alloc.rate:                   878.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              955.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1073.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1445419.027 ops/s
[info]                  ·gc.alloc.rate:                   877.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              955.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1075.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.414 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.717 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1450765.517 ops/s
[info]                  ·gc.alloc.rate:               868.479 MB/sec
[info]                  ·gc.alloc.rate.norm:          941.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 711.777 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala":
[info]   1447643.881 ±(99.9%) 11767.975 ops/s [Average]
[info]   (min, avg, max) = (1444198.340, 1447643.881, 1450860.516), stdev = 3056.106
[info]   CI (99.9%): [1435875.906, 1459411.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   874.092 ±(99.9%) 17.965 MB/sec [Average]
[info]   (min, avg, max) = (868.479, 874.092, 878.458), stdev = 4.665
[info]   CI (99.9%): [856.127, 892.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   950.133 ±(99.9%) 26.683 B/op [Average]
[info]   (min, avg, max) = (941.826, 950.133, 955.420), stdev = 6.929
[info]   CI (99.9%): [923.450, 976.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   854.388 ±(99.9%) 695.305 MB/sec [Average]
[info]   (min, avg, max) = (656.346, 854.388, 987.971), stdev = 180.568
[info]   CI (99.9%): [159.084, 1549.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   929.025 ±(99.9%) 762.471 B/op [Average]
[info]   (min, avg, max) = (711.777, 929.025, 1075.637), stdev = 198.011
[info]   CI (99.9%): [166.554, 1691.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.695 ±(99.9%) 5.853 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.695, 3.414), stdev = 1.520
[info]   CI (99.9%): [≈ 0, 6.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.757 ±(99.9%) 6.372 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.757, 3.717), stdev = 1.655
[info]   CI (99.9%): [≈ 0, 7.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.400, 9.000), stdev = 2.881
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.71% complete, ETA 01:15:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1774758.441 ops/s
[info] # Warmup Iteration   2: 2720628.034 ops/s
[info] # Warmup Iteration   3: 2824265.064 ops/s
[info] Iteration   1: 2771996.433 ops/s
[info]                  ·gc.alloc.rate:                   975.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              553.827 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     564.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2845602.419 ops/s
[info]                  ·gc.alloc.rate:                   990.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              547.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     550.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2840307.790 ops/s
[info]                  ·gc.alloc.rate:                   993.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     368.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.465 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2784174.198 ops/s
[info]                  ·gc.alloc.rate:                   968.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              547.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     561.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2785661.807 ops/s
[info]                  ·gc.alloc.rate:               973.982 MB/sec
[info]                  ·gc.alloc.rate.norm:          550.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 560.003 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala":
[info]   2805548.529 ±(99.9%) 133259.643 ops/s [Average]
[info]   (min, avg, max) = (2771996.433, 2805548.529, 2845602.419), stdev = 34607.106
[info]   CI (99.9%): [2672288.886, 2938808.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   980.444 ±(99.9%) 41.409 MB/sec [Average]
[info]   (min, avg, max) = (968.968, 980.444, 993.355), stdev = 10.754
[info]   CI (99.9%): [939.034, 1021.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   549.973 ±(99.9%) 9.689 B/op [Average]
[info]   (min, avg, max) = (547.689, 549.973, 553.827), stdev = 2.516
[info]   CI (99.9%): [540.284, 559.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   927.599 ±(99.9%) 565.557 MB/sec [Average]
[info]   (min, avg, max) = (664.876, 927.599, 995.208), stdev = 146.873
[info]   CI (99.9%): [362.041, 1493.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   520.833 ±(99.9%) 328.758 B/op [Average]
[info]   (min, avg, max) = (368.386, 520.833, 564.289), stdev = 85.377
[info]   CI (99.9%): [192.075, 849.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.604 ±(99.9%) 4.424 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.604, 2.644), stdev = 1.149
[info]   CI (99.9%): [≈ 0, 5.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.335 ±(99.9%) 2.450 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.335, 1.465), stdev = 0.636
[info]   CI (99.9%): [≈ 0, 2.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 8.000), stdev = 2.074
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 16.94% complete, ETA 01:15:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1327109.156 ops/s
[info] # Warmup Iteration   2: 2870545.504 ops/s
[info] # Warmup Iteration   3: 3070978.126 ops/s
[info] Iteration   1: 3065235.059 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3068283.576 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3062280.805 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3062472.620 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3064597.473 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3064573.907 ±(99.9%) 9407.134 ops/s [Average]
[info]   (min, avg, max) = (3062280.805, 3064573.907, 3068283.576), stdev = 2443.003
[info]   CI (99.9%): [3055166.773, 3073981.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 17.18% complete, ETA 01:14:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74786.327 ops/s
[info] # Warmup Iteration   2: 370702.498 ops/s
[info] # Warmup Iteration   3: 388627.723 ops/s
[info] Iteration   1: 401683.437 ops/s
[info]                  ·gc.alloc.rate:                   2575.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              10090.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2614.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10241.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.816 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 398205.823 ops/s
[info]                  ·gc.alloc.rate:                   2567.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              10147.905 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9099.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 393760.302 ops/s
[info]                  ·gc.alloc.rate:               2575.077 MB/sec
[info]                  ·gc.alloc.rate.norm:          10291.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2661.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10638.982 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 392365.367 ops/s
[info]                  ·gc.alloc.rate:                   2496.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              10007.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2352.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9431.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.418 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 400320.310 ops/s
[info]                  ·gc.alloc.rate:                   2586.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              10167.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2703.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10627.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.900 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson":
[info]   397267.048 ±(99.9%) 15645.174 ops/s [Average]
[info]   (min, avg, max) = (392365.367, 397267.048, 401683.437), stdev = 4063.002
[info]   CI (99.9%): [381621.874, 412912.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2560.180 ±(99.9%) 140.506 MB/sec [Average]
[info]   (min, avg, max) = (2496.006, 2560.180, 2586.481), stdev = 36.489
[info]   CI (99.9%): [2419.674, 2700.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   10141.169 ±(99.9%) 402.520 B/op [Average]
[info]   (min, avg, max) = (10007.946, 10141.169, 10291.777), stdev = 104.533
[info]   CI (99.9%): [9738.649, 10543.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2526.871 ±(99.9%) 714.935 MB/sec [Average]
[info]   (min, avg, max) = (2302.614, 2526.871, 2703.550), stdev = 185.666
[info]   CI (99.9%): [1811.935, 3241.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   10007.897 ±(99.9%) 2718.880 B/op [Average]
[info]   (min, avg, max) = (9099.887, 10007.897, 10638.982), stdev = 706.084
[info]   CI (99.9%): [7289.018, 12726.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.112 ±(99.9%) 0.403 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.112, 0.229), stdev = 0.105
[info]   CI (99.9%): [≈ 0, 0.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.443 ±(99.9%) 1.582 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.443, 0.900), stdev = 0.411
[info]   CI (99.9%): [≈ 0, 2.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 10.800, 12.000), stdev = 0.837
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 17.41% complete, ETA 01:14:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5970.495 ops/s
[info] # Warmup Iteration   2: 20395.658 ops/s
[info] # Warmup Iteration   3: 25879.843 ops/s
[info] Iteration   1: 25518.481 ops/s
[info]                  ·gc.alloc.rate:                   1629.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              100494.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81715.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.186 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 134.805 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 25618.840 ops/s
[info]                  ·gc.alloc.rate:                   1652.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              101515.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101403.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.561 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.910 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 25579.324 ops/s
[info]                  ·gc.alloc.rate:                   1653.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              101715.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101111.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.685 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 25999.671 ops/s
[info]                  ·gc.alloc.rate:                   1687.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              102106.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99877.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.520 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 26330.673 ops/s
[info]                  ·gc.alloc.rate:               1708.208 MB/sec
[info]                  ·gc.alloc.rate.norm:          102093.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1661.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 99283.245 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce":
[info]   25809.398 ±(99.9%) 1336.415 ops/s [Average]
[info]   (min, avg, max) = (25518.481, 25809.398, 26330.673), stdev = 347.063
[info]   CI (99.9%): [24472.983, 27145.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate":
[info]   1666.139 ±(99.9%) 120.136 MB/sec [Average]
[info]   (min, avg, max) = (1629.559, 1666.139, 1708.208), stdev = 31.199
[info]   CI (99.9%): [1546.003, 1786.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   101584.970 ±(99.9%) 2541.620 B/op [Average]
[info]   (min, avg, max) = (100494.038, 101584.970, 102106.424), stdev = 660.051
[info]   CI (99.9%): [99043.351, 104126.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1586.142 ±(99.9%) 562.545 MB/sec [Average]
[info]   (min, avg, max) = (1325.052, 1586.142, 1661.186), stdev = 146.091
[info]   CI (99.9%): [1023.597, 2148.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   96678.324 ±(99.9%) 32383.217 B/op [Average]
[info]   (min, avg, max) = (81715.224, 96678.324, 101403.814), stdev = 8409.819
[info]   CI (99.9%): [64295.107, 129061.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.783 ±(99.9%) 3.932 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.783, 2.186), stdev = 1.021
[info]   CI (99.9%): [≈ 0, 4.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   48.184 ±(99.9%) 242.225 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.184, 134.805), stdev = 62.905
[info]   CI (99.9%): [≈ 0, 290.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 14.000), stdev = 3.209
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 17.65% complete, ETA 01:14:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.790 ops/s
[info] # Warmup Iteration   2: 79360.606 ops/s
[info] # Warmup Iteration   3: 98250.773 ops/s
[info] Iteration   1: 97227.719 ops/s
[info]                  ·gc.alloc.rate:                   934.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              15118.625 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10512.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.337 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 97128.000 ops/s
[info]                  ·gc.alloc.rate:                   946.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              15343.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15823.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.063 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 96933.341 ops/s
[info]                  ·gc.alloc.rate:                   947.186 MB/sec
[info]                  ·gc.alloc.rate.norm:              15377.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15909.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.338 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 98869.763 ops/s
[info]                  ·gc.alloc.rate:                   965.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              15360.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15597.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.276 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 100164.130 ops/s
[info]                  ·gc.alloc.rate:                   982.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              15438.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15312.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.944 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava":
[info]   98064.591 ±(99.9%) 5416.163 ops/s [Average]
[info]   (min, avg, max) = (96933.341, 98064.591, 100164.130), stdev = 1406.560
[info]   CI (99.9%): [92648.428, 103480.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   955.166 ±(99.9%) 72.712 MB/sec [Average]
[info]   (min, avg, max) = (934.047, 955.166, 982.590), stdev = 18.883
[info]   CI (99.9%): [882.454, 1027.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   15327.597 ±(99.9%) 470.364 B/op [Average]
[info]   (min, avg, max) = (15118.625, 15327.597, 15438.028), stdev = 122.152
[info]   CI (99.9%): [14857.232, 15797.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   912.116 ±(99.9%) 565.380 MB/sec [Average]
[info]   (min, avg, max) = (649.495, 912.116, 979.972), stdev = 146.827
[info]   CI (99.9%): [346.736, 1477.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   14631.149 ±(99.9%) 8909.612 B/op [Average]
[info]   (min, avg, max) = (10512.824, 14631.149, 15909.802), stdev = 2313.798
[info]   CI (99.9%): [5721.537, 23540.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.914 ±(99.9%) 7.243 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.914, 4.276), stdev = 1.881
[info]   CI (99.9%): [≈ 0, 8.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   14.542 ±(99.9%) 115.283 B/op [Average]
[info]   (min, avg, max) = (0.337, 14.542, 68.064), stdev = 29.939
[info]   CI (99.9%): [≈ 0, 129.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 9.000), stdev = 2.121
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.88% complete, ETA 01:14:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15520.490 ops/s
[info] # Warmup Iteration   2: 58619.864 ops/s
[info] # Warmup Iteration   3: 64663.363 ops/s
[info] Iteration   1: 65801.927 ops/s
[info]                  ·gc.alloc.rate:                   1181.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              28258.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23573.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.996 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 66670.263 ops/s
[info]                  ·gc.alloc.rate:                   1194.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              28184.278 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31080.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.977 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.272 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 67697.787 ops/s
[info]                  ·gc.alloc.rate:                   1228.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              28558.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30491.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.552 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 66934.582 ops/s
[info]                  ·gc.alloc.rate:                   1201.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              28241.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23023.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.979 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 68288.147 ops/s
[info]                  ·gc.alloc.rate:               1240.403 MB/sec
[info]                  ·gc.alloc.rate.norm:          28585.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30137.847 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala":
[info]   67078.541 ±(99.9%) 3685.256 ops/s [Average]
[info]   (min, avg, max) = (65801.927, 67078.541, 68288.147), stdev = 957.049
[info]   CI (99.9%): [63393.286, 70763.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1209.161 ±(99.9%) 94.366 MB/sec [Average]
[info]   (min, avg, max) = (1181.612, 1209.161, 1240.403), stdev = 24.507
[info]   CI (99.9%): [1114.795, 1303.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   28365.798 ±(99.9%) 733.543 B/op [Average]
[info]   (min, avg, max) = (28184.278, 28365.798, 28585.355), stdev = 190.499
[info]   CI (99.9%): [27632.255, 29099.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1180.229 ±(99.9%) 695.324 MB/sec [Average]
[info]   (min, avg, max) = (979.254, 1180.229, 1316.756), stdev = 180.573
[info]   CI (99.9%): [484.905, 1875.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   27661.348 ±(99.9%) 15410.152 B/op [Average]
[info]   (min, avg, max) = (23023.252, 27661.348, 31080.975), stdev = 4001.967
[info]   CI (99.9%): [12251.197, 43071.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 4.982 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.858, 2.977), stdev = 1.294
[info]   CI (99.9%): [≈ 0, 5.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   20.160 ±(99.9%) 117.480 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20.160, 70.272), stdev = 30.509
[info]   CI (99.9%): [≈ 0, 137.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 14.000), stdev = 3.768
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.12% complete, ETA 01:14:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52987.992 ops/s
[info] # Warmup Iteration   2: 128070.842 ops/s
[info] # Warmup Iteration   3: 137433.889 ops/s
[info] Iteration   1: 136126.687 ops/s
[info]                  ·gc.alloc.rate:                   946.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              10946.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11452.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.481 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 135197.462 ops/s
[info]                  ·gc.alloc.rate:                   923.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              10754.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7692.840 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.485 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 137276.813 ops/s
[info]                  ·gc.alloc.rate:                   950.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              10896.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11390.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.373 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.207 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 135935.412 ops/s
[info]                  ·gc.alloc.rate:                   946.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              10963.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11487.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.917 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 136624.755 ops/s
[info]                  ·gc.alloc.rate:               964.206 MB/sec
[info]                  ·gc.alloc.rate.norm:          11104.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:      988.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11386.723 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala":
[info]   136232.226 ±(99.9%) 2992.135 ops/s [Average]
[info]   (min, avg, max) = (135197.462, 136232.226, 137276.813), stdev = 777.048
[info]   CI (99.9%): [133240.090, 139224.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   946.454 ±(99.9%) 55.988 MB/sec [Average]
[info]   (min, avg, max) = (923.789, 946.454, 964.206), stdev = 14.540
[info]   CI (99.9%): [890.465, 1002.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10933.005 ±(99.9%) 485.797 B/op [Average]
[info]   (min, avg, max) = (10754.546, 10933.005, 11104.430), stdev = 126.160
[info]   CI (99.9%): [10447.208, 11418.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   925.189 ±(99.9%) 569.170 MB/sec [Average]
[info]   (min, avg, max) = (660.796, 925.189, 993.628), stdev = 147.812
[info]   CI (99.9%): [356.019, 1494.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10682.013 ±(99.9%) 6436.495 B/op [Average]
[info]   (min, avg, max) = (7692.840, 10682.013, 11487.430), stdev = 1671.537
[info]   CI (99.9%): [4245.518, 17118.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.645 ±(99.9%) 3.921 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.645, 2.373), stdev = 1.018
[info]   CI (99.9%): [≈ 0, 4.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.418 ±(99.9%) 44.950 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.418, 27.207), stdev = 11.673
[info]   CI (99.9%): [≈ 0, 52.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 9.000), stdev = 2.074
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 18.35% complete, ETA 01:13:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4292.507 ops/s
[info] # Warmup Iteration   2: 26848.477 ops/s
[info] # Warmup Iteration   3: 35606.542 ops/s
[info] Iteration   1: 35653.982 ops/s
[info]                  ·gc.alloc.rate:                   1791.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              79075.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72657.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.976 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 175.505 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 36396.940 ops/s
[info]                  ·gc.alloc.rate:                   1818.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              78634.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84743.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.404 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 35580.800 ops/s
[info]                  ·gc.alloc.rate:                   1774.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              78483.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72170.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.921 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 35609.730 ops/s
[info]                  ·gc.alloc.rate:                   1782.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              78784.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72616.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.920 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 35802.358 ops/s
[info]                  ·gc.alloc.rate:               1804.359 MB/sec
[info]                  ·gc.alloc.rate.norm:          79308.226 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1657.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 72867.394 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson":
[info]   35808.762 ±(99.9%) 1307.989 ops/s [Average]
[info]   (min, avg, max) = (35580.800, 35808.762, 36396.940), stdev = 339.681
[info]   CI (99.9%): [34500.772, 37116.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1794.349 ±(99.9%) 67.512 MB/sec [Average]
[info]   (min, avg, max) = (1774.453, 1794.349, 1818.652), stdev = 17.533
[info]   CI (99.9%): [1726.837, 1861.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   78857.206 ±(99.9%) 1285.380 B/op [Average]
[info]   (min, avg, max) = (78483.385, 78857.206, 79308.226), stdev = 333.809
[info]   CI (99.9%): [77571.827, 80142.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1707.758 ±(99.9%) 544.006 MB/sec [Average]
[info]   (min, avg, max) = (1631.730, 1707.758, 1959.935), stdev = 141.277
[info]   CI (99.9%): [1163.752, 2251.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   75011.077 ±(99.9%) 20972.111 B/op [Average]
[info]   (min, avg, max) = (72170.809, 75011.077, 84743.307), stdev = 5446.391
[info]   CI (99.9%): [54038.966, 95983.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.912 ±(99.9%) 6.655 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.912, 3.976), stdev = 1.728
[info]   CI (99.9%): [≈ 0, 7.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   40.150 ±(99.9%) 293.833 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 40.150, 175.505), stdev = 76.308
[info]   CI (99.9%): [≈ 0, 333.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.000, 16.000), stdev = 3.536
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 18.59% complete, ETA 01:13:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8216.009 ops/s
[info] # Warmup Iteration   2: 30941.634 ops/s
[info] # Warmup Iteration   3: 31559.145 ops/s
[info] Iteration   1: 31557.434 ops/s
[info]                  ·gc.alloc.rate:                   518.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              25863.128 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16393.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.305 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 31559.972 ops/s
[info]                  ·gc.alloc.rate:                   522.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              26039.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32802.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 31735.347 ops/s
[info]                  ·gc.alloc.rate:               525.021 MB/sec
[info]                  ·gc.alloc.rate.norm:          26035.449 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32653.416 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 31939.536 ops/s
[info]                  ·gc.alloc.rate:               518.933 MB/sec
[info]                  ·gc.alloc.rate.norm:          25567.622 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16230.150 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 31749.898 ops/s
[info]                  ·gc.alloc.rate:                   523.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              25956.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32688.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce":
[info]   31708.437 ±(99.9%) 610.949 ops/s [Average]
[info]   (min, avg, max) = (31557.434, 31708.437, 31939.536), stdev = 158.661
[info]   CI (99.9%): [31097.489, 32319.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate":
[info]   521.696 ±(99.9%) 10.930 MB/sec [Average]
[info]   (min, avg, max) = (518.639, 521.696, 525.021), stdev = 2.839
[info]   CI (99.9%): [510.766, 532.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   25892.459 ±(99.9%) 752.079 B/op [Average]
[info]   (min, avg, max) = (25567.622, 25892.459, 26039.668), stdev = 195.313
[info]   CI (99.9%): [25140.380, 26644.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   526.794 ±(99.9%) 694.990 MB/sec [Average]
[info]   (min, avg, max) = (328.750, 526.794, 659.502), stdev = 180.487
[info]   CI (99.9%): [≈ 0, 1221.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   26153.646 ±(99.9%) 34596.119 B/op [Average]
[info]   (min, avg, max) = (16230.150, 26153.646, 32802.256), stdev = 8984.502
[info]   CI (99.9%): [≈ 0, 60749.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.272 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.167), stdev = 0.071
[info]   CI (99.9%): [≈ 0, 0.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.075 ±(99.9%) 13.558 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.075, 8.305), stdev = 3.521
[info]   CI (99.9%): [≈ 0, 15.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 6.000), stdev = 1.414
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.82% complete, ETA 01:13:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11208.522 ops/s
[info] # Warmup Iteration   2: 31077.479 ops/s
[info] # Warmup Iteration   3: 32426.213 ops/s
[info] Iteration   1: 32340.992 ops/s
[info]                  ·gc.alloc.rate:               402.140 MB/sec
[info]                  ·gc.alloc.rate.norm:          19568.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12447.545 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 31811.595 ops/s
[info]                  ·gc.alloc.rate:               410.008 MB/sec
[info]                  ·gc.alloc.rate.norm:          20280.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32361.219 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 32314.923 ops/s
[info]                  ·gc.alloc.rate:                   405.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              19741.464 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15961.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 31922.919 ops/s
[info]                  ·gc.alloc.rate:               401.550 MB/sec
[info]                  ·gc.alloc.rate.norm:          19796.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16157.706 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 32298.898 ops/s
[info]                  ·gc.alloc.rate:               406.010 MB/sec
[info]                  ·gc.alloc.rate.norm:          19782.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16001.609 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala":
[info]   32137.865 ±(99.9%) 964.961 ops/s [Average]
[info]   (min, avg, max) = (31811.595, 32137.865, 32340.992), stdev = 250.597
[info]   CI (99.9%): [31172.904, 33102.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   405.018 ±(99.9%) 13.104 MB/sec [Average]
[info]   (min, avg, max) = (401.550, 405.018, 410.008), stdev = 3.403
[info]   CI (99.9%): [391.914, 418.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   19833.649 ±(99.9%) 1022.929 B/op [Average]
[info]   (min, avg, max) = (19568.483, 19833.649, 20280.186), stdev = 265.651
[info]   CI (99.9%): [18810.721, 20856.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   378.796 ±(99.9%) 605.031 MB/sec [Average]
[info]   (min, avg, max) = (255.802, 378.796, 654.253), stdev = 157.125
[info]   CI (99.9%): [≈ 0, 983.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   18585.865 ±(99.9%) 30252.826 B/op [Average]
[info]   (min, avg, max) = (12447.545, 18585.865, 32361.219), stdev = 7856.563
[info]   CI (99.9%): [≈ 0, 48838.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.406 ±(99.9%) 3.492 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.406, 2.028), stdev = 0.907
[info]   CI (99.9%): [≈ 0, 3.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 7.000), stdev = 1.789
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.06% complete, ETA 01:13:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18889.796 ops/s
[info] # Warmup Iteration   2: 32268.157 ops/s
[info] # Warmup Iteration   3: 34380.169 ops/s
[info] Iteration   1: 33671.342 ops/s
[info]                  ·gc.alloc.rate:               443.048 MB/sec
[info]                  ·gc.alloc.rate.norm:          20706.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:      585.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27354.021 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 34002.902 ops/s
[info]                  ·gc.alloc.rate:               421.522 MB/sec
[info]                  ·gc.alloc.rate.norm:          19508.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15246.577 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 34413.098 ops/s
[info]                  ·gc.alloc.rate:                   425.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              19436.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15109.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.952 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 34406.700 ops/s
[info]                  ·gc.alloc.rate:               421.496 MB/sec
[info]                  ·gc.alloc.rate.norm:          19278.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15112.852 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 34276.774 ops/s
[info]                  ·gc.alloc.rate:               434.282 MB/sec
[info]                  ·gc.alloc.rate.norm:          19940.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30370.901 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala":
[info]   34154.163 ±(99.9%) 1220.495 ops/s [Average]
[info]   (min, avg, max) = (33671.342, 34154.163, 34413.098), stdev = 316.959
[info]   CI (99.9%): [32933.668, 35374.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   429.086 ±(99.9%) 36.162 MB/sec [Average]
[info]   (min, avg, max) = (421.496, 429.086, 443.048), stdev = 9.391
[info]   CI (99.9%): [392.925, 465.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   19773.884 ±(99.9%) 2218.235 B/op [Average]
[info]   (min, avg, max) = (19278.566, 19773.884, 20706.463), stdev = 576.069
[info]   CI (99.9%): [17555.648, 21992.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   447.412 ±(99.9%) 627.148 MB/sec [Average]
[info]   (min, avg, max) = (329.441, 447.412, 661.455), stdev = 162.868
[info]   CI (99.9%): [≈ 0, 1074.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   20638.826 ±(99.9%) 29198.333 B/op [Average]
[info]   (min, avg, max) = (15109.779, 20638.826, 30370.901), stdev = 7582.714
[info]   CI (99.9%): [≈ 0, 49837.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.190 ±(99.9%) 1.639 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.190, 0.952), stdev = 0.426
[info]   CI (99.9%): [≈ 0, 1.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 6.000), stdev = 1.643
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 19.29% complete, ETA 01:12:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16891.246 ops/s
[info] # Warmup Iteration   2: 32410.429 ops/s
[info] # Warmup Iteration   3: 34549.289 ops/s
[info] Iteration   1: 34408.770 ops/s
[info]                  ·gc.alloc.rate:               399.238 MB/sec
[info]                  ·gc.alloc.rate.norm:          18256.880 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11700.273 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 34913.490 ops/s
[info]                  ·gc.alloc.rate:               387.909 MB/sec
[info]                  ·gc.alloc.rate.norm:          17483.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14864.261 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 34688.969 ops/s
[info]                  ·gc.alloc.rate:                   395.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              17942.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29950.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.833 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 34793.973 ops/s
[info]                  ·gc.alloc.rate:               385.377 MB/sec
[info]                  ·gc.alloc.rate.norm:          17431.119 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14945.221 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 34794.562 ops/s
[info]                  ·gc.alloc.rate:                   389.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              17638.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14959.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.942 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc":
[info]   34719.953 ±(99.9%) 736.412 ops/s [Average]
[info]   (min, avg, max) = (34408.770, 34719.953, 34913.490), stdev = 191.244
[info]   CI (99.9%): [33983.541, 35456.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   391.603 ±(99.9%) 21.823 MB/sec [Average]
[info]   (min, avg, max) = (385.377, 391.603, 399.238), stdev = 5.667
[info]   CI (99.9%): [369.780, 413.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   17750.581 ±(99.9%) 1333.059 B/op [Average]
[info]   (min, avg, max) = (17431.119, 17750.581, 18256.880), stdev = 346.191
[info]   CI (99.9%): [16417.522, 19083.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   381.401 ±(99.9%) 612.796 MB/sec [Average]
[info]   (min, avg, max) = (255.859, 381.401, 660.176), stdev = 159.141
[info]   CI (99.9%): [≈ 0, 994.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   17283.972 ±(99.9%) 27790.836 B/op [Average]
[info]   (min, avg, max) = (11700.273, 17283.972, 29950.679), stdev = 7217.192
[info]   CI (99.9%): [≈ 0, 45074.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.755 ±(99.9%) 4.741 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.755, 2.833), stdev = 1.231
[info]   CI (99.9%): [≈ 0, 5.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 6.000), stdev = 1.517
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 19.53% complete, ETA 01:12:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2008.419 ops/s
[info] # Warmup Iteration   2: 4644.406 ops/s
[info] # Warmup Iteration   3: 13232.568 ops/s
[info] Iteration   1: 14693.262 ops/s
[info]                  ·gc.alloc.rate:                   1083.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              116090.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     141479.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.459 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 14387.137 ops/s
[info]                  ·gc.alloc.rate:               1091.623 MB/sec
[info]                  ·gc.alloc.rate.norm:          119398.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:      992.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 108573.887 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   3: 14720.763 ops/s
[info]                  ·gc.alloc.rate:                   1082.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              115689.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106182.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 238.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 14830.655 ops/s
[info]                  ·gc.alloc.rate:                   1083.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              115014.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105112.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 143.584 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 14528.473 ops/s
[info]                  ·gc.alloc.rate:                   1064.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              115280.896 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107015.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.826 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce":
[info]   14632.058 ±(99.9%) 671.855 ops/s [Average]
[info]   (min, avg, max) = (14387.137, 14632.058, 14830.655), stdev = 174.479
[info]   CI (99.9%): [13960.202, 15303.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate":
[info]   1081.157 ±(99.9%) 38.998 MB/sec [Average]
[info]   (min, avg, max) = (1064.279, 1081.157, 1091.623), stdev = 10.128
[info]   CI (99.9%): [1042.159, 1120.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   116294.667 ±(99.9%) 6863.252 B/op [Average]
[info]   (min, avg, max) = (115014.052, 116294.667, 119398.189), stdev = 1782.365
[info]   CI (99.9%): [109431.416, 123157.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1057.067 ±(99.9%) 568.221 MB/sec [Average]
[info]   (min, avg, max) = (987.970, 1057.067, 1321.014), stdev = 147.565
[info]   CI (99.9%): [488.847, 1625.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   113672.606 ±(99.9%) 60054.535 B/op [Average]
[info]   (min, avg, max) = (105112.074, 113672.606, 141479.636), stdev = 15595.972
[info]   CI (99.9%): [53618.071, 173727.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.787 ±(99.9%) 3.751 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.787, 2.227), stdev = 0.974
[info]   CI (99.9%): [≈ 0, 4.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   83.999 ±(99.9%) 400.196 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 83.999, 238.127), stdev = 103.930
[info]   CI (99.9%): [≈ 0, 484.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 14.000), stdev = 3.834
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.76% complete, ETA 01:12:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2161.671 ops/s
[info] # Warmup Iteration   2: 11270.869 ops/s
[info] # Warmup Iteration   3: 14778.772 ops/s
[info] Iteration   1: 14495.144 ops/s
[info]                  ·gc.alloc.rate:                   941.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              102196.934 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107041.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.520 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 14855.940 ops/s
[info]                  ·gc.alloc.rate:                   957.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              101421.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69721.589 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.205 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 14664.887 ops/s
[info]                  ·gc.alloc.rate:                   956.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              102664.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106087.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.480 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 266.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 14826.523 ops/s
[info]                  ·gc.alloc.rate:                   971.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              103123.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104723.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 187.827 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 14782.759 ops/s
[info]                  ·gc.alloc.rate:                   973.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              103600.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104396.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.216 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala":
[info]   14725.051 ±(99.9%) 568.657 ops/s [Average]
[info]   (min, avg, max) = (14495.144, 14725.051, 14855.940), stdev = 147.678
[info]   CI (99.9%): [14156.394, 15293.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   960.074 ±(99.9%) 49.937 MB/sec [Average]
[info]   (min, avg, max) = (941.375, 960.074, 973.228), stdev = 12.968
[info]   CI (99.9%): [910.137, 1010.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   102601.359 ±(99.9%) 3239.362 B/op [Average]
[info]   (min, avg, max) = (101421.165, 102601.359, 103600.220), stdev = 841.252
[info]   CI (99.9%): [99361.997, 105840.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   920.035 ±(99.9%) 563.677 MB/sec [Average]
[info]   (min, avg, max) = (658.225, 920.035, 988.598), stdev = 146.385
[info]   CI (99.9%): [356.358, 1483.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   98394.092 ±(99.9%) 61855.532 B/op [Average]
[info]   (min, avg, max) = (69721.589, 98394.092, 107041.832), stdev = 16063.685
[info]   CI (99.9%): [36538.561, 160249.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.866 ±(99.9%) 4.527 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.866, 2.480), stdev = 1.176
[info]   CI (99.9%): [≈ 0, 5.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   92.570 ±(99.9%) 484.254 B/op [Average]
[info]   (min, avg, max) = (2.205, 92.570, 266.079), stdev = 125.759
[info]   CI (99.9%): [≈ 0, 576.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 12.000), stdev = 3.391
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.00% complete, ETA 01:12:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68226.903 ops/s
[info] # Warmup Iteration   2: 98535.668 ops/s
[info] # Warmup Iteration   3: 107861.443 ops/s
[info] Iteration   1: 108108.572 ops/s
[info]                  ·gc.alloc.rate:                   287.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              4184.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3723.685 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 103299.123 ops/s
[info]                  ·gc.alloc.rate:               277.656 MB/sec
[info]                  ·gc.alloc.rate.norm:          4228.911 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3897.033 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 107013.408 ops/s
[info]                  ·gc.alloc.rate:                   287.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              4231.622 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4859.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 106728.151 ops/s
[info]                  ·gc.alloc.rate:               285.682 MB/sec
[info]                  ·gc.alloc.rate.norm:          4212.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4872.072 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 105235.240 ops/s
[info]                  ·gc.alloc.rate:               283.722 MB/sec
[info]                  ·gc.alloc.rate.norm:          4242.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4946.160 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala":
[info]   106076.899 ±(99.9%) 7166.053 ops/s [Average]
[info]   (min, avg, max) = (103299.123, 106076.899, 108108.572), stdev = 1861.001
[info]   CI (99.9%): [98910.846, 113242.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   284.477 ±(99.9%) 15.979 MB/sec [Average]
[info]   (min, avg, max) = (277.656, 284.477, 287.791), stdev = 4.150
[info]   CI (99.9%): [268.498, 300.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4220.127 ±(99.9%) 86.766 B/op [Average]
[info]   (min, avg, max) = (4184.787, 4220.127, 4242.812), stdev = 22.533
[info]   CI (99.9%): [4133.361, 4306.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   300.670 ±(99.9%) 157.519 MB/sec [Average]
[info]   (min, avg, max) = (255.852, 300.670, 330.756), stdev = 40.907
[info]   CI (99.9%): [143.151, 458.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4459.610 ±(99.9%) 2297.940 B/op [Average]
[info]   (min, avg, max) = (3723.685, 4459.610, 4946.160), stdev = 596.768
[info]   CI (99.9%): [2161.670, 6757.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.122 ±(99.9%) 0.642 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.122, 0.306), stdev = 0.167
[info]   CI (99.9%): [≈ 0, 0.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 20.24% complete, ETA 01:12:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 670.268 ops/s
[info] # Warmup Iteration   2: 10987.577 ops/s
[info] # Warmup Iteration   3: 13692.682 ops/s
[info] Iteration   1: 13685.181 ops/s
[info]                  ·gc.alloc.rate:                   1337.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              153821.686 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151602.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.788 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 13749.555 ops/s
[info]                  ·gc.alloc.rate:                   1321.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              151208.307 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113221.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.935 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 450.313 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 13462.652 ops/s
[info]                  ·gc.alloc.rate:                   1323.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              154704.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153245.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.135 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 13314.764 ops/s
[info]                  ·gc.alloc.rate:               1303.828 MB/sec
[info]                  ·gc.alloc.rate.norm:          154096.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 154329.726 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 13700.024 ops/s
[info]                  ·gc.alloc.rate:               1347.154 MB/sec
[info]                  ·gc.alloc.rate.norm:          154721.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1308.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 150288.496 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson":
[info]   13582.435 ±(99.9%) 716.025 ops/s [Average]
[info]   (min, avg, max) = (13314.764, 13582.435, 13749.555), stdev = 185.950
[info]   CI (99.9%): [12866.410, 14298.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1326.664 ±(99.9%) 63.923 MB/sec [Average]
[info]   (min, avg, max) = (1303.828, 1326.664, 1347.154), stdev = 16.601
[info]   CI (99.9%): [1262.741, 1390.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   153710.480 ±(99.9%) 5590.754 B/op [Average]
[info]   (min, avg, max) = (151208.307, 153710.480, 154721.090), stdev = 1451.901
[info]   CI (99.9%): [148119.726, 159301.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1246.601 ±(99.9%) 554.249 MB/sec [Average]
[info]   (min, avg, max) = (989.255, 1246.601, 1318.356), stdev = 143.937
[info]   CI (99.9%): [692.352, 1800.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   144537.406 ±(99.9%) 67671.308 B/op [Average]
[info]   (min, avg, max) = (113221.505, 144537.406, 154329.726), stdev = 17574.024
[info]   CI (99.9%): [76866.098, 212208.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.912 ±(99.9%) 6.576 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.912, 3.935), stdev = 1.708
[info]   CI (99.9%): [≈ 0, 7.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   104.647 ±(99.9%) 752.335 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 104.647, 450.313), stdev = 195.379
[info]   CI (99.9%): [≈ 0, 856.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 15.000), stdev = 3.975
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 20.47% complete, ETA 01:11:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21024.873 ops/s
[info] # Warmup Iteration   2: 42099.852 ops/s
[info] # Warmup Iteration   3: 44216.804 ops/s
[info] Iteration   1: 44586.797 ops/s
[info]                  ·gc.alloc.rate:                   1140.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              40251.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34965.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.735 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 44883.512 ops/s
[info]                  ·gc.alloc.rate:                   1143.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              40109.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34803.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 91.973 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 44960.014 ops/s
[info]                  ·gc.alloc.rate:                   1147.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              40151.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46192.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.961 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 45012.570 ops/s
[info]                  ·gc.alloc.rate:               1145.990 MB/sec
[info]                  ·gc.alloc.rate.norm:          40068.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34516.995 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 45118.842 ops/s
[info]                  ·gc.alloc.rate:                   1155.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              40297.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.671 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34446.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.165 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce":
[info]   44912.347 ±(99.9%) 774.380 ops/s [Average]
[info]   (min, avg, max) = (44586.797, 44912.347, 45118.842), stdev = 201.104
[info]   CI (99.9%): [44137.967, 45686.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1146.623 ±(99.9%) 21.362 MB/sec [Average]
[info]   (min, avg, max) = (1140.482, 1146.623, 1155.438), stdev = 5.548
[info]   CI (99.9%): [1125.261, 1167.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   40175.680 ±(99.9%) 370.484 B/op [Average]
[info]   (min, avg, max) = (40068.087, 40175.680, 40297.033), stdev = 96.213
[info]   CI (99.9%): [39805.196, 40546.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1055.615 ±(99.9%) 568.757 MB/sec [Average]
[info]   (min, avg, max) = (987.222, 1055.615, 1319.806), stdev = 147.704
[info]   CI (99.9%): [486.858, 1624.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   36985.030 ±(99.9%) 19836.373 B/op [Average]
[info]   (min, avg, max) = (34446.009, 36985.030, 46192.467), stdev = 5151.443
[info]   CI (99.9%): [17148.657, 56821.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.741 ±(99.9%) 4.224 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.741, 2.623), stdev = 1.097
[info]   CI (99.9%): [≈ 0, 4.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   25.967 ±(99.9%) 148.118 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 25.967, 91.973), stdev = 38.466
[info]   CI (99.9%): [≈ 0, 174.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.71% complete, ETA 01:11:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19381.671 ops/s
[info] # Warmup Iteration   2: 60071.864 ops/s
[info] # Warmup Iteration   3: 64542.034 ops/s
[info] Iteration   1: 64931.339 ops/s
[info]                  ·gc.alloc.rate:                   1139.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              27606.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23911.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.505 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 64699.367 ops/s
[info]                  ·gc.alloc.rate:                   1134.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              27594.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32066.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.917 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.943 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 65271.626 ops/s
[info]                  ·gc.alloc.rate:                   1141.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              27521.474 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23788.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.089 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 64284.429 ops/s
[info]                  ·gc.alloc.rate:               1130.813 MB/sec
[info]                  ·gc.alloc.rate.norm:          27684.545 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24054.023 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 64968.320 ops/s
[info]                  ·gc.alloc.rate:               1162.272 MB/sec
[info]                  ·gc.alloc.rate.norm:          28153.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31748.381 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala":
[info]   64831.016 ±(99.9%) 1413.693 ops/s [Average]
[info]   (min, avg, max) = (64284.429, 64831.016, 65271.626), stdev = 367.132
[info]   CI (99.9%): [63417.323, 66244.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1141.610 ±(99.9%) 47.219 MB/sec [Average]
[info]   (min, avg, max) = (1130.813, 1141.610, 1162.272), stdev = 12.263
[info]   CI (99.9%): [1094.391, 1188.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   27712.245 ±(99.9%) 976.560 B/op [Average]
[info]   (min, avg, max) = (27521.474, 27712.245, 28153.966), stdev = 253.609
[info]   CI (99.9%): [26735.685, 28688.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1116.932 ±(99.9%) 694.468 MB/sec [Average]
[info]   (min, avg, max) = (982.519, 1116.932, 1318.274), stdev = 180.351
[info]   CI (99.9%): [422.464, 1811.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   27113.613 ±(99.9%) 16859.894 B/op [Average]
[info]   (min, avg, max) = (23788.197, 27113.613, 32066.197), stdev = 4378.461
[info]   CI (99.9%): [10253.719, 43973.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.779 ±(99.9%) 4.867 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.779, 2.917), stdev = 1.264
[info]   CI (99.9%): [≈ 0, 5.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   18.907 ±(99.9%) 118.353 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18.907, 70.943), stdev = 30.736
[info]   CI (99.9%): [≈ 0, 137.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 13.000), stdev = 3.937
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.94% complete, ETA 01:11:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 100670.211 ops/s
[info] # Warmup Iteration   2: 168213.464 ops/s
[info] # Warmup Iteration   3: 173310.276 ops/s
[info] Iteration   1: 175596.138 ops/s
[info]                  ·gc.alloc.rate:               286.600 MB/sec
[info]                  ·gc.alloc.rate.norm:          2568.416 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2292.752 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 173296.128 ops/s
[info]                  ·gc.alloc.rate:               284.684 MB/sec
[info]                  ·gc.alloc.rate.norm:          2585.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2323.164 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 171988.463 ops/s
[info]                  ·gc.alloc.rate:               283.418 MB/sec
[info]                  ·gc.alloc.rate.norm:          2593.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3014.376 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 176181.722 ops/s
[info]                  ·gc.alloc.rate:               291.665 MB/sec
[info]                  ·gc.alloc.rate.norm:          2605.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2942.463 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 174711.654 ops/s
[info]                  ·gc.alloc.rate:               288.915 MB/sec
[info]                  ·gc.alloc.rate.norm:          2602.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2970.368 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala":
[info]   174354.821 ±(99.9%) 6592.997 ops/s [Average]
[info]   (min, avg, max) = (171988.463, 174354.821, 176181.722), stdev = 1712.180
[info]   CI (99.9%): [167761.824, 180947.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   287.056 ±(99.9%) 12.738 MB/sec [Average]
[info]   (min, avg, max) = (283.418, 287.056, 291.665), stdev = 3.308
[info]   CI (99.9%): [274.318, 299.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2590.893 ±(99.9%) 57.217 B/op [Average]
[info]   (min, avg, max) = (2568.416, 2590.893, 2605.231), stdev = 14.859
[info]   CI (99.9%): [2533.675, 2648.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   300.060 ±(99.9%) 155.446 MB/sec [Average]
[info]   (min, avg, max) = (255.837, 300.060, 329.761), stdev = 40.369
[info]   CI (99.9%): [144.614, 455.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2708.625 ±(99.9%) 1412.461 B/op [Average]
[info]   (min, avg, max) = (2292.752, 2708.625, 3014.376), stdev = 366.812
[info]   CI (99.9%): [1296.164, 4121.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 21.18% complete, ETA 01:11:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85829.749 ops/s
[info] # Warmup Iteration   2: 178115.365 ops/s
[info] # Warmup Iteration   3: 184584.961 ops/s
[info] Iteration   1: 184024.483 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 184744.987 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 184194.624 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 184101.296 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 183816.909 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc":
[info]   184176.460 ±(99.9%) 1336.091 ops/s [Average]
[info]   (min, avg, max) = (183816.909, 184176.460, 184744.987), stdev = 346.979
[info]   CI (99.9%): [182840.369, 185512.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 21.41% complete, ETA 01:11:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22930.916 ops/s
[info] # Warmup Iteration   2: 53951.713 ops/s
[info] # Warmup Iteration   3: 57143.709 ops/s
[info] Iteration   1: 57619.256 ops/s
[info]                  ·gc.alloc.rate:                   1120.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              30595.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36039.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.706 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 57872.627 ops/s
[info]                  ·gc.alloc.rate:                   1118.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              30411.686 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26964.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.935 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79.821 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 57807.809 ops/s
[info]                  ·gc.alloc.rate:                   1115.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              30381.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26921.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.636 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 57772.111 ops/s
[info]                  ·gc.alloc.rate:                   1119.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              30505.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35713.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.268 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 58088.539 ops/s
[info]                  ·gc.alloc.rate:               1126.564 MB/sec
[info]                  ·gc.alloc.rate.norm:          30520.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26656.571 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson":
[info]   57832.068 ±(99.9%) 658.264 ops/s [Average]
[info]   (min, avg, max) = (57619.256, 57832.068, 58088.539), stdev = 170.949
[info]   CI (99.9%): [57173.804, 58490.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1120.212 ±(99.9%) 15.114 MB/sec [Average]
[info]   (min, avg, max) = (1115.985, 1120.212, 1126.564), stdev = 3.925
[info]   CI (99.9%): [1105.098, 1135.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   30482.790 ±(99.9%) 333.165 B/op [Average]
[info]   (min, avg, max) = (30381.314, 30482.790, 30595.391), stdev = 86.522
[info]   CI (99.9%): [30149.624, 30815.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1119.029 ±(99.9%) 690.198 MB/sec [Average]
[info]   (min, avg, max) = (983.946, 1119.029, 1319.599), stdev = 179.242
[info]   CI (99.9%): [428.831, 1809.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   30459.286 ±(99.9%) 19053.499 B/op [Average]
[info]   (min, avg, max) = (26656.571, 30459.286, 36039.854), stdev = 4948.133
[info]   CI (99.9%): [11405.787, 49512.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.812 ±(99.9%) 4.828 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.812, 2.935), stdev = 1.254
[info]   CI (99.9%): [≈ 0, 5.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   22.086 ±(99.9%) 131.289 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22.086, 79.821), stdev = 34.095
[info]   CI (99.9%): [≈ 0, 153.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 13.000), stdev = 4.099
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 21.65% complete, ETA 01:10:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18388.479 ops/s
[info] # Warmup Iteration   2: 83310.739 ops/s
[info] # Warmup Iteration   3: 94047.572 ops/s
[info] Iteration   1: 93358.573 ops/s
[info]                  ·gc.alloc.rate:                   2062.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              34772.204 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2301.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38791.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.872 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.270 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 92861.110 ops/s
[info]                  ·gc.alloc.rate:                   2067.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              35046.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33304.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.411 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 91535.973 ops/s
[info]                  ·gc.alloc.rate:                   2052.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              35286.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34016.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.716 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 92830.086 ops/s
[info]                  ·gc.alloc.rate:                   2053.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              34809.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1997.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33856.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.353 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 92079.864 ops/s
[info]                  ·gc.alloc.rate:                   2041.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              34888.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34395.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.712 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce":
[info]   92533.121 ±(99.9%) 2774.657 ops/s [Average]
[info]   (min, avg, max) = (91535.973, 92533.121, 93358.573), stdev = 720.570
[info]   CI (99.9%): [89758.465, 95307.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   2055.682 ±(99.9%) 39.533 MB/sec [Average]
[info]   (min, avg, max) = (2041.357, 2055.682, 2067.989), stdev = 10.267
[info]   CI (99.9%): [2016.149, 2095.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   34960.597 ±(99.9%) 809.602 B/op [Average]
[info]   (min, avg, max) = (34772.204, 34960.597, 35286.016), stdev = 210.251
[info]   CI (99.9%): [34150.995, 35770.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2051.018 ±(99.9%) 543.086 MB/sec [Average]
[info]   (min, avg, max) = (1965.175, 2051.018, 2301.242), stdev = 141.038
[info]   CI (99.9%): [1507.932, 2594.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   34872.775 ±(99.9%) 8569.356 B/op [Average]
[info]   (min, avg, max) = (33304.255, 34872.775, 38791.439), stdev = 2225.435
[info]   CI (99.9%): [26303.418, 43442.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.812 ±(99.9%) 6.588 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.812, 3.872), stdev = 1.711
[info]   CI (99.9%): [≈ 0, 7.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   13.692 ±(99.9%) 111.035 B/op [Average]
[info]   (min, avg, max) = (0.353, 13.692, 65.270), stdev = 28.835
[info]   CI (99.9%): [≈ 0, 124.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.600, 15.000), stdev = 3.050
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.88% complete, ETA 01:10:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18449.636 ops/s
[info] # Warmup Iteration   2: 99523.106 ops/s
[info] # Warmup Iteration   3: 110560.137 ops/s
[info] Iteration   1: 115304.273 ops/s
[info]                  ·gc.alloc.rate:                   1627.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              22214.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22384.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.313 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 119205.612 ops/s
[info]                  ·gc.alloc.rate:                   1683.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              22225.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21573.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.093 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 118988.039 ops/s
[info]                  ·gc.alloc.rate:                   1686.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              22302.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21555.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.377 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 119204.381 ops/s
[info]                  ·gc.alloc.rate:                   1702.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              22478.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21640.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 115990.346 ops/s
[info]                  ·gc.alloc.rate:                   1660.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              22522.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22428.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.282 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala":
[info]   117738.530 ±(99.9%) 7417.883 ops/s [Average]
[info]   (min, avg, max) = (115304.273, 117738.530, 119205.612), stdev = 1926.401
[info]   CI (99.9%): [110320.647, 125156.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1672.003 ±(99.9%) 111.862 MB/sec [Average]
[info]   (min, avg, max) = (1627.693, 1672.003, 1702.590), stdev = 29.050
[info]   CI (99.9%): [1560.141, 1783.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   22348.413 ±(99.9%) 551.854 B/op [Average]
[info]   (min, avg, max) = (22214.782, 22348.413, 22522.022), stdev = 143.315
[info]   CI (99.9%): [21796.559, 22900.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1639.259 ±(99.9%) 33.944 MB/sec [Average]
[info]   (min, avg, max) = (1629.787, 1639.259, 1653.166), stdev = 8.815
[info]   CI (99.9%): [1605.316, 1673.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   21916.466 ±(99.9%) 1728.392 B/op [Average]
[info]   (min, avg, max) = (21555.315, 21916.466, 22428.684), stdev = 448.858
[info]   CI (99.9%): [20188.075, 23644.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.891 ±(99.9%) 5.579 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.891, 3.393), stdev = 1.449
[info]   CI (99.9%): [≈ 0, 6.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   12.068 ±(99.9%) 76.165 B/op [Average]
[info]   (min, avg, max) = (0.275, 12.068, 46.313), stdev = 19.780
[info]   CI (99.9%): [≈ 0, 88.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.400, 19.000), stdev = 5.413
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.12% complete, ETA 01:10:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64099.294 ops/s
[info] # Warmup Iteration   2: 155025.536 ops/s
[info] # Warmup Iteration   3: 163159.594 ops/s
[info] Iteration   1: 160387.988 ops/s
[info]                  ·gc.alloc.rate:                   1516.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              14876.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13020.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.561 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 165433.359 ops/s
[info]                  ·gc.alloc.rate:                   1545.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              14694.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15732.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.149 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 166934.118 ops/s
[info]                  ·gc.alloc.rate:                   1566.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              14767.340 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15549.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.766 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 166692.248 ops/s
[info]                  ·gc.alloc.rate:                   1564.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              14767.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12503.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 167403.095 ops/s
[info]                  ·gc.alloc.rate:                   1590.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              14955.476 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15637.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala":
[info]   165370.162 ±(99.9%) 11085.699 ops/s [Average]
[info]   (min, avg, max) = (160387.988, 165370.162, 167403.095), stdev = 2878.921
[info]   CI (99.9%): [154284.462, 176455.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1556.682 ±(99.9%) 107.130 MB/sec [Average]
[info]   (min, avg, max) = (1516.226, 1556.682, 1590.806), stdev = 27.821
[info]   CI (99.9%): [1449.552, 1663.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   14812.478 ±(99.9%) 396.781 B/op [Average]
[info]   (min, avg, max) = (14694.945, 14812.478, 14955.476), stdev = 103.043
[info]   CI (99.9%): [14415.697, 15209.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1523.787 ±(99.9%) 695.755 MB/sec [Average]
[info]   (min, avg, max) = (1324.849, 1523.787, 1663.381), stdev = 180.685
[info]   CI (99.9%): [828.032, 2219.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   14488.745 ±(99.9%) 6115.366 B/op [Average]
[info]   (min, avg, max) = (12503.563, 14488.745, 15732.442), stdev = 1588.141
[info]   CI (99.9%): [8373.379, 20604.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.666 ±(99.9%) 4.159 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.666, 2.561), stdev = 1.080
[info]   CI (99.9%): [≈ 0, 4.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.486 ±(99.9%) 40.868 B/op [Average]
[info]   (min, avg, max) = (0.196, 6.486, 25.124), stdev = 10.613
[info]   CI (99.9%): [≈ 0, 47.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 12.000), stdev = 2.588
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 22.35% complete, ETA 01:10:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3442.704 ops/s
[info] # Warmup Iteration   2: 40887.031 ops/s
[info] # Warmup Iteration   3: 54051.105 ops/s
[info] Iteration   1: 53804.634 ops/s
[info]                  ·gc.alloc.rate:                   2887.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              84459.303 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2644.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77356.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.134 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 54888.641 ops/s
[info]                  ·gc.alloc.rate:                   2927.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              83920.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3006.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86206.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.597 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 53604.556 ops/s
[info]                  ·gc.alloc.rate:                   2893.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              84958.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2695.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79126.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.611 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 54715.907 ops/s
[info]                  ·gc.alloc.rate:                   2966.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              85308.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3047.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87641.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.796 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 53457.280 ops/s
[info]                  ·gc.alloc.rate:               2887.649 MB/sec
[info]                  ·gc.alloc.rate.norm:          85005.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2715.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79952.204 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson":
[info]   54094.204 ±(99.9%) 2544.722 ops/s [Average]
[info]   (min, avg, max) = (53457.280, 54094.204, 54888.641), stdev = 660.856
[info]   CI (99.9%): [51549.482, 56638.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2912.496 ±(99.9%) 131.782 MB/sec [Average]
[info]   (min, avg, max) = (2887.602, 2912.496, 2966.275), stdev = 34.223
[info]   CI (99.9%): [2780.714, 3044.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   84730.629 ±(99.9%) 2101.224 B/op [Average]
[info]   (min, avg, max) = (83920.971, 84730.629, 85308.977), stdev = 545.681
[info]   CI (99.9%): [82629.405, 86831.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2822.031 ±(99.9%) 729.694 MB/sec [Average]
[info]   (min, avg, max) = (2644.752, 2822.031, 3047.383), stdev = 189.499
[info]   CI (99.9%): [2092.337, 3551.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   82056.690 ±(99.9%) 17595.572 B/op [Average]
[info]   (min, avg, max) = (77356.203, 82056.690, 87641.601), stdev = 4569.514
[info]   CI (99.9%): [64461.117, 99652.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.501 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.312), stdev = 0.130
[info]   CI (99.9%): [≈ 0, 0.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.428 ±(99.9%) 14.652 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.428, 9.134), stdev = 3.805
[info]   CI (99.9%): [≈ 0, 17.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.count":
[info]   42.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.400, 9.000), stdev = 0.548
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 11.800, 13.000), stdev = 1.095
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 22.59% complete, ETA 01:10:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54259.844 ops/s
[info] # Warmup Iteration   2: 161784.518 ops/s
[info] # Warmup Iteration   3: 161893.640 ops/s
[info] Iteration   1: 171542.766 ops/s
[info]                  ·gc.alloc.rate:               1143.662 MB/sec
[info]                  ·gc.alloc.rate.norm:          10491.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9081.861 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 169875.082 ops/s
[info]                  ·gc.alloc.rate:                   1137.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              10535.421 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12256.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.843 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 167093.943 ops/s
[info]                  ·gc.alloc.rate:                   1117.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              10523.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9329.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.274 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 166871.170 ops/s
[info]                  ·gc.alloc.rate:                   1127.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              10631.734 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9304.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.589 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 172436.461 ops/s
[info]                  ·gc.alloc.rate:                   1149.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              10484.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12010.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.520 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce":
[info]   169563.884 ±(99.9%) 9744.455 ops/s [Average]
[info]   (min, avg, max) = (166871.170, 169563.884, 172436.461), stdev = 2530.604
[info]   CI (99.9%): [159819.429, 179308.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1134.908 ±(99.9%) 49.035 MB/sec [Average]
[info]   (min, avg, max) = (1117.301, 1134.908, 1149.025), stdev = 12.734
[info]   CI (99.9%): [1085.874, 1183.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10533.351 ±(99.9%) 226.791 B/op [Average]
[info]   (min, avg, max) = (10484.814, 10533.351, 10631.734), stdev = 58.897
[info]   CI (99.9%): [10306.560, 10760.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1121.269 ±(99.9%) 697.306 MB/sec [Average]
[info]   (min, avg, max) = (986.567, 1121.269, 1323.025), stdev = 181.088
[info]   CI (99.9%): [423.964, 1818.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10396.521 ±(99.9%) 6126.370 B/op [Average]
[info]   (min, avg, max) = (9081.861, 10396.521, 12256.756), stdev = 1590.999
[info]   CI (99.9%): [4270.151, 16522.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.737 ±(99.9%) 4.532 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.737, 2.790), stdev = 1.177
[info]   CI (99.9%): [≈ 0, 5.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.845 ±(99.9%) 41.989 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.845, 25.843), stdev = 10.904
[info]   CI (99.9%): [≈ 0, 48.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 12.000), stdev = 3.391
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.82% complete, ETA 01:09:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 205612.600 ops/s
[info] # Warmup Iteration   2: 496832.692 ops/s
[info] # Warmup Iteration   3: 523064.911 ops/s
[info] Iteration   1: 534661.419 ops/s
[info]                  ·gc.alloc.rate:                   563.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              1657.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1921.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 537515.117 ops/s
[info]                  ·gc.alloc.rate:                   561.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              1641.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1908.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 535494.588 ops/s
[info]                  ·gc.alloc.rate:               552.372 MB/sec
[info]                  ·gc.alloc.rate.norm:          1623.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 963.236 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 532878.625 ops/s
[info]                  ·gc.alloc.rate:                   557.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              1644.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1937.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 531912.722 ops/s
[info]                  ·gc.alloc.rate:               545.692 MB/sec
[info]                  ·gc.alloc.rate.norm:          1614.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 971.674 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala":
[info]   534492.494 ±(99.9%) 8486.450 ops/s [Average]
[info]   (min, avg, max) = (531912.722, 534492.494, 537515.117), stdev = 2203.904
[info]   CI (99.9%): [526006.044, 542978.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   555.920 ±(99.9%) 27.238 MB/sec [Average]
[info]   (min, avg, max) = (545.692, 555.920, 563.161), stdev = 7.074
[info]   CI (99.9%): [528.682, 583.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1636.343 ±(99.9%) 66.902 B/op [Average]
[info]   (min, avg, max) = (1614.360, 1636.343, 1657.631), stdev = 17.374
[info]   CI (99.9%): [1569.441, 1703.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   523.603 ±(99.9%) 687.203 MB/sec [Average]
[info]   (min, avg, max) = (327.775, 523.603, 656.287), stdev = 178.465
[info]   CI (99.9%): [≈ 0, 1210.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1540.626 ±(99.9%) 2015.202 B/op [Average]
[info]   (min, avg, max) = (963.236, 1540.626, 1937.854), stdev = 523.342
[info]   CI (99.9%): [≈ 0, 3555.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.307 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.073, 0.184), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.06% complete, ETA 01:09:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 471183.465 ops/s
[info] # Warmup Iteration   2: 657939.912 ops/s
[info] # Warmup Iteration   3: 726558.923 ops/s
[info] Iteration   1: 711860.209 ops/s
[info]                  ·gc.alloc.rate:               557.929 MB/sec
[info]                  ·gc.alloc.rate.norm:          1233.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 729.017 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 720559.644 ops/s
[info]                  ·gc.alloc.rate:                   575.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              1257.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1441.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 708673.065 ops/s
[info]                  ·gc.alloc.rate:               562.423 MB/sec
[info]                  ·gc.alloc.rate.norm:          1248.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1467.556 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 713536.472 ops/s
[info]                  ·gc.alloc.rate:                   555.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              1225.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     730.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 708445.959 ops/s
[info]                  ·gc.alloc.rate:                   558.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              1240.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1471.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala":
[info]   712615.070 ±(99.9%) 19006.736 ops/s [Average]
[info]   (min, avg, max) = (708445.959, 712615.070, 720559.644), stdev = 4935.989
[info]   CI (99.9%): [693608.333, 731621.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   562.004 ±(99.9%) 30.713 MB/sec [Average]
[info]   (min, avg, max) = (555.732, 562.004, 575.601), stdev = 7.976
[info]   CI (99.9%): [531.291, 592.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1241.084 ±(99.9%) 47.640 B/op [Average]
[info]   (min, avg, max) = (1225.679, 1241.084, 1257.028), stdev = 12.372
[info]   CI (99.9%): [1193.444, 1288.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   528.891 ±(99.9%) 697.645 MB/sec [Average]
[info]   (min, avg, max) = (329.750, 528.891, 662.501), stdev = 181.176
[info]   CI (99.9%): [≈ 0, 1226.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1168.072 ±(99.9%) 1541.807 B/op [Average]
[info]   (min, avg, max) = (729.017, 1168.072, 1471.653), stdev = 400.402
[info]   CI (99.9%): [≈ 0, 2709.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.177 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.092), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 6.000), stdev = 1.817
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 23.29% complete, ETA 01:09:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 504516.359 ops/s
[info] # Warmup Iteration   2: 758701.760 ops/s
[info] # Warmup Iteration   3: 762616.589 ops/s
[info] Iteration   1: 772535.742 ops/s
[info]                  ·gc.alloc.rate:      0.941 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.918 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 779870.222 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 779356.754 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 779234.461 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 779250.273 ops/s
[info]                  ·gc.alloc.rate:      0.081 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.164 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   778049.490 ±(99.9%) 11910.799 ops/s [Average]
[info]   (min, avg, max) = (772535.742, 778049.490, 779870.222), stdev = 3093.197
[info]   CI (99.9%): [766138.692, 789960.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.205 ±(99.9%) 1.592 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.205, 0.941), stdev = 0.413
[info]   CI (99.9%): [≈ 0, 1.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.417 ±(99.9%) 3.243 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.417, 1.918), stdev = 0.842
[info]   CI (99.9%): [≈ 0, 3.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 23.53% complete, ETA 01:09:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85035.529 ops/s
[info] # Warmup Iteration   2: 298895.060 ops/s
[info] # Warmup Iteration   3: 309323.406 ops/s
[info] Iteration   1: 322917.805 ops/s
[info]                  ·gc.alloc.rate:                   922.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              4494.979 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4775.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 329980.404 ops/s
[info]                  ·gc.alloc.rate:               943.488 MB/sec
[info]                  ·gc.alloc.rate.norm:          4498.624 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4686.050 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 328707.537 ops/s
[info]                  ·gc.alloc.rate:                   927.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              4437.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4720.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.848 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 323397.969 ops/s
[info]                  ·gc.alloc.rate:                   911.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              4434.587 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3196.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.533 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 320464.869 ops/s
[info]                  ·gc.alloc.rate:                   920.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              4518.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4815.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.227 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson":
[info]   325093.717 ±(99.9%) 15638.521 ops/s [Average]
[info]   (min, avg, max) = (320464.869, 325093.717, 329980.404), stdev = 4061.274
[info]   CI (99.9%): [309455.195, 340732.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   924.853 ±(99.9%) 45.830 MB/sec [Average]
[info]   (min, avg, max) = (911.242, 924.853, 943.488), stdev = 11.902
[info]   CI (99.9%): [879.023, 970.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4476.816 ±(99.9%) 147.137 B/op [Average]
[info]   (min, avg, max) = (4434.587, 4476.816, 4518.251), stdev = 38.211
[info]   CI (99.9%): [4329.679, 4623.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   917.282 ±(99.9%) 560.730 MB/sec [Average]
[info]   (min, avg, max) = (656.826, 917.282, 986.189), stdev = 145.620
[info]   CI (99.9%): [356.552, 1478.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4438.867 ±(99.9%) 2681.233 B/op [Average]
[info]   (min, avg, max) = (3196.463, 4438.867, 4815.474), stdev = 696.308
[info]   CI (99.9%): [1757.634, 7120.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 5.422 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.820, 3.311), stdev = 1.408
[info]   CI (99.9%): [≈ 0, 6.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.942 ±(99.9%) 25.931 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.942, 15.848), stdev = 6.734
[info]   CI (99.9%): [≈ 0, 29.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 10.000), stdev = 3.362
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 23.76% complete, ETA 01:08:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8681.694 ops/s
[info] # Warmup Iteration   2: 31174.017 ops/s
[info] # Warmup Iteration   3: 37557.976 ops/s
[info] Iteration   1: 36567.189 ops/s
[info]                  ·gc.alloc.rate:                   1876.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              80764.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85546.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.768 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 162.156 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 37393.338 ops/s
[info]                  ·gc.alloc.rate:                   1898.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              79916.841 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69177.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.752 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 37591.413 ops/s
[info]                  ·gc.alloc.rate:               1938.896 MB/sec
[info]                  ·gc.alloc.rate.norm:          81146.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1977.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 82772.775 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 37071.851 ops/s
[info]                  ·gc.alloc.rate:                   1910.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              81099.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1991.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84558.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.884 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 38060.582 ops/s
[info]                  ·gc.alloc.rate:               1948.424 MB/sec
[info]                  ·gc.alloc.rate.norm:          80558.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1671.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 69096.167 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce":
[info]   37336.875 ±(99.9%) 2156.348 ops/s [Average]
[info]   (min, avg, max) = (36567.189, 37336.875, 38060.582), stdev = 559.997
[info]   CI (99.9%): [35180.527, 39493.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate":
[info]   1914.664 ±(99.9%) 112.914 MB/sec [Average]
[info]   (min, avg, max) = (1876.620, 1914.664, 1948.424), stdev = 29.323
[info]   CI (99.9%): [1801.750, 2027.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   80697.006 ±(99.9%) 1921.212 B/op [Average]
[info]   (min, avg, max) = (79916.841, 80697.006, 81146.162), stdev = 498.933
[info]   CI (99.9%): [78775.794, 82618.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1854.472 ±(99.9%) 693.789 MB/sec [Average]
[info]   (min, avg, max) = (1643.745, 1854.472, 1991.928), stdev = 180.175
[info]   CI (99.9%): [1160.683, 2548.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   78230.120 ±(99.9%) 32193.479 B/op [Average]
[info]   (min, avg, max) = (69096.167, 78230.120, 85546.555), stdev = 8360.544
[info]   CI (99.9%): [46036.641, 110423.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.766 ±(99.9%) 6.462 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.766, 3.768), stdev = 1.678
[info]   CI (99.9%): [≈ 0, 7.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   32.958 ±(99.9%) 278.121 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 32.958, 162.156), stdev = 72.227
[info]   CI (99.9%): [≈ 0, 311.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 15.000), stdev = 3.391
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 24.00% complete, ETA 01:08:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.812 ops/s
[info] # Warmup Iteration   2: 279124.383 ops/s
[info] # Warmup Iteration   3: 297556.439 ops/s
[info] Iteration   1: 298608.908 ops/s
[info]                  ·gc.alloc.rate:                   317.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              1672.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1348.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 299853.561 ops/s
[info]                  ·gc.alloc.rate:               321.684 MB/sec
[info]                  ·gc.alloc.rate.norm:          1687.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1704.510 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 298225.983 ops/s
[info]                  ·gc.alloc.rate:                   318.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              1678.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1713.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.024 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 298839.531 ops/s
[info]                  ·gc.alloc.rate:               319.418 MB/sec
[info]                  ·gc.alloc.rate.norm:          1682.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1711.938 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 299066.710 ops/s
[info]                  ·gc.alloc.rate:                   321.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              1689.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1710.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava":
[info]   298918.939 ±(99.9%) 2340.647 ops/s [Average]
[info]   (min, avg, max) = (298225.983, 298918.939, 299853.561), stdev = 607.859
[info]   CI (99.9%): [296578.292, 301259.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   319.502 ±(99.9%) 7.290 MB/sec [Average]
[info]   (min, avg, max) = (317.272, 319.502, 321.684), stdev = 1.893
[info]   CI (99.9%): [312.211, 326.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1682.027 ±(99.9%) 27.666 B/op [Average]
[info]   (min, avg, max) = (1672.026, 1682.027, 1689.602), stdev = 7.185
[info]   CI (99.9%): [1654.361, 1709.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   311.113 ±(99.9%) 119.005 MB/sec [Average]
[info]   (min, avg, max) = (255.828, 311.113, 325.080), stdev = 30.905
[info]   CI (99.9%): [192.108, 430.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1637.803 ±(99.9%) 623.497 B/op [Average]
[info]   (min, avg, max) = (1348.217, 1637.803, 1713.704), stdev = 161.920
[info]   CI (99.9%): [1014.306, 2261.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.045 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.024), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.065 ±(99.9%) 0.235 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.065, 0.129), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.24% complete, ETA 01:08:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25645.387 ops/s
[info] # Warmup Iteration   2: 102964.617 ops/s
[info] # Warmup Iteration   3: 113583.693 ops/s
[info] Iteration   1: 115034.525 ops/s
[info]                  ·gc.alloc.rate:                   1375.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              18812.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17990.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 115187.031 ops/s
[info]                  ·gc.alloc.rate:                   1372.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              18749.542 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17984.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.122 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.315 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 115862.519 ops/s
[info]                  ·gc.alloc.rate:                   1390.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              18891.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17771.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.848 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 116001.151 ops/s
[info]                  ·gc.alloc.rate:                   1399.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              18983.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22177.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.282 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 115697.635 ops/s
[info]                  ·gc.alloc.rate:                   1396.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              18991.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17886.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.283 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala":
[info]   115556.572 ±(99.9%) 1633.969 ops/s [Average]
[info]   (min, avg, max) = (115034.525, 115556.572, 116001.151), stdev = 424.337
[info]   CI (99.9%): [113922.603, 117190.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1386.770 ±(99.9%) 47.364 MB/sec [Average]
[info]   (min, avg, max) = (1372.341, 1386.770, 1399.349), stdev = 12.300
[info]   CI (99.9%): [1339.406, 1434.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   18885.810 ±(99.9%) 406.472 B/op [Average]
[info]   (min, avg, max) = (18749.542, 18885.810, 18991.064), stdev = 105.560
[info]   CI (99.9%): [18479.337, 19292.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1377.897 ±(99.9%) 553.015 MB/sec [Average]
[info]   (min, avg, max) = (1308.376, 1377.897, 1634.745), stdev = 143.616
[info]   CI (99.9%): [824.882, 1930.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   18762.107 ±(99.9%) 7358.977 B/op [Average]
[info]   (min, avg, max) = (17771.401, 18762.107, 22177.071), stdev = 1911.103
[info]   CI (99.9%): [11403.130, 26121.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.849 ±(99.9%) 7.045 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.849, 4.122), stdev = 1.829
[info]   CI (99.9%): [≈ 0, 7.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.603 ±(99.9%) 96.251 B/op [Average]
[info]   (min, avg, max) = (0.282, 11.603, 56.315), stdev = 24.996
[info]   CI (99.9%): [≈ 0, 107.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 13.000), stdev = 3.209
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.47% complete, ETA 01:08:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 261778.413 ops/s
[info] # Warmup Iteration   2: 436021.132 ops/s
[info] # Warmup Iteration   3: 461838.800 ops/s
[info] Iteration   1: 478781.890 ops/s
[info]                  ·gc.alloc.rate:                   317.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              1043.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     840.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 480585.869 ops/s
[info]                  ·gc.alloc.rate:               319.181 MB/sec
[info]                  ·gc.alloc.rate.norm:          1045.203 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 837.662 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 462839.344 ops/s
[info]                  ·gc.alloc.rate:                   312.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              1062.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1120.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 466881.615 ops/s
[info]                  ·gc.alloc.rate:               326.037 MB/sec
[info]                  ·gc.alloc.rate.norm:          1098.731 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1110.292 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 482177.372 ops/s
[info]                  ·gc.alloc.rate:                   324.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              1060.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1077.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala":
[info]   474253.218 ±(99.9%) 33790.393 ops/s [Average]
[info]   (min, avg, max) = (462839.344, 474253.218, 482177.372), stdev = 8775.258
[info]   CI (99.9%): [440462.825, 508043.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   320.009 ±(99.9%) 21.632 MB/sec [Average]
[info]   (min, avg, max) = (312.378, 320.009, 326.037), stdev = 5.618
[info]   CI (99.9%): [298.378, 341.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1062.043 ±(99.9%) 85.554 B/op [Average]
[info]   (min, avg, max) = (1043.523, 1062.043, 1098.731), stdev = 22.218
[info]   CI (99.9%): [976.489, 1147.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   300.125 ±(99.9%) 155.782 MB/sec [Average]
[info]   (min, avg, max) = (255.802, 300.125, 330.116), stdev = 40.456
[info]   CI (99.9%): [144.343, 455.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   997.260 ±(99.9%) 558.789 B/op [Average]
[info]   (min, avg, max) = (837.662, 997.260, 1120.107), stdev = 145.116
[info]   CI (99.9%): [438.471, 1556.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.040 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.021), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.134 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.071), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 24.71% complete, ETA 01:08:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2965.867 ops/s
[info] # Warmup Iteration   2: 27972.992 ops/s
[info] # Warmup Iteration   3: 39460.613 ops/s
[info] Iteration   1: 39583.745 ops/s
[info]                  ·gc.alloc.rate:                   1963.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              78043.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78475.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.434 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 176.292 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 40856.140 ops/s
[info]                  ·gc.alloc.rate:                   2024.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              77995.731 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1957.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75417.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.208 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 40085.775 ops/s
[info]                  ·gc.alloc.rate:                   2005.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              78727.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1962.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77022.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.635 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 40078.300 ops/s
[info]                  ·gc.alloc.rate:                   2005.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              78758.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77764.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.817 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 40776.821 ops/s
[info]                  ·gc.alloc.rate:                   2029.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              78339.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1999.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77166.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.803 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson":
[info]   40276.156 ±(99.9%) 2057.367 ops/s [Average]
[info]   (min, avg, max) = (39583.745, 40276.156, 40856.140), stdev = 534.292
[info]   CI (99.9%): [38218.789, 42333.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2005.876 ±(99.9%) 101.337 MB/sec [Average]
[info]   (min, avg, max) = (1963.063, 2005.876, 2029.895), stdev = 26.317
[info]   CI (99.9%): [1904.539, 2107.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   78373.068 ±(99.9%) 1397.081 B/op [Average]
[info]   (min, avg, max) = (77995.731, 78373.068, 78758.693), stdev = 362.818
[info]   CI (99.9%): [76975.987, 79770.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1974.825 ±(99.9%) 63.386 MB/sec [Average]
[info]   (min, avg, max) = (1957.916, 1974.825, 1999.488), stdev = 16.461
[info]   CI (99.9%): [1911.439, 2038.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   77169.109 ±(99.9%) 4370.463 B/op [Average]
[info]   (min, avg, max) = (75417.000, 77169.109, 78475.681), stdev = 1134.995
[info]   CI (99.9%): [72798.647, 81539.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.920 ±(99.9%) 7.565 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.920, 4.434), stdev = 1.965
[info]   CI (99.9%): [≈ 0, 8.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   36.551 ±(99.9%) 300.827 B/op [Average]
[info]   (min, avg, max) = (0.803, 36.551, 176.292), stdev = 78.124
[info]   CI (99.9%): [≈ 0, 337.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.400, 18.000), stdev = 4.278
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 24.94% complete, ETA 01:07:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28657.194 ops/s
[info] # Warmup Iteration   2: 72196.395 ops/s
[info] # Warmup Iteration   3: 73892.618 ops/s
[info] Iteration   1: 75252.166 ops/s
[info]                  ·gc.alloc.rate:                   610.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              12776.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13694.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.372 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.527 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 75264.349 ops/s
[info]                  ·gc.alloc.rate:                   615.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              12872.942 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13664.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.871 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 75131.726 ops/s
[info]                  ·gc.alloc.rate:               615.287 MB/sec
[info]                  ·gc.alloc.rate.norm:          12887.658 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13674.045 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 75214.984 ops/s
[info]                  ·gc.alloc.rate:                   611.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              12785.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13665.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.436 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 75320.119 ops/s
[info]                  ·gc.alloc.rate:                   611.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              12772.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13667.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.435 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce":
[info]   75236.669 ±(99.9%) 268.537 ops/s [Average]
[info]   (min, avg, max) = (75131.726, 75236.669, 75320.119), stdev = 69.738
[info]   CI (99.9%): [74968.132, 75505.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate":
[info]   612.854 ±(99.9%) 9.185 MB/sec [Average]
[info]   (min, avg, max) = (610.941, 612.854, 615.632), stdev = 2.385
[info]   CI (99.9%): [603.668, 622.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12819.022 ±(99.9%) 217.179 B/op [Average]
[info]   (min, avg, max) = (12772.211, 12819.022, 12887.658), stdev = 56.401
[info]   CI (99.9%): [12601.843, 13036.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   653.696 ±(99.9%) 3.113 MB/sec [Average]
[info]   (min, avg, max) = (652.831, 653.696, 654.841), stdev = 0.808
[info]   CI (99.9%): [650.583, 656.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   13673.299 ±(99.9%) 47.633 B/op [Average]
[info]   (min, avg, max) = (13664.179, 13673.299, 13694.401), stdev = 12.370
[info]   CI (99.9%): [13625.665, 13720.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.691 ±(99.9%) 5.772 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.691, 3.372), stdev = 1.499
[info]   CI (99.9%): [≈ 0, 6.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   14.454 ±(99.9%) 120.708 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14.454, 70.527), stdev = 31.347
[info]   CI (99.9%): [≈ 0, 135.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 25.18% complete, ETA 01:07:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.816 ops/s
[info] # Warmup Iteration   2: 77255.585 ops/s
[info] # Warmup Iteration   3: 86246.765 ops/s
[info] Iteration   1: 87586.462 ops/s
[info]                  ·gc.alloc.rate:                   508.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              9142.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11670.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 86832.891 ops/s
[info]                  ·gc.alloc.rate:               498.868 MB/sec
[info]                  ·gc.alloc.rate.norm:          9039.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5892.301 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 87240.634 ops/s
[info]                  ·gc.alloc.rate:                   509.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              9194.724 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11740.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.621 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 87597.185 ops/s
[info]                  ·gc.alloc.rate:               506.491 MB/sec
[info]                  ·gc.alloc.rate.norm:          9099.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5852.551 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 87283.640 ops/s
[info]                  ·gc.alloc.rate:               514.441 MB/sec
[info]                  ·gc.alloc.rate.norm:          9275.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11771.361 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava":
[info]   87308.163 ±(99.9%) 1205.486 ops/s [Average]
[info]   (min, avg, max) = (86832.891, 87308.163, 87597.185), stdev = 313.061
[info]   CI (99.9%): [86102.676, 88513.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   507.669 ±(99.9%) 21.974 MB/sec [Average]
[info]   (min, avg, max) = (498.868, 507.669, 514.441), stdev = 5.707
[info]   CI (99.9%): [485.695, 529.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   9150.517 ±(99.9%) 347.002 B/op [Average]
[info]   (min, avg, max) = (9039.906, 9150.517, 9275.599), stdev = 90.115
[info]   CI (99.9%): [8803.514, 9497.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   520.830 ±(99.9%) 686.764 MB/sec [Average]
[info]   (min, avg, max) = (325.167, 520.830, 652.861), stdev = 178.350
[info]   CI (99.9%): [≈ 0, 1207.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   9385.489 ±(99.9%) 12349.830 B/op [Average]
[info]   (min, avg, max) = (5852.551, 9385.489, 11771.361), stdev = 3207.212
[info]   CI (99.9%): [≈ 0, 21735.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.009 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.034), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.157 ±(99.9%) 1.035 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.157, 0.621), stdev = 0.269
[info]   CI (99.9%): [≈ 0, 1.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 6.000), stdev = 1.949
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.41% complete, ETA 01:07:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28154.692 ops/s
[info] # Warmup Iteration   2: 71672.373 ops/s
[info] # Warmup Iteration   3: 78961.299 ops/s
[info] Iteration   1: 78969.669 ops/s
[info]                  ·gc.alloc.rate:               317.832 MB/sec
[info]                  ·gc.alloc.rate.norm:          6333.713 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5097.715 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 78873.408 ops/s
[info]                  ·gc.alloc.rate:               322.958 MB/sec
[info]                  ·gc.alloc.rate.norm:          6443.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5104.112 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 79041.457 ops/s
[info]                  ·gc.alloc.rate:                   319.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              6356.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6499.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.414 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 78941.374 ops/s
[info]                  ·gc.alloc.rate:                   320.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              6394.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6507.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.415 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 78841.034 ops/s
[info]                  ·gc.alloc.rate:                   321.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              6423.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6528.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.416 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala":
[info]   78933.388 ±(99.9%) 305.550 ops/s [Average]
[info]   (min, avg, max) = (78841.034, 78933.388, 79041.457), stdev = 79.350
[info]   CI (99.9%): [78627.839, 79238.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   320.534 ±(99.9%) 7.760 MB/sec [Average]
[info]   (min, avg, max) = (317.832, 320.534, 322.958), stdev = 2.015
[info]   CI (99.9%): [312.774, 328.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   6390.235 ±(99.9%) 175.933 B/op [Average]
[info]   (min, avg, max) = (6333.713, 6390.235, 6443.933), stdev = 45.689
[info]   CI (99.9%): [6214.302, 6566.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   298.332 ±(99.9%) 149.478 MB/sec [Average]
[info]   (min, avg, max) = (255.808, 298.332, 327.085), stdev = 38.819
[info]   CI (99.9%): [148.854, 447.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5947.466 ±(99.9%) 2976.056 B/op [Average]
[info]   (min, avg, max) = (5097.715, 5947.466, 6528.834), stdev = 772.872
[info]   CI (99.9%): [2971.410, 8923.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.249 ±(99.9%) 0.875 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.249, 0.416), stdev = 0.227
[info]   CI (99.9%): [≈ 0, 1.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.65% complete, ETA 01:07:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53337.523 ops/s
[info] # Warmup Iteration   2: 83837.745 ops/s
[info] # Warmup Iteration   3: 85071.254 ops/s
[info] Iteration   1: 85937.265 ops/s
[info]                  ·gc.alloc.rate:                   508.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              9319.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12077.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.381 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 86763.404 ops/s
[info]                  ·gc.alloc.rate:               506.741 MB/sec
[info]                  ·gc.alloc.rate.norm:          9192.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5993.520 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 86465.683 ops/s
[info]                  ·gc.alloc.rate:               509.987 MB/sec
[info]                  ·gc.alloc.rate.norm:          9281.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12033.575 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 87059.435 ops/s
[info]                  ·gc.alloc.rate:               502.006 MB/sec
[info]                  ·gc.alloc.rate.norm:          9073.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5979.029 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 86532.706 ops/s
[info]                  ·gc.alloc.rate:                   512.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              9316.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12054.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.379 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala":
[info]   86551.699 ±(99.9%) 1596.861 ops/s [Average]
[info]   (min, avg, max) = (85937.265, 86551.699, 87059.435), stdev = 414.700
[info]   CI (99.9%): [84954.838, 88148.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   507.992 ±(99.9%) 15.021 MB/sec [Average]
[info]   (min, avg, max) = (502.006, 507.992, 512.307), stdev = 3.901
[info]   CI (99.9%): [492.972, 523.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   9236.789 ±(99.9%) 403.813 B/op [Average]
[info]   (min, avg, max) = (9073.161, 9236.789, 9319.383), stdev = 104.869
[info]   CI (99.9%): [8832.977, 9640.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   528.953 ±(99.9%) 697.248 MB/sec [Average]
[info]   (min, avg, max) = (330.391, 528.953, 662.873), stdev = 181.073
[info]   CI (99.9%): [≈ 0, 1226.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9627.645 ±(99.9%) 12800.083 B/op [Average]
[info]   (min, avg, max) = (5979.029, 9627.645, 12077.136), stdev = 3324.141
[info]   CI (99.9%): [≈ 0, 22427.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 0.801 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.152, 0.381), stdev = 0.208
[info]   CI (99.9%): [≈ 0, 0.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.342
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 25.88% complete, ETA 01:07:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46018.829 ops/s
[info] # Warmup Iteration   2: 84178.038 ops/s
[info] # Warmup Iteration   3: 85939.274 ops/s
[info] Iteration   1: 85101.395 ops/s
[info]                  ·gc.alloc.rate:               438.676 MB/sec
[info]                  ·gc.alloc.rate.norm:          8111.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:      585.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10828.604 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 87918.143 ops/s
[info]                  ·gc.alloc.rate:               435.953 MB/sec
[info]                  ·gc.alloc.rate.norm:          7803.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5902.936 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 87900.840 ops/s
[info]                  ·gc.alloc.rate:                   437.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              7834.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5915.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.745 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 87415.233 ops/s
[info]                  ·gc.alloc.rate:                   449.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              8086.610 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11902.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.375 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 87720.369 ops/s
[info]                  ·gc.alloc.rate:               435.418 MB/sec
[info]                  ·gc.alloc.rate.norm:          7811.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5933.645 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc":
[info]   87211.196 ±(99.9%) 4607.730 ops/s [Average]
[info]   (min, avg, max) = (85101.395, 87211.196, 87918.143), stdev = 1196.613
[info]   CI (99.9%): [82603.466, 91818.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   439.364 ±(99.9%) 21.732 MB/sec [Average]
[info]   (min, avg, max) = (435.418, 439.364, 449.190), stdev = 5.644
[info]   CI (99.9%): [417.632, 461.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   7929.448 ±(99.9%) 599.295 B/op [Average]
[info]   (min, avg, max) = (7803.072, 7929.448, 8111.807), stdev = 155.635
[info]   CI (99.9%): [7330.153, 8528.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   447.547 ±(99.9%) 626.599 MB/sec [Average]
[info]   (min, avg, max) = (329.793, 447.547, 661.171), stdev = 162.726
[info]   CI (99.9%): [≈ 0, 1074.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   8096.763 ±(99.9%) 11583.595 B/op [Average]
[info]   (min, avg, max) = (5902.936, 8096.763, 11902.826), stdev = 3008.223
[info]   CI (99.9%): [≈ 0, 19680.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.224 ±(99.9%) 1.285 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.224, 0.745), stdev = 0.334
[info]   CI (99.9%): [≈ 0, 1.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 7.000), stdev = 2.168
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 26.12% complete, ETA 01:06:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1453.199 ops/s
[info] # Warmup Iteration   2: 8004.177 ops/s
[info] # Warmup Iteration   3: 10364.775 ops/s
[info] Iteration   1: 10337.491 ops/s
[info]                  ·gc.alloc.rate:                   1688.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              256969.797 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     252205.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 507.048 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 10206.895 ops/s
[info]                  ·gc.alloc.rate:                   1667.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              257089.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     202936.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 115.538 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 10253.236 ops/s
[info]                  ·gc.alloc.rate:               1681.163 MB/sec
[info]                  ·gc.alloc.rate.norm:          258032.414 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1642.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 252022.215 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 10295.986 ops/s
[info]                  ·gc.alloc.rate:               1707.936 MB/sec
[info]                  ·gc.alloc.rate.norm:          261037.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1646.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 251682.675 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 10084.636 ops/s
[info]                  ·gc.alloc.rate:               1674.525 MB/sec
[info]                  ·gc.alloc.rate.norm:          261323.136 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1658.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 258791.509 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce":
[info]   10235.649 ±(99.9%) 375.083 ops/s [Average]
[info]   (min, avg, max) = (10084.636, 10235.649, 10337.491), stdev = 97.408
[info]   CI (99.9%): [9860.566, 10610.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate":
[info]   1683.848 ±(99.9%) 59.584 MB/sec [Average]
[info]   (min, avg, max) = (1667.551, 1683.848, 1707.936), stdev = 15.474
[info]   CI (99.9%): [1624.264, 1743.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   258890.489 ±(99.9%) 8212.826 B/op [Average]
[info]   (min, avg, max) = (256969.797, 258890.489, 261323.136), stdev = 2132.845
[info]   CI (99.9%): [250677.663, 267103.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1584.022 ±(99.9%) 576.883 MB/sec [Average]
[info]   (min, avg, max) = (1316.302, 1584.022, 1658.302), stdev = 149.815
[info]   CI (99.9%): [1007.138, 2160.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   243527.839 ±(99.9%) 88115.074 B/op [Average]
[info]   (min, avg, max) = (202936.942, 243527.839, 258791.509), stdev = 22883.205
[info]   CI (99.9%): [155412.765, 331642.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.816 ±(99.9%) 5.556 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.816, 3.331), stdev = 1.443
[info]   CI (99.9%): [≈ 0, 6.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   124.517 ±(99.9%) 845.662 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 124.517, 507.048), stdev = 219.616
[info]   CI (99.9%): [≈ 0, 970.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 16.000), stdev = 4.278
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.35% complete, ETA 01:06:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1166.497 ops/s
[info] # Warmup Iteration   2: 7312.581 ops/s
[info] # Warmup Iteration   3: 10079.003 ops/s
[info] Iteration   1: 10124.888 ops/s
[info]                  ·gc.alloc.rate:                   1565.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              243366.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255776.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.706 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 10292.530 ops/s
[info]                  ·gc.alloc.rate:                   1597.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              244219.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     251067.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 627.368 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 10380.450 ops/s
[info]                  ·gc.alloc.rate:                   1589.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              241018.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198021.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63.112 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 10083.944 ops/s
[info]                  ·gc.alloc.rate:               1578.258 MB/sec
[info]                  ·gc.alloc.rate.norm:          246291.677 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1634.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 255101.170 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 10164.722 ops/s
[info]                  ·gc.alloc.rate:               1591.704 MB/sec
[info]                  ·gc.alloc.rate.norm:          246414.382 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1647.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 254976.806 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala":
[info]   10209.307 ±(99.9%) 475.700 ops/s [Average]
[info]   (min, avg, max) = (10083.944, 10209.307, 10380.450), stdev = 123.538
[info]   CI (99.9%): [9733.607, 10685.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1584.601 ±(99.9%) 48.307 MB/sec [Average]
[info]   (min, avg, max) = (1565.907, 1584.601, 1597.345), stdev = 12.545
[info]   CI (99.9%): [1536.295, 1632.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   244262.134 ±(99.9%) 8627.100 B/op [Average]
[info]   (min, avg, max) = (241018.202, 244262.134, 246414.382), stdev = 2240.431
[info]   CI (99.9%): [235635.034, 252889.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1575.159 ±(99.9%) 579.288 MB/sec [Average]
[info]   (min, avg, max) = (1306.182, 1575.159, 1647.013), stdev = 150.439
[info]   CI (99.9%): [995.871, 2154.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   242988.789 ±(99.9%) 97057.183 B/op [Average]
[info]   (min, avg, max) = (198021.720, 242988.789, 255776.758), stdev = 25205.442
[info]   CI (99.9%): [145931.606, 340045.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.916 ±(99.9%) 6.892 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.916, 4.103), stdev = 1.790
[info]   CI (99.9%): [≈ 0, 7.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   140.037 ±(99.9%) 1053.866 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 140.037, 627.368), stdev = 273.686
[info]   CI (99.9%): [≈ 0, 1193.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.000, 19.000), stdev = 5.385
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.59% complete, ETA 01:06:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73161.483 ops/s
[info] # Warmup Iteration   2: 141826.818 ops/s
[info] # Warmup Iteration   3: 147474.739 ops/s
[info] Iteration   1: 150018.910 ops/s
[info]                  ·gc.alloc.rate:               397.689 MB/sec
[info]                  ·gc.alloc.rate.norm:          4172.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2683.549 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 150655.669 ops/s
[info]                  ·gc.alloc.rate:               402.077 MB/sec
[info]                  ·gc.alloc.rate.norm:          4200.226 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3448.141 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 149730.230 ops/s
[info]                  ·gc.alloc.rate:                   408.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              4296.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6945.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.656 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 150105.473 ops/s
[info]                  ·gc.alloc.rate:                   398.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              4181.137 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3467.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.218 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 150001.494 ops/s
[info]                  ·gc.alloc.rate:               399.979 MB/sec
[info]                  ·gc.alloc.rate.norm:          4196.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3473.541 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala":
[info]   150102.355 ±(99.9%) 1308.340 ops/s [Average]
[info]   (min, avg, max) = (149730.230, 150102.355, 150655.669), stdev = 339.772
[info]   CI (99.9%): [148794.016, 151410.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   401.465 ±(99.9%) 16.931 MB/sec [Average]
[info]   (min, avg, max) = (397.689, 401.465, 408.774), stdev = 4.397
[info]   CI (99.9%): [384.535, 418.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4209.209 ±(99.9%) 192.530 B/op [Average]
[info]   (min, avg, max) = (4172.076, 4209.209, 4296.304), stdev = 49.999
[info]   CI (99.9%): [4016.678, 4401.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   381.722 ±(99.9%) 613.721 MB/sec [Average]
[info]   (min, avg, max) = (255.800, 381.722, 660.874), stdev = 159.381
[info]   CI (99.9%): [≈ 0, 995.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4003.783 ±(99.9%) 6465.313 B/op [Average]
[info]   (min, avg, max) = (2683.549, 4003.783, 6945.928), stdev = 1679.021
[info]   CI (99.9%): [≈ 0, 10469.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.175 ±(99.9%) 1.098 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.175, 0.656), stdev = 0.285
[info]   CI (99.9%): [≈ 0, 1.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 26.82% complete, ETA 01:06:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 504.289 ops/s
[info] # Warmup Iteration   2: 5057.519 ops/s
[info] # Warmup Iteration   3: 5814.033 ops/s
[info] Iteration   1: 6188.444 ops/s
[info]                  ·gc.alloc.rate:                   1626.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              413553.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     418583.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 804.642 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 6096.615 ops/s
[info]                  ·gc.alloc.rate:                   1611.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              416067.388 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     422765.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.395 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 359.970 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 6078.904 ops/s
[info]                  ·gc.alloc.rate:                   1587.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              410865.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     337282.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.497 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6224.736 ops/s
[info]                  ·gc.alloc.rate:               1657.547 MB/sec
[info]                  ·gc.alloc.rate.norm:          419021.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1635.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 413486.168 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 6267.978 ops/s
[info]                  ·gc.alloc.rate:               1669.184 MB/sec
[info]                  ·gc.alloc.rate.norm:          419055.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1648.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 413827.960 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson":
[info]   6171.335 ±(99.9%) 314.073 ops/s [Average]
[info]   (min, avg, max) = (6078.904, 6171.335, 6267.978), stdev = 81.564
[info]   CI (99.9%): [5857.262, 6485.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1630.443 ±(99.9%) 128.623 MB/sec [Average]
[info]   (min, avg, max) = (1587.198, 1630.443, 1669.184), stdev = 33.403
[info]   CI (99.9%): [1501.819, 1759.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   415712.549 ±(99.9%) 13669.610 B/op [Average]
[info]   (min, avg, max) = (410865.355, 415712.549, 419055.667), stdev = 3549.954
[info]   CI (99.9%): [402042.938, 429382.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1574.195 ±(99.9%) 584.251 MB/sec [Average]
[info]   (min, avg, max) = (1302.943, 1574.195, 1648.361), stdev = 151.728
[info]   CI (99.9%): [989.944, 2158.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   401189.152 ±(99.9%) 138343.879 B/op [Average]
[info]   (min, avg, max) = (337282.463, 401189.152, 422765.762), stdev = 35927.466
[info]   CI (99.9%): [262845.273, 539533.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.949 ±(99.9%) 5.268 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.949, 3.164), stdev = 1.368
[info]   CI (99.9%): [≈ 0, 6.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   242.622 ±(99.9%) 1340.904 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 242.622, 804.642), stdev = 348.229
[info]   CI (99.9%): [≈ 0, 1583.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.400, 19.000), stdev = 5.459
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 27.06% complete, ETA 01:06:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6260.731 ops/s
[info] # Warmup Iteration   2: 17790.366 ops/s
[info] # Warmup Iteration   3: 19908.955 ops/s
[info] Iteration   1: 19967.810 ops/s
[info]                  ·gc.alloc.rate:                   1542.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              121500.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104217.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 218.213 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 20209.001 ops/s
[info]                  ·gc.alloc.rate:                   1576.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              122782.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128283.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72.947 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 20231.497 ops/s
[info]                  ·gc.alloc.rate:                   1589.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              123541.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     127522.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.616 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 20083.054 ops/s
[info]                  ·gc.alloc.rate:                   1562.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              122436.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103354.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.525 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 20165.916 ops/s
[info]                  ·gc.alloc.rate:                   1589.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              124014.837 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     129421.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.874 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce":
[info]   20131.455 ±(99.9%) 414.422 ops/s [Average]
[info]   (min, avg, max) = (19967.810, 20131.455, 20231.497), stdev = 107.624
[info]   CI (99.9%): [19717.034, 20545.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1572.030 ±(99.9%) 76.763 MB/sec [Average]
[info]   (min, avg, max) = (1542.108, 1572.030, 1589.253), stdev = 19.935
[info]   CI (99.9%): [1495.267, 1648.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   122855.348 ±(99.9%) 3768.914 B/op [Average]
[info]   (min, avg, max) = (121500.342, 122855.348, 124014.837), stdev = 978.775
[info]   CI (99.9%): [119086.434, 126624.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1517.666 ±(99.9%) 691.677 MB/sec [Average]
[info]   (min, avg, max) = (1319.303, 1517.666, 1658.381), stdev = 179.626
[info]   CI (99.9%): [825.989, 2209.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   118559.813 ±(99.9%) 52011.608 B/op [Average]
[info]   (min, avg, max) = (103354.265, 118559.813, 129421.416), stdev = 13507.249
[info]   CI (99.9%): [66548.204, 170571.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.775 ±(99.9%) 4.540 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.775, 2.770), stdev = 1.179
[info]   CI (99.9%): [≈ 0, 5.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   60.835 ±(99.9%) 357.626 B/op [Average]
[info]   (min, avg, max) = (1.616, 60.835, 218.213), stdev = 92.874
[info]   CI (99.9%): [≈ 0, 418.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 13.000), stdev = 2.702
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.29% complete, ETA 01:05:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8656.490 ops/s
[info] # Warmup Iteration   2: 20158.164 ops/s
[info] # Warmup Iteration   3: 22999.692 ops/s
[info] Iteration   1: 23335.222 ops/s
[info]                  ·gc.alloc.rate:                   1579.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              106513.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     111102.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 205.124 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 23378.357 ops/s
[info]                  ·gc.alloc.rate:                   1571.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              105792.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88337.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.657 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 23423.198 ops/s
[info]                  ·gc.alloc.rate:                   1597.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              107302.299 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109968.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.399 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 23526.339 ops/s
[info]                  ·gc.alloc.rate:               1612.681 MB/sec
[info]                  ·gc.alloc.rate.norm:          107876.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1644.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 109977.713 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 23401.965 ops/s
[info]                  ·gc.alloc.rate:               1591.793 MB/sec
[info]                  ·gc.alloc.rate.norm:          107040.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1324.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89053.703 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala":
[info]   23413.016 ±(99.9%) 274.458 ops/s [Average]
[info]   (min, avg, max) = (23335.222, 23413.016, 23526.339), stdev = 71.276
[info]   CI (99.9%): [23138.558, 23687.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1590.575 ±(99.9%) 61.512 MB/sec [Average]
[info]   (min, avg, max) = (1571.631, 1590.575, 1612.681), stdev = 15.974
[info]   CI (99.9%): [1529.063, 1652.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   106905.175 ±(99.9%) 3050.828 B/op [Average]
[info]   (min, avg, max) = (105792.943, 106905.175, 107876.883), stdev = 792.290
[info]   CI (99.9%): [103854.347, 109956.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1513.048 ±(99.9%) 684.846 MB/sec [Average]
[info]   (min, avg, max) = (1312.325, 1513.048, 1647.429), stdev = 177.852
[info]   CI (99.9%): [828.202, 2197.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   101688.119 ±(99.9%) 45714.595 B/op [Average]
[info]   (min, avg, max) = (88337.954, 101688.119, 111102.333), stdev = 11871.935
[info]   CI (99.9%): [55973.524, 147402.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.796 ±(99.9%) 5.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.796, 3.042), stdev = 1.316
[info]   CI (99.9%): [≈ 0, 5.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   53.636 ±(99.9%) 341.685 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 53.636, 205.124), stdev = 88.734
[info]   CI (99.9%): [≈ 0, 395.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 15.000), stdev = 3.782
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.53% complete, ETA 01:05:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 94131.662 ops/s
[info] # Warmup Iteration   2: 124797.315 ops/s
[info] # Warmup Iteration   3: 134387.416 ops/s
[info] Iteration   1: 133537.676 ops/s
[info]                  ·gc.alloc.rate:               307.718 MB/sec
[info]                  ·gc.alloc.rate.norm:          3625.815 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6029.322 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 134671.817 ops/s
[info]                  ·gc.alloc.rate:      297.806 MB/sec
[info]                  ·gc.alloc.rate.norm: 3480.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 134079.499 ops/s
[info]                  ·gc.alloc.rate:               306.904 MB/sec
[info]                  ·gc.alloc.rate.norm:          3602.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3874.261 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 133990.196 ops/s
[info]                  ·gc.alloc.rate:                   308.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              3628.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3876.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.489 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 133033.415 ops/s
[info]                  ·gc.alloc.rate:               305.423 MB/sec
[info]                  ·gc.alloc.rate.norm:          3613.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3908.657 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala":
[info]   133862.521 ±(99.9%) 2366.880 ops/s [Average]
[info]   (min, avg, max) = (133033.415, 133862.521, 134671.817), stdev = 614.671
[info]   CI (99.9%): [131495.641, 136229.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   305.357 ±(99.9%) 16.979 MB/sec [Average]
[info]   (min, avg, max) = (297.806, 305.357, 308.934), stdev = 4.410
[info]   CI (99.9%): [288.378, 322.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3589.886 ±(99.9%) 239.972 B/op [Average]
[info]   (min, avg, max) = (3480.003, 3589.886, 3628.391), stdev = 62.320
[info]   CI (99.9%): [3349.914, 3829.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   300.457 ±(99.9%) 714.061 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 300.457, 511.700), stdev = 185.439
[info]   CI (99.9%): [≈ 0, 1014.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3537.821 ±(99.9%) 8412.008 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3537.821, 6029.322), stdev = 2184.572
[info]   CI (99.9%): [≈ 0, 11949.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.098 ±(99.9%) 0.842 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.098, 0.489), stdev = 0.219
[info]   CI (99.9%): [≈ 0, 0.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 6.000), stdev = 2.168
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 27.76% complete, ETA 01:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 94184.951 ops/s
[info] # Warmup Iteration   2: 134420.293 ops/s
[info] # Warmup Iteration   3: 139566.024 ops/s
[info] Iteration   1: 139533.600 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 139710.053 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 139560.160 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 139595.649 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 139702.572 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc":
[info]   139620.407 ±(99.9%) 313.807 ops/s [Average]
[info]   (min, avg, max) = (139533.600, 139620.407, 139710.053), stdev = 81.495
[info]   CI (99.9%): [139306.600, 139934.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.003 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.003, 0.004), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 28.00% complete, ETA 01:05:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9277.220 ops/s
[info] # Warmup Iteration   2: 20955.174 ops/s
[info] # Warmup Iteration   3: 23211.523 ops/s
[info] Iteration   1: 23372.359 ops/s
[info]                  ·gc.alloc.rate:                   1612.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              108570.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88996.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 213.218 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 22886.642 ops/s
[info]                  ·gc.alloc.rate:                   1606.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              110442.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112955.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60.120 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 23311.659 ops/s
[info]                  ·gc.alloc.rate:                   1623.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              109568.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110677.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.648 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 23560.555 ops/s
[info]                  ·gc.alloc.rate:                   1637.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              109345.759 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110063.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.781 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 23555.393 ops/s
[info]                  ·gc.alloc.rate:                   1656.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              110686.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     110883.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.172 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson":
[info]   23337.321 ±(99.9%) 1058.729 ops/s [Average]
[info]   (min, avg, max) = (22886.642, 23337.321, 23560.555), stdev = 274.948
[info]   CI (99.9%): [22278.593, 24396.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1627.080 ±(99.9%) 78.163 MB/sec [Average]
[info]   (min, avg, max) = (1606.194, 1627.080, 1656.771), stdev = 20.299
[info]   CI (99.9%): [1548.917, 1705.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   109722.655 ±(99.9%) 3300.616 B/op [Average]
[info]   (min, avg, max) = (108570.667, 109722.655, 110686.125), stdev = 857.159
[info]   CI (99.9%): [106422.039, 113023.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1582.276 ±(99.9%) 561.705 MB/sec [Average]
[info]   (min, avg, max) = (1321.694, 1582.276, 1659.726), stdev = 145.873
[info]   CI (99.9%): [1020.571, 2143.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   106715.301 ±(99.9%) 38371.188 B/op [Average]
[info]   (min, avg, max) = (88996.183, 106715.301, 112955.985), stdev = 9964.876
[info]   CI (99.9%): [68344.113, 145086.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.866 ±(99.9%) 5.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.866, 3.167), stdev = 1.330
[info]   CI (99.9%): [≈ 0, 5.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   58.588 ±(99.9%) 344.943 B/op [Average]
[info]   (min, avg, max) = (2.781, 58.588, 213.218), stdev = 89.581
[info]   CI (99.9%): [≈ 0, 403.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 12.000), stdev = 2.074
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 28.24% complete, ETA 01:04:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41805.802 ops/s
[info] # Warmup Iteration   2: 105799.001 ops/s
[info] # Warmup Iteration   3: 120033.347 ops/s
[info] Iteration   1: 121756.685 ops/s
[info]                  ·gc.alloc.rate:                   1722.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              22258.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21379.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.553 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 122677.563 ops/s
[info]                  ·gc.alloc.rate:                   1732.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              22221.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21099.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.347 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 123568.139 ops/s
[info]                  ·gc.alloc.rate:               1764.375 MB/sec
[info]                  ·gc.alloc.rate.norm:          22467.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1644.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20942.675 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 124366.311 ops/s
[info]                  ·gc.alloc.rate:                   1795.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              22719.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25120.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.527 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 123981.060 ops/s
[info]                  ·gc.alloc.rate:                   1778.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              22569.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1666.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21151.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce":
[info]   123269.951 ±(99.9%) 4055.761 ops/s [Average]
[info]   (min, avg, max) = (121756.685, 123269.951, 124366.311), stdev = 1053.268
[info]   CI (99.9%): [119214.190, 127325.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1758.474 ±(99.9%) 118.662 MB/sec [Average]
[info]   (min, avg, max) = (1722.157, 1758.474, 1795.498), stdev = 30.816
[info]   CI (99.9%): [1639.811, 1877.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   22447.409 ±(99.9%) 807.423 B/op [Average]
[info]   (min, avg, max) = (22221.569, 22447.409, 22719.420), stdev = 209.685
[info]   CI (99.9%): [21639.985, 23254.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1719.021 ±(99.9%) 574.036 MB/sec [Average]
[info]   (min, avg, max) = (1644.625, 1719.021, 1985.217), stdev = 149.075
[info]   CI (99.9%): [1144.985, 2293.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   21938.634 ±(99.9%) 6874.669 B/op [Average]
[info]   (min, avg, max) = (20942.675, 21938.634, 25120.035), stdev = 1785.330
[info]   CI (99.9%): [15063.965, 28813.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.770 ±(99.9%) 5.069 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.770, 3.060), stdev = 1.316
[info]   CI (99.9%): [≈ 0, 5.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.938 ±(99.9%) 65.527 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.938, 39.553), stdev = 17.017
[info]   CI (99.9%): [≈ 0, 75.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 13.000), stdev = 2.775
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 28.47% complete, ETA 01:04:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.674 ops/s
[info] # Warmup Iteration   2: 518187.030 ops/s
[info] # Warmup Iteration   3: 551446.202 ops/s
[info] Iteration   1: 557916.351 ops/s
[info]                  ·gc.alloc.rate:               596.752 MB/sec
[info]                  ·gc.alloc.rate.norm:          1682.732 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1828.320 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 565188.908 ops/s
[info]                  ·gc.alloc.rate:                   593.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              1653.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     903.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 551165.587 ops/s
[info]                  ·gc.alloc.rate:                   594.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              1696.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1856.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 561711.585 ops/s
[info]                  ·gc.alloc.rate:               599.408 MB/sec
[info]                  ·gc.alloc.rate.norm:          1679.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1823.461 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 562611.409 ops/s
[info]                  ·gc.alloc.rate:                   599.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              1675.789 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1824.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava":
[info]   559718.768 ±(99.9%) 20973.354 ops/s [Average]
[info]   (min, avg, max) = (551165.587, 559718.768, 565188.908), stdev = 5446.713
[info]   CI (99.9%): [538745.414, 580692.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   596.679 ±(99.9%) 10.035 MB/sec [Average]
[info]   (min, avg, max) = (593.821, 596.679, 599.408), stdev = 2.606
[info]   CI (99.9%): [586.645, 606.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1677.638 ±(99.9%) 60.545 B/op [Average]
[info]   (min, avg, max) = (1653.423, 1677.638, 1696.878), stdev = 15.723
[info]   CI (99.9%): [1617.093, 1738.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   585.199 ±(99.9%) 561.362 MB/sec [Average]
[info]   (min, avg, max) = (324.424, 585.199, 652.190), stdev = 145.784
[info]   CI (99.9%): [23.837, 1146.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1647.143 ±(99.9%) 1601.985 B/op [Average]
[info]   (min, avg, max) = (903.320, 1647.143, 1856.351), stdev = 416.030
[info]   CI (99.9%): [45.157, 3249.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.007 ±(99.9%) 0.053 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.032), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.150 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.090), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 7.000), stdev = 1.732
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.71% complete, ETA 01:04:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 83855.156 ops/s
[info] # Warmup Iteration   2: 307633.261 ops/s
[info] # Warmup Iteration   3: 338751.990 ops/s
[info] Iteration   1: 350276.129 ops/s
[info]                  ·gc.alloc.rate:               504.487 MB/sec
[info]                  ·gc.alloc.rate.norm:          2266.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1463.534 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 348798.815 ops/s
[info]                  ·gc.alloc.rate:                   517.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              2333.205 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2942.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 345149.774 ops/s
[info]                  ·gc.alloc.rate:                   495.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              2259.581 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1488.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 338058.310 ops/s
[info]                  ·gc.alloc.rate:                   501.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              2333.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3045.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 350070.798 ops/s
[info]                  ·gc.alloc.rate:               507.150 MB/sec
[info]                  ·gc.alloc.rate.norm:          2279.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1473.396 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala":
[info]   346470.765 ±(99.9%) 19763.903 ops/s [Average]
[info]   (min, avg, max) = (338058.310, 346470.765, 350276.129), stdev = 5132.623
[info]   CI (99.9%): [326706.862, 366234.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   505.136 ±(99.9%) 30.696 MB/sec [Average]
[info]   (min, avg, max) = (495.568, 505.136, 517.128), stdev = 7.972
[info]   CI (99.9%): [474.440, 535.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   2294.661 ±(99.9%) 139.550 B/op [Average]
[info]   (min, avg, max) = (2259.581, 2294.661, 2333.874), stdev = 36.241
[info]   CI (99.9%): [2155.111, 2434.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   457.251 ±(99.9%) 688.708 MB/sec [Average]
[info]   (min, avg, max) = (325.737, 457.251, 654.171), stdev = 178.855
[info]   CI (99.9%): [≈ 0, 1145.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2082.633 ±(99.9%) 3206.516 B/op [Average]
[info]   (min, avg, max) = (1463.534, 2082.633, 3045.301), stdev = 832.722
[info]   CI (99.9%): [≈ 0, 5289.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.041 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.053 ±(99.9%) 0.190 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.053, 0.097), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 7.000), stdev = 1.643
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.94% complete, ETA 01:04:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 371797.720 ops/s
[info] # Warmup Iteration   2: 730974.225 ops/s
[info] # Warmup Iteration   3: 755385.001 ops/s
[info] Iteration   1: 761979.909 ops/s
[info]                  ·gc.alloc.rate:               506.794 MB/sec
[info]                  ·gc.alloc.rate.norm:          1046.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 681.017 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 755982.953 ops/s
[info]                  ·gc.alloc.rate:                   515.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.721 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1374.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 740280.987 ops/s
[info]                  ·gc.alloc.rate:               490.503 MB/sec
[info]                  ·gc.alloc.rate.norm:          1042.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 702.439 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 738752.403 ops/s
[info]                  ·gc.alloc.rate:                   498.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              1061.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1410.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 761578.479 ops/s
[info]                  ·gc.alloc.rate:               508.157 MB/sec
[info]                  ·gc.alloc.rate.norm:          1050.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 684.889 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala":
[info]   751714.946 ±(99.9%) 43888.793 ops/s [Average]
[info]   (min, avg, max) = (738752.403, 751714.946, 761979.909), stdev = 11397.780
[info]   CI (99.9%): [707826.153, 795603.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   503.850 ±(99.9%) 36.822 MB/sec [Average]
[info]   (min, avg, max) = (490.503, 503.850, 515.319), stdev = 9.563
[info]   CI (99.9%): [467.027, 540.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1054.821 ±(99.9%) 47.374 B/op [Average]
[info]   (min, avg, max) = (1042.747, 1054.821, 1072.721), stdev = 12.303
[info]   CI (99.9%): [1007.447, 1102.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   462.787 ±(99.9%) 697.325 MB/sec [Average]
[info]   (min, avg, max) = (329.739, 462.787, 662.149), stdev = 181.093
[info]   CI (99.9%): [≈ 0, 1160.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   970.639 ±(99.9%) 1483.787 B/op [Average]
[info]   (min, avg, max) = (681.017, 970.639, 1410.588), stdev = 385.335
[info]   CI (99.9%): [≈ 0, 2454.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.185 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.089), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 5.000), stdev = 1.342
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 29.18% complete, ETA 01:04:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4486.104 ops/s
[info] # Warmup Iteration   2: 59196.126 ops/s
[info] # Warmup Iteration   3: 67350.410 ops/s
[info] Iteration   1: 68965.546 ops/s
[info]                  ·gc.alloc.rate:                   2832.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              64638.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2608.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59537.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.751 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 68307.910 ops/s
[info]                  ·gc.alloc.rate:                   2815.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              64857.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2960.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68195.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.439 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 68197.091 ops/s
[info]                  ·gc.alloc.rate:                   2825.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              65193.591 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2666.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61535.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.480 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 69584.403 ops/s
[info]                  ·gc.alloc.rate:                   2881.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              65172.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2690.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60850.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.471 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 68722.411 ops/s
[info]                  ·gc.alloc.rate:               2853.022 MB/sec
[info]                  ·gc.alloc.rate.norm:          65331.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2705.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61963.597 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson":
[info]   68755.472 ±(99.9%) 2147.792 ops/s [Average]
[info]   (min, avg, max) = (68197.091, 68755.472, 69584.403), stdev = 557.775
[info]   CI (99.9%): [66607.680, 70903.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2841.510 ±(99.9%) 101.863 MB/sec [Average]
[info]   (min, avg, max) = (2815.162, 2841.510, 2881.781), stdev = 26.453
[info]   CI (99.9%): [2739.647, 2943.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   65038.920 ±(99.9%) 1089.994 B/op [Average]
[info]   (min, avg, max) = (64638.795, 65038.920, 65331.803), stdev = 283.068
[info]   CI (99.9%): [63948.926, 66128.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2726.438 ±(99.9%) 522.543 MB/sec [Average]
[info]   (min, avg, max) = (2608.956, 2726.438, 2960.054), stdev = 135.703
[info]   CI (99.9%): [2203.895, 3248.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   62416.665 ±(99.9%) 12932.830 B/op [Average]
[info]   (min, avg, max) = (59537.932, 62416.665, 68195.885), stdev = 3358.615
[info]   CI (99.9%): [49483.835, 75349.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.326 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.208), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.428 ±(99.9%) 7.430 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.428, 4.751), stdev = 1.930
[info]   CI (99.9%): [≈ 0, 8.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.400, 14.000), stdev = 1.673
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 29.41% complete, ETA 01:03:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 69134.117 ops/s
[info] # Warmup Iteration   2: 184131.516 ops/s
[info] # Warmup Iteration   3: 195751.130 ops/s
[info] Iteration   1: 199553.623 ops/s
[info]                  ·gc.alloc.rate:                   1454.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              11468.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10423.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 199518.226 ops/s
[info]                  ·gc.alloc.rate:                   1464.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              11548.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13015.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.539 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.916 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 199764.590 ops/s
[info]                  ·gc.alloc.rate:               1465.425 MB/sec
[info]                  ·gc.alloc.rate.norm:          11544.624 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10349.464 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 200947.128 ops/s
[info]                  ·gc.alloc.rate:               1481.030 MB/sec
[info]                  ·gc.alloc.rate.norm:          11599.443 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1316.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10309.517 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 199572.638 ops/s
[info]                  ·gc.alloc.rate:               1484.595 MB/sec
[info]                  ·gc.alloc.rate.norm:          11706.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1654.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13048.694 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce":
[info]   199871.241 ±(99.9%) 2345.081 ops/s [Average]
[info]   (min, avg, max) = (199518.226, 199871.241, 200947.128), stdev = 609.010
[info]   CI (99.9%): [197526.160, 202216.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1469.890 ±(99.9%) 48.678 MB/sec [Average]
[info]   (min, avg, max) = (1454.180, 1469.890, 1484.595), stdev = 12.641
[info]   CI (99.9%): [1421.212, 1518.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   11573.625 ±(99.9%) 338.512 B/op [Average]
[info]   (min, avg, max) = (11468.372, 11573.625, 11706.736), stdev = 87.910
[info]   CI (99.9%): [11235.113, 11912.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1451.345 ±(99.9%) 707.165 MB/sec [Average]
[info]   (min, avg, max) = (1313.717, 1451.345, 1654.776), stdev = 183.649
[info]   CI (99.9%): [744.180, 2158.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11429.426 ±(99.9%) 5636.696 B/op [Average]
[info]   (min, avg, max) = (10309.517, 11429.426, 13048.694), stdev = 1463.832
[info]   CI (99.9%): [5792.730, 17066.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.712 ±(99.9%) 6.086 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.712, 3.539), stdev = 1.580
[info]   CI (99.9%): [≈ 0, 6.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.616 ±(99.9%) 48.002 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.616, 27.916), stdev = 12.466
[info]   CI (99.9%): [≈ 0, 53.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 12.000), stdev = 3.271
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 29.65% complete, ETA 01:03:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.798 ops/s
[info] # Warmup Iteration   2: 535576.332 ops/s
[info] # Warmup Iteration   3: 648051.427 ops/s
[info] Iteration   1: 652892.583 ops/s
[info]                  ·gc.alloc.rate:                   361.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              870.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     616.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 642990.938 ops/s
[info]                  ·gc.alloc.rate:               356.125 MB/sec
[info]                  ·gc.alloc.rate.norm:          871.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 794.850 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 654969.421 ops/s
[info]                  ·gc.alloc.rate:                   370.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              890.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1561.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 657248.224 ops/s
[info]                  ·gc.alloc.rate:               369.927 MB/sec
[info]                  ·gc.alloc.rate.norm:          885.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 778.407 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 652981.057 ops/s
[info]                  ·gc.alloc.rate:               363.285 MB/sec
[info]                  ·gc.alloc.rate.norm:          875.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 785.080 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava":
[info]   652216.445 ±(99.9%) 21007.146 ops/s [Average]
[info]   (min, avg, max) = (642990.938, 652216.445, 657248.224), stdev = 5455.489
[info]   CI (99.9%): [631209.299, 673223.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   364.197 ±(99.9%) 23.437 MB/sec [Average]
[info]   (min, avg, max) = (356.125, 364.197, 370.518), stdev = 6.087
[info]   CI (99.9%): [340.760, 387.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   878.688 ±(99.9%) 34.224 B/op [Average]
[info]   (min, avg, max) = (870.227, 878.688, 890.274), stdev = 8.888
[info]   CI (99.9%): [844.464, 912.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   376.270 ±(99.9%) 600.155 MB/sec [Average]
[info]   (min, avg, max) = (255.896, 376.270, 649.860), stdev = 155.858
[info]   CI (99.9%): [≈ 0, 976.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   907.290 ±(99.9%) 1436.424 B/op [Average]
[info]   (min, avg, max) = (616.641, 907.290, 1561.472), stdev = 373.035
[info]   CI (99.9%): [≈ 0, 2343.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.078 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.046), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.187 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.111), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 7.000), stdev = 1.732
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.88% complete, ETA 01:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 279220.559 ops/s
[info] # Warmup Iteration   2: 615799.295 ops/s
[info] # Warmup Iteration   3: 624391.410 ops/s
[info] Iteration   1: 650366.439 ops/s
[info]                  ·gc.alloc.rate:                   492.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              1191.527 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     791.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 656682.616 ops/s
[info]                  ·gc.alloc.rate:                   507.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              1216.153 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1569.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 648561.523 ops/s
[info]                  ·gc.alloc.rate:               495.275 MB/sec
[info]                  ·gc.alloc.rate.norm:          1201.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 795.331 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 655205.288 ops/s
[info]                  ·gc.alloc.rate:               504.326 MB/sec
[info]                  ·gc.alloc.rate.norm:          1211.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1577.699 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 638901.344 ops/s
[info]                  ·gc.alloc.rate:               488.090 MB/sec
[info]                  ·gc.alloc.rate.norm:          1202.242 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 809.774 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala":
[info]   649943.442 ±(99.9%) 27031.414 ops/s [Average]
[info]   (min, avg, max) = (638901.344, 649943.442, 656682.616), stdev = 7019.972
[info]   CI (99.9%): [622912.028, 676974.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   497.529 ±(99.9%) 31.479 MB/sec [Average]
[info]   (min, avg, max) = (488.090, 497.529, 507.559), stdev = 8.175
[info]   CI (99.9%): [466.050, 529.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1204.548 ±(99.9%) 36.499 B/op [Average]
[info]   (min, avg, max) = (1191.527, 1204.548, 1216.153), stdev = 9.479
[info]   CI (99.9%): [1168.049, 1241.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   459.126 ±(99.9%) 692.086 MB/sec [Average]
[info]   (min, avg, max) = (327.083, 459.126, 657.018), stdev = 179.733
[info]   CI (99.9%): [≈ 0, 1151.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1108.748 ±(99.9%) 1634.166 B/op [Average]
[info]   (min, avg, max) = (791.495, 1108.748, 1577.699), stdev = 424.388
[info]   CI (99.9%): [≈ 0, 2742.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.106 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.050), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.12% complete, ETA 01:03:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 465935.680 ops/s
[info] # Warmup Iteration   2: 1032324.653 ops/s
[info] # Warmup Iteration   3: 1092809.282 ops/s
[info] Iteration   1: 1109682.216 ops/s
[info]                  ·gc.alloc.rate:               614.172 MB/sec
[info]                  ·gc.alloc.rate.norm:          871.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 467.173 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1100328.165 ops/s
[info]                  ·gc.alloc.rate:                   621.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              888.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     944.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1109444.191 ops/s
[info]                  ·gc.alloc.rate:                   621.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              882.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     937.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1100119.313 ops/s
[info]                  ·gc.alloc.rate:                   613.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              877.624 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     947.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1109357.115 ops/s
[info]                  ·gc.alloc.rate:               616.934 MB/sec
[info]                  ·gc.alloc.rate.norm:          875.185 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 940.299 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala":
[info]   1105786.200 ±(99.9%) 19560.269 ops/s [Average]
[info]   (min, avg, max) = (1100119.313, 1105786.200, 1109682.216), stdev = 5079.740
[info]   CI (99.9%): [1086225.931, 1125346.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   617.516 ±(99.9%) 14.849 MB/sec [Average]
[info]   (min, avg, max) = (613.498, 617.516, 621.860), stdev = 3.856
[info]   CI (99.9%): [602.667, 632.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   878.806 ±(99.9%) 25.295 B/op [Average]
[info]   (min, avg, max) = (871.007, 878.806, 888.098), stdev = 6.569
[info]   CI (99.9%): [853.510, 904.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   595.123 ±(99.9%) 571.965 MB/sec [Average]
[info]   (min, avg, max) = (329.417, 595.123, 662.834), stdev = 148.538
[info]   CI (99.9%): [23.157, 1167.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   847.266 ±(99.9%) 818.307 B/op [Average]
[info]   (min, avg, max) = (467.173, 847.266, 947.239), stdev = 212.512
[info]   CI (99.9%): [28.959, 1665.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.096 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.060), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 30.35% complete, ETA 01:03:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 654899.947 ops/s
[info] # Warmup Iteration   2: 1121559.527 ops/s
[info] # Warmup Iteration   3: 1178187.405 ops/s
[info] Iteration   1: 1177410.835 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1178154.952 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1179212.691 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1176927.531 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1177091.261 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   1177759.454 ±(99.9%) 3616.547 ops/s [Average]
[info]   (min, avg, max) = (1176927.531, 1177759.454, 1179212.691), stdev = 939.206
[info]   CI (99.9%): [1174142.907, 1181376.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 30.59% complete, ETA 01:02:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7883.270 ops/s
[info] # Warmup Iteration   2: 29991.126 ops/s
[info] # Warmup Iteration   3: 33689.037 ops/s
[info] Iteration   1: 33366.103 ops/s
[info]                  ·gc.alloc.rate:                   1889.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              89127.538 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77638.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 190.483 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 34080.330 ops/s
[info]                  ·gc.alloc.rate:                   1949.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              90005.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1962.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90621.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.961 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 34251.541 ops/s
[info]                  ·gc.alloc.rate:               1967.923 MB/sec
[info]                  ·gc.alloc.rate.norm:          90412.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1971.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 90567.045 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 33945.190 ops/s
[info]                  ·gc.alloc.rate:                   1951.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              90491.791 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76821.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.965 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 34176.786 ops/s
[info]                  ·gc.alloc.rate:                   1947.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              89664.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2003.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92258.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.876 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson":
[info]   33963.990 ±(99.9%) 1360.489 ops/s [Average]
[info]   (min, avg, max) = (33366.103, 33963.990, 34251.541), stdev = 353.315
[info]   CI (99.9%): [32603.501, 35324.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1941.220 ±(99.9%) 115.239 MB/sec [Average]
[info]   (min, avg, max) = (1889.709, 1941.220, 1967.923), stdev = 29.927
[info]   CI (99.9%): [1825.980, 2056.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   89940.471 ±(99.9%) 2167.740 B/op [Average]
[info]   (min, avg, max) = (89127.538, 89940.471, 90491.791), stdev = 562.955
[info]   CI (99.9%): [87772.731, 92108.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1848.136 ±(99.9%) 693.554 MB/sec [Average]
[info]   (min, avg, max) = (1646.116, 1848.136, 2003.561), stdev = 180.114
[info]   CI (99.9%): [1154.581, 2541.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   85581.559 ±(99.9%) 29493.633 B/op [Average]
[info]   (min, avg, max) = (76821.866, 85581.559, 92258.859), stdev = 7659.403
[info]   CI (99.9%): [56087.926, 115075.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.829 ±(99.9%) 6.911 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.829, 4.039), stdev = 1.795
[info]   CI (99.9%): [≈ 0, 7.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   39.057 ±(99.9%) 325.981 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 39.057, 190.483), stdev = 84.656
[info]   CI (99.9%): [≈ 0, 365.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.800, 11.000), stdev = 1.483
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 30.82% complete, ETA 01:02:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22096.082 ops/s
[info] # Warmup Iteration   2: 119988.982 ops/s
[info] # Warmup Iteration   3: 124424.273 ops/s
[info] Iteration   1: 129957.341 ops/s
[info]                  ·gc.alloc.rate:                   1654.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              20034.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19970.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.093 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 131206.296 ops/s
[info]                  ·gc.alloc.rate:                   1683.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              20192.365 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19664.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.243 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 127765.897 ops/s
[info]                  ·gc.alloc.rate:               1646.908 MB/sec
[info]                  ·gc.alloc.rate.norm:          20285.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1638.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20185.911 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 130661.304 ops/s
[info]                  ·gc.alloc.rate:               1677.235 MB/sec
[info]                  ·gc.alloc.rate.norm:          20197.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1318.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15878.884 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 126939.864 ops/s
[info]                  ·gc.alloc.rate:                   1644.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              20384.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20560.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce":
[info]   129306.140 ±(99.9%) 7163.320 ops/s [Average]
[info]   (min, avg, max) = (126939.864, 129306.140, 131206.296), stdev = 1860.291
[info]   CI (99.9%): [122142.821, 136469.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1661.250 ±(99.9%) 69.177 MB/sec [Average]
[info]   (min, avg, max) = (1644.238, 1661.250, 1683.465), stdev = 17.965
[info]   CI (99.9%): [1592.073, 1730.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20219.025 ±(99.9%) 498.376 B/op [Average]
[info]   (min, avg, max) = (20034.705, 20219.025, 20384.501), stdev = 129.427
[info]   CI (99.9%): [19720.649, 20717.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1580.874 ±(99.9%) 565.402 MB/sec [Average]
[info]   (min, avg, max) = (1318.603, 1580.874, 1658.400), stdev = 146.833
[info]   CI (99.9%): [1015.472, 2146.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19252.029 ±(99.9%) 7368.702 B/op [Average]
[info]   (min, avg, max) = (15878.884, 19252.029, 20560.071), stdev = 1913.629
[info]   CI (99.9%): [11883.327, 26620.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.787 ±(99.9%) 5.676 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.787, 3.393), stdev = 1.474
[info]   CI (99.9%): [≈ 0, 6.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.519 ±(99.9%) 68.738 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.519, 41.093), stdev = 17.851
[info]   CI (99.9%): [≈ 0, 78.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 15.000), stdev = 4.000
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.06% complete, ETA 01:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 60892.682 ops/s
[info] # Warmup Iteration   2: 169881.434 ops/s
[info] # Warmup Iteration   3: 193510.338 ops/s
[info] Iteration   1: 201108.104 ops/s
[info]                  ·gc.alloc.rate:                   1227.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              9602.484 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10274.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.326 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 201341.621 ops/s
[info]                  ·gc.alloc.rate:                   1229.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              9611.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10284.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.519 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.500 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 197931.262 ops/s
[info]                  ·gc.alloc.rate:                   1200.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              9539.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7807.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.628 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 196042.808 ops/s
[info]                  ·gc.alloc.rate:                   1208.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              9696.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10481.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 196882.243 ops/s
[info]                  ·gc.alloc.rate:               1206.903 MB/sec
[info]                  ·gc.alloc.rate.norm:          9646.771 B/op
[info]                  ·gc.churn.PS_Eden_Space:      980.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7838.706 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala":
[info]   198661.208 ±(99.9%) 9378.011 ops/s [Average]
[info]   (min, avg, max) = (196042.808, 198661.208, 201341.621), stdev = 2435.440
[info]   CI (99.9%): [189283.197, 208039.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1214.509 ±(99.9%) 50.882 MB/sec [Average]
[info]   (min, avg, max) = (1200.185, 1214.509, 1229.981), stdev = 13.214
[info]   CI (99.9%): [1163.627, 1265.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9619.372 ±(99.9%) 222.818 B/op [Average]
[info]   (min, avg, max) = (9539.834, 9619.372, 9696.599), stdev = 57.865
[info]   CI (99.9%): [9396.554, 9842.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1179.643 ±(99.9%) 696.809 MB/sec [Average]
[info]   (min, avg, max) = (980.697, 1179.643, 1316.109), stdev = 180.959
[info]   CI (99.9%): [482.834, 1876.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9337.277 ±(99.9%) 5332.728 B/op [Average]
[info]   (min, avg, max) = (7807.209, 9337.277, 10481.696), stdev = 1384.893
[info]   CI (99.9%): [4004.549, 14670.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 5.843 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.858, 3.519), stdev = 1.517
[info]   CI (99.9%): [≈ 0, 6.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.724 ±(99.9%) 45.643 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.724, 27.500), stdev = 11.853
[info]   CI (99.9%): [≈ 0, 52.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 13.000), stdev = 4.637
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.29% complete, ETA 01:02:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 109986.642 ops/s
[info] # Warmup Iteration   2: 241940.338 ops/s
[info] # Warmup Iteration   3: 249424.542 ops/s
[info] Iteration   1: 247093.881 ops/s
[info]                  ·gc.alloc.rate:                   1319.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              8404.420 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8447.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 253872.740 ops/s
[info]                  ·gc.alloc.rate:                   1354.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              8395.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8226.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.712 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 249385.114 ops/s
[info]                  ·gc.alloc.rate:               1336.219 MB/sec
[info]                  ·gc.alloc.rate.norm:          8432.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1321.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8340.348 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 254452.383 ops/s
[info]                  ·gc.alloc.rate:               1376.530 MB/sec
[info]                  ·gc.alloc.rate.norm:          8513.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8178.352 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 249581.535 ops/s
[info]                  ·gc.alloc.rate:               1351.819 MB/sec
[info]                  ·gc.alloc.rate.norm:          8523.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1327.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8367.471 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala":
[info]   250877.130 ±(99.9%) 12172.811 ops/s [Average]
[info]   (min, avg, max) = (247093.881, 250877.130, 254452.383), stdev = 3161.240
[info]   CI (99.9%): [238704.319, 263049.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1347.687 ±(99.9%) 82.028 MB/sec [Average]
[info]   (min, avg, max) = (1319.564, 1347.687, 1376.530), stdev = 21.302
[info]   CI (99.9%): [1265.659, 1429.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   8453.718 ±(99.9%) 233.929 B/op [Average]
[info]   (min, avg, max) = (8395.207, 8453.718, 8523.636), stdev = 60.751
[info]   CI (99.9%): [8219.790, 8687.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1324.886 ±(99.9%) 10.149 MB/sec [Average]
[info]   (min, avg, max) = (1321.690, 1324.886, 1327.051), stdev = 2.636
[info]   CI (99.9%): [1314.737, 1335.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   8311.913 ±(99.9%) 419.153 B/op [Average]
[info]   (min, avg, max) = (8178.352, 8311.913, 8447.225), stdev = 108.853
[info]   CI (99.9%): [7892.759, 8731.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.612 ±(99.9%) 5.181 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.612, 3.019), stdev = 1.345
[info]   CI (99.9%): [≈ 0, 5.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.795 ±(99.9%) 32.113 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.795, 18.712), stdev = 8.340
[info]   CI (99.9%): [≈ 0, 35.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 10.000), stdev = 2.191
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 31.53% complete, ETA 01:01:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2127.065 ops/s
[info] # Warmup Iteration   2: 54245.813 ops/s
[info] # Warmup Iteration   3: 67831.047 ops/s
[info] Iteration   1: 67946.396 ops/s
[info]                  ·gc.alloc.rate:                   2725.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              63109.164 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2644.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61222.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.554 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 68445.827 ops/s
[info]                  ·gc.alloc.rate:                   2751.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              63260.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2665.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61280.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.957 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 69247.445 ops/s
[info]                  ·gc.alloc.rate:               2803.360 MB/sec
[info]                  ·gc.alloc.rate.norm:          63695.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2689.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61102.969 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   4: 69545.471 ops/s
[info]                  ·gc.alloc.rate:                   2816.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              63725.832 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2703.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61174.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.471 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 68310.244 ops/s
[info]                  ·gc.alloc.rate:               2768.721 MB/sec
[info]                  ·gc.alloc.rate.norm:          63784.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2712.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62493.435 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson":
[info]   68699.077 ±(99.9%) 2582.335 ops/s [Average]
[info]   (min, avg, max) = (67946.396, 68699.077, 69545.471), stdev = 670.624
[info]   CI (99.9%): [66116.742, 71281.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2773.070 ±(99.9%) 143.077 MB/sec [Average]
[info]   (min, avg, max) = (2725.525, 2773.070, 2816.216), stdev = 37.157
[info]   CI (99.9%): [2629.993, 2916.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63515.208 ±(99.9%) 1185.763 B/op [Average]
[info]   (min, avg, max) = (63109.164, 63515.208, 63784.839), stdev = 307.939
[info]   CI (99.9%): [62329.446, 64700.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2682.964 ±(99.9%) 108.325 MB/sec [Average]
[info]   (min, avg, max) = (2644.049, 2682.964, 2712.664), stdev = 28.132
[info]   CI (99.9%): [2574.639, 2791.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   61454.725 ±(99.9%) 2249.848 B/op [Average]
[info]   (min, avg, max) = (61102.969, 61454.725, 62493.435), stdev = 584.278
[info]   CI (99.9%): [59204.877, 63704.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.233 ±(99.9%) 1.875 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.233, 1.104), stdev = 0.487
[info]   CI (99.9%): [≈ 0, 2.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.397 ±(99.9%) 43.418 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.397, 25.554), stdev = 11.276
[info]   CI (99.9%): [≈ 0, 48.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.400, 13.000), stdev = 1.140
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 31.76% complete, ETA 01:01:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53964.960 ops/s
[info] # Warmup Iteration   2: 170385.194 ops/s
[info] # Warmup Iteration   3: 177696.926 ops/s
[info] Iteration   1: 178677.213 ops/s
[info]                  ·gc.alloc.rate:               1193.197 MB/sec
[info]                  ·gc.alloc.rate.norm:          10509.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11500.439 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 180758.985 ops/s
[info]                  ·gc.alloc.rate:                   1204.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              10489.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8537.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.181 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 182384.918 ops/s
[info]                  ·gc.alloc.rate:               1221.916 MB/sec
[info]                  ·gc.alloc.rate.norm:          10543.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11346.645 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 182756.923 ops/s
[info]                  ·gc.alloc.rate:               1211.335 MB/sec
[info]                  ·gc.alloc.rate.norm:          10430.870 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8538.463 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 179088.522 ops/s
[info]                  ·gc.alloc.rate:                   1215.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              10677.171 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11684.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce":
[info]   180733.312 ±(99.9%) 7140.931 ops/s [Average]
[info]   (min, avg, max) = (178677.213, 180733.312, 182756.923), stdev = 1854.477
[info]   CI (99.9%): [173592.381, 187874.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1209.286 ±(99.9%) 41.983 MB/sec [Average]
[info]   (min, avg, max) = (1193.197, 1209.286, 1221.916), stdev = 10.903
[info]   CI (99.9%): [1167.302, 1251.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10530.129 ±(99.9%) 353.434 B/op [Average]
[info]   (min, avg, max) = (10430.870, 10530.129, 10677.171), stdev = 91.786
[info]   CI (99.9%): [10176.695, 10883.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1184.516 ±(99.9%) 698.463 MB/sec [Average]
[info]   (min, avg, max) = (980.591, 1184.516, 1329.674), stdev = 181.389
[info]   CI (99.9%): [486.053, 1882.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10321.360 ±(99.9%) 6286.254 B/op [Average]
[info]   (min, avg, max) = (8537.173, 10321.360, 11684.081), stdev = 1632.520
[info]   CI (99.9%): [4035.106, 16607.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.073, 0.183), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.00% complete, ETA 01:01:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 233715.624 ops/s
[info] # Warmup Iteration   2: 669484.611 ops/s
[info] # Warmup Iteration   3: 720347.273 ops/s
[info] Iteration   1: 714698.809 ops/s
[info]                  ·gc.alloc.rate:               755.678 MB/sec
[info]                  ·gc.alloc.rate.norm:          1663.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2156.981 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 718442.705 ops/s
[info]                  ·gc.alloc.rate:                   745.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1434.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 696214.987 ops/s
[info]                  ·gc.alloc.rate:                   719.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              1625.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1483.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 692292.249 ops/s
[info]                  ·gc.alloc.rate:               726.371 MB/sec
[info]                  ·gc.alloc.rate.norm:          1651.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1493.232 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 721804.506 ops/s
[info]                  ·gc.alloc.rate:                   754.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              1645.724 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1435.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.831 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.352 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala":
[info]   708690.651 ±(99.9%) 51938.160 ops/s [Average]
[info]   (min, avg, max) = (692292.249, 708690.651, 721804.506), stdev = 13488.175
[info]   CI (99.9%): [656752.491, 760628.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   740.278 ±(99.9%) 63.942 MB/sec [Average]
[info]   (min, avg, max) = (719.371, 740.278, 755.678), stdev = 16.606
[info]   CI (99.9%): [676.336, 804.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1643.812 ±(99.9%) 58.266 B/op [Average]
[info]   (min, avg, max) = (1625.987, 1643.812, 1663.968), stdev = 15.132
[info]   CI (99.9%): [1585.546, 1702.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   721.144 ±(99.9%) 556.315 MB/sec [Average]
[info]   (min, avg, max) = (654.841, 721.144, 979.576), stdev = 144.473
[info]   CI (99.9%): [164.829, 1277.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1600.580 ±(99.9%) 1202.191 B/op [Average]
[info]   (min, avg, max) = (1434.417, 1600.580, 2156.981), stdev = 312.205
[info]   CI (99.9%): [398.389, 2802.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.779 ±(99.9%) 6.570 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.779, 3.831), stdev = 1.706
[info]   CI (99.9%): [≈ 0, 7.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.698 ±(99.9%) 14.323 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.698, 8.352), stdev = 3.720
[info]   CI (99.9%): [≈ 0, 16.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 10.000), stdev = 1.924
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.24% complete, ETA 01:01:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 343934.390 ops/s
[info] # Warmup Iteration   2: 702564.215 ops/s
[info] # Warmup Iteration   3: 677602.247 ops/s
[info] Iteration   1: 711401.977 ops/s
[info]                  ·gc.alloc.rate:               570.301 MB/sec
[info]                  ·gc.alloc.rate.norm:          1261.639 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1457.401 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 710960.449 ops/s
[info]                  ·gc.alloc.rate:               566.713 MB/sec
[info]                  ·gc.alloc.rate.norm:          1254.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1461.302 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 710917.017 ops/s
[info]                  ·gc.alloc.rate:               554.867 MB/sec
[info]                  ·gc.alloc.rate.norm:          1228.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 731.431 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 687881.517 ops/s
[info]                  ·gc.alloc.rate:                   544.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              1245.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1513.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 707123.578 ops/s
[info]                  ·gc.alloc.rate:               557.854 MB/sec
[info]                  ·gc.alloc.rate.norm:          1240.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1469.919 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala":
[info]   705656.907 ±(99.9%) 38837.985 ops/s [Average]
[info]   (min, avg, max) = (687881.517, 705656.907, 711401.977), stdev = 10086.101
[info]   CI (99.9%): [666818.922, 744494.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   558.864 ±(99.9%) 39.142 MB/sec [Average]
[info]   (min, avg, max) = (544.584, 558.864, 570.301), stdev = 10.165
[info]   CI (99.9%): [519.722, 598.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1246.050 ±(99.9%) 49.454 B/op [Average]
[info]   (min, avg, max) = (1228.262, 1246.050, 1261.639), stdev = 12.843
[info]   CI (99.9%): [1196.596, 1295.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   594.433 ±(99.9%) 568.314 MB/sec [Average]
[info]   (min, avg, max) = (330.424, 594.433, 661.493), stdev = 147.589
[info]   CI (99.9%): [26.120, 1162.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1326.688 ±(99.9%) 1284.217 B/op [Average]
[info]   (min, avg, max) = (731.431, 1326.688, 1513.385), stdev = 333.507
[info]   CI (99.9%): [42.470, 2610.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.048), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 6.000), stdev = 1.643
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 32.47% complete, ETA 01:01:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 498557.218 ops/s
[info] # Warmup Iteration   2: 742409.106 ops/s
[info] # Warmup Iteration   3: 775427.644 ops/s
[info] Iteration   1: 774390.038 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 773619.052 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 775361.996 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 772978.623 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 774980.014 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   774265.945 ±(99.9%) 3754.274 ops/s [Average]
[info]   (min, avg, max) = (772978.623, 774265.945, 775361.996), stdev = 974.973
[info]   CI (99.9%): [770511.670, 778020.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 32.71% complete, ETA 01:00:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86239.310 ops/s
[info] # Warmup Iteration   2: 320951.315 ops/s
[info] # Warmup Iteration   3: 348858.413 ops/s
[info] Iteration   1: 348497.022 ops/s
[info]                  ·gc.alloc.rate:               986.267 MB/sec
[info]                  ·gc.alloc.rate.norm:          4452.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:      980.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4428.141 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 338975.947 ops/s
[info]                  ·gc.alloc.rate:                   953.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              4426.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4567.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 341134.527 ops/s
[info]                  ·gc.alloc.rate:                   956.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              4412.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3031.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.654 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 341362.870 ops/s
[info]                  ·gc.alloc.rate:                   962.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              4436.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4531.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.646 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.975 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 344992.618 ops/s
[info]                  ·gc.alloc.rate:               978.960 MB/sec
[info]                  ·gc.alloc.rate.norm:          4465.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:      978.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4465.510 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson":
[info]   342992.597 ±(99.9%) 14477.178 ops/s [Average]
[info]   (min, avg, max) = (338975.947, 342992.597, 348497.022), stdev = 3759.677
[info]   CI (99.9%): [328515.419, 357469.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   967.545 ±(99.9%) 55.393 MB/sec [Average]
[info]   (min, avg, max) = (953.385, 967.545, 986.267), stdev = 14.385
[info]   CI (99.9%): [912.151, 1022.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4438.699 ±(99.9%) 81.207 B/op [Average]
[info]   (min, avg, max) = (4412.429, 4438.699, 4465.782), stdev = 21.089
[info]   CI (99.9%): [4357.491, 4519.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   916.813 ±(99.9%) 558.937 MB/sec [Average]
[info]   (min, avg, max) = (657.177, 916.813, 983.906), stdev = 145.154
[info]   CI (99.9%): [357.875, 1475.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4204.933 ±(99.9%) 2534.324 B/op [Average]
[info]   (min, avg, max) = (3031.650, 4204.933, 4567.806), stdev = 658.156
[info]   CI (99.9%): [1670.609, 6739.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.816 ±(99.9%) 5.647 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.816, 3.393), stdev = 1.467
[info]   CI (99.9%): [≈ 0, 6.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.764 ±(99.9%) 26.051 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.764, 15.654), stdev = 6.765
[info]   CI (99.9%): [≈ 0, 29.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 10.000), stdev = 2.793
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 32.94% complete, ETA 01:00:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1473.456 ops/s
[info] # Warmup Iteration   2: 9824.780 ops/s
[info] # Warmup Iteration   3: 11019.535 ops/s
[info] Iteration   1: 11166.532 ops/s
[info]                  ·gc.alloc.rate:                   1415.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              199505.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     186216.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.669 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 11263.636 ops/s
[info]                  ·gc.alloc.rate:                   1436.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              200497.334 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230188.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.805 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 531.232 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 11376.146 ops/s
[info]                  ·gc.alloc.rate:                   1440.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              199219.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     181535.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.917 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 11327.071 ops/s
[info]                  ·gc.alloc.rate:               1441.391 MB/sec
[info]                  ·gc.alloc.rate.norm:          200250.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1312.336 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 182320.805 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 11420.403 ops/s
[info]                  ·gc.alloc.rate:               1458.000 MB/sec
[info]                  ·gc.alloc.rate.norm:          200904.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1318.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 181662.602 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce":
[info]   11310.757 ±(99.9%) 383.064 ops/s [Average]
[info]   (min, avg, max) = (11166.532, 11310.757, 11420.403), stdev = 99.480
[info]   CI (99.9%): [10927.694, 11693.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1438.248 ±(99.9%) 58.420 MB/sec [Average]
[info]   (min, avg, max) = (1415.614, 1438.248, 1458.000), stdev = 15.172
[info]   CI (99.9%): [1379.827, 1496.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   200075.357 ±(99.9%) 2692.175 B/op [Average]
[info]   (min, avg, max) = (199219.090, 200075.357, 200904.987), stdev = 699.149
[info]   CI (99.9%): [197383.181, 202767.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1382.616 ±(99.9%) 573.056 MB/sec [Average]
[info]   (min, avg, max) = (1312.324, 1382.616, 1648.743), stdev = 148.821
[info]   CI (99.9%): [809.560, 1955.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   192384.855 ±(99.9%) 81710.484 B/op [Average]
[info]   (min, avg, max) = (181535.699, 192384.855, 230188.814), stdev = 21219.953
[info]   CI (99.9%): [110674.372, 274095.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.819 ±(99.9%) 6.434 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.819, 3.805), stdev = 1.671
[info]   CI (99.9%): [≈ 0, 7.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   114.364 ±(99.9%) 898.321 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 114.364, 531.232), stdev = 233.291
[info]   CI (99.9%): [≈ 0, 1012.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 14.000), stdev = 4.099
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.18% complete, ETA 01:00:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2108.103 ops/s
[info] # Warmup Iteration   2: 9614.054 ops/s
[info] # Warmup Iteration   3: 10710.840 ops/s
[info] Iteration   1: 10498.221 ops/s
[info]                  ·gc.alloc.rate:                   1217.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              182536.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147785.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.120 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 10673.795 ops/s
[info]                  ·gc.alloc.rate:                   1237.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              182494.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     194257.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 537.403 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 10809.865 ops/s
[info]                  ·gc.alloc.rate:                   1269.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              184871.450 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     190473.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 112.136 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 10842.434 ops/s
[info]                  ·gc.alloc.rate:               1259.868 MB/sec
[info]                  ·gc.alloc.rate.norm:          182858.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 142130.633 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 10898.484 ops/s
[info]                  ·gc.alloc.rate:               1286.898 MB/sec
[info]                  ·gc.alloc.rate.norm:          185825.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 188822.556 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala":
[info]   10744.560 ±(99.9%) 618.586 ops/s [Average]
[info]   (min, avg, max) = (10498.221, 10744.560, 10898.484), stdev = 160.645
[info]   CI (99.9%): [10125.974, 11363.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1254.457 ±(99.9%) 104.443 MB/sec [Average]
[info]   (min, avg, max) = (1217.767, 1254.457, 1286.898), stdev = 27.123
[info]   CI (99.9%): [1150.014, 1358.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   183717.133 ±(99.9%) 5904.536 B/op [Average]
[info]   (min, avg, max) = (182494.223, 183717.133, 185825.446), stdev = 1533.389
[info]   CI (99.9%): [177812.597, 189621.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1179.773 ±(99.9%) 693.333 MB/sec [Average]
[info]   (min, avg, max) = (979.259, 1179.773, 1317.628), stdev = 180.056
[info]   CI (99.9%): [486.440, 1873.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   172693.875 ±(99.9%) 98093.010 B/op [Average]
[info]   (min, avg, max) = (142130.633, 172693.875, 194257.125), stdev = 25474.443
[info]   CI (99.9%): [74600.865, 270786.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.887 ±(99.9%) 6.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.887, 3.645), stdev = 1.577
[info]   CI (99.9%): [≈ 0, 6.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   130.532 ±(99.9%) 895.210 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 130.532, 537.403), stdev = 232.483
[info]   CI (99.9%): [≈ 0, 1025.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 13.000), stdev = 3.808
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.41% complete, ETA 01:00:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 129235.350 ops/s
[info] # Warmup Iteration   2: 245920.693 ops/s
[info] # Warmup Iteration   3: 271874.159 ops/s
[info] Iteration   1: 275531.500 ops/s
[info]                  ·gc.alloc.rate:                   1854.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              10587.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11366.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.242 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 274961.247 ops/s
[info]                  ·gc.alloc.rate:                   1834.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              10501.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9455.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.430 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 276655.474 ops/s
[info]                  ·gc.alloc.rate:               1865.795 MB/sec
[info]                  ·gc.alloc.rate.norm:          10613.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1654.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9412.799 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 275030.062 ops/s
[info]                  ·gc.alloc.rate:                   1868.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              10693.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11433.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.238 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 276133.860 ops/s
[info]                  ·gc.alloc.rate:               1864.339 MB/sec
[info]                  ·gc.alloc.rate.norm:          10624.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1674.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9542.656 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala":
[info]   275662.429 ±(99.9%) 2801.374 ops/s [Average]
[info]   (min, avg, max) = (274961.247, 275662.429, 276655.474), stdev = 727.508
[info]   CI (99.9%): [272861.054, 278463.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1857.657 ±(99.9%) 53.342 MB/sec [Average]
[info]   (min, avg, max) = (1834.903, 1857.657, 1868.956), stdev = 13.853
[info]   CI (99.9%): [1804.316, 1910.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10604.294 ±(99.9%) 267.813 B/op [Average]
[info]   (min, avg, max) = (10501.751, 10604.294, 10693.967), stdev = 69.550
[info]   CI (99.9%): [10336.481, 10872.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1794.029 ±(99.9%) 705.273 MB/sec [Average]
[info]   (min, avg, max) = (1652.127, 1794.029, 1998.185), stdev = 183.157
[info]   CI (99.9%): [1088.755, 2499.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10242.115 ±(99.9%) 4074.187 B/op [Average]
[info]   (min, avg, max) = (9412.799, 10242.115, 11433.404), stdev = 1058.053
[info]   CI (99.9%): [6167.928, 14316.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.662 ±(99.9%) 5.090 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.662, 3.020), stdev = 1.322
[info]   CI (99.9%): [≈ 0, 5.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.782 ±(99.9%) 29.064 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.782, 17.242), stdev = 7.548
[info]   CI (99.9%): [≈ 0, 32.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 11.000), stdev = 2.074
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 33.65% complete, ETA 01:00:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 857.409 ops/s
[info] # Warmup Iteration   2: 6256.110 ops/s
[info] # Warmup Iteration   3: 8384.427 ops/s
[info] Iteration   1: 8520.997 ops/s
[info]                  ·gc.alloc.rate:                   1555.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              287208.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     303943.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.223 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 8539.774 ops/s
[info]                  ·gc.alloc.rate:                   1547.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              285117.594 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     302469.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 805.986 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 8631.321 ops/s
[info]                  ·gc.alloc.rate:                   1559.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              284298.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     237760.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.548 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 8582.304 ops/s
[info]                  ·gc.alloc.rate:               1584.848 MB/sec
[info]                  ·gc.alloc.rate.norm:          290614.149 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1633.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 299584.418 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 8567.570 ops/s
[info]                  ·gc.alloc.rate:               1582.296 MB/sec
[info]                  ·gc.alloc.rate.norm:          290568.520 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1645.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 302222.226 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson":
[info]   8568.393 ±(99.9%) 163.591 ops/s [Average]
[info]   (min, avg, max) = (8520.997, 8568.393, 8631.321), stdev = 42.484
[info]   CI (99.9%): [8404.802, 8731.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1565.760 ±(99.9%) 64.887 MB/sec [Average]
[info]   (min, avg, max) = (1547.231, 1565.760, 1584.848), stdev = 16.851
[info]   CI (99.9%): [1500.873, 1630.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   287561.429 ±(99.9%) 11407.886 B/op [Average]
[info]   (min, avg, max) = (284298.083, 287561.429, 290614.149), stdev = 2962.592
[info]   CI (99.9%): [276153.544, 298969.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1574.142 ±(99.9%) 581.713 MB/sec [Average]
[info]   (min, avg, max) = (1304.043, 1574.142, 1645.756), stdev = 151.069
[info]   CI (99.9%): [992.428, 2155.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   289195.899 ±(99.9%) 110883.364 B/op [Average]
[info]   (min, avg, max) = (237760.630, 289195.899, 303943.096), stdev = 28796.058
[info]   CI (99.9%): [178312.535, 400079.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.946 ±(99.9%) 7.390 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.946, 4.374), stdev = 1.919
[info]   CI (99.9%): [≈ 0, 8.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   174.152 ±(99.9%) 1361.972 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 174.152, 805.986), stdev = 353.700
[info]   CI (99.9%): [≈ 0, 1536.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.000, 19.000), stdev = 5.477
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 33.88% complete, ETA 00:59:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6058.881 ops/s
[info] # Warmup Iteration   2: 23479.934 ops/s
[info] # Warmup Iteration   3: 24856.088 ops/s
[info] Iteration   1: 25721.063 ops/s
[info]                  ·gc.alloc.rate:                   1351.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              82698.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80781.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.547 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 25036.801 ops/s
[info]                  ·gc.alloc.rate:                   1324.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              83268.866 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83033.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 223.757 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 25462.853 ops/s
[info]                  ·gc.alloc.rate:                   1340.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              82849.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81236.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 25940.864 ops/s
[info]                  ·gc.alloc.rate:                   1371.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              83170.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79716.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.526 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 25933.194 ops/s
[info]                  ·gc.alloc.rate:                   1377.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              83589.441 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79983.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.263 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce":
[info]   25618.955 ±(99.9%) 1461.303 ops/s [Average]
[info]   (min, avg, max) = (25036.801, 25618.955, 25940.864), stdev = 379.496
[info]   CI (99.9%): [24157.651, 27080.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1353.154 ±(99.9%) 83.646 MB/sec [Average]
[info]   (min, avg, max) = (1324.764, 1353.154, 1377.452), stdev = 21.723
[info]   CI (99.9%): [1269.508, 1436.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   83115.416 ±(99.9%) 1355.409 B/op [Average]
[info]   (min, avg, max) = (82698.708, 83115.416, 83589.441), stdev = 351.995
[info]   CI (99.9%): [81760.007, 84470.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1317.642 ±(99.9%) 12.245 MB/sec [Average]
[info]   (min, avg, max) = (1314.350, 1317.642, 1321.021), stdev = 3.180
[info]   CI (99.9%): [1305.398, 1329.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   80950.232 ±(99.9%) 5060.353 B/op [Average]
[info]   (min, avg, max) = (79716.186, 80950.232, 83033.552), stdev = 1314.158
[info]   CI (99.9%): [75889.879, 86010.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.762 ±(99.9%) 6.026 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.762, 3.560), stdev = 1.565
[info]   CI (99.9%): [≈ 0, 6.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   47.820 ±(99.9%) 378.898 B/op [Average]
[info]   (min, avg, max) = (1.263, 47.820, 223.757), stdev = 98.399
[info]   CI (99.9%): [≈ 0, 426.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 13.000), stdev = 3.391
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.12% complete, ETA 00:59:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7362.672 ops/s
[info] # Warmup Iteration   2: 26768.359 ops/s
[info] # Warmup Iteration   3: 29231.935 ops/s
[info] Iteration   1: 28839.935 ops/s
[info]                  ·gc.alloc.rate:                   1201.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              65532.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71754.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.408 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 28662.091 ops/s
[info]                  ·gc.alloc.rate:                   1197.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              65765.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54244.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 170.436 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 28310.604 ops/s
[info]                  ·gc.alloc.rate:                   1194.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              66381.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73028.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.605 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 28349.996 ops/s
[info]                  ·gc.alloc.rate:               1179.456 MB/sec
[info]                  ·gc.alloc.rate.norm:          65475.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54470.040 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 28391.168 ops/s
[info]                  ·gc.alloc.rate:               1199.384 MB/sec
[info]                  ·gc.alloc.rate.norm:          66479.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 72595.711 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala":
[info]   28510.759 ±(99.9%) 885.370 ops/s [Average]
[info]   (min, avg, max) = (28310.604, 28510.759, 28839.935), stdev = 229.928
[info]   CI (99.9%): [27625.389, 29396.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1194.371 ±(99.9%) 33.548 MB/sec [Average]
[info]   (min, avg, max) = (1179.456, 1194.371, 1201.032), stdev = 8.712
[info]   CI (99.9%): [1160.822, 1227.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   65926.645 ±(99.9%) 1823.322 B/op [Average]
[info]   (min, avg, max) = (65475.011, 65926.645, 66479.089), stdev = 473.511
[info]   CI (99.9%): [64103.323, 67749.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1181.548 ±(99.9%) 692.444 MB/sec [Average]
[info]   (min, avg, max) = (981.214, 1181.548, 1315.048), stdev = 179.825
[info]   CI (99.9%): [489.105, 1873.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   65218.566 ±(99.9%) 38220.270 B/op [Average]
[info]   (min, avg, max) = (54244.888, 65218.566, 73028.143), stdev = 9925.683
[info]   CI (99.9%): [26998.296, 103438.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.808 ±(99.9%) 5.144 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.808, 3.104), stdev = 1.336
[info]   CI (99.9%): [≈ 0, 5.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   44.490 ±(99.9%) 282.477 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 44.490, 170.436), stdev = 73.358
[info]   CI (99.9%): [≈ 0, 326.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 12.000), stdev = 3.033
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.35% complete, ETA 00:59:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 276144.675 ops/s
[info] # Warmup Iteration   2: 583052.651 ops/s
[info] # Warmup Iteration   3: 626656.705 ops/s
[info] Iteration   1: 616627.080 ops/s
[info]                  ·gc.alloc.rate:                   1149.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              2933.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3385.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 627722.365 ops/s
[info]                  ·gc.alloc.rate:                   1166.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              2923.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2498.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.007 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 626139.255 ops/s
[info]                  ·gc.alloc.rate:                   1169.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              2937.399 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3328.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.459 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 629056.612 ops/s
[info]                  ·gc.alloc.rate:               1167.369 MB/sec
[info]                  ·gc.alloc.rate.norm:          2920.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2474.703 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 628323.021 ops/s
[info]                  ·gc.alloc.rate:                   1186.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              2970.855 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3307.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala":
[info]   625573.667 ±(99.9%) 19697.470 ops/s [Average]
[info]   (min, avg, max) = (616627.080, 625573.667, 629056.612), stdev = 5115.370
[info]   CI (99.9%): [605876.197, 645271.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1167.598 ±(99.9%) 50.325 MB/sec [Average]
[info]   (min, avg, max) = (1149.304, 1167.598, 1186.148), stdev = 13.069
[info]   CI (99.9%): [1117.273, 1217.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2937.038 ±(99.9%) 77.553 B/op [Average]
[info]   (min, avg, max) = (2920.357, 2937.038, 2970.855), stdev = 20.140
[info]   CI (99.9%): [2859.485, 3014.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1191.460 ±(99.9%) 698.042 MB/sec [Average]
[info]   (min, avg, max) = (989.226, 1191.460, 1326.360), stdev = 181.279
[info]   CI (99.9%): [493.417, 1889.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2998.757 ±(99.9%) 1803.958 B/op [Average]
[info]   (min, avg, max) = (2474.703, 2998.757, 3385.032), stdev = 468.482
[info]   CI (99.9%): [1194.799, 4802.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.687 ±(99.9%) 4.010 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.687, 2.396), stdev = 1.042
[info]   CI (99.9%): [≈ 0, 4.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.725 ±(99.9%) 10.055 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.725, 6.007), stdev = 2.611
[info]   CI (99.9%): [≈ 0, 11.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 11.000), stdev = 2.828
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 34.59% complete, ETA 00:59:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 413029.973 ops/s
[info] # Warmup Iteration   2: 742425.262 ops/s
[info] # Warmup Iteration   3: 775925.167 ops/s
[info] Iteration   1: 773798.167 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 774328.360 ops/s
[info]                  ·gc.alloc.rate:      0.180 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.365 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 773242.079 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 776162.986 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 774738.476 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   774454.014 ±(99.9%) 4268.928 ops/s [Average]
[info]   (min, avg, max) = (773242.079, 774454.014, 776162.986), stdev = 1108.627
[info]   CI (99.9%): [770185.086, 778722.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.036 ±(99.9%) 0.309 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.036, 0.180), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.074 ±(99.9%) 0.627 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.074, 0.365), stdev = 0.163
[info]   CI (99.9%): [≈ 0, 0.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 34.82% complete, ETA 00:59:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9833.273 ops/s
[info] # Warmup Iteration   2: 23248.016 ops/s
[info] # Warmup Iteration   3: 27705.621 ops/s
[info] Iteration   1: 27410.762 ops/s
[info]                  ·gc.alloc.rate:                   1255.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              72110.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56662.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.195 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 27669.160 ops/s
[info]                  ·gc.alloc.rate:                   1265.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              71954.983 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75020.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 179.972 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 28015.646 ops/s
[info]                  ·gc.alloc.rate:                   1276.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              71686.958 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73642.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.622 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 27874.367 ops/s
[info]                  ·gc.alloc.rate:                   1261.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              71216.393 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73866.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.175 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 27892.138 ops/s
[info]                  ·gc.alloc.rate:                   1283.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              72381.959 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73930.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.691 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson":
[info]   27772.415 ±(99.9%) 913.958 ops/s [Average]
[info]   (min, avg, max) = (27410.762, 27772.415, 28015.646), stdev = 237.352
[info]   CI (99.9%): [26858.456, 28686.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1268.465 ±(99.9%) 43.210 MB/sec [Average]
[info]   (min, avg, max) = (1255.910, 1268.465, 1283.529), stdev = 11.222
[info]   CI (99.9%): [1225.255, 1311.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   71870.192 ±(99.9%) 1709.044 B/op [Average]
[info]   (min, avg, max) = (71216.393, 71870.192, 72381.959), stdev = 443.833
[info]   CI (99.9%): [70161.149, 73579.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1247.277 ±(99.9%) 560.769 MB/sec [Average]
[info]   (min, avg, max) = (986.862, 1247.277, 1319.002), stdev = 145.630
[info]   CI (99.9%): [686.508, 1808.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   70624.427 ±(99.9%) 30123.740 B/op [Average]
[info]   (min, avg, max) = (56662.728, 70624.427, 75020.072), stdev = 7823.040
[info]   CI (99.9%): [40500.687, 100748.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.845 ±(99.9%) 5.211 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.845, 3.164), stdev = 1.353
[info]   CI (99.9%): [≈ 0, 6.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   47.931 ±(99.9%) 296.380 B/op [Average]
[info]   (min, avg, max) = (1.175, 47.931, 179.972), stdev = 76.969
[info]   CI (99.9%): [≈ 0, 344.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 12.000), stdev = 3.114
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 35.06% complete, ETA 00:58:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3692.181 ops/s
[info] # Warmup Iteration   2: 25200.014 ops/s
[info] # Warmup Iteration   3: 32951.773 ops/s
[info] Iteration   1: 31715.902 ops/s
[info]                  ·gc.alloc.rate:                   1701.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              84410.267 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82012.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 154.951 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 31605.789 ops/s
[info]                  ·gc.alloc.rate:                   1692.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              84240.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81960.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.000 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.754 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 32180.564 ops/s
[info]                  ·gc.alloc.rate:                   1706.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              83442.531 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80252.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.414 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 33197.886 ops/s
[info]                  ·gc.alloc.rate:                   1785.595 MB/sec
[info]                  ·gc.alloc.rate.norm:              84641.100 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1978.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93802.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.921 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 32819.712 ops/s
[info]                  ·gc.alloc.rate:               1753.987 MB/sec
[info]                  ·gc.alloc.rate.norm:          84083.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1661.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79637.470 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce":
[info]   32303.971 ±(99.9%) 2663.344 ops/s [Average]
[info]   (min, avg, max) = (31605.789, 32303.971, 33197.886), stdev = 691.662
[info]   CI (99.9%): [29640.626, 34967.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate":
[info]   1727.965 ±(99.9%) 154.424 MB/sec [Average]
[info]   (min, avg, max) = (1692.316, 1727.965, 1785.595), stdev = 40.103
[info]   CI (99.9%): [1573.541, 1882.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   84163.634 ±(99.9%) 1744.586 B/op [Average]
[info]   (min, avg, max) = (83442.531, 84163.634, 84641.100), stdev = 453.063
[info]   CI (99.9%): [82419.048, 85908.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1716.194 ±(99.9%) 566.142 MB/sec [Average]
[info]   (min, avg, max) = (1641.152, 1716.194, 1978.857), stdev = 147.025
[info]   CI (99.9%): [1150.053, 2282.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   83533.105 ±(99.9%) 22467.468 B/op [Average]
[info]   (min, avg, max) = (79637.470, 83533.105, 93802.175), stdev = 5834.730
[info]   CI (99.9%): [61065.637, 106000.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.945 ±(99.9%) 4.921 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.945, 3.123), stdev = 1.278
[info]   CI (99.9%): [≈ 0, 5.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   46.808 ±(99.9%) 244.399 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 46.808, 154.951), stdev = 63.470
[info]   CI (99.9%): [≈ 0, 291.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.600, 17.000), stdev = 4.219
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.29% complete, ETA 00:58:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4174.494 ops/s
[info] # Warmup Iteration   2: 27019.867 ops/s
[info] # Warmup Iteration   3: 36120.221 ops/s
[info] Iteration   1: 34653.928 ops/s
[info]                  ·gc.alloc.rate:                   1540.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              69944.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73863.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.836 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 36321.370 ops/s
[info]                  ·gc.alloc.rate:                   1608.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              69658.687 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70871.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.902 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 36240.203 ops/s
[info]                  ·gc.alloc.rate:                   1605.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              69692.961 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71614.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.709 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 35067.675 ops/s
[info]                  ·gc.alloc.rate:                   1541.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              69174.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59699.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.868 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 35913.831 ops/s
[info]                  ·gc.alloc.rate:                   1611.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              70598.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73284.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.824 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala":
[info]   35639.402 ±(99.9%) 2855.315 ops/s [Average]
[info]   (min, avg, max) = (34653.928, 35639.402, 36321.370), stdev = 741.516
[info]   CI (99.9%): [32784.087, 38494.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1581.399 ±(99.9%) 141.957 MB/sec [Average]
[info]   (min, avg, max) = (1540.240, 1581.399, 1611.189), stdev = 36.866
[info]   CI (99.9%): [1439.442, 1723.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   69813.816 ±(99.9%) 2000.724 B/op [Average]
[info]   (min, avg, max) = (69174.396, 69813.816, 70598.129), stdev = 519.582
[info]   CI (99.9%): [67813.092, 71814.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1583.132 ±(99.9%) 547.417 MB/sec [Average]
[info]   (min, avg, max) = (1330.711, 1583.132, 1672.495), stdev = 142.162
[info]   CI (99.9%): [1035.715, 2130.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   69866.671 ±(99.9%) 22378.375 B/op [Average]
[info]   (min, avg, max) = (59699.118, 69866.671, 73863.194), stdev = 5811.593
[info]   CI (99.9%): [47488.296, 92245.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.028 ±(99.9%) 3.015 B/op [Average]
[info]   (min, avg, max) = (0.902, 2.028, 2.836), stdev = 0.783
[info]   CI (99.9%): [≈ 0, 5.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 8.000), stdev = 0.707
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.53% complete, ETA 00:58:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 176676.822 ops/s
[info] # Warmup Iteration   2: 425771.117 ops/s
[info] # Warmup Iteration   3: 480665.390 ops/s
[info] Iteration   1: 459267.931 ops/s
[info]                  ·gc.alloc.rate:                   1219.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              4176.896 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3409.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 466787.553 ops/s
[info]                  ·gc.alloc.rate:                   1255.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              4231.773 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4480.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.665 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.984 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 478575.275 ops/s
[info]                  ·gc.alloc.rate:                   1284.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              4224.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4350.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.438 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 476063.429 ops/s
[info]                  ·gc.alloc.rate:               1290.336 MB/sec
[info]                  ·gc.alloc.rate.norm:          4265.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1321.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4369.122 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 482516.067 ops/s
[info]                  ·gc.alloc.rate:               1295.321 MB/sec
[info]                  ·gc.alloc.rate.norm:          4224.175 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3238.378 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala":
[info]   472642.051 ±(99.9%) 36405.766 ops/s [Average]
[info]   (min, avg, max) = (459267.931, 472642.051, 482516.067), stdev = 9454.462
[info]   CI (99.9%): [436236.285, 509047.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1268.994 ±(99.9%) 122.665 MB/sec [Average]
[info]   (min, avg, max) = (1219.151, 1268.994, 1295.321), stdev = 31.856
[info]   CI (99.9%): [1146.329, 1391.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4224.447 ±(99.9%) 121.621 B/op [Average]
[info]   (min, avg, max) = (4176.896, 4224.447, 4265.377), stdev = 31.585
[info]   CI (99.9%): [4102.825, 4346.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1192.457 ±(99.9%) 697.554 MB/sec [Average]
[info]   (min, avg, max) = (993.031, 1192.457, 1329.328), stdev = 181.152
[info]   CI (99.9%): [494.904, 1890.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3969.559 ±(99.9%) 2289.999 B/op [Average]
[info]   (min, avg, max) = (3238.378, 3969.559, 4480.528), stdev = 594.706
[info]   CI (99.9%): [1679.560, 6259.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.625 ±(99.9%) 4.451 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.625, 2.665), stdev = 1.156
[info]   CI (99.9%): [≈ 0, 5.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.098 ±(99.9%) 15.007 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.098, 8.984), stdev = 3.897
[info]   CI (99.9%): [≈ 0, 17.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 9.000), stdev = 2.074
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 35.76% complete, ETA 00:58:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1529.840 ops/s
[info] # Warmup Iteration   2: 13404.653 ops/s
[info] # Warmup Iteration   3: 18231.996 ops/s
[info] Iteration   1: 18374.448 ops/s
[info]                  ·gc.alloc.rate:                   1841.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              157677.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     140871.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 351.439 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 18298.781 ops/s
[info]                  ·gc.alloc.rate:                   1847.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              158926.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     168212.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.922 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 18437.352 ops/s
[info]                  ·gc.alloc.rate:               1853.478 MB/sec
[info]                  ·gc.alloc.rate.norm:          158198.545 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1629.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139110.741 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 18305.132 ops/s
[info]                  ·gc.alloc.rate:                   1864.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              160330.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1971.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     169465.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.323 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.770 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 18638.044 ops/s
[info]                  ·gc.alloc.rate:               1887.360 MB/sec
[info]                  ·gc.alloc.rate.norm:          159355.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1657.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139973.253 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson":
[info]   18410.751 ±(99.9%) 535.574 ops/s [Average]
[info]   (min, avg, max) = (18298.781, 18410.751, 18638.044), stdev = 139.087
[info]   CI (99.9%): [17875.178, 18946.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1858.956 ±(99.9%) 69.805 MB/sec [Average]
[info]   (min, avg, max) = (1841.014, 1858.956, 1887.360), stdev = 18.128
[info]   CI (99.9%): [1789.150, 1928.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   158897.773 ±(99.9%) 3964.427 B/op [Average]
[info]   (min, avg, max) = (157677.819, 158897.773, 160330.297), stdev = 1029.549
[info]   CI (99.9%): [154933.346, 162862.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1771.916 ±(99.9%) 675.107 MB/sec [Average]
[info]   (min, avg, max) = (1629.843, 1771.916, 1971.184), stdev = 175.323
[info]   CI (99.9%): [1096.810, 2447.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   151526.527 ±(99.9%) 60925.564 B/op [Average]
[info]   (min, avg, max) = (139110.741, 151526.527, 169465.093), stdev = 15822.176
[info]   CI (99.9%): [90600.962, 212452.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.006 ±(99.9%) 6.737 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.006, 4.103), stdev = 1.750
[info]   CI (99.9%): [≈ 0, 7.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   86.226 ±(99.9%) 576.961 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 86.226, 351.439), stdev = 149.835
[info]   CI (99.9%): [≈ 0, 663.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 17.000), stdev = 3.937
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 36.00% complete, ETA 00:57:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19479.546 ops/s
[info] # Warmup Iteration   2: 45760.190 ops/s
[info] # Warmup Iteration   3: 53617.174 ops/s
[info] Iteration   1: 55594.218 ops/s
[info]                  ·gc.alloc.rate:                   1699.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              48110.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46840.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.956 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83.678 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 54605.697 ops/s
[info]                  ·gc.alloc.rate:                   1667.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              48045.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47440.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.875 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.198 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 55850.514 ops/s
[info]                  ·gc.alloc.rate:                   1713.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              48294.464 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46291.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.346 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 54622.815 ops/s
[info]                  ·gc.alloc.rate:               1692.177 MB/sec
[info]                  ·gc.alloc.rate.norm:          48759.071 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1650.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47570.940 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 55062.483 ops/s
[info]                  ·gc.alloc.rate:                   1706.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              48766.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47493.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.595 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce":
[info]   55147.146 ±(99.9%) 2169.607 ops/s [Average]
[info]   (min, avg, max) = (54605.697, 55147.146, 55850.514), stdev = 563.440
[info]   CI (99.9%): [52977.539, 57316.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1696.033 ±(99.9%) 68.544 MB/sec [Average]
[info]   (min, avg, max) = (1667.671, 1696.033, 1713.930), stdev = 17.801
[info]   CI (99.9%): [1627.489, 1764.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   48395.209 ±(99.9%) 1339.604 B/op [Average]
[info]   (min, avg, max) = (48045.432, 48395.209, 48766.768), stdev = 347.891
[info]   CI (99.9%): [47055.606, 49734.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1651.483 ±(99.9%) 28.811 MB/sec [Average]
[info]   (min, avg, max) = (1642.841, 1651.483, 1662.198), stdev = 7.482
[info]   CI (99.9%): [1622.672, 1680.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   47127.329 ±(99.9%) 2117.817 B/op [Average]
[info]   (min, avg, max) = (46291.348, 47127.329, 47570.940), stdev = 549.990
[info]   CI (99.9%): [45009.512, 49245.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.787 ±(99.9%) 4.876 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.787, 2.956), stdev = 1.266
[info]   CI (99.9%): [≈ 0, 5.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   22.363 ±(99.9%) 138.062 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22.363, 83.678), stdev = 35.854
[info]   CI (99.9%): [≈ 0, 160.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 15.000), stdev = 3.578
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.24% complete, ETA 00:57:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33457.910 ops/s
[info] # Warmup Iteration   2: 139122.955 ops/s
[info] # Warmup Iteration   3: 151700.746 ops/s
[info] Iteration   1: 157692.669 ops/s
[info]                  ·gc.alloc.rate:                   1903.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              18991.791 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19718.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38.665 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 158250.961 ops/s
[info]                  ·gc.alloc.rate:                   1907.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              18965.393 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1637.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16280.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 158685.669 ops/s
[info]                  ·gc.alloc.rate:                   1938.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              19223.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1970.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19545.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 159309.875 ops/s
[info]                  ·gc.alloc.rate:                   1947.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              19234.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19634.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 159036.261 ops/s
[info]                  ·gc.alloc.rate:                   1931.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              19112.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1669.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16523.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala":
[info]   158595.087 ±(99.9%) 2470.528 ops/s [Average]
[info]   (min, avg, max) = (157692.669, 158595.087, 159309.875), stdev = 641.588
[info]   CI (99.9%): [156124.559, 161065.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1925.496 ±(99.9%) 74.608 MB/sec [Average]
[info]   (min, avg, max) = (1903.086, 1925.496, 1947.151), stdev = 19.376
[info]   CI (99.9%): [1850.888, 2000.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   19105.487 ±(99.9%) 483.871 B/op [Average]
[info]   (min, avg, max) = (18965.393, 19105.487, 19234.374), stdev = 125.660
[info]   CI (99.9%): [18621.617, 19589.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1848.323 ±(99.9%) 686.355 MB/sec [Average]
[info]   (min, avg, max) = (1637.317, 1848.323, 1987.684), stdev = 178.244
[info]   CI (99.9%): [1161.968, 2534.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   18340.488 ±(99.9%) 6826.799 B/op [Average]
[info]   (min, avg, max) = (16280.179, 18340.488, 19718.598), stdev = 1772.898
[info]   CI (99.9%): [11513.689, 25167.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.792 ±(99.9%) 6.636 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.792, 3.874), stdev = 1.723
[info]   CI (99.9%): [≈ 0, 7.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.898 ±(99.9%) 66.228 B/op [Average]
[info]   (min, avg, max) = (0.206, 7.898, 38.665), stdev = 17.199
[info]   CI (99.9%): [≈ 0, 74.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.600, 15.000), stdev = 3.209
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.47% complete, ETA 00:57:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 545731.037 ops/s
[info] # Warmup Iteration   2: 1084366.956 ops/s
[info] # Warmup Iteration   3: 1179418.800 ops/s
[info] Iteration   1: 1141737.127 ops/s
[info]                  ·gc.alloc.rate:                   1262.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              1739.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1829.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1177648.525 ops/s
[info]                  ·gc.alloc.rate:                   1303.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              1741.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1774.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.980 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.981 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1136654.992 ops/s
[info]                  ·gc.alloc.rate:                   1258.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              1741.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1829.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.461 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1141352.492 ops/s
[info]                  ·gc.alloc.rate:               1262.988 MB/sec
[info]                  ·gc.alloc.rate.norm:          1741.399 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1364.081 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1130472.151 ops/s
[info]                  ·gc.alloc.rate:               1264.733 MB/sec
[info]                  ·gc.alloc.rate.norm:          1760.629 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1840.835 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala":
[info]   1145573.057 ±(99.9%) 71235.154 ops/s [Average]
[info]   (min, avg, max) = (1130472.151, 1145573.057, 1177648.525), stdev = 18499.543
[info]   CI (99.9%): [1074337.904, 1216808.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1270.346 ±(99.9%) 72.360 MB/sec [Average]
[info]   (min, avg, max) = (1258.113, 1270.346, 1303.679), stdev = 18.792
[info]   CI (99.9%): [1197.986, 1342.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1745.076 ±(99.9%) 33.619 B/op [Average]
[info]   (min, avg, max) = (1739.838, 1745.076, 1760.629), stdev = 8.731
[info]   CI (99.9%): [1711.458, 1778.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1257.755 ±(99.9%) 577.909 MB/sec [Average]
[info]   (min, avg, max) = (989.330, 1257.755, 1328.354), stdev = 150.081
[info]   CI (99.9%): [679.845, 1835.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1727.725 ±(99.9%) 789.062 B/op [Average]
[info]   (min, avg, max) = (1364.081, 1727.725, 1840.835), stdev = 204.917
[info]   CI (99.9%): [938.663, 2516.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.679 ±(99.9%) 4.980 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.679, 2.980), stdev = 1.293
[info]   CI (99.9%): [≈ 0, 5.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.911 ±(99.9%) 6.648 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.911, 3.981), stdev = 1.726
[info]   CI (99.9%): [≈ 0, 7.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 2.915
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 36.71% complete, ETA 00:57:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 770114.495 ops/s
[info] # Warmup Iteration   2: 1333543.019 ops/s
[info] # Warmup Iteration   3: 1386929.442 ops/s
[info] Iteration   1: 1387872.038 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1391389.190 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1390743.035 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1374507.523 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1387811.614 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc":
[info]   1386464.680 ±(99.9%) 26491.451 ops/s [Average]
[info]   (min, avg, max) = (1374507.523, 1386464.680, 1391389.190), stdev = 6879.746
[info]   CI (99.9%): [1359973.229, 1412956.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 36.94% complete, ETA 00:57:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21477.605 ops/s
[info] # Warmup Iteration   2: 63224.987 ops/s
[info] # Warmup Iteration   3: 66107.820 ops/s
[info] Iteration   1: 66812.523 ops/s
[info]                  ·gc.alloc.rate:                   1687.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              39749.857 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38883.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 87.774 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 66563.703 ops/s
[info]                  ·gc.alloc.rate:                   1678.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              39679.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38777.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.399 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 68375.192 ops/s
[info]                  ·gc.alloc.rate:                   1742.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              40114.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37779.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.479 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 68468.689 ops/s
[info]                  ·gc.alloc.rate:               1746.344 MB/sec
[info]                  ·gc.alloc.rate.norm:          40138.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1650.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37941.844 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 68712.592 ops/s
[info]                  ·gc.alloc.rate:               1751.972 MB/sec
[info]                  ·gc.alloc.rate.norm:          40128.805 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1663.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38097.026 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson":
[info]   67786.540 ±(99.9%) 3904.868 ops/s [Average]
[info]   (min, avg, max) = (66563.703, 67786.540, 68712.592), stdev = 1014.082
[info]   CI (99.9%): [63881.672, 71691.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1721.455 ±(99.9%) 136.299 MB/sec [Average]
[info]   (min, avg, max) = (1678.379, 1721.455, 1751.972), stdev = 35.397
[info]   CI (99.9%): [1585.156, 1857.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   39962.412 ±(99.9%) 875.738 B/op [Average]
[info]   (min, avg, max) = (39679.985, 39962.412, 40138.423), stdev = 227.426
[info]   CI (99.9%): [39086.673, 40838.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1649.314 ±(99.9%) 35.685 MB/sec [Average]
[info]   (min, avg, max) = (1640.219, 1649.314, 1663.267), stdev = 9.267
[info]   CI (99.9%): [1613.628, 1684.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   38295.849 ±(99.9%) 1933.898 B/op [Average]
[info]   (min, avg, max) = (37779.340, 38295.849, 38883.222), stdev = 502.227
[info]   CI (99.9%): [36361.951, 40229.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 6.307 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.804, 3.727), stdev = 1.638
[info]   CI (99.9%): [≈ 0, 7.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   18.930 ±(99.9%) 148.557 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18.930, 87.774), stdev = 38.580
[info]   CI (99.9%): [≈ 0, 167.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 13.000), stdev = 2.775
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 37.18% complete, ETA 00:56:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2270.056 ops/s
[info] # Warmup Iteration   2: 14962.477 ops/s
[info] # Warmup Iteration   3: 17517.209 ops/s
[info] Iteration   1: 17432.317 ops/s
[info]                  ·gc.alloc.rate:               1522.677 MB/sec
[info]                  ·gc.alloc.rate.norm:          137460.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1633.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 147489.828 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 17266.306 ops/s
[info]                  ·gc.alloc.rate:                   1511.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              137689.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119665.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.897 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 17385.184 ops/s
[info]                  ·gc.alloc.rate:               1514.781 MB/sec
[info]                  ·gc.alloc.rate.norm:          137109.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1652.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 149585.505 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 17109.273 ops/s
[info]                  ·gc.alloc.rate:               1524.352 MB/sec
[info]                  ·gc.alloc.rate.norm:          140195.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1331.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 122478.873 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 16909.932 ops/s
[info]                  ·gc.alloc.rate:                   1486.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              138318.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155801.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.937 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce":
[info]   17220.602 ±(99.9%) 823.420 ops/s [Average]
[info]   (min, avg, max) = (16909.932, 17220.602, 17432.317), stdev = 213.840
[info]   CI (99.9%): [16397.182, 18044.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1511.869 ±(99.9%) 58.769 MB/sec [Average]
[info]   (min, avg, max) = (1486.372, 1511.869, 1524.352), stdev = 15.262
[info]   CI (99.9%): [1453.101, 1570.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   138154.759 ±(99.9%) 4709.556 B/op [Average]
[info]   (min, avg, max) = (137109.325, 138154.759, 140195.864), stdev = 1223.057
[info]   CI (99.9%): [133445.203, 142864.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1521.140 ±(99.9%) 700.763 MB/sec [Average]
[info]   (min, avg, max) = (1313.345, 1521.140, 1674.251), stdev = 181.986
[info]   CI (99.9%): [820.377, 2221.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   139004.255 ±(99.9%) 64237.449 B/op [Average]
[info]   (min, avg, max) = (119665.526, 139004.255, 155801.542), stdev = 16682.261
[info]   CI (99.9%): [74766.806, 203241.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.767 ±(99.9%) 4.044 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.767, 1.937), stdev = 1.050
[info]   CI (99.9%): [≈ 0, 4.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 8.000), stdev = 1.140
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.41% complete, ETA 00:56:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1592.445 ops/s
[info] # Warmup Iteration   2: 14132.327 ops/s
[info] # Warmup Iteration   3: 17282.519 ops/s
[info] Iteration   1: 17143.312 ops/s
[info]                  ·gc.alloc.rate:                   1409.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              129345.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120615.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.911 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 17350.268 ops/s
[info]                  ·gc.alloc.rate:                   1424.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              129130.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119214.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 367.457 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 17567.368 ops/s
[info]                  ·gc.alloc.rate:                   1453.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              130191.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146147.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.028 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 17813.213 ops/s
[info]                  ·gc.alloc.rate:               1484.019 MB/sec
[info]                  ·gc.alloc.rate.norm:          131103.100 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1304.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 115233.306 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 17648.524 ops/s
[info]                  ·gc.alloc.rate:               1465.645 MB/sec
[info]                  ·gc.alloc.rate.norm:          130684.507 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1312.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 117016.639 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala":
[info]   17504.537 ±(99.9%) 1008.258 ops/s [Average]
[info]   (min, avg, max) = (17143.312, 17504.537, 17813.213), stdev = 261.841
[info]   CI (99.9%): [16496.279, 18512.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1447.209 ±(99.9%) 117.537 MB/sec [Average]
[info]   (min, avg, max) = (1409.033, 1447.209, 1484.019), stdev = 30.524
[info]   CI (99.9%): [1329.673, 1564.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   130090.996 ±(99.9%) 3258.654 B/op [Average]
[info]   (min, avg, max) = (129130.480, 130090.996, 131103.100), stdev = 846.262
[info]   CI (99.9%): [126832.342, 133349.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1375.357 ±(99.9%) 551.467 MB/sec [Average]
[info]   (min, avg, max) = (1304.382, 1375.357, 1631.441), stdev = 143.214
[info]   CI (99.9%): [823.891, 1926.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   123645.471 ±(99.9%) 49081.648 B/op [Average]
[info]   (min, avg, max) = (115233.306, 123645.471, 146147.779), stdev = 12746.348
[info]   CI (99.9%): [74563.823, 172727.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.906 ±(99.9%) 6.814 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.906, 4.052), stdev = 1.770
[info]   CI (99.9%): [≈ 0, 7.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   82.079 ±(99.9%) 617.985 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 82.079, 367.457), stdev = 160.489
[info]   CI (99.9%): [≈ 0, 700.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 14.000), stdev = 3.564
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.65% complete, ETA 00:56:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 292151.764 ops/s
[info] # Warmup Iteration   2: 627472.965 ops/s
[info] # Warmup Iteration   3: 658784.312 ops/s
[info] Iteration   1: 675365.299 ops/s
[info]                  ·gc.alloc.rate:                   1803.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              4202.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3871.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.998 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.986 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 673961.718 ops/s
[info]                  ·gc.alloc.rate:                   1805.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              4215.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3861.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.340 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 669724.029 ops/s
[info]                  ·gc.alloc.rate:                   1821.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              4280.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4670.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 673735.809 ops/s
[info]                  ·gc.alloc.rate:               1819.349 MB/sec
[info]                  ·gc.alloc.rate.norm:          4249.658 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1665.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3890.992 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 676224.153 ops/s
[info]                  ·gc.alloc.rate:                   1826.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              4250.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3897.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala":
[info]   673802.201 ±(99.9%) 9620.922 ops/s [Average]
[info]   (min, avg, max) = (669724.029, 673802.201, 676224.153), stdev = 2498.523
[info]   CI (99.9%): [664181.279, 683423.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1815.202 ±(99.9%) 39.688 MB/sec [Average]
[info]   (min, avg, max) = (1803.391, 1815.202, 1826.433), stdev = 10.307
[info]   CI (99.9%): [1775.515, 1854.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4239.545 ±(99.9%) 120.393 B/op [Average]
[info]   (min, avg, max) = (4202.001, 4239.545, 4280.521), stdev = 31.266
[info]   CI (99.9%): [4119.153, 4359.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1728.648 ±(99.9%) 558.015 MB/sec [Average]
[info]   (min, avg, max) = (1653.551, 1728.648, 1987.519), stdev = 144.915
[info]   CI (99.9%): [1170.633, 2286.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4038.284 ±(99.9%) 1361.545 B/op [Average]
[info]   (min, avg, max) = (3861.007, 4038.284, 4670.262), stdev = 353.589
[info]   CI (99.9%): [2676.740, 5399.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.637 ±(99.9%) 5.087 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.637, 2.998), stdev = 1.321
[info]   CI (99.9%): [≈ 0, 5.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.485 ±(99.9%) 11.853 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.485, 6.986), stdev = 3.078
[info]   CI (99.9%): [≈ 0, 13.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 10.000), stdev = 1.304
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 37.88% complete, ETA 00:56:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1159.387 ops/s
[info] # Warmup Iteration   2: 9534.000 ops/s
[info] # Warmup Iteration   3: 12016.196 ops/s
[info] Iteration   1: 11901.274 ops/s
[info]                  ·gc.alloc.rate:                   1576.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              208450.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217572.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 426.667 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 12426.640 ops/s
[info]                  ·gc.alloc.rate:                   1641.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              207930.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166017.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 171.353 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 12085.832 ops/s
[info]                  ·gc.alloc.rate:               1595.688 MB/sec
[info]                  ·gc.alloc.rate.norm:          207777.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1629.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 212178.764 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 12282.015 ops/s
[info]                  ·gc.alloc.rate:               1647.892 MB/sec
[info]                  ·gc.alloc.rate.norm:          211135.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1636.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 209629.846 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 12464.037 ops/s
[info]                  ·gc.alloc.rate:               1672.909 MB/sec
[info]                  ·gc.alloc.rate.norm:          211218.441 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1648.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 208184.309 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson":
[info]   12231.960 ±(99.9%) 913.204 ops/s [Average]
[info]   (min, avg, max) = (11901.274, 12231.960, 12464.037), stdev = 237.156
[info]   CI (99.9%): [11318.756, 13145.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1626.976 ±(99.9%) 152.867 MB/sec [Average]
[info]   (min, avg, max) = (1576.443, 1626.976, 1672.909), stdev = 39.699
[info]   CI (99.9%): [1474.109, 1779.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   209302.519 ±(99.9%) 6659.426 B/op [Average]
[info]   (min, avg, max) = (207777.794, 209302.519, 211218.441), stdev = 1729.432
[info]   CI (99.9%): [202643.093, 215961.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1574.182 ±(99.9%) 567.326 MB/sec [Average]
[info]   (min, avg, max) = (1310.980, 1574.182, 1648.878), stdev = 147.333
[info]   CI (99.9%): [1006.856, 2141.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   202716.579 ±(99.9%) 80190.111 B/op [Average]
[info]   (min, avg, max) = (166017.503, 202716.579, 217572.473), stdev = 20825.117
[info]   CI (99.9%): [122526.468, 282906.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.916 ±(99.9%) 5.462 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.916, 3.227), stdev = 1.418
[info]   CI (99.9%): [≈ 0, 6.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   119.604 ±(99.9%) 720.083 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 119.604, 426.667), stdev = 187.003
[info]   CI (99.9%): [≈ 0, 839.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 19.000), stdev = 5.367
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 38.12% complete, ETA 00:56:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10985.665 ops/s
[info] # Warmup Iteration   2: 40765.607 ops/s
[info] # Warmup Iteration   3: 43918.081 ops/s
[info] Iteration   1: 43944.698 ops/s
[info]                  ·gc.alloc.rate:                   1717.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              61489.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59185.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.643 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 130.461 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 45343.498 ops/s
[info]                  ·gc.alloc.rate:                   1766.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              61297.482 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57037.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.613 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 44827.280 ops/s
[info]                  ·gc.alloc.rate:                   1744.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              61226.277 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57741.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.192 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 44896.907 ops/s
[info]                  ·gc.alloc.rate:                   1768.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              61973.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57979.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.919 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 45402.922 ops/s
[info]                  ·gc.alloc.rate:                   1788.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              61985.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57739.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.722 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce":
[info]   44883.061 ±(99.9%) 2250.310 ops/s [Average]
[info]   (min, avg, max) = (43944.698, 44883.061, 45402.922), stdev = 584.398
[info]   CI (99.9%): [42632.751, 47133.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1756.769 ±(99.9%) 104.763 MB/sec [Average]
[info]   (min, avg, max) = (1717.062, 1756.769, 1788.454), stdev = 27.207
[info]   CI (99.9%): [1652.006, 1861.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   61594.377 ±(99.9%) 1403.693 B/op [Average]
[info]   (min, avg, max) = (61226.277, 61594.377, 61985.908), stdev = 364.535
[info]   CI (99.9%): [60190.684, 62998.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1652.211 ±(99.9%) 34.716 MB/sec [Average]
[info]   (min, avg, max) = (1643.456, 1652.211, 1665.943), stdev = 9.016
[info]   CI (99.9%): [1617.495, 1686.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   57936.756 ±(99.9%) 3011.988 B/op [Average]
[info]   (min, avg, max) = (57037.836, 57936.756, 59185.919), stdev = 782.204
[info]   CI (99.9%): [54924.768, 60948.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.783 ±(99.9%) 6.158 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.783, 3.643), stdev = 1.599
[info]   CI (99.9%): [≈ 0, 6.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   27.981 ±(99.9%) 220.633 B/op [Average]
[info]   (min, avg, max) = (0.722, 27.981, 130.461), stdev = 57.298
[info]   CI (99.9%): [≈ 0, 248.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 14.000), stdev = 3.271
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.35% complete, ETA 00:55:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16539.720 ops/s
[info] # Warmup Iteration   2: 54469.258 ops/s
[info] # Warmup Iteration   3: 54867.091 ops/s
[info] Iteration   1: 56122.440 ops/s
[info]                  ·gc.alloc.rate:                   1724.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              48355.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46084.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.920 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 109.936 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 57042.677 ops/s
[info]                  ·gc.alloc.rate:                   1749.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              48264.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45100.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.297 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 56018.605 ops/s
[info]                  ·gc.alloc.rate:               1731.961 MB/sec
[info]                  ·gc.alloc.rate.norm:          48653.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1637.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46001.175 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 56436.263 ops/s
[info]                  ·gc.alloc.rate:               1746.013 MB/sec
[info]                  ·gc.alloc.rate.norm:          48688.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1648.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45975.510 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 55660.917 ops/s
[info]                  ·gc.alloc.rate:                   1737.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              49128.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56409.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.589 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala":
[info]   56256.180 ±(99.9%) 2000.551 ops/s [Average]
[info]   (min, avg, max) = (55660.917, 56256.180, 57042.677), stdev = 519.537
[info]   CI (99.9%): [54255.630, 58256.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1737.901 ±(99.9%) 39.277 MB/sec [Average]
[info]   (min, avg, max) = (1724.439, 1737.901, 1749.468), stdev = 10.200
[info]   CI (99.9%): [1698.624, 1777.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   48617.947 ±(99.9%) 1306.581 B/op [Average]
[info]   (min, avg, max) = (48264.055, 48617.947, 49128.192), stdev = 339.315
[info]   CI (99.9%): [47311.365, 49924.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1711.937 ±(99.9%) 610.010 MB/sec [Average]
[info]   (min, avg, max) = (1634.794, 1711.937, 1995.159), stdev = 158.418
[info]   CI (99.9%): [1101.927, 2321.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   47914.299 ±(99.9%) 18351.424 B/op [Average]
[info]   (min, avg, max) = (45100.438, 47914.299, 56409.483), stdev = 4765.806
[info]   CI (99.9%): [29562.875, 66265.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.805 ±(99.9%) 6.708 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.805, 3.920), stdev = 1.742
[info]   CI (99.9%): [≈ 0, 7.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   22.564 ±(99.9%) 188.109 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22.564, 109.936), stdev = 48.851
[info]   CI (99.9%): [≈ 0, 210.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 13.000), stdev = 2.793
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.59% complete, ETA 00:55:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 819053.452 ops/s
[info] # Warmup Iteration   2: 1231542.311 ops/s
[info] # Warmup Iteration   3: 1333153.426 ops/s
[info] Iteration   1: 1342559.357 ops/s
[info]                  ·gc.alloc.rate:                   1255.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              1471.421 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1165.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1318722.491 ops/s
[info]                  ·gc.alloc.rate:                   1232.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              1470.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.037 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1584.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.943 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.511 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1352903.318 ops/s
[info]                  ·gc.alloc.rate:                   1269.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              1476.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1537.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1343928.438 ops/s
[info]                  ·gc.alloc.rate:               1266.216 MB/sec
[info]                  ·gc.alloc.rate.norm:          1482.696 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1159.968 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1338221.395 ops/s
[info]                  ·gc.alloc.rate:                   1265.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              1488.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1557.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala":
[info]   1339267.000 ±(99.9%) 48771.409 ops/s [Average]
[info]   (min, avg, max) = (1318722.491, 1339267.000, 1352903.318), stdev = 12665.780
[info]   CI (99.9%): [1290495.591, 1388038.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1257.780 ±(99.9%) 58.141 MB/sec [Average]
[info]   (min, avg, max) = (1232.502, 1257.780, 1269.566), stdev = 15.099
[info]   CI (99.9%): [1199.638, 1315.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1477.865 ±(99.9%) 28.840 B/op [Average]
[info]   (min, avg, max) = (1470.412, 1477.865, 1488.005), stdev = 7.490
[info]   CI (99.9%): [1449.025, 1506.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1191.862 ±(99.9%) 700.486 MB/sec [Average]
[info]   (min, avg, max) = (990.608, 1191.862, 1328.037), stdev = 181.914
[info]   CI (99.9%): [491.376, 1892.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1401.015 ±(99.9%) 839.483 B/op [Average]
[info]   (min, avg, max) = (1159.968, 1401.015, 1584.388), stdev = 218.011
[info]   CI (99.9%): [561.532, 2240.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.658 ±(99.9%) 4.932 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.658, 2.943), stdev = 1.281
[info]   CI (99.9%): [≈ 0, 5.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.784 ±(99.9%) 5.887 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.784, 3.511), stdev = 1.529
[info]   CI (99.9%): [≈ 0, 6.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 2.775
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 38.82% complete, ETA 00:55:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 822897.644 ops/s
[info] # Warmup Iteration   2: 1453508.178 ops/s
[info] # Warmup Iteration   3: 1569008.318 ops/s
[info] Iteration   1: 1570528.955 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1569368.815 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1571400.507 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1570531.883 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1569011.911 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   1570168.414 ±(99.9%) 3731.855 ops/s [Average]
[info]   (min, avg, max) = (1569011.911, 1570168.414, 1571400.507), stdev = 969.151
[info]   CI (99.9%): [1566436.560, 1573900.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 39.06% complete, ETA 00:55:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1576.339 ops/s
[info] # Warmup Iteration   2: 3598.633 ops/s
[info] # Warmup Iteration   3: 3595.796 ops/s
[info] Iteration   1: 3766.260 ops/s
[info]                  ·gc.alloc.rate:                   519.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              217091.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     274388.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.345 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 144.079 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3767.809 ops/s
[info]                  ·gc.alloc.rate:               511.638 MB/sec
[info]                  ·gc.alloc.rate.norm:          213685.185 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 137436.069 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 3636.871 ops/s
[info]                  ·gc.alloc.rate:                   497.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              215147.461 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     284914.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3655.787 ops/s
[info]                  ·gc.alloc.rate:               493.551 MB/sec
[info]                  ·gc.alloc.rate.norm:          212448.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 141788.579 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 3510.618 ops/s
[info]                  ·gc.alloc.rate:                   494.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              221759.141 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     295583.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.330 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson":
[info]   3667.469 ±(99.9%) 410.698 ops/s [Average]
[info]   (min, avg, max) = (3510.618, 3667.469, 3767.809), stdev = 106.657
[info]   CI (99.9%): [3256.771, 4078.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   503.367 ±(99.9%) 44.980 MB/sec [Average]
[info]   (min, avg, max) = (493.551, 503.367, 519.740), stdev = 11.681
[info]   CI (99.9%): [458.386, 548.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   216026.188 ±(99.9%) 14023.907 B/op [Average]
[info]   (min, avg, max) = (212448.127, 216026.188, 221759.141), stdev = 3641.964
[info]   CI (99.9%): [202002.281, 230050.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   526.642 ±(99.9%) 693.924 MB/sec [Average]
[info]   (min, avg, max) = (329.070, 526.642, 659.417), stdev = 180.210
[info]   CI (99.9%): [≈ 0, 1220.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   226822.203 ±(99.9%) 307967.101 B/op [Average]
[info]   (min, avg, max) = (137436.069, 226822.203, 295583.781), stdev = 79978.078
[info]   CI (99.9%): [≈ 0, 534789.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.086 ±(99.9%) 0.567 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.086, 0.345), stdev = 0.147
[info]   CI (99.9%): [≈ 0, 0.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   36.086 ±(99.9%) 236.312 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 36.086, 144.079), stdev = 61.369
[info]   CI (99.9%): [≈ 0, 272.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.342
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 39.29% complete, ETA 00:54:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22213.470 ops/s
[info] # Warmup Iteration   2: 107155.775 ops/s
[info] # Warmup Iteration   3: 120317.431 ops/s
[info] Iteration   1: 122148.283 ops/s
[info]                  ·gc.alloc.rate:                   1921.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              24749.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1980.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25516.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.473 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 123281.532 ops/s
[info]                  ·gc.alloc.rate:                   1944.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              24815.580 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25129.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.329 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 125109.547 ops/s
[info]                  ·gc.alloc.rate:                   1999.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              25149.323 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1977.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24863.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.524 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 124694.309 ops/s
[info]                  ·gc.alloc.rate:                   1980.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              24997.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20951.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.525 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 124254.586 ops/s
[info]                  ·gc.alloc.rate:               1988.356 MB/sec
[info]                  ·gc.alloc.rate.norm:          25181.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2006.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25408.851 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce":
[info]   123897.652 ±(99.9%) 4584.793 ops/s [Average]
[info]   (min, avg, max) = (122148.283, 123897.652, 125109.547), stdev = 1190.656
[info]   CI (99.9%): [119312.859, 128482.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate":
[info]   1966.813 ±(99.9%) 127.128 MB/sec [Average]
[info]   (min, avg, max) = (1921.082, 1966.813, 1999.905), stdev = 33.015
[info]   CI (99.9%): [1839.684, 2093.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   24978.779 ±(99.9%) 744.861 B/op [Average]
[info]   (min, avg, max) = (24749.891, 24978.779, 25181.809), stdev = 193.438
[info]   CI (99.9%): [24233.919, 25723.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1918.545 ±(99.9%) 558.990 MB/sec [Average]
[info]   (min, avg, max) = (1660.078, 1918.545, 2006.283), stdev = 145.168
[info]   CI (99.9%): [1359.555, 2477.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   24373.806 ±(99.9%) 7431.897 B/op [Average]
[info]   (min, avg, max) = (20951.342, 24373.806, 25516.411), stdev = 1930.040
[info]   CI (99.9%): [16941.910, 31805.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.774 ±(99.9%) 6.267 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.774, 3.685), stdev = 1.627
[info]   CI (99.9%): [≈ 0, 7.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.970 ±(99.9%) 80.749 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.970, 47.473), stdev = 20.970
[info]   CI (99.9%): [≈ 0, 90.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 15.000), stdev = 3.421
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 39.53% complete, ETA 00:54:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.660 ops/s
[info] # Warmup Iteration   2: 356095.636 ops/s
[info] # Warmup Iteration   3: 376794.937 ops/s
[info] Iteration   1: 379999.755 ops/s
[info]                  ·gc.alloc.rate:                   777.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              3221.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2692.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 379726.161 ops/s
[info]                  ·gc.alloc.rate:                   792.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              3284.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4048.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 379895.297 ops/s
[info]                  ·gc.alloc.rate:               780.911 MB/sec
[info]                  ·gc.alloc.rate.norm:          3234.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2704.521 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 379728.421 ops/s
[info]                  ·gc.alloc.rate:                   781.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              3238.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2711.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 380165.187 ops/s
[info]                  ·gc.alloc.rate:                   792.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              3280.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4057.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.150 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava":
[info]   379902.964 ±(99.9%) 720.165 ops/s [Average]
[info]   (min, avg, max) = (379726.161, 379902.964, 380165.187), stdev = 187.024
[info]   CI (99.9%): [379182.800, 380623.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   784.994 ±(99.9%) 26.545 MB/sec [Average]
[info]   (min, avg, max) = (777.818, 784.994, 792.422), stdev = 6.894
[info]   CI (99.9%): [758.449, 811.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   3251.750 ±(99.9%) 109.730 B/op [Average]
[info]   (min, avg, max) = (3221.148, 3251.750, 3284.147), stdev = 28.496
[info]   CI (99.9%): [3142.020, 3361.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   782.892 ±(99.9%) 687.941 MB/sec [Average]
[info]   (min, avg, max) = (650.193, 782.892, 980.260), stdev = 178.656
[info]   CI (99.9%): [94.951, 1470.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   3242.995 ±(99.9%) 2848.625 B/op [Average]
[info]   (min, avg, max) = (2692.618, 3242.995, 4057.899), stdev = 739.779
[info]   CI (99.9%): [394.371, 6091.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.843 ±(99.9%) 7.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.843, 4.143), stdev = 1.845
[info]   CI (99.9%): [≈ 0, 7.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   3.489 ±(99.9%) 29.407 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.489, 17.150), stdev = 7.637
[info]   CI (99.9%): [≈ 0, 32.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 8.000), stdev = 0.894
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.76% complete, ETA 00:54:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85145.471 ops/s
[info] # Warmup Iteration   2: 242137.965 ops/s
[info] # Warmup Iteration   3: 254394.025 ops/s
[info] Iteration   1: 250458.455 ops/s
[info]                  ·gc.alloc.rate:                   566.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              3557.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4102.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 257943.007 ops/s
[info]                  ·gc.alloc.rate:                   575.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              3508.242 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3991.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 256228.962 ops/s
[info]                  ·gc.alloc.rate:               560.623 MB/sec
[info]                  ·gc.alloc.rate.norm:          3443.226 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2013.062 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 255908.169 ops/s
[info]                  ·gc.alloc.rate:                   569.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              3499.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4033.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.512 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 256170.575 ops/s
[info]                  ·gc.alloc.rate:               563.394 MB/sec
[info]                  ·gc.alloc.rate.norm:          3460.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4033.362 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala":
[info]   255341.834 ±(99.9%) 10960.482 ops/s [Average]
[info]   (min, avg, max) = (250458.455, 255341.834, 257943.007), stdev = 2846.402
[info]   CI (99.9%): [244381.351, 266302.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   566.885 ±(99.9%) 21.381 MB/sec [Average]
[info]   (min, avg, max) = (560.623, 566.885, 575.021), stdev = 5.553
[info]   CI (99.9%): [545.504, 588.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3493.831 ±(99.9%) 172.510 B/op [Average]
[info]   (min, avg, max) = (3443.226, 3493.831, 3557.689), stdev = 44.800
[info]   CI (99.9%): [3321.321, 3666.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   589.492 ±(99.9%) 563.418 MB/sec [Average]
[info]   (min, avg, max) = (327.765, 589.492, 656.753), stdev = 146.318
[info]   CI (99.9%): [26.074, 1152.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3634.607 ±(99.9%) 3493.856 B/op [Average]
[info]   (min, avg, max) = (2013.062, 3634.607, 4102.050), stdev = 907.343
[info]   CI (99.9%): [140.752, 7128.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.179 ±(99.9%) 0.824 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.179, 0.512), stdev = 0.214
[info]   CI (99.9%): [≈ 0, 1.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 7.000), stdev = 1.342
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.00% complete, ETA 00:54:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 224459.886 ops/s
[info] # Warmup Iteration   2: 473861.117 ops/s
[info] # Warmup Iteration   3: 501780.427 ops/s
[info] Iteration   1: 516245.312 ops/s
[info]                  ·gc.alloc.rate:                   667.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              2034.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2012.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 510378.792 ops/s
[info]                  ·gc.alloc.rate:               662.677 MB/sec
[info]                  ·gc.alloc.rate.norm:          2043.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2039.715 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 515460.999 ops/s
[info]                  ·gc.alloc.rate:                   666.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              2035.964 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2022.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 515097.156 ops/s
[info]                  ·gc.alloc.rate:               669.358 MB/sec
[info]                  ·gc.alloc.rate.norm:          2044.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2026.085 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 515284.072 ops/s
[info]                  ·gc.alloc.rate:                   663.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              2025.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2027.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.582 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.884 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala":
[info]   514493.266 ±(99.9%) 9015.180 ops/s [Average]
[info]   (min, avg, max) = (510378.792, 514493.266, 516245.312), stdev = 2341.214
[info]   CI (99.9%): [505478.086, 523508.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   665.901 ±(99.9%) 10.935 MB/sec [Average]
[info]   (min, avg, max) = (662.677, 665.901, 669.358), stdev = 2.840
[info]   CI (99.9%): [654.967, 676.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   2036.786 ±(99.9%) 30.295 B/op [Average]
[info]   (min, avg, max) = (2025.370, 2036.786, 2044.977), stdev = 7.867
[info]   CI (99.9%): [2006.491, 2067.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   662.267 ±(99.9%) 5.619 MB/sec [Average]
[info]   (min, avg, max) = (660.206, 662.267, 663.937), stdev = 1.459
[info]   CI (99.9%): [656.648, 667.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2025.687 ±(99.9%) 37.592 B/op [Average]
[info]   (min, avg, max) = (2012.571, 2025.687, 2039.715), stdev = 9.762
[info]   CI (99.9%): [1988.095, 2063.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.533 ±(99.9%) 4.411 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.533, 2.582), stdev = 1.145
[info]   CI (99.9%): [≈ 0, 4.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.628 ±(99.9%) 13.469 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.628, 7.884), stdev = 3.498
[info]   CI (99.9%): [≈ 0, 15.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 8.000), stdev = 1.304
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 40.24% complete, ETA 00:54:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5508.167 ops/s
[info] # Warmup Iteration   2: 64502.124 ops/s
[info] # Warmup Iteration   3: 71229.617 ops/s
[info] Iteration   1: 71144.507 ops/s
[info]                  ·gc.alloc.rate:                   2839.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              62804.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2607.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57675.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.763 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 71455.021 ops/s
[info]                  ·gc.alloc.rate:                   2872.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              63255.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2632.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57968.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.458 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 72673.048 ops/s
[info]                  ·gc.alloc.rate:                   2934.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              63542.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3001.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64995.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.902 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 72578.047 ops/s
[info]                  ·gc.alloc.rate:                   2918.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              63283.929 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2693.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58393.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.903 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 72264.441 ops/s
[info]                  ·gc.alloc.rate:               2910.879 MB/sec
[info]                  ·gc.alloc.rate.norm:          63394.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2707.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58959.460 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson":
[info]   72023.013 ±(99.9%) 2642.173 ops/s [Average]
[info]   (min, avg, max) = (71144.507, 72023.013, 72673.048), stdev = 686.164
[info]   CI (99.9%): [69380.840, 74665.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2895.249 ±(99.9%) 148.770 MB/sec [Average]
[info]   (min, avg, max) = (2839.260, 2895.249, 2934.629), stdev = 38.635
[info]   CI (99.9%): [2746.479, 3044.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63256.089 ±(99.9%) 1065.208 B/op [Average]
[info]   (min, avg, max) = (62804.248, 63256.089, 63542.485), stdev = 276.631
[info]   CI (99.9%): [62190.881, 64321.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2728.449 ±(99.9%) 609.440 MB/sec [Average]
[info]   (min, avg, max) = (2607.397, 2728.449, 3001.754), stdev = 158.270
[info]   CI (99.9%): [2119.009, 3337.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   59598.724 ±(99.9%) 11765.819 B/op [Average]
[info]   (min, avg, max) = (57675.438, 59598.724, 64995.930), stdev = 3055.546
[info]   CI (99.9%): [47832.905, 71364.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.005 ±(99.9%) 4.048 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.005, 2.763), stdev = 1.051
[info]   CI (99.9%): [≈ 0, 5.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.000, 13.000), stdev = 1.225
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 40.47% complete, ETA 00:53:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45045.655 ops/s
[info] # Warmup Iteration   2: 121251.961 ops/s
[info] # Warmup Iteration   3: 133507.991 ops/s
[info] Iteration   1: 135484.248 ops/s
[info]                  ·gc.alloc.rate:                   1196.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              13892.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15139.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.725 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 136010.292 ops/s
[info]                  ·gc.alloc.rate:                   1188.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              13749.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11334.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.241 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 135756.828 ops/s
[info]                  ·gc.alloc.rate:               1203.893 MB/sec
[info]                  ·gc.alloc.rate.norm:          13955.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15220.928 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 136284.038 ops/s
[info]                  ·gc.alloc.rate:               1189.156 MB/sec
[info]                  ·gc.alloc.rate.norm:          13731.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11446.900 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 136129.478 ops/s
[info]                  ·gc.alloc.rate:               1214.618 MB/sec
[info]                  ·gc.alloc.rate.norm:          14041.550 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1328.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15356.247 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce":
[info]   135932.977 ±(99.9%) 1218.015 ops/s [Average]
[info]   (min, avg, max) = (135484.248, 135932.977, 136284.038), stdev = 316.315
[info]   CI (99.9%): [134714.962, 137150.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1198.456 ±(99.9%) 42.241 MB/sec [Average]
[info]   (min, avg, max) = (1188.536, 1198.456, 1214.618), stdev = 10.970
[info]   CI (99.9%): [1156.215, 1240.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   13874.175 ±(99.9%) 512.101 B/op [Average]
[info]   (min, avg, max) = (13731.432, 13874.175, 14041.550), stdev = 132.991
[info]   CI (99.9%): [13362.075, 14386.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1183.175 ±(99.9%) 695.753 MB/sec [Average]
[info]   (min, avg, max) = (979.758, 1183.175, 1328.342), stdev = 180.685
[info]   CI (99.9%): [487.422, 1878.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   13699.561 ±(99.9%) 8122.793 B/op [Average]
[info]   (min, avg, max) = (11334.561, 13699.561, 15356.247), stdev = 2109.463
[info]   CI (99.9%): [5576.768, 21822.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.193 ±(99.9%) 1.214 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.193, 0.725), stdev = 0.315
[info]   CI (99.9%): [≈ 0, 1.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 40.71% complete, ETA 00:53:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.805 ops/s
[info] # Warmup Iteration   2: 185699.105 ops/s
[info] # Warmup Iteration   3: 201826.595 ops/s
[info] Iteration   1: 208919.146 ops/s
[info]                  ·gc.alloc.rate:      163.552 MB/sec
[info]                  ·gc.alloc.rate.norm: 1232.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 208001.867 ops/s
[info]                  ·gc.alloc.rate:               169.733 MB/sec
[info]                  ·gc.alloc.rate.norm:          1284.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1935.507 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 207705.918 ops/s
[info]                  ·gc.alloc.rate:                   170.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              1291.835 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1938.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.370 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 208210.903 ops/s
[info]                  ·gc.alloc.rate:      162.995 MB/sec
[info]                  ·gc.alloc.rate.norm: 1232.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 205002.055 ops/s
[info]                  ·gc.alloc.rate:                   167.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              1282.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2500.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava":
[info]   207567.978 ±(99.9%) 5785.667 ops/s [Average]
[info]   (min, avg, max) = (205002.055, 207567.978, 208919.146), stdev = 1502.519
[info]   CI (99.9%): [201782.311, 213353.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   166.784 ±(99.9%) 13.263 MB/sec [Average]
[info]   (min, avg, max) = (162.995, 166.784, 170.503), stdev = 3.444
[info]   CI (99.9%): [153.521, 180.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   1264.569 ±(99.9%) 115.239 B/op [Average]
[info]   (min, avg, max) = (1232.002, 1264.569, 1291.835), stdev = 29.927
[info]   CI (99.9%): [1149.330, 1379.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   167.495 ±(99.9%) 598.969 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 167.495, 325.837), stdev = 155.550
[info]   CI (99.9%): [≈ 0, 766.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1274.916 ±(99.9%) 4568.352 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1274.916, 2500.810), stdev = 1186.386
[info]   CI (99.9%): [≈ 0, 5843.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.092 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.049), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.131 ±(99.9%) 0.701 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.131, 0.370), stdev = 0.182
[info]   CI (99.9%): [≈ 0, 0.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 4.000), stdev = 1.871
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.94% complete, ETA 00:53:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 165698.264 ops/s
[info] # Warmup Iteration   2: 418127.129 ops/s
[info] # Warmup Iteration   3: 419510.384 ops/s
[info] Iteration   1: 419428.868 ops/s
[info]                  ·gc.alloc.rate:               430.612 MB/sec
[info]                  ·gc.alloc.rate.norm:          1615.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1224.829 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 423088.067 ops/s
[info]                  ·gc.alloc.rate:                   436.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              1622.855 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2425.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.602 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.397 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 416295.328 ops/s
[info]                  ·gc.alloc.rate:                   416.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              1574.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1231.539 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 424828.881 ops/s
[info]                  ·gc.alloc.rate:               428.904 MB/sec
[info]                  ·gc.alloc.rate.norm:          1588.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1201.788 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 423813.428 ops/s
[info]                  ·gc.alloc.rate:                   434.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              1613.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2409.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala":
[info]   421490.915 ±(99.9%) 13659.361 ops/s [Average]
[info]   (min, avg, max) = (416295.328, 421490.915, 424828.881), stdev = 3547.293
[info]   CI (99.9%): [407831.554, 435150.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   429.440 ±(99.9%) 29.621 MB/sec [Average]
[info]   (min, avg, max) = (416.750, 429.440, 436.301), stdev = 7.693
[info]   CI (99.9%): [399.818, 459.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1603.221 ±(99.9%) 78.541 B/op [Average]
[info]   (min, avg, max) = (1574.910, 1603.221, 1622.855), stdev = 20.397
[info]   CI (99.9%): [1524.680, 1681.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   455.565 ±(99.9%) 685.351 MB/sec [Average]
[info]   (min, avg, max) = (324.431, 455.565, 652.216), stdev = 177.983
[info]   CI (99.9%): [≈ 0, 1140.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1698.689 ±(99.9%) 2527.688 B/op [Average]
[info]   (min, avg, max) = (1201.788, 1698.689, 2425.969), stdev = 656.433
[info]   CI (99.9%): [≈ 0, 4226.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.733 ±(99.9%) 6.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.733, 3.602), stdev = 1.604
[info]   CI (99.9%): [≈ 0, 6.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.726 ±(99.9%) 22.970 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.726, 13.397), stdev = 5.965
[info]   CI (99.9%): [≈ 0, 25.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 5.000), stdev = 1.483
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.18% complete, ETA 00:53:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 275813.534 ops/s
[info] # Warmup Iteration   2: 459836.942 ops/s
[info] # Warmup Iteration   3: 458052.541 ops/s
[info] Iteration   1: 464502.675 ops/s
[info]                  ·gc.alloc.rate:                   368.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              1249.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     866.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 464606.534 ops/s
[info]                  ·gc.alloc.rate:               371.377 MB/sec
[info]                  ·gc.alloc.rate.norm:          1257.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1115.814 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 462288.191 ops/s
[info]                  ·gc.alloc.rate:               369.352 MB/sec
[info]                  ·gc.alloc.rate.norm:          1257.341 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1121.405 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 461744.464 ops/s
[info]                  ·gc.alloc.rate:                   381.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              1300.163 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2250.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.213 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 463998.127 ops/s
[info]                  ·gc.alloc.rate:               373.437 MB/sec
[info]                  ·gc.alloc.rate.norm:          1266.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1120.708 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala":
[info]   463427.998 ±(99.9%) 5094.786 ops/s [Average]
[info]   (min, avg, max) = (461744.464, 463427.998, 464606.534), stdev = 1323.100
[info]   CI (99.9%): [458333.212, 468522.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   372.908 ±(99.9%) 19.691 MB/sec [Average]
[info]   (min, avg, max) = (368.906, 372.908, 381.470), stdev = 5.114
[info]   CI (99.9%): [353.217, 392.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1266.344 ±(99.9%) 76.284 B/op [Average]
[info]   (min, avg, max) = (1249.869, 1266.344, 1300.163), stdev = 19.811
[info]   CI (99.9%): [1190.060, 1342.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   381.058 ±(99.9%) 613.363 MB/sec [Average]
[info]   (min, avg, max) = (255.799, 381.058, 660.181), stdev = 159.288
[info]   CI (99.9%): [≈ 0, 994.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1294.935 ±(99.9%) 2098.773 B/op [Average]
[info]   (min, avg, max) = (866.657, 1294.935, 2250.090), stdev = 545.045
[info]   CI (99.9%): [≈ 0, 3393.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.071 ±(99.9%) 0.386 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.213), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 41.41% complete, ETA 00:53:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 274657.260 ops/s
[info] # Warmup Iteration   2: 475472.662 ops/s
[info] # Warmup Iteration   3: 496117.911 ops/s
[info] Iteration   1: 501279.035 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 502003.148 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 501345.773 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 501054.311 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 501801.495 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc":
[info]   501496.752 ±(99.9%) 1510.187 ops/s [Average]
[info]   (min, avg, max) = (501054.311, 501496.752, 502003.148), stdev = 392.191
[info]   CI (99.9%): [499986.565, 503006.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻³, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 41.65% complete, ETA 00:52:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6437.333 ops/s
[info] # Warmup Iteration   2: 23305.240 ops/s
[info] # Warmup Iteration   3: 28163.344 ops/s
[info] Iteration   1: 28583.874 ops/s
[info]                  ·gc.alloc.rate:                   1557.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              85755.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90883.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 151.290 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 29098.782 ops/s
[info]                  ·gc.alloc.rate:                   1590.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              86024.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71187.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 29159.311 ops/s
[info]                  ·gc.alloc.rate:               1600.598 MB/sec
[info]                  ·gc.alloc.rate.norm:          86380.684 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1636.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 88337.090 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 28886.118 ops/s
[info]                  ·gc.alloc.rate:               1599.522 MB/sec
[info]                  ·gc.alloc.rate.norm:          87144.739 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1642.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89486.470 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 29270.803 ops/s
[info]                  ·gc.alloc.rate:               1607.383 MB/sec
[info]                  ·gc.alloc.rate.norm:          86418.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 71094.148 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson":
[info]   28999.777 ±(99.9%) 1045.012 ops/s [Average]
[info]   (min, avg, max) = (28583.874, 28999.777, 29270.803), stdev = 271.386
[info]   CI (99.9%): [27954.765, 30044.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1591.157 ±(99.9%) 75.787 MB/sec [Average]
[info]   (min, avg, max) = (1557.588, 1591.157, 1607.383), stdev = 19.682
[info]   CI (99.9%): [1515.369, 1666.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   86344.771 ±(99.9%) 2016.268 B/op [Average]
[info]   (min, avg, max) = (85755.444, 86344.771, 87144.739), stdev = 523.618
[info]   CI (99.9%): [84328.503, 88361.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1513.756 ±(99.9%) 683.695 MB/sec [Average]
[info]   (min, avg, max) = (1316.343, 1513.756, 1650.737), stdev = 177.553
[info]   CI (99.9%): [830.061, 2197.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   82197.845 ±(99.9%) 39021.864 B/op [Average]
[info]   (min, avg, max) = (71094.148, 82197.845, 90883.922), stdev = 10133.854
[info]   CI (99.9%): [43175.982, 121219.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.816 ±(99.9%) 4.715 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.816, 2.748), stdev = 1.224
[info]   CI (99.9%): [≈ 0, 5.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   44.668 ±(99.9%) 259.053 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 44.668, 151.290), stdev = 67.275
[info]   CI (99.9%): [≈ 0, 303.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 17.000), stdev = 4.827
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 41.88% complete, ETA 00:52:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 680.747 ops/s
[info] # Warmup Iteration   2: 6609.689 ops/s
[info] # Warmup Iteration   3: 8454.973 ops/s
[info] Iteration   1: 8585.770 ops/s
[info]                  ·gc.alloc.rate:                   1238.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              226975.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     181681.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.816 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 8459.015 ops/s
[info]                  ·gc.alloc.rate:                   1227.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              228292.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     246249.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 580.924 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 8553.777 ops/s
[info]                  ·gc.alloc.rate:                   1249.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              229855.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242412.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 130.214 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 8677.245 ops/s
[info]                  ·gc.alloc.rate:                   1246.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              226111.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     178447.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.633 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 8687.878 ops/s
[info]                  ·gc.alloc.rate:                   1267.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              229687.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     237709.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.771 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce":
[info]   8592.737 ±(99.9%) 363.481 ops/s [Average]
[info]   (min, avg, max) = (8459.015, 8592.737, 8687.878), stdev = 94.395
[info]   CI (99.9%): [8229.256, 8956.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1245.983 ±(99.9%) 57.872 MB/sec [Average]
[info]   (min, avg, max) = (1227.159, 1245.983, 1267.987), stdev = 15.029
[info]   CI (99.9%): [1188.111, 1303.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   228184.399 ±(99.9%) 6332.892 B/op [Average]
[info]   (min, avg, max) = (226111.682, 228184.399, 229855.283), stdev = 1644.632
[info]   CI (99.9%): [221851.506, 234517.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1185.798 ±(99.9%) 696.565 MB/sec [Average]
[info]   (min, avg, max) = (983.907, 1185.798, 1323.689), stdev = 180.896
[info]   CI (99.9%): [489.233, 1882.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   217300.239 ±(99.9%) 131479.526 B/op [Average]
[info]   (min, avg, max) = (178447.604, 217300.239, 246249.913), stdev = 34144.815
[info]   CI (99.9%): [85820.712, 348779.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.837 ±(99.9%) 5.039 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.837, 3.123), stdev = 1.309
[info]   CI (99.9%): [≈ 0, 5.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   155.072 ±(99.9%) 938.145 B/op [Average]
[info]   (min, avg, max) = (3.771, 155.072, 580.924), stdev = 243.633
[info]   CI (99.9%): [≈ 0, 1093.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 15.000), stdev = 4.827
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.12% complete, ETA 00:52:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 897.443 ops/s
[info] # Warmup Iteration   2: 6242.295 ops/s
[info] # Warmup Iteration   3: 7768.931 ops/s
[info] Iteration   1: 8073.517 ops/s
[info]                  ·gc.alloc.rate:                   1082.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              211082.761 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     191706.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 8052.711 ops/s
[info]                  ·gc.alloc.rate:                   1071.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              209299.324 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     192662.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.068 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 8081.408 ops/s
[info]                  ·gc.alloc.rate:                   1070.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              208447.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     192254.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 782.838 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 7881.112 ops/s
[info]                  ·gc.alloc.rate:                   1062.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              212094.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196067.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.979 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 8078.801 ops/s
[info]                  ·gc.alloc.rate:                   1087.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              211814.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     254001.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.165 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala":
[info]   8033.510 ±(99.9%) 330.908 ops/s [Average]
[info]   (min, avg, max) = (7881.112, 8033.510, 8081.408), stdev = 85.936
[info]   CI (99.9%): [7702.602, 8364.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1074.856 ±(99.9%) 39.043 MB/sec [Average]
[info]   (min, avg, max) = (1062.470, 1074.856, 1087.445), stdev = 10.139
[info]   CI (99.9%): [1035.813, 1113.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   210547.548 ±(99.9%) 6165.206 B/op [Average]
[info]   (min, avg, max) = (208447.034, 210547.548, 212094.401), stdev = 1601.084
[info]   CI (99.9%): [204382.342, 216712.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1048.578 ±(99.9%) 549.942 MB/sec [Average]
[info]   (min, avg, max) = (982.185, 1048.578, 1304.034), stdev = 142.818
[info]   CI (99.9%): [498.635, 1598.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   205338.392 ±(99.9%) 104957.039 B/op [Average]
[info]   (min, avg, max) = (191706.595, 205338.392, 254001.673), stdev = 27257.010
[info]   CI (99.9%): [100381.354, 310295.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.904 ±(99.9%) 6.735 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.904, 4.020), stdev = 1.749
[info]   CI (99.9%): [≈ 0, 7.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   176.421 ±(99.9%) 1310.961 B/op [Average]
[info]   (min, avg, max) = (4.057, 176.421, 782.838), stdev = 340.452
[info]   CI (99.9%): [≈ 0, 1487.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 11.000), stdev = 2.490
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.35% complete, ETA 00:52:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 78255.963 ops/s
[info] # Warmup Iteration   2: 188136.765 ops/s
[info] # Warmup Iteration   3: 187906.268 ops/s
[info] Iteration   1: 190544.168 ops/s
[info]                  ·gc.alloc.rate:                   1657.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              13690.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13716.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.894 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.899 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 191676.908 ops/s
[info]                  ·gc.alloc.rate:                   1672.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              13732.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13569.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.538 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 192451.764 ops/s
[info]                  ·gc.alloc.rate:                   1692.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              13842.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13528.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.170 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 192216.410 ops/s
[info]                  ·gc.alloc.rate:               1691.712 MB/sec
[info]                  ·gc.alloc.rate.norm:          13849.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1661.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13605.227 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 190820.859 ops/s
[info]                  ·gc.alloc.rate:                   1667.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              13748.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11020.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala":
[info]   191542.022 ±(99.9%) 3231.109 ops/s [Average]
[info]   (min, avg, max) = (190544.168, 191542.022, 192451.764), stdev = 839.109
[info]   CI (99.9%): [188310.913, 194773.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1676.341 ±(99.9%) 59.546 MB/sec [Average]
[info]   (min, avg, max) = (1657.627, 1676.341, 1692.769), stdev = 15.464
[info]   CI (99.9%): [1616.795, 1735.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   13772.530 ±(99.9%) 269.642 B/op [Average]
[info]   (min, avg, max) = (13690.747, 13772.530, 13849.209), stdev = 70.025
[info]   CI (99.9%): [13502.888, 14042.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1593.217 ±(99.9%) 553.197 MB/sec [Average]
[info]   (min, avg, max) = (1336.320, 1593.217, 1661.909), stdev = 143.664
[info]   CI (99.9%): [1040.019, 2146.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   13088.047 ±(99.9%) 4458.203 B/op [Average]
[info]   (min, avg, max) = (11020.698, 13088.047, 13716.046), stdev = 1157.781
[info]   CI (99.9%): [8629.844, 17546.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.625 ±(99.9%) 4.893 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.625, 2.894), stdev = 1.271
[info]   CI (99.9%): [≈ 0, 5.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.156 ±(99.9%) 40.416 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.156, 23.899), stdev = 10.496
[info]   CI (99.9%): [≈ 0, 45.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 11.000), stdev = 2.074
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 42.59% complete, ETA 00:51:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 768.838 ops/s
[info] # Warmup Iteration   2: 5765.387 ops/s
[info] # Warmup Iteration   3: 7695.287 ops/s
[info] Iteration   1: 8013.601 ops/s
[info]                  ·gc.alloc.rate:                   1365.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              268175.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     258350.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.263 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 8054.298 ops/s
[info]                  ·gc.alloc.rate:                   1359.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              265686.443 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     257556.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 809.337 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 8125.901 ops/s
[info]                  ·gc.alloc.rate:                   1374.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              266115.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     253371.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96.756 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 8142.230 ops/s
[info]                  ·gc.alloc.rate:                   1389.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              268491.166 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     314778.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.108 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 7883.610 ops/s
[info]                  ·gc.alloc.rate:               1347.318 MB/sec
[info]                  ·gc.alloc.rate.norm:          268790.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 260916.082 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson":
[info]   8043.928 ±(99.9%) 399.763 ops/s [Average]
[info]   (min, avg, max) = (7883.610, 8043.928, 8142.230), stdev = 103.817
[info]   CI (99.9%): [7644.164, 8443.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1367.358 ±(99.9%) 60.760 MB/sec [Average]
[info]   (min, avg, max) = (1347.318, 1367.358, 1389.400), stdev = 15.779
[info]   CI (99.9%): [1306.598, 1428.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   267451.764 ±(99.9%) 5546.302 B/op [Average]
[info]   (min, avg, max) = (265686.443, 267451.764, 268790.524), stdev = 1440.357
[info]   CI (99.9%): [261905.462, 272998.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1375.876 ±(99.9%) 544.993 MB/sec [Average]
[info]   (min, avg, max) = (1307.848, 1375.876, 1628.931), stdev = 141.533
[info]   CI (99.9%): [830.883, 1920.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   268994.630 ±(99.9%) 99105.625 B/op [Average]
[info]   (min, avg, max) = (253371.465, 268994.630, 314778.704), stdev = 25737.416
[info]   CI (99.9%): [169889.005, 368100.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.962 ±(99.9%) 6.888 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.962, 4.143), stdev = 1.789
[info]   CI (99.9%): [≈ 0, 7.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   187.693 ±(99.9%) 1346.075 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 187.693, 809.337), stdev = 349.571
[info]   CI (99.9%): [≈ 0, 1533.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.200, 17.000), stdev = 5.357
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 42.82% complete, ETA 00:51:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8496.002 ops/s
[info] # Warmup Iteration   2: 20043.311 ops/s
[info] # Warmup Iteration   3: 21235.862 ops/s
[info] Iteration   1: 20812.491 ops/s
[info]                  ·gc.alloc.rate:               1184.483 MB/sec
[info]                  ·gc.alloc.rate.norm:          89564.867 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 74955.855 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 21210.021 ops/s
[info]                  ·gc.alloc.rate:                   1203.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              89314.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98214.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 233.241 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 20339.288 ops/s
[info]                  ·gc.alloc.rate:                   1168.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              90404.399 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76440.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.712 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 21121.849 ops/s
[info]                  ·gc.alloc.rate:                   1196.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              89144.732 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97869.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.551 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 21076.511 ops/s
[info]                  ·gc.alloc.rate:                   1183.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              88336.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73665.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.554 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce":
[info]   20912.032 ±(99.9%) 1358.435 ops/s [Average]
[info]   (min, avg, max) = (20339.288, 20912.032, 21210.021), stdev = 352.781
[info]   CI (99.9%): [19553.597, 22270.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1187.237 ±(99.9%) 52.253 MB/sec [Average]
[info]   (min, avg, max) = (1168.421, 1187.237, 1203.725), stdev = 13.570
[info]   CI (99.9%): [1134.985, 1239.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   89353.080 ±(99.9%) 2873.552 B/op [Average]
[info]   (min, avg, max) = (88336.938, 89353.080, 90404.399), stdev = 746.252
[info]   CI (99.9%): [86479.529, 92226.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1120.616 ±(99.9%) 696.236 MB/sec [Average]
[info]   (min, avg, max) = (986.574, 1120.616, 1323.673), stdev = 180.810
[info]   CI (99.9%): [424.380, 1816.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   84229.278 ±(99.9%) 48703.239 B/op [Average]
[info]   (min, avg, max) = (73665.436, 84229.278, 98214.411), stdev = 12648.077
[info]   CI (99.9%): [35526.039, 132932.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.758 ±(99.9%) 5.229 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.758, 3.143), stdev = 1.358
[info]   CI (99.9%): [≈ 0, 5.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   56.612 ±(99.9%) 387.768 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 56.612, 233.241), stdev = 100.702
[info]   CI (99.9%): [≈ 0, 444.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 2.915
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.06% complete, ETA 00:51:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5286.111 ops/s
[info] # Warmup Iteration   2: 22196.313 ops/s
[info] # Warmup Iteration   3: 24676.530 ops/s
[info] Iteration   1: 24411.644 ops/s
[info]                  ·gc.alloc.rate:                   1093.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              70471.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84665.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.342 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 24093.520 ops/s
[info]                  ·gc.alloc.rate:                   1065.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              69569.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64467.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.360 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 24398.520 ops/s
[info]                  ·gc.alloc.rate:                   1097.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              70778.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63680.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 259.299 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 24818.964 ops/s
[info]                  ·gc.alloc.rate:               1097.300 MB/sec
[info]                  ·gc.alloc.rate.norm:          69566.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62262.368 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 24804.289 ops/s
[info]                  ·gc.alloc.rate:               1095.900 MB/sec
[info]                  ·gc.alloc.rate.norm:          69528.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 82922.455 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala":
[info]   24505.387 ±(99.9%) 1182.963 ops/s [Average]
[info]   (min, avg, max) = (24093.520, 24505.387, 24818.964), stdev = 307.212
[info]   CI (99.9%): [23322.425, 25688.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1089.838 ±(99.9%) 53.533 MB/sec [Average]
[info]   (min, avg, max) = (1065.123, 1089.838, 1097.335), stdev = 13.902
[info]   CI (99.9%): [1036.304, 1143.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   69982.900 ±(99.9%) 2295.854 B/op [Average]
[info]   (min, avg, max) = (69528.460, 69982.900, 70778.598), stdev = 596.226
[info]   CI (99.9%): [67687.046, 72278.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1115.435 ±(99.9%) 685.439 MB/sec [Average]
[info]   (min, avg, max) = (982.086, 1115.435, 1313.786), stdev = 178.006
[info]   CI (99.9%): [429.996, 1800.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   71599.471 ±(99.9%) 43037.963 B/op [Average]
[info]   (min, avg, max) = (62262.368, 71599.471, 84665.093), stdev = 11176.822
[info]   CI (99.9%): [28561.507, 114637.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.812 ±(99.9%) 6.905 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.812, 4.020), stdev = 1.793
[info]   CI (99.9%): [≈ 0, 7.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   52.400 ±(99.9%) 445.373 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 52.400, 259.299), stdev = 115.662
[info]   CI (99.9%): [≈ 0, 497.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 13.000), stdev = 3.464
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.29% complete, ETA 00:51:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 201924.017 ops/s
[info] # Warmup Iteration   2: 361075.611 ops/s
[info] # Warmup Iteration   3: 364290.598 ops/s
[info] Iteration   1: 377126.355 ops/s
[info]                  ·gc.alloc.rate:                   877.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              3660.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2761.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 375790.317 ops/s
[info]                  ·gc.alloc.rate:                   876.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              3669.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4162.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 374203.939 ops/s
[info]                  ·gc.alloc.rate:               869.286 MB/sec
[info]                  ·gc.alloc.rate.norm:          3655.889 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2790.465 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 375647.497 ops/s
[info]                  ·gc.alloc.rate:                   883.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              3702.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4166.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.702 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 376827.631 ops/s
[info]                  ·gc.alloc.rate:               887.237 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.506 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4134.331 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala":
[info]   375919.148 ±(99.9%) 4438.702 ops/s [Average]
[info]   (min, avg, max) = (374203.939, 375919.148, 377126.355), stdev = 1152.717
[info]   CI (99.9%): [371480.446, 380357.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   878.744 ±(99.9%) 26.956 MB/sec [Average]
[info]   (min, avg, max) = (869.286, 878.744, 887.237), stdev = 7.000
[info]   CI (99.9%): [851.788, 905.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3678.543 ±(99.9%) 89.771 B/op [Average]
[info]   (min, avg, max) = (3655.889, 3678.543, 3704.506), stdev = 23.313
[info]   CI (99.9%): [3588.771, 3768.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   860.829 ±(99.9%) 696.498 MB/sec [Average]
[info]   (min, avg, max) = (661.886, 860.829, 994.582), stdev = 180.878
[info]   CI (99.9%): [164.332, 1557.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3603.206 ±(99.9%) 2907.595 B/op [Average]
[info]   (min, avg, max) = (2761.993, 3603.206, 4166.730), stdev = 755.093
[info]   CI (99.9%): [695.611, 6510.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.671 ±(99.9%) 5.597 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.671, 3.271), stdev = 1.454
[info]   CI (99.9%): [≈ 0, 6.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.810 ±(99.9%) 23.449 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.810, 13.702), stdev = 6.090
[info]   CI (99.9%): [≈ 0, 26.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 8.000), stdev = 1.517
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 43.53% complete, ETA 00:51:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 194795.558 ops/s
[info] # Warmup Iteration   2: 365479.559 ops/s
[info] # Warmup Iteration   3: 366889.877 ops/s
[info] Iteration   1: 366165.075 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 366627.794 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 366635.425 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 365446.719 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 364670.589 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   365909.121 ±(99.9%) 3254.476 ops/s [Average]
[info]   (min, avg, max) = (364670.589, 365909.121, 366635.425), stdev = 845.177
[info]   CI (99.9%): [362654.645, 369163.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻³, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 43.76% complete, ETA 00:50:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7875.046 ops/s
[info] # Warmup Iteration   2: 20506.384 ops/s
[info] # Warmup Iteration   3: 24659.602 ops/s
[info] Iteration   1: 24355.826 ops/s
[info]                  ·gc.alloc.rate:                   1181.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              76339.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84970.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 24613.516 ops/s
[info]                  ·gc.alloc.rate:                   1183.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              75655.561 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63166.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.081 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 196.997 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 24253.355 ops/s
[info]                  ·gc.alloc.rate:                   1170.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              75961.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85241.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66.190 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 24777.287 ops/s
[info]                  ·gc.alloc.rate:               1198.079 MB/sec
[info]                  ·gc.alloc.rate.norm:          76093.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62238.442 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 24794.877 ops/s
[info]                  ·gc.alloc.rate:               1210.309 MB/sec
[info]                  ·gc.alloc.rate.norm:          76950.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1306.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 83079.386 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson":
[info]   24558.972 ±(99.9%) 945.091 ops/s [Average]
[info]   (min, avg, max) = (24253.355, 24558.972, 24794.877), stdev = 245.437
[info]   CI (99.9%): [23613.881, 25504.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1188.792 ±(99.9%) 59.636 MB/sec [Average]
[info]   (min, avg, max) = (1170.682, 1188.792, 1210.309), stdev = 15.487
[info]   CI (99.9%): [1129.156, 1248.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   76200.251 ±(99.9%) 1874.106 B/op [Average]
[info]   (min, avg, max) = (75655.561, 76200.251, 76950.618), stdev = 486.699
[info]   CI (99.9%): [74326.145, 78074.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1180.694 ±(99.9%) 691.707 MB/sec [Average]
[info]   (min, avg, max) = (979.937, 1180.694, 1315.129), stdev = 179.634
[info]   CI (99.9%): [488.987, 1872.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   75739.401 ±(99.9%) 45955.760 B/op [Average]
[info]   (min, avg, max) = (62238.442, 75739.401, 85241.647), stdev = 11934.565
[info]   CI (99.9%): [29783.641, 121695.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 5.120 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 3.081), stdev = 1.330
[info]   CI (99.9%): [≈ 0, 5.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   53.444 ±(99.9%) 327.438 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 53.444, 196.997), stdev = 85.035
[info]   CI (99.9%): [≈ 0, 380.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 14.000), stdev = 4.000
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.00% complete, ETA 00:50:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1578.181 ops/s
[info] # Warmup Iteration   2: 9552.620 ops/s
[info] # Warmup Iteration   3: 13618.100 ops/s
[info] Iteration   1: 13475.311 ops/s
[info]                  ·gc.alloc.rate:                   1294.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              151162.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     154353.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.431 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 13351.944 ops/s
[info]                  ·gc.alloc.rate:                   1277.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              150605.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     156100.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 434.322 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 13404.934 ops/s
[info]                  ·gc.alloc.rate:                   1287.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              151119.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115821.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.878 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 13482.269 ops/s
[info]                  ·gc.alloc.rate:                   1298.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              151603.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153106.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.430 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 13348.164 ops/s
[info]                  ·gc.alloc.rate:               1300.807 MB/sec
[info]                  ·gc.alloc.rate.norm:          153359.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 154879.175 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce":
[info]   13412.525 ±(99.9%) 248.631 ops/s [Average]
[info]   (min, avg, max) = (13348.164, 13412.525, 13482.269), stdev = 64.569
[info]   CI (99.9%): [13163.894, 13661.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1291.905 ±(99.9%) 35.952 MB/sec [Average]
[info]   (min, avg, max) = (1277.858, 1291.905, 1300.807), stdev = 9.337
[info]   CI (99.9%): [1255.953, 1327.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   151570.192 ±(99.9%) 4085.934 B/op [Average]
[info]   (min, avg, max) = (150605.423, 151570.192, 153359.730), stdev = 1061.104
[info]   CI (99.9%): [147484.258, 155656.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1251.696 ±(99.9%) 570.385 MB/sec [Average]
[info]   (min, avg, max) = (986.890, 1251.696, 1324.485), stdev = 148.127
[info]   CI (99.9%): [681.311, 1822.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   146852.424 ±(99.9%) 66923.451 B/op [Average]
[info]   (min, avg, max) = (115821.976, 146852.424, 156100.725), stdev = 17379.808
[info]   CI (99.9%): [79928.973, 213775.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.829 ±(99.9%) 6.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.829, 3.685), stdev = 1.606
[info]   CI (99.9%): [≈ 0, 7.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   97.612 ±(99.9%) 729.074 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 97.612, 434.322), stdev = 189.338
[info]   CI (99.9%): [≈ 0, 826.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 14.000), stdev = 4.494
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.24% complete, ETA 00:50:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1417.444 ops/s
[info] # Warmup Iteration   2: 11955.075 ops/s
[info] # Warmup Iteration   3: 13219.404 ops/s
[info] Iteration   1: 13114.341 ops/s
[info]                  ·gc.alloc.rate:                   1159.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              139088.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118262.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.498 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 12894.332 ops/s
[info]                  ·gc.alloc.rate:                   1135.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              138611.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     160656.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 393.816 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 13262.054 ops/s
[info]                  ·gc.alloc.rate:                   1171.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              138982.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116872.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 138.335 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 13378.131 ops/s
[info]                  ·gc.alloc.rate:               1186.632 MB/sec
[info]                  ·gc.alloc.rate.norm:          139554.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1305.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 153591.582 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 13480.818 ops/s
[info]                  ·gc.alloc.rate:               1196.091 MB/sec
[info]                  ·gc.alloc.rate.norm:          139624.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 114352.641 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala":
[info]   13225.935 ±(99.9%) 886.166 ops/s [Average]
[info]   (min, avg, max) = (12894.332, 13225.935, 13480.818), stdev = 230.135
[info]   CI (99.9%): [12339.769, 14112.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1169.778 ±(99.9%) 91.181 MB/sec [Average]
[info]   (min, avg, max) = (1135.875, 1169.778, 1196.091), stdev = 23.679
[info]   CI (99.9%): [1078.597, 1260.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   139172.226 ±(99.9%) 1621.383 B/op [Average]
[info]   (min, avg, max) = (138611.072, 139172.226, 139624.893), stdev = 421.068
[info]   CI (99.9%): [137550.843, 140793.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1114.509 ±(99.9%) 691.811 MB/sec [Average]
[info]   (min, avg, max) = (979.597, 1114.509, 1316.530), stdev = 179.661
[info]   CI (99.9%): [422.697, 1806.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   132747.234 ±(99.9%) 86394.647 B/op [Average]
[info]   (min, avg, max) = (114352.641, 132747.234, 160656.445), stdev = 22436.416
[info]   CI (99.9%): [46352.586, 219141.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.883 ±(99.9%) 5.404 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.883, 3.227), stdev = 1.403
[info]   CI (99.9%): [≈ 0, 6.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   106.930 ±(99.9%) 658.741 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 106.930, 393.816), stdev = 171.073
[info]   CI (99.9%): [≈ 0, 765.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 14.000), stdev = 4.147
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.47% complete, ETA 00:50:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 126731.524 ops/s
[info] # Warmup Iteration   2: 272980.433 ops/s
[info] # Warmup Iteration   3: 285525.370 ops/s
[info] Iteration   1: 289797.151 ops/s
[info]                  ·gc.alloc.rate:                   1724.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              9363.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9011.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.149 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 292076.052 ops/s
[info]                  ·gc.alloc.rate:                   1741.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              9382.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8905.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.673 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 291572.044 ops/s
[info]                  ·gc.alloc.rate:               1765.502 MB/sec
[info]                  ·gc.alloc.rate.norm:          9528.823 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1986.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10722.467 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 291915.196 ops/s
[info]                  ·gc.alloc.rate:                   1754.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              9460.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8980.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.112 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 293180.323 ops/s
[info]                  ·gc.alloc.rate:               1762.130 MB/sec
[info]                  ·gc.alloc.rate.norm:          9458.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1674.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8988.183 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala":
[info]   291708.153 ±(99.9%) 4722.323 ops/s [Average]
[info]   (min, avg, max) = (289797.151, 291708.153, 293180.323), stdev = 1226.372
[info]   CI (99.9%): [286985.830, 296430.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1749.585 ±(99.9%) 65.331 MB/sec [Average]
[info]   (min, avg, max) = (1724.137, 1749.585, 1765.502), stdev = 16.966
[info]   CI (99.9%): [1684.254, 1814.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   9438.714 ±(99.9%) 257.195 B/op [Average]
[info]   (min, avg, max) = (9363.174, 9438.714, 9528.823), stdev = 66.793
[info]   CI (99.9%): [9181.519, 9695.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1727.812 ±(99.9%) 558.038 MB/sec [Average]
[info]   (min, avg, max) = (1652.830, 1727.812, 1986.661), stdev = 144.921
[info]   CI (99.9%): [1169.774, 2285.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9321.556 ±(99.9%) 3019.466 B/op [Average]
[info]   (min, avg, max) = (8905.218, 9321.556, 10722.467), stdev = 784.146
[info]   CI (99.9%): [6302.090, 12341.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.587 ±(99.9%) 4.745 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.587, 2.789), stdev = 1.232
[info]   CI (99.9%): [≈ 0, 5.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.187 ±(99.9%) 25.771 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.187, 15.149), stdev = 6.693
[info]   CI (99.9%): [≈ 0, 28.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 11.000), stdev = 1.924
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 44.71% complete, ETA 00:50:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 694.272 ops/s
[info] # Warmup Iteration   2: 8565.670 ops/s
[info] # Warmup Iteration   3: 12537.002 ops/s
[info] Iteration   1: 12762.038 ops/s
[info]                  ·gc.alloc.rate:                   1582.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              195139.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     161085.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.567 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 12526.061 ops/s
[info]                  ·gc.alloc.rate:                   1566.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              196789.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     206677.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.928 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 116.555 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 12732.634 ops/s
[info]                  ·gc.alloc.rate:                   1582.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              195656.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     204404.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.742 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 12711.155 ops/s
[info]                  ·gc.alloc.rate:               1587.417 MB/sec
[info]                  ·gc.alloc.rate.norm:          196533.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1328.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 164535.875 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 12747.513 ops/s
[info]                  ·gc.alloc.rate:               1605.388 MB/sec
[info]                  ·gc.alloc.rate.norm:          198188.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1669.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 206137.705 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson":
[info]   12695.880 ±(99.9%) 372.666 ops/s [Average]
[info]   (min, avg, max) = (12526.061, 12695.880, 12762.038), stdev = 96.780
[info]   CI (99.9%): [12323.214, 13068.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1585.025 ±(99.9%) 53.549 MB/sec [Average]
[info]   (min, avg, max) = (1566.468, 1585.025, 1605.388), stdev = 13.907
[info]   CI (99.9%): [1531.476, 1638.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   196461.347 ±(99.9%) 4512.081 B/op [Average]
[info]   (min, avg, max) = (195139.036, 196461.347, 198188.390), stdev = 1171.773
[info]   CI (99.9%): [191949.266, 200973.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1520.866 ±(99.9%) 715.233 MB/sec [Average]
[info]   (min, avg, max) = (1306.644, 1520.866, 1669.780), stdev = 185.744
[info]   CI (99.9%): [805.632, 2236.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   188568.149 ±(99.9%) 90720.352 B/op [Average]
[info]   (min, avg, max) = (161085.588, 188568.149, 206677.183), stdev = 23559.787
[info]   CI (99.9%): [97847.797, 279288.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.261 ±(99.9%) 1.549 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.261, 0.928), stdev = 0.402
[info]   CI (99.9%): [≈ 0, 1.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   32.573 ±(99.9%) 194.449 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 32.573, 116.555), stdev = 50.498
[info]   CI (99.9%): [≈ 0, 227.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.400, 8.000), stdev = 0.894
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.94% complete, ETA 00:49:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12308.324 ops/s
[info] # Warmup Iteration   2: 31025.784 ops/s
[info] # Warmup Iteration   3: 32052.884 ops/s
[info] Iteration   1: 32359.546 ops/s
[info]                  ·gc.alloc.rate:                   1396.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              67930.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64339.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 32560.778 ops/s
[info]                  ·gc.alloc.rate:                   1400.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              67669.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63877.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.435 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 166.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 31761.405 ops/s
[info]                  ·gc.alloc.rate:                   1396.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              69192.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65154.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.409 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 32498.470 ops/s
[info]                  ·gc.alloc.rate:                   1400.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              67789.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79704.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.024 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 32121.371 ops/s
[info]                  ·gc.alloc.rate:                   1381.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              67678.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64801.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce":
[info]   32260.314 ±(99.9%) 1255.244 ops/s [Average]
[info]   (min, avg, max) = (31761.405, 32260.314, 32560.778), stdev = 325.983
[info]   CI (99.9%): [31005.070, 33515.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1395.098 ±(99.9%) 30.224 MB/sec [Average]
[info]   (min, avg, max) = (1381.442, 1395.098, 1400.376), stdev = 7.849
[info]   CI (99.9%): [1364.874, 1425.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   68052.109 ±(99.9%) 2487.681 B/op [Average]
[info]   (min, avg, max) = (67669.593, 68052.109, 69192.201), stdev = 646.043
[info]   CI (99.9%): [65564.429, 70539.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1385.818 ±(99.9%) 561.279 MB/sec [Average]
[info]   (min, avg, max) = (1315.036, 1385.818, 1646.500), stdev = 145.762
[info]   CI (99.9%): [824.540, 1947.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   67575.536 ±(99.9%) 26173.889 B/op [Average]
[info]   (min, avg, max) = (63877.880, 67575.536, 79704.420), stdev = 6797.276
[info]   CI (99.9%): [41401.647, 93749.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.762 ±(99.9%) 5.768 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.762, 3.435), stdev = 1.498
[info]   CI (99.9%): [≈ 0, 6.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   36.896 ±(99.9%) 278.640 B/op [Average]
[info]   (min, avg, max) = (1.012, 36.896, 166.013), stdev = 72.362
[info]   CI (99.9%): [≈ 0, 315.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 12.000), stdev = 2.775
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.18% complete, ETA 00:49:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23883.256 ops/s
[info] # Warmup Iteration   2: 71758.830 ops/s
[info] # Warmup Iteration   3: 76514.106 ops/s
[info] Iteration   1: 77540.385 ops/s
[info]                  ·gc.alloc.rate:                   1940.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              39391.464 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40100.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.768 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.473 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 79489.917 ops/s
[info]                  ·gc.alloc.rate:                   1999.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              39587.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38946.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.824 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 79556.832 ops/s
[info]                  ·gc.alloc.rate:               2014.814 MB/sec
[info]                  ·gc.alloc.rate.norm:          39843.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1979.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 39139.247 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 79161.654 ops/s
[info]                  ·gc.alloc.rate:                   2006.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              39892.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39671.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.414 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 79645.022 ops/s
[info]                  ·gc.alloc.rate:               2005.629 MB/sec
[info]                  ·gc.alloc.rate.norm:          39620.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1674.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33085.976 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala":
[info]   79078.762 ±(99.9%) 3385.351 ops/s [Average]
[info]   (min, avg, max) = (77540.385, 79078.762, 79645.022), stdev = 879.165
[info]   CI (99.9%): [75693.411, 82464.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1993.537 ±(99.9%) 115.225 MB/sec [Average]
[info]   (min, avg, max) = (1940.885, 1993.537, 2014.814), stdev = 29.924
[info]   CI (99.9%): [1878.311, 2108.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   39667.079 ±(99.9%) 785.752 B/op [Average]
[info]   (min, avg, max) = (39391.464, 39667.079, 39892.446), stdev = 204.057
[info]   CI (99.9%): [38881.327, 40452.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1918.543 ±(99.9%) 526.039 MB/sec [Average]
[info]   (min, avg, max) = (1674.859, 1918.543, 1995.585), stdev = 136.611
[info]   CI (99.9%): [1392.504, 2444.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   38188.707 ±(99.9%) 11121.859 B/op [Average]
[info]   (min, avg, max) = (33085.976, 38188.707, 40100.525), stdev = 2888.312
[info]   CI (99.9%): [27066.848, 49310.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.766 ±(99.9%) 6.462 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.766, 3.768), stdev = 1.678
[info]   CI (99.9%): [≈ 0, 7.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15.542 ±(99.9%) 131.164 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.542, 76.473), stdev = 34.063
[info]   CI (99.9%): [≈ 0, 146.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 13.000), stdev = 2.608
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.41% complete, ETA 00:49:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 292843.376 ops/s
[info] # Warmup Iteration   2: 623993.613 ops/s
[info] # Warmup Iteration   3: 621311.869 ops/s
[info] Iteration   1: 620252.429 ops/s
[info]                  ·gc.alloc.rate:                   871.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              2211.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1677.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 602874.731 ops/s
[info]                  ·gc.alloc.rate:                   851.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              2222.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2592.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 621090.079 ops/s
[info]                  ·gc.alloc.rate:               871.289 MB/sec
[info]                  ·gc.alloc.rate.norm:          2207.661 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1681.181 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 621378.121 ops/s
[info]                  ·gc.alloc.rate:                   884.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              2240.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2517.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.998 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.592 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 611173.116 ops/s
[info]                  ·gc.alloc.rate:               864.156 MB/sec
[info]                  ·gc.alloc.rate.norm:          2225.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1699.881 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala":
[info]   615353.695 ±(99.9%) 31424.605 ops/s [Average]
[info]   (min, avg, max) = (602874.731, 615353.695, 621378.121), stdev = 8160.870
[info]   CI (99.9%): [583929.090, 646778.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   868.591 ±(99.9%) 46.741 MB/sec [Average]
[info]   (min, avg, max) = (851.287, 868.591, 884.504), stdev = 12.139
[info]   CI (99.9%): [821.849, 915.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2221.338 ±(99.9%) 49.026 B/op [Average]
[info]   (min, avg, max) = (2207.661, 2221.338, 2240.116), stdev = 12.732
[info]   CI (99.9%): [2172.312, 2270.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   794.367 ±(99.9%) 699.848 MB/sec [Average]
[info]   (min, avg, max) = (660.171, 794.367, 993.926), stdev = 181.748
[info]   CI (99.9%): [94.518, 1494.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2033.596 ±(99.9%) 1834.626 B/op [Average]
[info]   (min, avg, max) = (1677.655, 2033.596, 2592.020), stdev = 476.447
[info]   CI (99.9%): [198.969, 3868.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.616 ±(99.9%) 5.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.616, 2.998), stdev = 1.331
[info]   CI (99.9%): [≈ 0, 5.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.561 ±(99.9%) 12.984 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.561, 7.592), stdev = 3.372
[info]   CI (99.9%): [≈ 0, 14.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 8.000), stdev = 1.817
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 45.65% complete, ETA 00:49:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 385906.232 ops/s
[info] # Warmup Iteration   2: 696491.850 ops/s
[info] # Warmup Iteration   3: 738818.128 ops/s
[info] Iteration   1: 738773.549 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 739787.690 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 738501.076 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 738199.940 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 739155.335 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   738883.518 ±(99.9%) 2371.388 ops/s [Average]
[info]   (min, avg, max) = (738199.940, 738883.518, 739787.690), stdev = 615.842
[info]   CI (99.9%): [736512.130, 741254.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 45.88% complete, ETA 00:49:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11216.249 ops/s
[info] # Warmup Iteration   2: 66696.775 ops/s
[info] # Warmup Iteration   3: 68830.344 ops/s
[info] Iteration   1: 69759.743 ops/s
[info]                  ·gc.alloc.rate:                   2006.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              45264.257 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44500.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.923 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 70457.064 ops/s
[info]                  ·gc.alloc.rate:                   2033.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              45412.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1991.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44489.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.465 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 71120.318 ops/s
[info]                  ·gc.alloc.rate:                   2073.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              45874.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2007.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44429.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.461 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 70740.897 ops/s
[info]                  ·gc.alloc.rate:                   2062.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              45873.558 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44934.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.463 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 70541.771 ops/s
[info]                  ·gc.alloc.rate:               2057.501 MB/sec
[info]                  ·gc.alloc.rate.norm:          45900.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2028.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45253.613 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson":
[info]   70523.959 ±(99.9%) 1917.146 ops/s [Average]
[info]   (min, avg, max) = (69759.743, 70523.959, 71120.318), stdev = 497.877
[info]   CI (99.9%): [68606.813, 72441.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2046.475 ±(99.9%) 102.816 MB/sec [Average]
[info]   (min, avg, max) = (2006.465, 2046.475, 2073.145), stdev = 26.701
[info]   CI (99.9%): [1943.659, 2149.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   45664.884 ±(99.9%) 1166.781 B/op [Average]
[info]   (min, avg, max) = (45264.257, 45664.884, 45900.202), stdev = 303.009
[info]   CI (99.9%): [44498.104, 46831.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2004.145 ±(99.9%) 86.088 MB/sec [Average]
[info]   (min, avg, max) = (1972.603, 2004.145, 2028.517), stdev = 22.357
[info]   CI (99.9%): [1918.057, 2090.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   44721.532 ±(99.9%) 1384.104 B/op [Average]
[info]   (min, avg, max) = (44429.562, 44721.532, 45253.613), stdev = 359.447
[info]   CI (99.9%): [43337.428, 46105.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.092 ±(99.9%) 0.655 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.092, 0.396), stdev = 0.170
[info]   CI (99.9%): [≈ 0, 0.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.062 ±(99.9%) 14.789 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.062, 8.923), stdev = 3.841
[info]   CI (99.9%): [≈ 0, 16.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 9.000), stdev = 0.894
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 46.12% complete, ETA 00:48:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4909.271 ops/s
[info] # Warmup Iteration   2: 15170.562 ops/s
[info] # Warmup Iteration   3: 17143.658 ops/s
[info] Iteration   1: 17147.177 ops/s
[info]                  ·gc.alloc.rate:               899.934 MB/sec
[info]                  ·gc.alloc.rate.norm:          82590.686 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60618.221 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 16966.666 ops/s
[info]                  ·gc.alloc.rate:                   899.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              83443.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91938.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.792 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 16930.591 ops/s
[info]                  ·gc.alloc.rate:               892.518 MB/sec
[info]                  ·gc.alloc.rate.norm:          82948.827 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61491.524 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 16413.024 ops/s
[info]                  ·gc.alloc.rate:                   877.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              84152.633 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95104.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 363.268 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 16603.714 ops/s
[info]                  ·gc.alloc.rate:                   890.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              84419.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93505.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.973 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce":
[info]   16812.235 ±(99.9%) 1143.735 ops/s [Average]
[info]   (min, avg, max) = (16413.024, 16812.235, 17147.177), stdev = 297.024
[info]   CI (99.9%): [15668.499, 17955.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate":
[info]   892.089 ±(99.9%) 34.891 MB/sec [Average]
[info]   (min, avg, max) = (877.679, 892.089, 899.934), stdev = 9.061
[info]   CI (99.9%): [857.198, 926.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   83510.995 ±(99.9%) 2985.154 B/op [Average]
[info]   (min, avg, max) = (82590.686, 83510.995, 84419.139), stdev = 775.235
[info]   CI (99.9%): [80525.841, 86496.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   858.364 ±(99.9%) 693.534 MB/sec [Average]
[info]   (min, avg, max) = (660.515, 858.364, 991.902), stdev = 180.109
[info]   CI (99.9%): [164.829, 1551.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   80531.574 ±(99.9%) 68609.232 B/op [Average]
[info]   (min, avg, max) = (60618.221, 80531.574, 95104.444), stdev = 17817.600
[info]   CI (99.9%): [11922.342, 149140.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.774 ±(99.9%) 6.489 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.774, 3.789), stdev = 1.685
[info]   CI (99.9%): [≈ 0, 7.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   74.207 ±(99.9%) 622.293 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 74.207, 363.268), stdev = 161.608
[info]   CI (99.9%): [≈ 0, 696.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 10.000), stdev = 2.121
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.35% complete, ETA 00:48:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5931.608 ops/s
[info] # Warmup Iteration   2: 15240.082 ops/s
[info] # Warmup Iteration   3: 16993.370 ops/s
[info] Iteration   1: 17046.389 ops/s
[info]                  ·gc.alloc.rate:               748.368 MB/sec
[info]                  ·gc.alloc.rate.norm:          69075.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60577.558 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 17111.746 ops/s
[info]                  ·gc.alloc.rate:                   752.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              69178.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60408.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.915 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 17058.093 ops/s
[info]                  ·gc.alloc.rate:                   748.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              69018.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60722.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.921 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 16800.464 ops/s
[info]                  ·gc.alloc.rate:                   745.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              69851.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61651.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.900 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 16930.061 ops/s
[info]                  ·gc.alloc.rate:                   754.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              70091.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91829.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 379.472 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala":
[info]   16989.351 ±(99.9%) 479.992 ops/s [Average]
[info]   (min, avg, max) = (16800.464, 16989.351, 17111.746), stdev = 124.652
[info]   CI (99.9%): [16509.358, 17469.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   749.742 ±(99.9%) 13.270 MB/sec [Average]
[info]   (min, avg, max) = (745.724, 749.742, 754.246), stdev = 3.446
[info]   CI (99.9%): [736.472, 763.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   69443.226 ±(99.9%) 1900.090 B/op [Average]
[info]   (min, avg, max) = (69018.352, 69443.226, 70091.989), stdev = 493.447
[info]   CI (99.9%): [67543.136, 71343.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   723.546 ±(99.9%) 569.605 MB/sec [Average]
[info]   (min, avg, max) = (656.305, 723.546, 988.158), stdev = 147.925
[info]   CI (99.9%): [153.940, 1293.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   67038.025 ±(99.9%) 53397.389 B/op [Average]
[info]   (min, avg, max) = (60408.761, 67038.025, 91829.350), stdev = 13867.132
[info]   CI (99.9%): [13640.637, 120435.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 6.996 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 4.083), stdev = 1.817
[info]   CI (99.9%): [≈ 0, 7.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   77.442 ±(99.9%) 650.166 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 77.442, 379.472), stdev = 168.846
[info]   CI (99.9%): [≈ 0, 727.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.59% complete, ETA 00:48:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 72650.751 ops/s
[info] # Warmup Iteration   2: 117827.131 ops/s
[info] # Warmup Iteration   3: 120031.863 ops/s
[info] Iteration   1: 120487.186 ops/s
[info]                  ·gc.alloc.rate:                   317.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              4150.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6682.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.272 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 120633.639 ops/s
[info]                  ·gc.alloc.rate:               326.374 MB/sec
[info]                  ·gc.alloc.rate.norm:          4257.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4306.133 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 121986.494 ops/s
[info]                  ·gc.alloc.rate:      306.345 MB/sec
[info]                  ·gc.alloc.rate.norm: 3952.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 121509.928 ops/s
[info]                  ·gc.alloc.rate:                   317.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              4111.887 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4275.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 121713.192 ops/s
[info]                  ·gc.alloc.rate:                   316.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              4087.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4276.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala":
[info]   121266.088 ±(99.9%) 2572.323 ops/s [Average]
[info]   (min, avg, max) = (120487.186, 121266.088, 121986.494), stdev = 668.024
[info]   CI (99.9%): [118693.764, 123838.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   316.830 ±(99.9%) 27.421 MB/sec [Average]
[info]   (min, avg, max) = (306.345, 316.830, 326.374), stdev = 7.121
[info]   CI (99.9%): [289.408, 344.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4112.040 ±(99.9%) 425.759 B/op [Average]
[info]   (min, avg, max) = (3952.004, 4112.040, 4257.589), stdev = 110.568
[info]   CI (99.9%): [3686.281, 4537.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   300.507 ±(99.9%) 714.009 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 300.507, 511.603), stdev = 185.426
[info]   CI (99.9%): [≈ 0, 1014.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3908.031 ±(99.9%) 9313.051 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3908.031, 6682.209), stdev = 2418.570
[info]   CI (99.9%): [≈ 0, 13221.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.162 ±(99.9%) 0.570 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.162, 0.272), stdev = 0.148
[info]   CI (99.9%): [≈ 0, 0.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 6.000), stdev = 2.121
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 46.82% complete, ETA 00:48:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1019.310 ops/s
[info] # Warmup Iteration   2: 10322.736 ops/s
[info] # Warmup Iteration   3: 14276.785 ops/s
[info] Iteration   1: 14255.788 ops/s
[info]                  ·gc.alloc.rate:                   1101.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              121560.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108725.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.298 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 14162.139 ops/s
[info]                  ·gc.alloc.rate:                   1091.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              121328.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109632.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.313 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 14515.850 ops/s
[info]                  ·gc.alloc.rate:                   1125.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              122035.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     142636.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.248 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 460.409 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 14608.402 ops/s
[info]                  ·gc.alloc.rate:                   1137.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              122487.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105632.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.881 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 14417.870 ops/s
[info]                  ·gc.alloc.rate:               1116.366 MB/sec
[info]                  ·gc.alloc.rate.norm:          121850.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 106668.122 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson":
[info]   14392.010 ±(99.9%) 705.382 ops/s [Average]
[info]   (min, avg, max) = (14162.139, 14392.010, 14608.402), stdev = 183.185
[info]   CI (99.9%): [13686.628, 15097.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1114.515 ±(99.9%) 70.070 MB/sec [Average]
[info]   (min, avg, max) = (1091.983, 1114.515, 1137.070), stdev = 18.197
[info]   CI (99.9%): [1044.445, 1184.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   121852.419 ±(99.9%) 1718.631 B/op [Average]
[info]   (min, avg, max) = (121328.338, 121852.419, 122487.779), stdev = 446.323
[info]   CI (99.9%): [120133.789, 123571.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1049.106 ±(99.9%) 574.578 MB/sec [Average]
[info]   (min, avg, max) = (977.271, 1049.106, 1315.950), stdev = 149.216
[info]   CI (99.9%): [474.528, 1623.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   114659.016 ±(99.9%) 60534.022 B/op [Average]
[info]   (min, avg, max) = (105632.622, 114659.016, 142636.380), stdev = 15720.493
[info]   CI (99.9%): [54124.994, 175193.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.924 ±(99.9%) 7.173 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.924, 4.248), stdev = 1.863
[info]   CI (99.9%): [≈ 0, 8.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   100.180 ±(99.9%) 777.539 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 100.180, 460.409), stdev = 201.924
[info]   CI (99.9%): [≈ 0, 877.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.000, 13.000), stdev = 4.183
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 47.06% complete, ETA 00:47:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9901.031 ops/s
[info] # Warmup Iteration   2: 44286.094 ops/s
[info] # Warmup Iteration   3: 46659.294 ops/s
[info] Iteration   1: 46400.542 ops/s
[info]                  ·gc.alloc.rate:                   1422.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              48249.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44801.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.412 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 47376.103 ops/s
[info]                  ·gc.alloc.rate:                   1449.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              48164.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43838.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 118.945 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 47200.329 ops/s
[info]                  ·gc.alloc.rate:               1450.962 MB/sec
[info]                  ·gc.alloc.rate.norm:          48376.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 43800.798 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 47008.022 ops/s
[info]                  ·gc.alloc.rate:                   1471.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              49253.658 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55064.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.697 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 47397.184 ops/s
[info]                  ·gc.alloc.rate:               1470.721 MB/sec
[info]                  ·gc.alloc.rate.norm:          48828.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1323.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 43924.740 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce":
[info]   47076.436 ±(99.9%) 1575.405 ops/s [Average]
[info]   (min, avg, max) = (46400.542, 47076.436, 47397.184), stdev = 409.128
[info]   CI (99.9%): [45501.031, 48651.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1453.166 ±(99.9%) 76.765 MB/sec [Average]
[info]   (min, avg, max) = (1422.691, 1453.166, 1471.536), stdev = 19.936
[info]   CI (99.9%): [1376.400, 1529.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   48574.427 ±(99.9%) 1763.032 B/op [Average]
[info]   (min, avg, max) = (48164.535, 48574.427, 49253.658), stdev = 457.854
[info]   CI (99.9%): [46811.395, 50337.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1384.524 ±(99.9%) 561.196 MB/sec [Average]
[info]   (min, avg, max) = (1313.721, 1384.524, 1645.159), stdev = 145.741
[info]   CI (99.9%): [823.328, 1945.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   46286.034 ±(99.9%) 18963.929 B/op [Average]
[info]   (min, avg, max) = (43800.798, 46286.034, 55064.960), stdev = 4924.872
[info]   CI (99.9%): [27322.105, 65249.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.729 ±(99.9%) 6.140 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.729, 3.581), stdev = 1.594
[info]   CI (99.9%): [≈ 0, 6.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   24.211 ±(99.9%) 203.935 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.211, 118.945), stdev = 52.961
[info]   CI (99.9%): [≈ 0, 228.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 12.000), stdev = 2.881
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.29% complete, ETA 00:47:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25000.411 ops/s
[info] # Warmup Iteration   2: 72450.983 ops/s
[info] # Warmup Iteration   3: 74214.951 ops/s
[info] Iteration   1: 76478.795 ops/s
[info]                  ·gc.alloc.rate:                   1619.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              33324.456 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33590.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.285 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 77372.542 ops/s
[info]                  ·gc.alloc.rate:                   1640.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              33369.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33461.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.847 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 77270.550 ops/s
[info]                  ·gc.alloc.rate:                   1652.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              33660.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33777.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.392 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 77416.776 ops/s
[info]                  ·gc.alloc.rate:               1649.899 MB/sec
[info]                  ·gc.alloc.rate.norm:          33533.155 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1335.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27137.256 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 77331.145 ops/s
[info]                  ·gc.alloc.rate:               1661.614 MB/sec
[info]                  ·gc.alloc.rate.norm:          33813.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1677.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34142.300 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala":
[info]   77173.962 ±(99.9%) 1510.715 ops/s [Average]
[info]   (min, avg, max) = (76478.795, 77173.962, 77416.776), stdev = 392.328
[info]   CI (99.9%): [75663.246, 78684.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1644.894 ±(99.9%) 61.668 MB/sec [Average]
[info]   (min, avg, max) = (1619.573, 1644.894, 1661.614), stdev = 16.015
[info]   CI (99.9%): [1583.225, 1706.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   33540.250 ±(99.9%) 782.546 B/op [Average]
[info]   (min, avg, max) = (33324.456, 33540.250, 33813.664), stdev = 203.225
[info]   CI (99.9%): [32757.705, 34322.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1589.822 ±(99.9%) 551.865 MB/sec [Average]
[info]   (min, avg, max) = (1335.208, 1589.822, 1677.763), stdev = 143.317
[info]   CI (99.9%): [1037.957, 2141.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   32421.742 ±(99.9%) 11418.082 B/op [Average]
[info]   (min, avg, max) = (27137.256, 32421.742, 34142.300), stdev = 2965.240
[info]   CI (99.9%): [21003.661, 43839.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.263 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.167), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.105 ±(99.9%) 5.367 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.105, 3.392), stdev = 1.394
[info]   CI (99.9%): [≈ 0, 6.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 8.000), stdev = 1.140
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 47.53% complete, ETA 00:47:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 112537.200 ops/s
[info] # Warmup Iteration   2: 315756.320 ops/s
[info] # Warmup Iteration   3: 328461.559 ops/s
[info] Iteration   1: 321297.156 ops/s
[info]                  ·gc.alloc.rate:               633.452 MB/sec
[info]                  ·gc.alloc.rate.norm:          3102.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3228.611 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 322611.019 ops/s
[info]                  ·gc.alloc.rate:               629.434 MB/sec
[info]                  ·gc.alloc.rate.norm:          3069.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1608.559 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 324150.556 ops/s
[info]                  ·gc.alloc.rate:                   641.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              3112.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3208.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 321784.164 ops/s
[info]                  ·gc.alloc.rate:                   636.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              3111.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3235.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 318932.226 ops/s
[info]                  ·gc.alloc.rate:               631.392 MB/sec
[info]                  ·gc.alloc.rate.norm:          3115.559 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3267.391 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala":
[info]   321755.024 ±(99.9%) 7369.227 ops/s [Average]
[info]   (min, avg, max) = (318932.226, 321755.024, 324150.556), stdev = 1913.765
[info]   CI (99.9%): [314385.798, 329124.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   634.317 ±(99.9%) 17.558 MB/sec [Average]
[info]   (min, avg, max) = (629.434, 634.317, 641.144), stdev = 4.560
[info]   CI (99.9%): [616.759, 651.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3102.262 ±(99.9%) 72.149 B/op [Average]
[info]   (min, avg, max) = (3069.989, 3102.262, 3115.559), stdev = 18.737
[info]   CI (99.9%): [3030.113, 3174.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   594.731 ±(99.9%) 570.300 MB/sec [Average]
[info]   (min, avg, max) = (329.800, 594.731, 662.162), stdev = 148.105
[info]   CI (99.9%): [24.431, 1165.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2909.617 ±(99.9%) 2801.814 B/op [Average]
[info]   (min, avg, max) = (1608.559, 2909.617, 3267.391), stdev = 727.622
[info]   CI (99.9%): [107.803, 5711.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.070 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.056 ±(99.9%) 0.341 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.056, 0.202), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 47.76% complete, ETA 00:47:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 178113.566 ops/s
[info] # Warmup Iteration   2: 361014.241 ops/s
[info] # Warmup Iteration   3: 360611.694 ops/s
[info] Iteration   1: 360426.176 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 360390.429 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 360823.243 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 360582.577 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 360672.074 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc":
[info]   360578.900 ±(99.9%) 686.788 ops/s [Average]
[info]   (min, avg, max) = (360390.429, 360578.900, 360823.243), stdev = 178.357
[info]   CI (99.9%): [359892.112, 361265.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 48.00% complete, ETA 00:47:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20822.141 ops/s
[info] # Warmup Iteration   2: 57478.361 ops/s
[info] # Warmup Iteration   3: 64350.840 ops/s
[info] Iteration   1: 64392.534 ops/s
[info]                  ·gc.alloc.rate:                   1484.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              36284.156 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40287.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.977 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72.756 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 65968.497 ops/s
[info]                  ·gc.alloc.rate:                   1516.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              36167.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31363.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.832 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 65526.608 ops/s
[info]                  ·gc.alloc.rate:               1508.883 MB/sec
[info]                  ·gc.alloc.rate.norm:          36238.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1636.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 39310.800 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 65419.099 ops/s
[info]                  ·gc.alloc.rate:               1515.475 MB/sec
[info]                  ·gc.alloc.rate.norm:          36456.310 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31585.642 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 64422.105 ops/s
[info]                  ·gc.alloc.rate:               1493.678 MB/sec
[info]                  ·gc.alloc.rate.norm:          36486.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32253.362 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson":
[info]   65145.769 ±(99.9%) 2714.418 ops/s [Average]
[info]   (min, avg, max) = (64392.534, 65145.769, 65968.497), stdev = 704.926
[info]   CI (99.9%): [62431.351, 67860.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1503.754 ±(99.9%) 53.777 MB/sec [Average]
[info]   (min, avg, max) = (1484.681, 1503.754, 1516.050), stdev = 13.966
[info]   CI (99.9%): [1449.977, 1557.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   36326.720 ±(99.9%) 535.056 B/op [Average]
[info]   (min, avg, max) = (36167.642, 36326.720, 36486.690), stdev = 138.952
[info]   CI (99.9%): [35791.664, 36861.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1446.665 ±(99.9%) 689.131 MB/sec [Average]
[info]   (min, avg, max) = (1313.003, 1446.665, 1648.481), stdev = 178.965
[info]   CI (99.9%): [757.534, 2135.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   34960.117 ±(99.9%) 17107.881 B/op [Average]
[info]   (min, avg, max) = (31363.515, 34960.117, 40287.265), stdev = 4442.862
[info]   CI (99.9%): [17852.236, 52067.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 4.990 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.804, 2.977), stdev = 1.296
[info]   CI (99.9%): [≈ 0, 5.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   19.517 ±(99.9%) 121.849 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 19.517, 72.756), stdev = 31.644
[info]   CI (99.9%): [≈ 0, 141.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 17.000), stdev = 5.099
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 48.24% complete, ETA 00:46:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26569.460 ops/s
[info] # Warmup Iteration   2: 127101.579 ops/s
[info] # Warmup Iteration   3: 141430.180 ops/s
[info] Iteration   1: 143758.912 ops/s
[info]                  ·gc.alloc.rate:                   1864.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              20407.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1642.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17976.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.684 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 143727.908 ops/s
[info]                  ·gc.alloc.rate:                   1875.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              20531.368 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1985.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21743.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.051 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 144036.896 ops/s
[info]                  ·gc.alloc.rate:                   1892.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              20677.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1666.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18207.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.682 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 143660.797 ops/s
[info]                  ·gc.alloc.rate:                   1902.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              20842.885 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22042.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 144266.039 ops/s
[info]                  ·gc.alloc.rate:               1895.570 MB/sec
[info]                  ·gc.alloc.rate.norm:          20678.399 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1684.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18370.445 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce":
[info]   143890.110 ±(99.9%) 979.790 ops/s [Average]
[info]   (min, avg, max) = (143660.797, 143890.110, 144266.039), stdev = 254.448
[info]   CI (99.9%): [142910.320, 144869.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate":
[info]   1885.990 ±(99.9%) 61.330 MB/sec [Average]
[info]   (min, avg, max) = (1864.087, 1885.990, 1902.710), stdev = 15.927
[info]   CI (99.9%): [1824.659, 1947.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20627.391 ±(99.9%) 636.488 B/op [Average]
[info]   (min, avg, max) = (20407.064, 20627.391, 20842.885), stdev = 165.294
[info]   CI (99.9%): [19990.902, 21263.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1798.111 ±(99.9%) 709.363 MB/sec [Average]
[info]   (min, avg, max) = (1642.082, 1798.111, 2012.265), stdev = 184.219
[info]   CI (99.9%): [1088.748, 2507.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19668.179 ±(99.9%) 7850.565 B/op [Average]
[info]   (min, avg, max) = (17976.672, 19668.179, 22042.982), stdev = 2038.767
[info]   CI (99.9%): [11817.614, 27518.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.280 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.187), stdev = 0.073
[info]   CI (99.9%): [≈ 0, 0.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.729 ±(99.9%) 3.066 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.729, 2.051), stdev = 0.796
[info]   CI (99.9%): [≈ 0, 3.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 48.47% complete, ETA 00:46:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.693 ops/s
[info] # Warmup Iteration   2: 791715.254 ops/s
[info] # Warmup Iteration   3: 820301.233 ops/s
[info] Iteration   1: 851063.099 ops/s
[info]                  ·gc.alloc.rate:                   488.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1199.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 833113.136 ops/s
[info]                  ·gc.alloc.rate:               473.637 MB/sec
[info]                  ·gc.alloc.rate.norm:          894.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 613.480 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 852436.673 ops/s
[info]                  ·gc.alloc.rate:                   494.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1199.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 853917.846 ops/s
[info]                  ·gc.alloc.rate:                   480.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              884.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     599.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 849409.802 ops/s
[info]                  ·gc.alloc.rate:               489.282 MB/sec
[info]                  ·gc.alloc.rate.norm:          906.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1207.078 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava":
[info]   847988.111 ±(99.9%) 32656.383 ops/s [Average]
[info]   (min, avg, max) = (833113.136, 847988.111, 853917.846), stdev = 8480.759
[info]   CI (99.9%): [815331.729, 880644.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   485.225 ±(99.9%) 31.620 MB/sec [Average]
[info]   (min, avg, max) = (473.637, 485.225, 494.126), stdev = 8.212
[info]   CI (99.9%): [453.604, 516.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   900.404 ±(99.9%) 41.668 B/op [Average]
[info]   (min, avg, max) = (884.848, 900.404, 912.196), stdev = 10.821
[info]   CI (99.9%): [858.736, 942.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   520.051 ±(99.9%) 685.670 MB/sec [Average]
[info]   (min, avg, max) = (324.887, 520.051, 651.527), stdev = 178.066
[info]   CI (99.9%): [≈ 0, 1205.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   963.849 ±(99.9%) 1257.027 B/op [Average]
[info]   (min, avg, max) = (599.128, 963.849, 1207.078), stdev = 326.446
[info]   CI (99.9%): [≈ 0, 2220.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.018 ±(99.9%) 0.085 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.042), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.157 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.077), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.71% complete, ETA 00:46:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 112290.498 ops/s
[info] # Warmup Iteration   2: 384883.237 ops/s
[info] # Warmup Iteration   3: 394638.486 ops/s
[info] Iteration   1: 393865.979 ops/s
[info]                  ·gc.alloc.rate:                   401.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              1603.459 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1022.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 393584.933 ops/s
[info]                  ·gc.alloc.rate:                   413.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              1654.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2610.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 393971.366 ops/s
[info]                  ·gc.alloc.rate:               404.982 MB/sec
[info]                  ·gc.alloc.rate.norm:          1617.585 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1306.579 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 382577.661 ops/s
[info]                  ·gc.alloc.rate:               391.583 MB/sec
[info]                  ·gc.alloc.rate.norm:          1610.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1345.491 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 393877.613 ops/s
[info]                  ·gc.alloc.rate:               403.350 MB/sec
[info]                  ·gc.alloc.rate.norm:          1611.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1308.284 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala":
[info]   391575.510 ±(99.9%) 19376.538 ops/s [Average]
[info]   (min, avg, max) = (382577.661, 391575.510, 393971.366), stdev = 5032.025
[info]   CI (99.9%): [372198.973, 410952.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   403.032 ±(99.9%) 30.864 MB/sec [Average]
[info]   (min, avg, max) = (391.583, 403.032, 413.941), stdev = 8.015
[info]   CI (99.9%): [372.168, 433.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1619.515 ±(99.9%) 78.278 B/op [Average]
[info]   (min, avg, max) = (1603.459, 1619.515, 1654.754), stdev = 20.329
[info]   CI (99.9%): [1541.237, 1697.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   378.111 ±(99.9%) 603.566 MB/sec [Average]
[info]   (min, avg, max) = (255.802, 378.111, 652.987), stdev = 156.744
[info]   CI (99.9%): [≈ 0, 981.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1518.559 ±(99.9%) 2402.875 B/op [Average]
[info]   (min, avg, max) = (1022.090, 1518.559, 2610.353), stdev = 624.019
[info]   CI (99.9%): [≈ 0, 3921.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.175 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.94% complete, ETA 00:46:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 661995.468 ops/s
[info] # Warmup Iteration   2: 1071767.528 ops/s
[info] # Warmup Iteration   3: 1142676.824 ops/s
[info] Iteration   1: 1147926.980 ops/s
[info]                  ·gc.alloc.rate:               412.425 MB/sec
[info]                  ·gc.alloc.rate.norm:          564.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:      584.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 800.294 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 1146608.504 ops/s
[info]                  ·gc.alloc.rate:               403.618 MB/sec
[info]                  ·gc.alloc.rate.norm:          553.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 452.619 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1151099.792 ops/s
[info]                  ·gc.alloc.rate:               413.071 MB/sec
[info]                  ·gc.alloc.rate.norm:          564.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 451.768 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1152289.234 ops/s
[info]                  ·gc.alloc.rate:                   410.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              560.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     451.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1156768.669 ops/s
[info]                  ·gc.alloc.rate:               408.924 MB/sec
[info]                  ·gc.alloc.rate.norm:          556.296 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 450.458 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala":
[info]   1150938.636 ±(99.9%) 15361.546 ops/s [Average]
[info]   (min, avg, max) = (1146608.504, 1150938.636, 1156768.669), stdev = 3989.345
[info]   CI (99.9%): [1135577.090, 1166300.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   409.633 ±(99.9%) 14.477 MB/sec [Average]
[info]   (min, avg, max) = (403.618, 409.633, 413.071), stdev = 3.760
[info]   CI (99.9%): [395.156, 424.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   559.939 ±(99.9%) 19.004 B/op [Average]
[info]   (min, avg, max) = (553.793, 559.939, 564.812), stdev = 4.935
[info]   CI (99.9%): [540.935, 578.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   381.260 ±(99.9%) 437.221 MB/sec [Average]
[info]   (min, avg, max) = (329.880, 381.260, 584.374), stdev = 113.545
[info]   CI (99.9%): [≈ 0, 818.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   521.287 ±(99.9%) 600.590 B/op [Average]
[info]   (min, avg, max) = (450.458, 521.287, 800.294), stdev = 155.971
[info]   CI (99.9%): [≈ 0, 1121.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.028), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 6.000), stdev = 1.643
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 49.18% complete, ETA 00:46:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4453.424 ops/s
[info] # Warmup Iteration   2: 59414.408 ops/s
[info] # Warmup Iteration   3: 77078.531 ops/s
[info] Iteration   1: 77850.764 ops/s
[info]                  ·gc.alloc.rate:                   3114.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              62964.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2943.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59504.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.263 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 79975.219 ops/s
[info]                  ·gc.alloc.rate:                   3227.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              63501.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2972.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58498.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.277 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 79656.110 ops/s
[info]                  ·gc.alloc.rate:                   3236.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              63940.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3346.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66124.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.823 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 79553.361 ops/s
[info]                  ·gc.alloc.rate:                   3220.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              63708.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3037.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60094.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.412 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 78331.562 ops/s
[info]                  ·gc.alloc.rate:                   3180.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              63894.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3051.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61298.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.418 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson":
[info]   79073.403 ±(99.9%) 3564.890 ops/s [Average]
[info]   (min, avg, max) = (77850.764, 79073.403, 79975.219), stdev = 925.790
[info]   CI (99.9%): [75508.514, 82638.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3195.850 ±(99.9%) 192.608 MB/sec [Average]
[info]   (min, avg, max) = (3114.994, 3195.850, 3236.353), stdev = 50.020
[info]   CI (99.9%): [3003.242, 3388.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63601.600 ±(99.9%) 1525.601 B/op [Average]
[info]   (min, avg, max) = (62964.058, 63601.600, 63940.093), stdev = 396.194
[info]   CI (99.9%): [62075.999, 65127.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3070.509 ±(99.9%) 619.131 MB/sec [Average]
[info]   (min, avg, max) = (2943.837, 3070.509, 3346.900), stdev = 160.786
[info]   CI (99.9%): [2451.379, 3689.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   61104.134 ±(99.9%) 11488.100 B/op [Average]
[info]   (min, avg, max) = (58498.924, 61104.134, 66124.162), stdev = 2983.423
[info]   CI (99.9%): [49616.034, 72592.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.234 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.167), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.238 ±(99.9%) 4.591 B/op [Average]
[info]   (min, avg, max) = (0.412, 1.238, 3.277), stdev = 1.192
[info]   CI (99.9%): [≈ 0, 5.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.count":
[info]   46.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 12.600, 14.000), stdev = 0.894
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 49.41% complete, ETA 00:45:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58701.866 ops/s
[info] # Warmup Iteration   2: 252784.684 ops/s
[info] # Warmup Iteration   3: 264096.183 ops/s
[info] Iteration   1: 271601.916 ops/s
[info]                  ·gc.alloc.rate:               1648.800 MB/sec
[info]                  ·gc.alloc.rate.norm:          9553.630 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1635.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9474.468 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 264361.785 ops/s
[info]                  ·gc.alloc.rate:                   1609.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              9579.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9800.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 265835.226 ops/s
[info]                  ·gc.alloc.rate:                   1624.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              9614.203 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9833.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 272524.660 ops/s
[info]                  ·gc.alloc.rate:                   1671.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              9653.482 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9654.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 271105.970 ops/s
[info]                  ·gc.alloc.rate:               1650.702 MB/sec
[info]                  ·gc.alloc.rate.norm:          9581.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7803.464 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce":
[info]   269085.911 ±(99.9%) 14294.169 ops/s [Average]
[info]   (min, avg, max) = (264361.785, 269085.911, 272524.660), stdev = 3712.150
[info]   CI (99.9%): [254791.743, 283380.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1640.897 ±(99.9%) 94.002 MB/sec [Average]
[info]   (min, avg, max) = (1609.288, 1640.897, 1671.611), stdev = 24.412
[info]   CI (99.9%): [1546.894, 1734.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   9596.539 ±(99.9%) 147.881 B/op [Average]
[info]   (min, avg, max) = (9553.630, 9596.539, 9653.482), stdev = 38.404
[info]   CI (99.9%): [9448.658, 9744.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1591.759 ±(99.9%) 535.210 MB/sec [Average]
[info]   (min, avg, max) = (1344.377, 1591.759, 1671.744), stdev = 138.992
[info]   CI (99.9%): [1056.549, 2126.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9313.299 ±(99.9%) 3295.678 B/op [Average]
[info]   (min, avg, max) = (7803.464, 9313.299, 9833.481), stdev = 855.877
[info]   CI (99.9%): [6017.621, 12608.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.258 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.073, 0.124), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 7.000), stdev = 0.894
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 49.65% complete, ETA 00:45:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.641 ops/s
[info] # Warmup Iteration   2: 1117764.102 ops/s
[info] # Warmup Iteration   3: 1212705.344 ops/s
[info] Iteration   1: 1217605.427 ops/s
[info]                  ·gc.alloc.rate:               425.317 MB/sec
[info]                  ·gc.alloc.rate.norm:          549.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 419.308 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1213436.913 ops/s
[info]                  ·gc.alloc.rate:               424.485 MB/sec
[info]                  ·gc.alloc.rate.norm:          550.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 420.761 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 1218438.760 ops/s
[info]                  ·gc.alloc.rate:                   434.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              561.378 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     838.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1238372.808 ops/s
[info]                  ·gc.alloc.rate:                   431.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              548.133 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     413.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1235688.107 ops/s
[info]                  ·gc.alloc.rate:               432.383 MB/sec
[info]                  ·gc.alloc.rate.norm:          550.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 414.017 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava":
[info]   1224708.403 ±(99.9%) 44075.874 ops/s [Average]
[info]   (min, avg, max) = (1213436.913, 1224708.403, 1238372.808), stdev = 11446.365
[info]   CI (99.9%): [1180632.529, 1268784.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   429.629 ±(99.9%) 17.296 MB/sec [Average]
[info]   (min, avg, max) = (424.485, 429.629, 434.652), stdev = 4.492
[info]   CI (99.9%): [412.333, 446.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   552.049 ±(99.9%) 20.427 B/op [Average]
[info]   (min, avg, max) = (548.133, 552.049, 561.378), stdev = 5.305
[info]   CI (99.9%): [531.622, 572.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   389.723 ±(99.9%) 559.235 MB/sec [Average]
[info]   (min, avg, max) = (324.428, 389.723, 649.520), stdev = 145.232
[info]   CI (99.9%): [≈ 0, 948.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   501.216 ±(99.9%) 726.984 B/op [Average]
[info]   (min, avg, max) = (413.100, 501.216, 838.892), stdev = 188.795
[info]   CI (99.9%): [≈ 0, 1228.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.041 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.026), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.88% complete, ETA 00:45:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 458078.539 ops/s
[info] # Warmup Iteration   2: 1427888.598 ops/s
[info] # Warmup Iteration   3: 1541071.245 ops/s
[info] Iteration   1: 1537936.939 ops/s
[info]                  ·gc.alloc.rate:                   921.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              943.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     670.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1552535.843 ops/s
[info]                  ·gc.alloc.rate:                   931.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              944.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     998.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1545814.092 ops/s
[info]                  ·gc.alloc.rate:                   930.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              947.389 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1004.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.102 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.158 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1543747.474 ops/s
[info]                  ·gc.alloc.rate:                   935.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              953.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1004.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.615 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1560859.518 ops/s
[info]                  ·gc.alloc.rate:               936.749 MB/sec
[info]                  ·gc.alloc.rate.norm:          944.403 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 659.567 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala":
[info]   1548178.773 ±(99.9%) 33893.795 ops/s [Average]
[info]   (min, avg, max) = (1537936.939, 1548178.773, 1560859.518), stdev = 8802.111
[info]   CI (99.9%): [1514284.978, 1582072.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   931.317 ±(99.9%) 22.557 MB/sec [Average]
[info]   (min, avg, max) = (921.911, 931.317, 936.749), stdev = 5.858
[info]   CI (99.9%): [908.760, 953.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   946.682 ±(99.9%) 16.426 B/op [Average]
[info]   (min, avg, max) = (943.380, 946.682, 953.826), stdev = 4.266
[info]   CI (99.9%): [930.256, 963.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   853.105 ±(99.9%) 697.976 MB/sec [Average]
[info]   (min, avg, max) = (654.221, 853.105, 986.947), stdev = 181.262
[info]   CI (99.9%): [155.128, 1551.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   867.303 ±(99.9%) 711.896 B/op [Average]
[info]   (min, avg, max) = (659.567, 867.303, 1004.746), stdev = 184.877
[info]   CI (99.9%): [155.408, 1579.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.749 ±(99.9%) 5.159 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.749, 3.102), stdev = 1.340
[info]   CI (99.9%): [≈ 0, 5.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.763 ±(99.9%) 5.251 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.763, 3.158), stdev = 1.364
[info]   CI (99.9%): [≈ 0, 6.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 10.000), stdev = 3.050
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.12% complete, ETA 00:45:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 989666.996 ops/s
[info] # Warmup Iteration   2: 1692174.676 ops/s
[info] # Warmup Iteration   3: 1901766.102 ops/s
[info] Iteration   1: 1903336.834 ops/s
[info]                  ·gc.alloc.rate:               668.578 MB/sec
[info]                  ·gc.alloc.rate.norm:          552.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 545.886 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 1906351.626 ops/s
[info]                  ·gc.alloc.rate:                   670.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              553.552 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     545.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1894125.474 ops/s
[info]                  ·gc.alloc.rate:                   662.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              550.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     549.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1852503.622 ops/s
[info]                  ·gc.alloc.rate:                   650.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.510 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     563.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1900363.454 ops/s
[info]                  ·gc.alloc.rate:                   661.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              547.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     549.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.561 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.120 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala":
[info]   1891336.202 ±(99.9%) 85383.605 ops/s [Average]
[info]   (min, avg, max) = (1852503.622, 1891336.202, 1906351.626), stdev = 22173.851
[info]   CI (99.9%): [1805952.597, 1976719.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   662.747 ±(99.9%) 30.409 MB/sec [Average]
[info]   (min, avg, max) = (650.376, 662.747, 670.567), stdev = 7.897
[info]   CI (99.9%): [632.337, 693.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   551.436 ±(99.9%) 8.689 B/op [Average]
[info]   (min, avg, max) = (547.924, 551.436, 553.552), stdev = 2.256
[info]   CI (99.9%): [542.747, 560.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   661.953 ±(99.9%) 4.816 MB/sec [Average]
[info]   (min, avg, max) = (660.360, 661.953, 663.489), stdev = 1.251
[info]   CI (99.9%): [657.137, 666.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   550.838 ±(99.9%) 27.422 B/op [Average]
[info]   (min, avg, max) = (545.835, 550.838, 563.107), stdev = 7.121
[info]   CI (99.9%): [523.416, 578.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.525 ±(99.9%) 4.383 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.525, 2.561), stdev = 1.138
[info]   CI (99.9%): [≈ 0, 4.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.435 ±(99.9%) 3.629 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.435, 2.120), stdev = 0.943
[info]   CI (99.9%): [≈ 0, 4.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 50.35% complete, ETA 00:44:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1033313.897 ops/s
[info] # Warmup Iteration   2: 1898187.804 ops/s
[info] # Warmup Iteration   3: 2046470.547 ops/s
[info] Iteration   1: 2047443.586 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2051580.188 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2048313.556 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2047861.215 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2047030.236 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc":
[info]   2048445.756 ±(99.9%) 6992.887 ops/s [Average]
[info]   (min, avg, max) = (2047030.236, 2048445.756, 2051580.188), stdev = 1816.031
[info]   CI (99.9%): [2041452.869, 2055438.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 50.59% complete, ETA 00:44:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11496.604 ops/s
[info] # Warmup Iteration   2: 33225.911 ops/s
[info] # Warmup Iteration   3: 41206.841 ops/s
[info] Iteration   1: 40536.425 ops/s
[info]                  ·gc.alloc.rate:                   2017.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              78323.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1977.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76758.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 155.980 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 41778.120 ops/s
[info]                  ·gc.alloc.rate:                   2079.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              78347.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1966.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74089.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.784 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 41920.590 ops/s
[info]                  ·gc.alloc.rate:               2100.434 MB/sec
[info]                  ·gc.alloc.rate.norm:          78849.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1975.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 74176.598 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 41741.679 ops/s
[info]                  ·gc.alloc.rate:                   2101.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              79152.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2324.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87573.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.784 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 41380.684 ops/s
[info]                  ·gc.alloc.rate:               2062.685 MB/sec
[info]                  ·gc.alloc.rate.norm:          78444.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1674.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 63689.782 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson":
[info]   41471.500 ±(99.9%) 2153.699 ops/s [Average]
[info]   (min, avg, max) = (40536.425, 41471.500, 41920.590), stdev = 559.309
[info]   CI (99.9%): [39317.800, 43625.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2072.287 ±(99.9%) 133.099 MB/sec [Average]
[info]   (min, avg, max) = (2017.405, 2072.287, 2101.001), stdev = 34.565
[info]   CI (99.9%): [1939.187, 2205.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   78623.350 ±(99.9%) 1400.440 B/op [Average]
[info]   (min, avg, max) = (78323.090, 78623.350, 79152.127), stdev = 363.690
[info]   CI (99.9%): [77222.910, 80023.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1983.838 ±(99.9%) 886.551 MB/sec [Average]
[info]   (min, avg, max) = (1674.711, 1983.838, 2324.539), stdev = 230.234
[info]   CI (99.9%): [1097.287, 2870.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   75257.672 ±(99.9%) 32803.012 B/op [Average]
[info]   (min, avg, max) = (63689.782, 75257.672, 87573.573), stdev = 8518.838
[info]   CI (99.9%): [42454.660, 108060.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.812 ±(99.9%) 6.901 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.812, 4.018), stdev = 1.792
[info]   CI (99.9%): [≈ 0, 7.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   31.510 ±(99.9%) 267.937 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 31.510, 155.980), stdev = 69.582
[info]   CI (99.9%): [≈ 0, 299.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 12.000), stdev = 2.000
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 50.82% complete, ETA 00:44:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3470.636 ops/s
[info] # Warmup Iteration   2: 10540.233 ops/s
[info] # Warmup Iteration   3: 13704.787 ops/s
[info] Iteration   1: 13657.144 ops/s
[info]                  ·gc.alloc.rate:                   1673.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              192813.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     190702.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.935 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 338.210 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 13827.603 ops/s
[info]                  ·gc.alloc.rate:                   1696.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              193081.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1645.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     187321.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 113.712 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 13689.053 ops/s
[info]                  ·gc.alloc.rate:               1692.933 MB/sec
[info]                  ·gc.alloc.rate.norm:          194630.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1642.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 188853.960 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 13650.508 ops/s
[info]                  ·gc.alloc.rate:                   1695.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              195447.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     190224.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.400 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 13673.176 ops/s
[info]                  ·gc.alloc.rate:               1699.167 MB/sec
[info]                  ·gc.alloc.rate.norm:          195553.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1661.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 191207.761 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce":
[info]   13699.497 ±(99.9%) 281.695 ops/s [Average]
[info]   (min, avg, max) = (13650.508, 13699.497, 13827.603), stdev = 73.155
[info]   CI (99.9%): [13417.802, 13981.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate":
[info]   1691.488 ±(99.9%) 39.918 MB/sec [Average]
[info]   (min, avg, max) = (1673.385, 1691.488, 1699.167), stdev = 10.367
[info]   CI (99.9%): [1651.570, 1731.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   194305.264 ±(99.9%) 4980.830 B/op [Average]
[info]   (min, avg, max) = (192813.363, 194305.264, 195553.069), stdev = 1293.506
[info]   CI (99.9%): [189324.434, 199286.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1651.039 ±(99.9%) 28.557 MB/sec [Average]
[info]   (min, avg, max) = (1642.684, 1651.039, 1661.410), stdev = 7.416
[info]   CI (99.9%): [1622.483, 1679.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   189662.014 ±(99.9%) 6063.697 B/op [Average]
[info]   (min, avg, max) = (187321.522, 189662.014, 191207.761), stdev = 1574.723
[info]   CI (99.9%): [183598.317, 195725.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.791 ±(99.9%) 4.903 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.791, 2.935), stdev = 1.273
[info]   CI (99.9%): [≈ 0, 5.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   90.864 ±(99.9%) 564.748 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 90.864, 338.210), stdev = 146.663
[info]   CI (99.9%): [≈ 0, 655.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 14.000), stdev = 3.050
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.06% complete, ETA 00:44:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21513.668 ops/s
[info] # Warmup Iteration   2: 89959.509 ops/s
[info] # Warmup Iteration   3: 96568.978 ops/s
[info] Iteration   1: 97905.348 ops/s
[info]                  ·gc.alloc.rate:                   1316.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              21165.402 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21137.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.669 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 99170.001 ops/s
[info]                  ·gc.alloc.rate:                   1322.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              20991.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20889.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63.759 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 98697.250 ops/s
[info]                  ·gc.alloc.rate:                   1326.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              21149.907 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20861.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.992 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 97685.477 ops/s
[info]                  ·gc.alloc.rate:                   1313.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              21150.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21072.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.677 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 98789.403 ops/s
[info]                  ·gc.alloc.rate:               1334.817 MB/sec
[info]                  ·gc.alloc.rate.norm:          21251.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1311.553 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20881.257 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala":
[info]   98449.496 ±(99.9%) 2416.926 ops/s [Average]
[info]   (min, avg, max) = (97685.477, 98449.496, 99170.001), stdev = 627.668
[info]   CI (99.9%): [96032.570, 100866.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1322.801 ±(99.9%) 32.586 MB/sec [Average]
[info]   (min, avg, max) = (1313.181, 1322.801, 1334.817), stdev = 8.462
[info]   CI (99.9%): [1290.215, 1355.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   21141.844 ±(99.9%) 361.341 B/op [Average]
[info]   (min, avg, max) = (20991.933, 21141.844, 21251.653), stdev = 93.839
[info]   CI (99.9%): [20780.503, 21503.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1311.922 ±(99.9%) 14.223 MB/sec [Average]
[info]   (min, avg, max) = (1308.344, 1311.922, 1316.341), stdev = 3.694
[info]   CI (99.9%): [1297.699, 1326.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20968.381 ±(99.9%) 489.458 B/op [Average]
[info]   (min, avg, max) = (20861.688, 20968.381, 21137.062), stdev = 127.111
[info]   CI (99.9%): [20478.922, 21457.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 6.805 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.858, 4.018), stdev = 1.767
[info]   CI (99.9%): [≈ 0, 7.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   13.619 ±(99.9%) 107.972 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.619, 63.759), stdev = 28.040
[info]   CI (99.9%): [≈ 0, 121.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 14.000), stdev = 3.768
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.29% complete, ETA 00:44:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 107053.146 ops/s
[info] # Warmup Iteration   2: 230264.426 ops/s
[info] # Warmup Iteration   3: 232083.023 ops/s
[info] Iteration   1: 238955.943 ops/s
[info]                  ·gc.alloc.rate:               795.410 MB/sec
[info]                  ·gc.alloc.rate.norm:          5238.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4352.157 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 243647.429 ops/s
[info]                  ·gc.alloc.rate:                   820.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              5297.408 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6417.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 244395.828 ops/s
[info]                  ·gc.alloc.rate:                   809.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              5211.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4270.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 237396.797 ops/s
[info]                  ·gc.alloc.rate:                   793.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              5257.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4400.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.477 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.423 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 241780.714 ops/s
[info]                  ·gc.alloc.rate:                   813.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              5296.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6471.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.930 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala":
[info]   241235.342 ±(99.9%) 11557.442 ops/s [Average]
[info]   (min, avg, max) = (237396.797, 241235.342, 244395.828), stdev = 3001.431
[info]   CI (99.9%): [229677.900, 252792.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   806.410 ±(99.9%) 45.266 MB/sec [Average]
[info]   (min, avg, max) = (793.101, 806.410, 820.167), stdev = 11.755
[info]   CI (99.9%): [761.144, 851.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5260.071 ±(99.9%) 143.698 B/op [Average]
[info]   (min, avg, max) = (5211.176, 5260.071, 5297.408), stdev = 37.318
[info]   CI (99.9%): [5116.373, 5403.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   795.246 ±(99.9%) 698.906 MB/sec [Average]
[info]   (min, avg, max) = (660.870, 795.246, 994.524), stdev = 181.504
[info]   CI (99.9%): [96.340, 1494.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5182.525 ±(99.9%) 4440.640 B/op [Average]
[info]   (min, avg, max) = (4270.473, 5182.525, 6471.540), stdev = 1153.220
[info]   CI (99.9%): [741.886, 9623.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.625 ±(99.9%) 4.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.625, 2.477), stdev = 1.067
[info]   CI (99.9%): [≈ 0, 4.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.124 ±(99.9%) 27.238 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.124, 16.423), stdev = 7.074
[info]   CI (99.9%): [≈ 0, 31.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 8.000), stdev = 1.304
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 51.53% complete, ETA 00:43:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2187.942 ops/s
[info] # Warmup Iteration   2: 9741.344 ops/s
[info] # Warmup Iteration   3: 13362.946 ops/s
[info] Iteration   1: 13355.156 ops/s
[info]                  ·gc.alloc.rate:                   2015.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              237464.917 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1976.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     232886.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.206 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 495.481 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 13568.487 ops/s
[info]                  ·gc.alloc.rate:                   2054.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              238297.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1959.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227299.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.873 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 13464.101 ops/s
[info]                  ·gc.alloc.rate:               2058.693 MB/sec
[info]                  ·gc.alloc.rate.norm:          240620.890 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1965.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 229677.695 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 13552.865 ops/s
[info]                  ·gc.alloc.rate:                   2081.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              241511.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2313.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     268397.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.825 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 13592.558 ops/s
[info]                  ·gc.alloc.rate:               2080.607 MB/sec
[info]                  ·gc.alloc.rate.norm:          240828.758 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2003.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 231869.191 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson":
[info]   13506.633 ±(99.9%) 375.812 ops/s [Average]
[info]   (min, avg, max) = (13355.156, 13506.633, 13592.558), stdev = 97.597
[info]   CI (99.9%): [13130.822, 13882.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2058.235 ±(99.9%) 102.692 MB/sec [Average]
[info]   (min, avg, max) = (2015.856, 2058.235, 2081.373), stdev = 26.669
[info]   CI (99.9%): [1955.542, 2160.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   239744.634 ±(99.9%) 6767.921 B/op [Average]
[info]   (min, avg, max) = (237464.917, 239744.634, 241511.395), stdev = 1757.607
[info]   CI (99.9%): [232976.714, 246512.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2043.631 ±(99.9%) 583.584 MB/sec [Average]
[info]   (min, avg, max) = (1959.820, 2043.631, 2313.080), stdev = 151.555
[info]   CI (99.9%): [1460.047, 2627.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   238026.012 ±(99.9%) 65898.365 B/op [Average]
[info]   (min, avg, max) = (227299.631, 238026.012, 268397.472), stdev = 17113.596
[info]   CI (99.9%): [172127.647, 303924.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.929 ±(99.9%) 7.084 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.929, 4.206), stdev = 1.840
[info]   CI (99.9%): [≈ 0, 8.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   109.236 ±(99.9%) 834.726 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 109.236, 495.481), stdev = 216.776
[info]   CI (99.9%): [≈ 0, 943.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 17.000), stdev = 3.899
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 51.76% complete, ETA 00:43:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6784.679 ops/s
[info] # Warmup Iteration   2: 29739.100 ops/s
[info] # Warmup Iteration   3: 32642.629 ops/s
[info] Iteration   1: 32413.282 ops/s
[info]                  ·gc.alloc.rate:                   2712.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              131703.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2632.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     127813.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.139 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 32165.341 ops/s
[info]                  ·gc.alloc.rate:                   2694.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              131843.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2650.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     129682.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.037 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 32714.095 ops/s
[info]                  ·gc.alloc.rate:                   2738.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              131761.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2676.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128760.685 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.003 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 33019.020 ops/s
[info]                  ·gc.alloc.rate:                   2776.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              132351.261 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2696.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128527.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.992 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 33022.623 ops/s
[info]                  ·gc.alloc.rate:               2764.712 MB/sec
[info]                  ·gc.alloc.rate.norm:          131753.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2369.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 112921.127 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce":
[info]   32666.872 ±(99.9%) 1451.848 ops/s [Average]
[info]   (min, avg, max) = (32165.341, 32666.872, 33022.623), stdev = 377.040
[info]   CI (99.9%): [31215.024, 34118.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2737.577 ±(99.9%) 132.576 MB/sec [Average]
[info]   (min, avg, max) = (2694.844, 2737.577, 2776.950), stdev = 34.430
[info]   CI (99.9%): [2605.001, 2870.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   131882.772 ±(99.9%) 1026.866 B/op [Average]
[info]   (min, avg, max) = (131703.329, 131882.772, 132351.261), stdev = 266.674
[info]   CI (99.9%): [130855.907, 132909.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2605.164 ±(99.9%) 515.926 MB/sec [Average]
[info]   (min, avg, max) = (2369.528, 2605.164, 2696.730), stdev = 133.984
[info]   CI (99.9%): [2089.239, 3121.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   125541.227 ±(99.9%) 27287.215 B/op [Average]
[info]   (min, avg, max) = (112921.127, 125541.227, 129682.775), stdev = 7086.403
[info]   CI (99.9%): [98254.012, 152828.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.426 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.271), stdev = 0.111
[info]   CI (99.9%): [≈ 0, 0.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.634 ±(99.9%) 20.713 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.634, 13.139), stdev = 5.379
[info]   CI (99.9%): [≈ 0, 24.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.400, 11.000), stdev = 0.894
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.00% complete, ETA 00:43:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23144.701 ops/s
[info] # Warmup Iteration   2: 96474.703 ops/s
[info] # Warmup Iteration   3: 103752.147 ops/s
[info] Iteration   1: 105597.253 ops/s
[info]                  ·gc.alloc.rate:                   1481.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              22078.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19598.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.931 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 105815.151 ops/s
[info]                  ·gc.alloc.rate:                   1507.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              22416.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24412.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.350 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 106433.166 ops/s
[info]                  ·gc.alloc.rate:               1496.433 MB/sec
[info]                  ·gc.alloc.rate.norm:          22125.823 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1308.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19350.219 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 105907.003 ops/s
[info]                  ·gc.alloc.rate:               1502.739 MB/sec
[info]                  ·gc.alloc.rate.norm:          22330.588 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1312.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19500.748 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 106536.202 ops/s
[info]                  ·gc.alloc.rate:                   1525.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              22527.281 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24379.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.308 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala":
[info]   106057.755 ±(99.9%) 1568.269 ops/s [Average]
[info]   (min, avg, max) = (105597.253, 106057.755, 106536.202), stdev = 407.274
[info]   CI (99.9%): [104489.486, 107626.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1502.653 ±(99.9%) 61.363 MB/sec [Average]
[info]   (min, avg, max) = (1481.535, 1502.653, 1525.218), stdev = 15.936
[info]   CI (99.9%): [1441.290, 1564.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   22295.770 ±(99.9%) 734.450 B/op [Average]
[info]   (min, avg, max) = (22078.489, 22295.770, 22527.281), stdev = 190.734
[info]   CI (99.9%): [21561.320, 23030.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1445.674 ±(99.9%) 704.694 MB/sec [Average]
[info]   (min, avg, max) = (1308.711, 1445.674, 1650.649), stdev = 183.007
[info]   CI (99.9%): [740.981, 2150.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   21448.504 ±(99.9%) 10367.557 B/op [Average]
[info]   (min, avg, max) = (19350.219, 21448.504, 24412.677), stdev = 2692.422
[info]   CI (99.9%): [11080.947, 31816.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.774 ±(99.9%) 6.490 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.774, 3.789), stdev = 1.685
[info]   CI (99.9%): [≈ 0, 7.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.518 ±(99.9%) 96.517 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.518, 56.350), stdev = 25.065
[info]   CI (99.9%): [≈ 0, 108.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 13.000), stdev = 3.271
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.24% complete, ETA 00:43:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101390.097 ops/s
[info] # Warmup Iteration   2: 169070.092 ops/s
[info] # Warmup Iteration   3: 177353.049 ops/s
[info] Iteration   1: 175560.830 ops/s
[info]                  ·gc.alloc.rate:               570.209 MB/sec
[info]                  ·gc.alloc.rate.norm:          5111.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2955.871 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 177611.122 ops/s
[info]                  ·gc.alloc.rate:                   589.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              5221.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5855.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 178265.742 ops/s
[info]                  ·gc.alloc.rate:                   584.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              5161.898 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5839.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 173207.103 ops/s
[info]                  ·gc.alloc.rate:               568.304 MB/sec
[info]                  ·gc.alloc.rate.norm:          5163.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3008.279 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 175517.736 ops/s
[info]                  ·gc.alloc.rate:                   583.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              5233.153 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5943.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.373 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala":
[info]   176032.506 ±(99.9%) 7689.183 ops/s [Average]
[info]   (min, avg, max) = (173207.103, 176032.506, 178265.742), stdev = 1996.856
[info]   CI (99.9%): [168343.324, 183721.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   579.228 ±(99.9%) 36.064 MB/sec [Average]
[info]   (min, avg, max) = (568.304, 579.228, 589.247), stdev = 9.366
[info]   CI (99.9%): [543.163, 615.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5178.247 ±(99.9%) 190.515 B/op [Average]
[info]   (min, avg, max) = (5111.435, 5178.247, 5233.153), stdev = 49.476
[info]   CI (99.9%): [4987.732, 5368.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   529.198 ±(99.9%) 698.760 MB/sec [Average]
[info]   (min, avg, max) = (329.744, 529.198, 662.832), stdev = 181.466
[info]   CI (99.9%): [≈ 0, 1227.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4720.440 ±(99.9%) 6112.898 B/op [Average]
[info]   (min, avg, max) = (2955.871, 4720.440, 5943.056), stdev = 1587.500
[info]   CI (99.9%): [≈ 0, 10833.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.148 ±(99.9%) 0.600 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.148, 0.373), stdev = 0.156
[info]   CI (99.9%): [≈ 0, 0.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 6.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 52.47% complete, ETA 00:43:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 107417.630 ops/s
[info] # Warmup Iteration   2: 182009.881 ops/s
[info] # Warmup Iteration   3: 184191.482 ops/s
[info] Iteration   1: 194146.121 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 194053.368 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 194284.634 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 194102.516 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 194503.488 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc":
[info]   194218.025 ±(99.9%) 698.312 ops/s [Average]
[info]   (min, avg, max) = (194053.368, 194218.025, 194503.488), stdev = 181.349
[info]   CI (99.9%): [193519.713, 194916.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.003 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 52.71% complete, ETA 00:42:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10491.624 ops/s
[info] # Warmup Iteration   2: 38075.771 ops/s
[info] # Warmup Iteration   3: 46085.764 ops/s
[info] Iteration   1: 46315.118 ops/s
[info]                  ·gc.alloc.rate:                   3266.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              110990.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2959.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100547.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.707 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 46558.252 ops/s
[info]                  ·gc.alloc.rate:                   3304.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              111704.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3326.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112430.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.407 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 46918.087 ops/s
[info]                  ·gc.alloc.rate:                   3317.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              111288.284 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3026.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101503.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.698 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 46692.505 ops/s
[info]                  ·gc.alloc.rate:                   3317.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              111796.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3384.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114052.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.105 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 46252.253 ops/s
[info]                  ·gc.alloc.rate:                   3280.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              111633.552 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3055.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103969.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.125 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson":
[info]   46547.243 ±(99.9%) 1053.925 ops/s [Average]
[info]   (min, avg, max) = (46252.253, 46547.243, 46918.087), stdev = 273.701
[info]   CI (99.9%): [45493.319, 47601.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   3297.508 ±(99.9%) 88.099 MB/sec [Average]
[info]   (min, avg, max) = (3266.522, 3297.508, 3317.876), stdev = 22.879
[info]   CI (99.9%): [3209.410, 3385.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   111482.851 ±(99.9%) 1292.218 B/op [Average]
[info]   (min, avg, max) = (110990.848, 111482.851, 111796.921), stdev = 335.585
[info]   CI (99.9%): [110190.633, 112775.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   3150.322 ±(99.9%) 737.174 MB/sec [Average]
[info]   (min, avg, max) = (2959.176, 3150.322, 3384.152), stdev = 191.442
[info]   CI (99.9%): [2413.148, 3887.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   106500.594 ±(99.9%) 24277.689 B/op [Average]
[info]   (min, avg, max) = (100547.763, 106500.594, 114052.287), stdev = 6304.839
[info]   CI (99.9%): [82222.905, 130778.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.409 ±(99.9%) 2.719 B/op [Average]
[info]   (min, avg, max) = (0.698, 1.409, 2.125), stdev = 0.706
[info]   CI (99.9%): [≈ 0, 4.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.count":
[info]   47.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 12.800, 13.000), stdev = 0.447
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 52.94% complete, ETA 00:42:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4026.808 ops/s
[info] # Warmup Iteration   2: 21143.313 ops/s
[info] # Warmup Iteration   3: 25511.630 ops/s
[info] Iteration   1: 26074.607 ops/s
[info]                  ·gc.alloc.rate:                   1396.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              84264.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79809.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.769 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 25966.898 ops/s
[info]                  ·gc.alloc.rate:                   1408.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              85336.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80178.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 230.876 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 25444.154 ops/s
[info]                  ·gc.alloc.rate:                   1371.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              84843.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81328.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.287 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 25686.616 ops/s
[info]                  ·gc.alloc.rate:                   1370.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              83968.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80504.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.275 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 25708.678 ops/s
[info]                  ·gc.alloc.rate:                   1376.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              84236.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80680.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.823 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce":
[info]   25776.191 ±(99.9%) 959.289 ops/s [Average]
[info]   (min, avg, max) = (25444.154, 25776.191, 26074.607), stdev = 249.124
[info]   CI (99.9%): [24816.902, 26735.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate":
[info]   1384.560 ±(99.9%) 64.360 MB/sec [Average]
[info]   (min, avg, max) = (1370.582, 1384.560, 1408.131), stdev = 16.714
[info]   CI (99.9%): [1320.199, 1448.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   84530.016 ±(99.9%) 2126.968 B/op [Average]
[info]   (min, avg, max) = (83968.810, 84530.016, 85336.569), stdev = 552.367
[info]   CI (99.9%): [82403.048, 86656.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1318.475 ±(99.9%) 15.785 MB/sec [Average]
[info]   (min, avg, max) = (1314.033, 1318.475, 1323.015), stdev = 4.099
[info]   CI (99.9%): [1302.690, 1334.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   80500.056 ±(99.9%) 2194.691 B/op [Average]
[info]   (min, avg, max) = (79809.178, 80500.056, 81328.397), stdev = 569.954
[info]   CI (99.9%): [78305.365, 82694.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.795 ±(99.9%) 6.489 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.795, 3.810), stdev = 1.685
[info]   CI (99.9%): [≈ 0, 7.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   48.206 ±(99.9%) 393.240 B/op [Average]
[info]   (min, avg, max) = (1.275, 48.206, 230.876), stdev = 102.123
[info]   CI (99.9%): [≈ 0, 441.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 12.000), stdev = 2.881
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.18% complete, ETA 00:42:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5852.871 ops/s
[info] # Warmup Iteration   2: 23252.807 ops/s
[info] # Warmup Iteration   3: 29185.797 ops/s
[info] Iteration   1: 28347.200 ops/s
[info]                  ·gc.alloc.rate:               1170.276 MB/sec
[info]                  ·gc.alloc.rate.norm:          64967.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54621.808 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 29167.135 ops/s
[info]                  ·gc.alloc.rate:                   1204.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              64979.456 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70952.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.206 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 172.977 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 29674.177 ops/s
[info]                  ·gc.alloc.rate:                   1213.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              64349.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52146.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.139 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 29591.932 ops/s
[info]                  ·gc.alloc.rate:                   1209.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              64311.471 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69368.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.107 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 29479.420 ops/s
[info]                  ·gc.alloc.rate:                   1217.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              64994.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69701.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.111 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala":
[info]   29251.973 ±(99.9%) 2083.775 ops/s [Average]
[info]   (min, avg, max) = (28347.200, 29251.973, 29674.177), stdev = 541.150
[info]   CI (99.9%): [27168.197, 31335.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1202.945 ±(99.9%) 72.816 MB/sec [Average]
[info]   (min, avg, max) = (1170.276, 1202.945, 1217.529), stdev = 18.910
[info]   CI (99.9%): [1130.130, 1275.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   64720.433 ±(99.9%) 1372.621 B/op [Average]
[info]   (min, avg, max) = (64311.471, 64720.433, 64994.967), stdev = 356.465
[info]   CI (99.9%): [63347.812, 66093.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1178.445 ±(99.9%) 685.099 MB/sec [Average]
[info]   (min, avg, max) = (983.270, 1178.445, 1314.988), stdev = 177.918
[info]   CI (99.9%): [493.345, 1863.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   63358.057 ±(99.9%) 35295.172 B/op [Average]
[info]   (min, avg, max) = (52146.165, 63358.057, 70952.217), stdev = 9166.044
[info]   CI (99.9%): [28062.885, 98653.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.895 ±(99.9%) 5.370 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.895, 3.206), stdev = 1.395
[info]   CI (99.9%): [≈ 0, 6.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   48.067 ±(99.9%) 289.533 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.067, 172.977), stdev = 75.191
[info]   CI (99.9%): [≈ 0, 337.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 15.000), stdev = 4.266
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.41% complete, ETA 00:42:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 244594.991 ops/s
[info] # Warmup Iteration   2: 619368.214 ops/s
[info] # Warmup Iteration   3: 626703.081 ops/s
[info] Iteration   1: 622418.237 ops/s
[info]                  ·gc.alloc.rate:                   1679.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              4245.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4195.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.633 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 629602.847 ops/s
[info]                  ·gc.alloc.rate:                   1697.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              4242.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4131.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.520 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 630668.050 ops/s
[info]                  ·gc.alloc.rate:                   1706.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              4257.773 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4130.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 615257.282 ops/s
[info]                  ·gc.alloc.rate:                   1667.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              4264.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1664.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4256.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.373 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 616950.155 ops/s
[info]                  ·gc.alloc.rate:                   1658.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              4231.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3412.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala":
[info]   622979.314 ±(99.9%) 27179.327 ops/s [Average]
[info]   (min, avg, max) = (615257.282, 622979.314, 630668.050), stdev = 7058.385
[info]   CI (99.9%): [595799.987, 650158.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1681.856 ±(99.9%) 76.718 MB/sec [Average]
[info]   (min, avg, max) = (1658.878, 1681.856, 1706.306), stdev = 19.924
[info]   CI (99.9%): [1605.137, 1758.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4248.407 ±(99.9%) 50.441 B/op [Average]
[info]   (min, avg, max) = (4231.258, 4248.407, 4264.700), stdev = 13.099
[info]   CI (99.9%): [4197.966, 4298.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1594.020 ±(99.9%) 551.708 MB/sec [Average]
[info]   (min, avg, max) = (1337.837, 1594.020, 1664.310), stdev = 143.277
[info]   CI (99.9%): [1042.313, 2145.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4025.471 ±(99.9%) 1334.974 B/op [Average]
[info]   (min, avg, max) = (3412.385, 4025.471, 4256.789), stdev = 346.688
[info]   CI (99.9%): [2690.497, 5360.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.604 ±(99.9%) 4.359 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.604, 2.623), stdev = 1.132
[info]   CI (99.9%): [≈ 0, 4.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.526 ±(99.9%) 11.020 B/op [Average]
[info]   (min, avg, max) = (0.052, 1.526, 6.633), stdev = 2.862
[info]   CI (99.9%): [≈ 0, 12.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 11.000), stdev = 1.949
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 53.65% complete, ETA 00:41:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1470.220 ops/s
[info] # Warmup Iteration   2: 16840.014 ops/s
[info] # Warmup Iteration   3: 22836.412 ops/s
[info] Iteration   1: 22692.914 ops/s
[info]                  ·gc.alloc.rate:                   1661.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              115225.538 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113020.583 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.331 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 23089.534 ops/s
[info]                  ·gc.alloc.rate:                   1702.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              115986.748 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112053.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.255 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 23079.261 ops/s
[info]                  ·gc.alloc.rate:               1702.880 MB/sec
[info]                  ·gc.alloc.rate.norm:          116117.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1653.393 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 112743.269 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 23343.173 ops/s
[info]                  ·gc.alloc.rate:                   1732.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              116761.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1664.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112209.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.403 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 22754.697 ops/s
[info]                  ·gc.alloc.rate:               1692.931 MB/sec
[info]                  ·gc.alloc.rate.norm:          117076.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1674.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 115809.640 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson":
[info]   22991.916 ±(99.9%) 1030.030 ops/s [Average]
[info]   (min, avg, max) = (22692.914, 22991.916, 23343.173), stdev = 267.496
[info]   CI (99.9%): [21961.885, 24021.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1698.313 ±(99.9%) 97.196 MB/sec [Average]
[info]   (min, avg, max) = (1661.591, 1698.313, 1732.010), stdev = 25.242
[info]   CI (99.9%): [1601.117, 1795.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   116233.516 ±(99.9%) 2776.109 B/op [Average]
[info]   (min, avg, max) = (115225.538, 116233.516, 117076.237), stdev = 720.947
[info]   CI (99.9%): [113457.407, 119009.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1653.346 ±(99.9%) 66.989 MB/sec [Average]
[info]   (min, avg, max) = (1629.795, 1653.346, 1674.616), stdev = 17.397
[info]   CI (99.9%): [1586.356, 1720.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   113167.382 ±(99.9%) 5884.143 B/op [Average]
[info]   (min, avg, max) = (112053.932, 113167.382, 115809.640), stdev = 1528.093
[info]   CI (99.9%): [107283.239, 119051.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.223 ±(99.9%) 1.742 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.223, 1.031), stdev = 0.452
[info]   CI (99.9%): [≈ 0, 1.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   15.198 ±(99.9%) 118.710 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.198, 70.255), stdev = 30.829
[info]   CI (99.9%): [≈ 0, 133.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.000, 9.000), stdev = 1.000
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 53.88% complete, ETA 00:41:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19639.113 ops/s
[info] # Warmup Iteration   2: 68339.937 ops/s
[info] # Warmup Iteration   3: 68853.967 ops/s
[info] Iteration   1: 72155.800 ops/s
[info]                  ·gc.alloc.rate:                   1896.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              41360.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36033.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.726 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81.275 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 71536.355 ops/s
[info]                  ·gc.alloc.rate:                   1904.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              41893.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1971.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43351.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.206 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 71547.430 ops/s
[info]                  ·gc.alloc.rate:                   1918.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              42197.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1977.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43491.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.458 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 71960.734 ops/s
[info]                  ·gc.alloc.rate:                   1916.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              41917.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36307.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.911 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 72265.021 ops/s
[info]                  ·gc.alloc.rate:                   1938.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              42215.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43690.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.907 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce":
[info]   71893.068 ±(99.9%) 1303.922 ops/s [Average]
[info]   (min, avg, max) = (71536.355, 71893.068, 72265.021), stdev = 338.624
[info]   CI (99.9%): [70589.146, 73196.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1914.993 ±(99.9%) 61.657 MB/sec [Average]
[info]   (min, avg, max) = (1896.294, 1914.993, 1938.580), stdev = 16.012
[info]   CI (99.9%): [1853.337, 1976.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   41916.746 ±(99.9%) 1331.617 B/op [Average]
[info]   (min, avg, max) = (41360.072, 41916.746, 42215.517), stdev = 345.817
[info]   CI (99.9%): [40585.129, 43248.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1853.412 ±(99.9%) 695.300 MB/sec [Average]
[info]   (min, avg, max) = (1652.081, 1853.412, 2006.293), stdev = 180.567
[info]   CI (99.9%): [1158.112, 2548.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   40574.787 ±(99.9%) 15493.884 B/op [Average]
[info]   (min, avg, max) = (36033.540, 40574.787, 43690.062), stdev = 4023.713
[info]   CI (99.9%): [25080.903, 56068.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.795 ±(99.9%) 6.312 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.795, 3.726), stdev = 1.639
[info]   CI (99.9%): [≈ 0, 7.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   17.351 ±(99.9%) 137.663 B/op [Average]
[info]   (min, avg, max) = (0.458, 17.351, 81.275), stdev = 35.751
[info]   CI (99.9%): [≈ 0, 155.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 11.000), stdev = 1.673
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.12% complete, ETA 00:41:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32487.403 ops/s
[info] # Warmup Iteration   2: 163741.757 ops/s
[info] # Warmup Iteration   3: 178431.919 ops/s
[info] Iteration   1: 182848.736 ops/s
[info]                  ·gc.alloc.rate:                   2037.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              17540.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16982.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.705 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.892 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 182881.555 ops/s
[info]                  ·gc.alloc.rate:                   2044.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              17590.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16913.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 178666.782 ops/s
[info]                  ·gc.alloc.rate:               2013.411 MB/sec
[info]                  ·gc.alloc.rate.norm:          17734.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1977.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17418.957 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 178647.762 ops/s
[info]                  ·gc.alloc.rate:                   2014.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              17745.779 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17578.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 176768.507 ops/s
[info]                  ·gc.alloc.rate:               1987.694 MB/sec
[info]                  ·gc.alloc.rate.norm:          17696.253 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1674.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14907.385 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala":
[info]   179962.668 ±(99.9%) 10626.006 ops/s [Average]
[info]   (min, avg, max) = (176768.507, 179962.668, 182881.555), stdev = 2759.540
[info]   CI (99.9%): [169336.662, 190588.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2019.589 ±(99.9%) 86.873 MB/sec [Average]
[info]   (min, avg, max) = (1987.694, 2019.589, 2044.466), stdev = 22.561
[info]   CI (99.9%): [1932.716, 2106.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   17661.696 ±(99.9%) 351.380 B/op [Average]
[info]   (min, avg, max) = (17540.636, 17661.696, 17745.779), stdev = 91.252
[info]   CI (99.9%): [17310.316, 18013.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1917.245 ±(99.9%) 524.353 MB/sec [Average]
[info]   (min, avg, max) = (1674.441, 1917.245, 1995.455), stdev = 136.173
[info]   CI (99.9%): [1392.893, 2441.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   16760.115 ±(99.9%) 4133.401 B/op [Average]
[info]   (min, avg, max) = (14907.385, 16760.115, 17578.276), stdev = 1073.431
[info]   CI (99.9%): [12626.715, 20893.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.749 ±(99.9%) 6.363 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.749, 3.705), stdev = 1.652
[info]   CI (99.9%): [≈ 0, 7.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.451 ±(99.9%) 54.765 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.451, 31.892), stdev = 14.222
[info]   CI (99.9%): [≈ 0, 61.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 13.000), stdev = 2.608
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.35% complete, ETA 00:41:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 734722.022 ops/s
[info] # Warmup Iteration   2: 1437083.130 ops/s
[info] # Warmup Iteration   3: 1483067.016 ops/s
[info] Iteration   1: 1466319.479 ops/s
[info]                  ·gc.alloc.rate:                   1256.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              1348.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1422.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1481116.626 ops/s
[info]                  ·gc.alloc.rate:                   1266.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              1345.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1409.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.873 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1509228.333 ops/s
[info]                  ·gc.alloc.rate:                   1290.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              1345.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1378.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1509096.871 ops/s
[info]                  ·gc.alloc.rate:               1288.350 MB/sec
[info]                  ·gc.alloc.rate.norm:          1343.319 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1033.071 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1511966.799 ops/s
[info]                  ·gc.alloc.rate:               1305.475 MB/sec
[info]                  ·gc.alloc.rate.norm:          1358.763 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1324.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1378.501 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala":
[info]   1495545.621 ±(99.9%) 79450.070 ops/s [Average]
[info]   (min, avg, max) = (1466319.479, 1495545.621, 1511966.799), stdev = 20632.931
[info]   CI (99.9%): [1416095.551, 1574995.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1281.453 ±(99.9%) 75.973 MB/sec [Average]
[info]   (min, avg, max) = (1256.415, 1281.453, 1305.475), stdev = 19.730
[info]   CI (99.9%): [1205.480, 1357.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1348.286 ±(99.9%) 23.633 B/op [Average]
[info]   (min, avg, max) = (1343.319, 1348.286, 1358.763), stdev = 6.137
[info]   CI (99.9%): [1324.653, 1371.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1257.870 ±(99.9%) 574.932 MB/sec [Average]
[info]   (min, avg, max) = (990.798, 1257.870, 1327.013), stdev = 149.308
[info]   CI (99.9%): [682.938, 1832.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1324.348 ±(99.9%) 631.380 B/op [Average]
[info]   (min, avg, max) = (1033.071, 1324.348, 1422.035), stdev = 163.967
[info]   CI (99.9%): [692.968, 1955.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.604 ±(99.9%) 4.889 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.604, 2.873), stdev = 1.270
[info]   CI (99.9%): [≈ 0, 5.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.641 ±(99.9%) 5.195 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.641, 3.052), stdev = 1.349
[info]   CI (99.9%): [≈ 0, 5.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 2.915
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 54.59% complete, ETA 00:41:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1022600.189 ops/s
[info] # Warmup Iteration   2: 1716153.762 ops/s
[info] # Warmup Iteration   3: 1765180.005 ops/s
[info] Iteration   1: 1764234.218 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1769671.174 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1768304.526 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1768393.334 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1769051.163 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc":
[info]   1767930.883 ±(99.9%) 8236.789 ops/s [Average]
[info]   (min, avg, max) = (1764234.218, 1767930.883, 1769671.174), stdev = 2139.068
[info]   CI (99.9%): [1759694.094, 1776167.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 54.82% complete, ETA 00:40:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39397.837 ops/s
[info] # Warmup Iteration   2: 134977.714 ops/s
[info] # Warmup Iteration   3: 149378.710 ops/s
[info] Iteration   1: 146447.518 ops/s
[info]                  ·gc.alloc.rate:                        1888.695 MB/sec
[info]                  ·gc.alloc.rate.norm:                   20289.802 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.015 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.160 B/op
[info]                  ·gc.churn.Metaspace:                   0.044 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.468 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1969.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          21160.322 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  1.410 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             15.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           4.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      46.757 B/op
[info]                  ·gc.count:                             8.000 counts
[info]                  ·gc.time:                              43.000 ms
[info] Iteration   2: 153758.613 ops/s
[info]                  ·gc.alloc.rate:                   1995.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              20426.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1957.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20032.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.213 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 153836.899 ops/s
[info]                  ·gc.alloc.rate:               1998.198 MB/sec
[info]                  ·gc.alloc.rate.norm:          20440.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1643.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16809.410 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 153753.910 ops/s
[info]                  ·gc.alloc.rate:                   2011.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              20586.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20374.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.213 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 153039.700 ops/s
[info]                  ·gc.alloc.rate:                   2003.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              20597.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20643.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.214 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson":
[info]   152167.328 ±(99.9%) 12375.217 ops/s [Average]
[info]   (min, avg, max) = (146447.518, 152167.328, 153836.899), stdev = 3213.804
[info]   CI (99.9%): [139792.111, 164542.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1979.519 ±(99.9%) 196.847 MB/sec [Average]
[info]   (min, avg, max) = (1888.695, 1979.519, 2011.309), stdev = 51.120
[info]   CI (99.9%): [1782.673, 2176.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   20467.985 ±(99.9%) 491.041 B/op [Average]
[info]   (min, avg, max) = (20289.802, 20467.985, 20597.703), stdev = 127.522
[info]   CI (99.9%): [19976.945, 20959.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.026 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.015), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm":
[info]   0.032 ±(99.9%) 0.276 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.160), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.Metaspace":
[info]   0.009 ±(99.9%) 0.075 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.044), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.Metaspace.norm":
[info]   0.094 ±(99.9%) 0.805 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.094, 0.468), stdev = 0.209
[info]   CI (99.9%): [≈ 0, 0.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1913.789 ±(99.9%) 587.134 MB/sec [Average]
[info]   (min, avg, max) = (1643.255, 1913.789, 2008.034), stdev = 152.477
[info]   CI (99.9%): [1326.655, 2500.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   19803.911 ±(99.9%) 6638.611 B/op [Average]
[info]   (min, avg, max) = (16809.410, 19803.911, 21160.322), stdev = 1724.026
[info]   CI (99.9%): [13165.301, 26442.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen":
[info]   0.282 ±(99.9%) 2.428 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.282, 1.410), stdev = 0.631
[info]   CI (99.9%): [≈ 0, 2.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm":
[info]   3.029 ±(99.9%) 26.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.029, 15.146), stdev = 6.773
[info]   CI (99.9%): [≈ 0, 29.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.883 ±(99.9%) 7.468 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.883, 4.352), stdev = 1.939
[info]   CI (99.9%): [≈ 0, 8.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   9.479 ±(99.9%) 80.243 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.479, 46.757), stdev = 20.839
[info]   CI (99.9%): [≈ 0, 89.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.095
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time":
[info]   75.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 15.000, 43.000), stdev = 15.668
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.06% complete, ETA 00:40:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5471.689 ops/s
[info] # Warmup Iteration   2: 32158.267 ops/s
[info] # Warmup Iteration   3: 40880.240 ops/s
[info] Iteration   1: 40960.990 ops/s
[info]                  ·gc.alloc.rate:                   1550.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              59551.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1643.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63130.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.600 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 40976.461 ops/s
[info]                  ·gc.alloc.rate:                   1500.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              57638.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50451.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.288 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 164.695 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 42115.183 ops/s
[info]                  ·gc.alloc.rate:                   1554.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              58090.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1632.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60985.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.778 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 41515.646 ops/s
[info]                  ·gc.alloc.rate:                   1519.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              57587.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49609.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.578 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 41378.216 ops/s
[info]                  ·gc.alloc.rate:               1547.431 MB/sec
[info]                  ·gc.alloc.rate.norm:          58853.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1645.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62590.775 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala":
[info]   41389.299 ±(99.9%) 1823.350 ops/s [Average]
[info]   (min, avg, max) = (40960.990, 41389.299, 42115.183), stdev = 473.518
[info]   CI (99.9%): [39565.949, 43212.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1534.421 ±(99.9%) 89.940 MB/sec [Average]
[info]   (min, avg, max) = (1500.849, 1534.421, 1554.656), stdev = 23.357
[info]   CI (99.9%): [1444.481, 1624.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   58344.175 ±(99.9%) 3251.728 B/op [Average]
[info]   (min, avg, max) = (57587.054, 58344.175, 59551.757), stdev = 844.463
[info]   CI (99.9%): [55092.447, 61595.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1508.678 ±(99.9%) 694.493 MB/sec [Average]
[info]   (min, avg, max) = (1308.697, 1508.678, 1645.708), stdev = 180.358
[info]   CI (99.9%): [814.184, 2203.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   57353.353 ±(99.9%) 25945.685 B/op [Average]
[info]   (min, avg, max) = (49609.314, 57353.353, 63130.070), stdev = 6738.012
[info]   CI (99.9%): [31407.668, 83299.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.879 ±(99.9%) 7.341 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.879, 4.288), stdev = 1.906
[info]   CI (99.9%): [≈ 0, 8.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   33.730 ±(99.9%) 281.924 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 33.730, 164.695), stdev = 73.215
[info]   CI (99.9%): [≈ 0, 315.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.000, 17.000), stdev = 4.690
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.29% complete, ETA 00:40:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 373442.538 ops/s
[info] # Warmup Iteration   2: 762210.277 ops/s
[info] # Warmup Iteration   3: 780347.762 ops/s
[info] Iteration   1: 797070.944 ops/s
[info]                  ·gc.alloc.rate:                   1596.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              3151.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2625.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.097 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 799554.583 ops/s
[info]                  ·gc.alloc.rate:                   1607.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              3162.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3256.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.983 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 801681.573 ops/s
[info]                  ·gc.alloc.rate:               1629.195 MB/sec
[info]                  ·gc.alloc.rate.norm:          3198.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1653.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3245.697 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 792130.553 ops/s
[info]                  ·gc.alloc.rate:               1598.681 MB/sec
[info]                  ·gc.alloc.rate.norm:          3175.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1327.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2637.669 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 780192.213 ops/s
[info]                  ·gc.alloc.rate:                   1594.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              3216.994 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1668.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3364.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala":
[info]   794125.973 ±(99.9%) 32976.505 ops/s [Average]
[info]   (min, avg, max) = (780192.213, 794125.973, 801681.573), stdev = 8563.894
[info]   CI (99.9%): [761149.468, 827102.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1605.180 ±(99.9%) 54.813 MB/sec [Average]
[info]   (min, avg, max) = (1594.844, 1605.180, 1629.195), stdev = 14.235
[info]   CI (99.9%): [1550.367, 1659.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3180.940 ±(99.9%) 102.620 B/op [Average]
[info]   (min, avg, max) = (3151.532, 3180.940, 3216.994), stdev = 26.650
[info]   CI (99.9%): [3078.320, 3283.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1526.803 ±(99.9%) 696.780 MB/sec [Average]
[info]   (min, avg, max) = (1327.732, 1526.803, 1668.051), stdev = 180.952
[info]   CI (99.9%): [830.023, 2223.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3026.036 ±(99.9%) 1398.543 B/op [Average]
[info]   (min, avg, max) = (2625.271, 3026.036, 3364.662), stdev = 363.197
[info]   CI (99.9%): [1627.492, 4424.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.620 ±(99.9%) 4.300 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.620, 2.581), stdev = 1.117
[info]   CI (99.9%): [≈ 0, 4.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.224 ±(99.9%) 8.491 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.224, 5.097), stdev = 2.205
[info]   CI (99.9%): [≈ 0, 9.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 9.000), stdev = 1.581
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 55.53% complete, ETA 00:40:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2011.183 ops/s
[info] # Warmup Iteration   2: 22665.439 ops/s
[info] # Warmup Iteration   3: 31345.637 ops/s
[info] Iteration   1: 31075.500 ops/s
[info]                  ·gc.alloc.rate:                   2200.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              111459.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116206.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.877 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 29854.702 ops/s
[info]                  ·gc.alloc.rate:                   2145.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              113100.685 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104538.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.876 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 32007.343 ops/s
[info]                  ·gc.alloc.rate:                   2268.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              111513.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2333.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114716.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.118 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 31840.538 ops/s
[info]                  ·gc.alloc.rate:                   2253.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              111335.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99566.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.116 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 31949.869 ops/s
[info]                  ·gc.alloc.rate:                   2287.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              112660.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2361.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116306.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.178 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson":
[info]   31345.590 ±(99.9%) 3520.624 ops/s [Average]
[info]   (min, avg, max) = (29854.702, 31345.590, 32007.343), stdev = 914.295
[info]   CI (99.9%): [27824.966, 34866.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2231.024 ±(99.9%) 221.408 MB/sec [Average]
[info]   (min, avg, max) = (2145.629, 2231.024, 2287.249), stdev = 57.499
[info]   CI (99.9%): [2009.616, 2452.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   112014.017 ±(99.9%) 3114.223 B/op [Average]
[info]   (min, avg, max) = (111335.949, 112014.017, 113100.685), stdev = 808.754
[info]   CI (99.9%): [108899.794, 115128.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2197.477 ±(99.9%) 704.581 MB/sec [Average]
[info]   (min, avg, max) = (1983.188, 2197.477, 2361.265), stdev = 182.977
[info]   CI (99.9%): [1492.897, 2902.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   110266.693 ±(99.9%) 29756.495 B/op [Average]
[info]   (min, avg, max) = (99566.484, 110266.693, 116306.097), stdev = 7727.667
[info]   CI (99.9%): [80510.198, 140023.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.325 ±(99.9%) 1.683 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 0.325, 1.103), stdev = 0.437
[info]   CI (99.9%): [≈ 0, 2.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   16.433 ±(99.9%) 85.329 B/op [Average]
[info]   (min, avg, max) = (4.116, 16.433, 55.877), stdev = 22.160
[info]   CI (99.9%): [≈ 0, 101.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.000, 11.000), stdev = 1.000
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.76% complete, ETA 00:40:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 98587.214 ops/s
[info] # Warmup Iteration   2: 305030.648 ops/s
[info] # Warmup Iteration   3: 304460.899 ops/s
[info] Iteration   1: 315558.718 ops/s
[info]                  ·gc.alloc.rate:               1533.013 MB/sec
[info]                  ·gc.alloc.rate.norm:          7645.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1302.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6494.860 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 317220.915 ops/s
[info]                  ·gc.alloc.rate:                   1546.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              7668.695 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8131.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 314599.662 ops/s
[info]                  ·gc.alloc.rate:               1534.488 MB/sec
[info]                  ·gc.alloc.rate.norm:          7675.872 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6615.211 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 314609.653 ops/s
[info]                  ·gc.alloc.rate:               1554.927 MB/sec
[info]                  ·gc.alloc.rate.norm:          7777.606 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1664.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8325.602 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 315667.820 ops/s
[info]                  ·gc.alloc.rate:               1546.721 MB/sec
[info]                  ·gc.alloc.rate.norm:          7710.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6682.022 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala":
[info]   315531.354 ±(99.9%) 4125.571 ops/s [Average]
[info]   (min, avg, max) = (314599.662, 315531.354, 317220.915), stdev = 1071.398
[info]   CI (99.9%): [311405.783, 319656.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1543.039 ±(99.9%) 35.374 MB/sec [Average]
[info]   (min, avg, max) = (1533.013, 1543.039, 1554.927), stdev = 9.187
[info]   CI (99.9%): [1507.664, 1578.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   7695.699 ±(99.9%) 198.123 B/op [Average]
[info]   (min, avg, max) = (7645.427, 7695.699, 7777.606), stdev = 51.452
[info]   CI (99.9%): [7497.576, 7893.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1453.789 ±(99.9%) 699.227 MB/sec [Average]
[info]   (min, avg, max) = (1302.308, 1453.789, 1664.485), stdev = 181.587
[info]   CI (99.9%): [754.561, 2153.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   7249.851 ±(99.9%) 3460.150 B/op [Average]
[info]   (min, avg, max) = (6494.860, 7249.851, 8325.602), stdev = 898.590
[info]   CI (99.9%): [3789.701, 10710.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.178 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.103), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.00% complete, ETA 00:39:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 852080.031 ops/s
[info] # Warmup Iteration   2: 1766326.107 ops/s
[info] # Warmup Iteration   3: 1911148.746 ops/s
[info] Iteration   1: 1923288.726 ops/s
[info]                  ·gc.alloc.rate:                   1156.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              946.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1082.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1935267.345 ops/s
[info]                  ·gc.alloc.rate:                   1164.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              946.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     808.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.879 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1935755.885 ops/s
[info]                  ·gc.alloc.rate:                   1163.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              946.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1075.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.694 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1954812.789 ops/s
[info]                  ·gc.alloc.rate:               1174.616 MB/sec
[info]                  ·gc.alloc.rate.norm:          945.627 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 796.416 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1942310.999 ops/s
[info]                  ·gc.alloc.rate:               1175.382 MB/sec
[info]                  ·gc.alloc.rate.norm:          952.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 802.075 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala":
[info]   1938287.149 ±(99.9%) 44314.511 ops/s [Average]
[info]   (min, avg, max) = (1923288.726, 1938287.149, 1954812.789), stdev = 11508.338
[info]   CI (99.9%): [1893972.638, 1982601.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1166.885 ±(99.9%) 30.889 MB/sec [Average]
[info]   (min, avg, max) = (1156.471, 1166.885, 1175.382), stdev = 8.022
[info]   CI (99.9%): [1135.996, 1197.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   947.381 ±(99.9%) 10.739 B/op [Average]
[info]   (min, avg, max) = (945.627, 947.381, 952.329), stdev = 2.789
[info]   CI (99.9%): [936.642, 958.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1123.868 ±(99.9%) 699.101 MB/sec [Average]
[info]   (min, avg, max) = (989.274, 1123.868, 1322.994), stdev = 181.554
[info]   CI (99.9%): [424.768, 1822.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   912.974 ±(99.9%) 583.253 B/op [Average]
[info]   (min, avg, max) = (796.416, 912.974, 1082.547), stdev = 151.469
[info]   CI (99.9%): [329.721, 1496.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.641 ±(99.9%) 3.858 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.641, 2.311), stdev = 1.002
[info]   CI (99.9%): [≈ 0, 4.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.521 ±(99.9%) 3.137 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.521, 1.879), stdev = 0.815
[info]   CI (99.9%): [≈ 0, 3.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 11.000), stdev = 3.209
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 56.24% complete, ETA 00:39:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1286135.730 ops/s
[info] # Warmup Iteration   2: 2164850.236 ops/s
[info] # Warmup Iteration   3: 2249403.440 ops/s
[info] Iteration   1: 2222479.731 ops/s
[info]                  ·gc.alloc.rate:      2.736 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.938 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2250978.558 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2246321.186 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2251168.149 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2251035.559 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc":
[info]   2244396.637 ±(99.9%) 47835.825 ops/s [Average]
[info]   (min, avg, max) = (2222479.731, 2244396.637, 2251168.149), stdev = 12422.812
[info]   CI (99.9%): [2196560.812, 2292232.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.547 ±(99.9%) 4.711 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.547, 2.736), stdev = 1.223
[info]   CI (99.9%): [≈ 0, 5.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.388 ±(99.9%) 3.336 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.388, 1.938), stdev = 0.866
[info]   CI (99.9%): [≈ 0, 3.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 56.47% complete, ETA 00:39:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43941.097 ops/s
[info] # Warmup Iteration   2: 211015.899 ops/s
[info] # Warmup Iteration   3: 242007.788 ops/s
[info] Iteration   1: 245239.896 ops/s
[info]                  ·gc.alloc.rate:                   1633.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              10480.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1631.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10471.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.401 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 246011.278 ops/s
[info]                  ·gc.alloc.rate:                   1642.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              10505.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10545.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.264 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 245970.350 ops/s
[info]                  ·gc.alloc.rate:                   1635.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              10467.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8494.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 239873.277 ops/s
[info]                  ·gc.alloc.rate:               1617.234 MB/sec
[info]                  ·gc.alloc.rate.norm:          10610.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1669.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10955.082 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 243000.401 ops/s
[info]                  ·gc.alloc.rate:                   1637.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              10603.888 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1679.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10878.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson":
[info]   244019.040 ±(99.9%) 10095.021 ops/s [Average]
[info]   (min, avg, max) = (239873.277, 244019.040, 246011.278), stdev = 2621.645
[info]   CI (99.9%): [233924.019, 254114.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1633.188 ±(99.9%) 36.567 MB/sec [Average]
[info]   (min, avg, max) = (1617.234, 1633.188, 1642.223), stdev = 9.496
[info]   CI (99.9%): [1596.621, 1669.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   10533.570 ±(99.9%) 264.332 B/op [Average]
[info]   (min, avg, max) = (10467.553, 10533.570, 10610.601), stdev = 68.646
[info]   CI (99.9%): [10269.239, 10797.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1591.481 ±(99.9%) 572.390 MB/sec [Average]
[info]   (min, avg, max) = (1327.661, 1591.481, 1679.707), stdev = 148.648
[info]   CI (99.9%): [1019.091, 2163.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   10269.083 ±(99.9%) 3902.171 B/op [Average]
[info]   (min, avg, max) = (8494.756, 10269.083, 10955.082), stdev = 1013.381
[info]   CI (99.9%): [6366.912, 14171.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.563 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.096, 0.354), stdev = 0.146
[info]   CI (99.9%): [≈ 0, 0.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.613 ±(99.9%) 3.600 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.613, 2.264), stdev = 0.935
[info]   CI (99.9%): [≈ 0, 4.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 9.000), stdev = 1.483
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 56.71% complete, ETA 00:39:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18956.330 ops/s
[info] # Warmup Iteration   2: 66005.516 ops/s
[info] # Warmup Iteration   3: 69134.000 ops/s
[info] Iteration   1: 72309.788 ops/s
[info]                  ·gc.alloc.rate:                   1584.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              34486.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28736.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.869 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 72640.465 ops/s
[info]                  ·gc.alloc.rate:                   1612.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              34937.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35617.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.393 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 72464.145 ops/s
[info]                  ·gc.alloc.rate:                   1602.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              34789.831 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1636.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35547.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.261 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 72441.381 ops/s
[info]                  ·gc.alloc.rate:               1621.481 MB/sec
[info]                  ·gc.alloc.rate.norm:          35224.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1644.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35717.143 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 73497.646 ops/s
[info]                  ·gc.alloc.rate:               1632.053 MB/sec
[info]                  ·gc.alloc.rate.norm:          34943.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1324.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28356.854 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce":
[info]   72670.685 ±(99.9%) 1836.906 ops/s [Average]
[info]   (min, avg, max) = (72309.788, 72670.685, 73497.646), stdev = 477.039
[info]   CI (99.9%): [70833.779, 74507.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate":
[info]   1610.568 ±(99.9%) 70.311 MB/sec [Average]
[info]   (min, avg, max) = (1584.572, 1610.568, 1632.053), stdev = 18.260
[info]   CI (99.9%): [1540.257, 1680.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   34876.331 ±(99.9%) 1034.506 B/op [Average]
[info]   (min, avg, max) = (34486.584, 34876.331, 35224.297), stdev = 268.658
[info]   CI (99.9%): [33841.826, 35910.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1513.999 ±(99.9%) 673.617 MB/sec [Average]
[info]   (min, avg, max) = (1320.368, 1513.999, 1644.168), stdev = 174.936
[info]   CI (99.9%): [840.382, 2187.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   32795.187 ±(99.9%) 14944.935 B/op [Average]
[info]   (min, avg, max) = (28356.854, 32795.187, 35717.143), stdev = 3881.152
[info]   CI (99.9%): [17850.252, 47740.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.833 ±(99.9%) 5.223 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 3.164), stdev = 1.356
[info]   CI (99.9%): [≈ 0, 6.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   18.104 ±(99.9%) 113.663 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18.104, 68.869), stdev = 29.518
[info]   CI (99.9%): [≈ 0, 131.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 14.000), stdev = 3.421
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.94% complete, ETA 00:39:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22788.774 ops/s
[info] # Warmup Iteration   2: 76197.130 ops/s
[info] # Warmup Iteration   3: 82182.453 ops/s
[info] Iteration   1: 85635.513 ops/s
[info]                  ·gc.alloc.rate:                   1124.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              20665.106 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18056.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.765 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 85352.540 ops/s
[info]                  ·gc.alloc.rate:                   1111.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              20501.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18155.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.384 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 85567.978 ops/s
[info]                  ·gc.alloc.rate:                   1128.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              20763.823 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24124.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.371 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 80.406 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 86886.390 ops/s
[info]                  ·gc.alloc.rate:                   1138.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              20612.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17701.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.754 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 86906.464 ops/s
[info]                  ·gc.alloc.rate:               1142.096 MB/sec
[info]                  ·gc.alloc.rate.norm:          20681.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17696.620 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala":
[info]   86069.777 ±(99.9%) 2933.648 ops/s [Average]
[info]   (min, avg, max) = (85352.540, 86069.777, 86906.464), stdev = 761.859
[info]   CI (99.9%): [83136.129, 89003.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1129.068 ±(99.9%) 45.897 MB/sec [Average]
[info]   (min, avg, max) = (1111.842, 1129.068, 1142.096), stdev = 11.919
[info]   CI (99.9%): [1083.171, 1174.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   20644.833 ±(99.9%) 373.281 B/op [Average]
[info]   (min, avg, max) = (20501.200, 20644.833, 20763.823), stdev = 96.940
[info]   CI (99.9%): [20271.552, 21018.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1046.668 ±(99.9%) 570.414 MB/sec [Average]
[info]   (min, avg, max) = (977.261, 1046.668, 1311.597), stdev = 148.135
[info]   CI (99.9%): [476.254, 1617.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   19146.956 ±(99.9%) 10744.588 B/op [Average]
[info]   (min, avg, max) = (17696.620, 19146.956, 24124.771), stdev = 2790.335
[info]   CI (99.9%): [8402.368, 29891.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.895 ±(99.9%) 7.483 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.895, 4.371), stdev = 1.943
[info]   CI (99.9%): [≈ 0, 8.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.462 ±(99.9%) 137.649 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16.462, 80.406), stdev = 35.747
[info]   CI (99.9%): [≈ 0, 154.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 3.362
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.18% complete, ETA 00:38:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42088.839 ops/s
[info] # Warmup Iteration   2: 91706.003 ops/s
[info] # Warmup Iteration   3: 95073.342 ops/s
[info] Iteration   1: 97975.440 ops/s
[info]                  ·gc.alloc.rate:                   1204.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              19349.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15943.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.334 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 97541.419 ops/s
[info]                  ·gc.alloc.rate:                   1207.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              19470.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21399.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.367 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 97224.071 ops/s
[info]                  ·gc.alloc.rate:                   1201.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              19451.195 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16035.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.707 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 97470.353 ops/s
[info]                  ·gc.alloc.rate:               1210.467 MB/sec
[info]                  ·gc.alloc.rate.norm:          19540.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21296.125 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 98342.849 ops/s
[info]                  ·gc.alloc.rate:                   1233.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              19736.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21133.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.666 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala":
[info]   97710.826 ±(99.9%) 1714.434 ops/s [Average]
[info]   (min, avg, max) = (97224.071, 97710.826, 98342.849), stdev = 445.233
[info]   CI (99.9%): [95996.392, 99425.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1211.425 ±(99.9%) 48.603 MB/sec [Average]
[info]   (min, avg, max) = (1201.711, 1211.425, 1233.259), stdev = 12.622
[info]   CI (99.9%): [1162.823, 1260.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   19509.483 ±(99.9%) 553.920 B/op [Average]
[info]   (min, avg, max) = (19349.612, 19509.483, 19736.074), stdev = 143.851
[info]   CI (99.9%): [18955.564, 20063.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1189.959 ±(99.9%) 697.242 MB/sec [Average]
[info]   (min, avg, max) = (990.659, 1189.959, 1326.679), stdev = 181.071
[info]   CI (99.9%): [492.717, 1887.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   19161.765 ±(99.9%) 11157.630 B/op [Average]
[info]   (min, avg, max) = (15943.937, 19161.765, 21399.730), stdev = 2897.601
[info]   CI (99.9%): [8004.136, 30319.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.658 ±(99.9%) 5.050 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.658, 2.999), stdev = 1.312
[info]   CI (99.9%): [≈ 0, 5.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   10.615 ±(99.9%) 81.464 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.615, 48.367), stdev = 21.156
[info]   CI (99.9%): [≈ 0, 92.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 10.000), stdev = 2.881
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 57.41% complete, ETA 00:38:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5484.912 ops/s
[info] # Warmup Iteration   2: 42438.241 ops/s
[info] # Warmup Iteration   3: 43691.662 ops/s
[info] Iteration   1: 43659.755 ops/s
[info]                  ·gc.alloc.rate:                   2067.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              74540.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1961.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70694.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.663 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 168.091 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 45255.365 ops/s
[info]                  ·gc.alloc.rate:                   2090.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              72685.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1951.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67875.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.448 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 45127.575 ops/s
[info]                  ·gc.alloc.rate:                   2109.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              73555.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68599.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.356 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 45205.081 ops/s
[info]                  ·gc.alloc.rate:                   2126.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              74031.629 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69178.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.725 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 45053.684 ops/s
[info]                  ·gc.alloc.rate:                   2134.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              74552.741 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2340.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81765.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.454 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson":
[info]   44860.292 ±(99.9%) 2601.032 ops/s [Average]
[info]   (min, avg, max) = (43659.755, 44860.292, 45255.365), stdev = 675.480
[info]   CI (99.9%): [42259.260, 47461.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2105.719 ±(99.9%) 104.358 MB/sec [Average]
[info]   (min, avg, max) = (2067.996, 2105.719, 2134.402), stdev = 27.101
[info]   CI (99.9%): [2001.361, 2210.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   73873.423 ±(99.9%) 3009.436 B/op [Average]
[info]   (min, avg, max) = (72685.834, 73873.423, 74552.741), stdev = 781.541
[info]   CI (99.9%): [70863.988, 76882.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2041.703 ±(99.9%) 645.992 MB/sec [Average]
[info]   (min, avg, max) = (1951.888, 2041.703, 2340.909), stdev = 167.762
[info]   CI (99.9%): [1395.710, 2687.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   71622.764 ±(99.9%) 22195.478 B/op [Average]
[info]   (min, avg, max) = (67875.744, 71622.764, 81765.846), stdev = 5764.095
[info]   CI (99.9%): [49427.286, 93818.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.978 ±(99.9%) 7.934 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.978, 4.663), stdev = 2.060
[info]   CI (99.9%): [≈ 0, 8.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   35.215 ±(99.9%) 286.077 B/op [Average]
[info]   (min, avg, max) = (0.725, 35.215, 168.091), stdev = 74.293
[info]   CI (99.9%): [≈ 0, 321.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 12.000), stdev = 1.414
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 57.65% complete, ETA 00:38:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 50508.508 ops/s
[info] # Warmup Iteration   2: 103283.520 ops/s
[info] # Warmup Iteration   3: 107207.421 ops/s
[info] Iteration   1: 112162.688 ops/s
[info]                  ·gc.alloc.rate:                   1079.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              15143.797 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13857.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 111450.930 ops/s
[info]                  ·gc.alloc.rate:                   1062.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              15003.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13963.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.882 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 112236.842 ops/s
[info]                  ·gc.alloc.rate:                   1073.754 MB/sec
[info]                  ·gc.alloc.rate.norm:              15055.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13870.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.335 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 111850.759 ops/s
[info]                  ·gc.alloc.rate:                   1083.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              15247.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18427.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.293 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 112677.998 ops/s
[info]                  ·gc.alloc.rate:               1088.351 MB/sec
[info]                  ·gc.alloc.rate.norm:          15200.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13714.660 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce":
[info]   112075.843 ±(99.9%) 1761.677 ops/s [Average]
[info]   (min, avg, max) = (111450.930, 112075.843, 112677.998), stdev = 457.502
[info]   CI (99.9%): [110314.166, 113837.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1077.517 ±(99.9%) 38.348 MB/sec [Average]
[info]   (min, avg, max) = (1062.534, 1077.517, 1088.351), stdev = 9.959
[info]   CI (99.9%): [1039.169, 1115.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   15130.105 ±(99.9%) 387.393 B/op [Average]
[info]   (min, avg, max) = (15003.235, 15130.105, 15247.053), stdev = 100.605
[info]   CI (99.9%): [14742.711, 15517.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1051.478 ±(99.9%) 555.934 MB/sec [Average]
[info]   (min, avg, max) = (981.950, 1051.478, 1309.689), stdev = 144.374
[info]   CI (99.9%): [495.544, 1607.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   14766.737 ±(99.9%) 7887.827 B/op [Average]
[info]   (min, avg, max) = (13714.660, 14766.737, 18427.643), stdev = 2048.444
[info]   CI (99.9%): [6878.910, 22654.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.824 ±(99.9%) 6.875 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.824, 4.018), stdev = 1.785
[info]   CI (99.9%): [≈ 0, 7.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   11.560 ±(99.9%) 96.389 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.560, 56.335), stdev = 25.032
[info]   CI (99.9%): [≈ 0, 107.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 10.000), stdev = 2.387
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.88% complete, ETA 00:38:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 161263.787 ops/s
[info] # Warmup Iteration   2: 327616.403 ops/s
[info] # Warmup Iteration   3: 333398.113 ops/s
[info] Iteration   1: 338693.288 ops/s
[info]                  ·gc.alloc.rate:               517.050 MB/sec
[info]                  ·gc.alloc.rate.norm:          2402.435 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3030.316 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 337664.269 ops/s
[info]                  ·gc.alloc.rate:               511.041 MB/sec
[info]                  ·gc.alloc.rate.norm:          2381.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1522.879 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 336023.610 ops/s
[info]                  ·gc.alloc.rate:                   520.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              2437.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3063.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.195 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 339378.968 ops/s
[info]                  ·gc.alloc.rate:               511.659 MB/sec
[info]                  ·gc.alloc.rate.norm:          2372.629 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1518.288 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 336392.352 ops/s
[info]                  ·gc.alloc.rate:                   516.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              2416.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.553 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3066.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala":
[info]   337630.498 ±(99.9%) 5547.768 ops/s [Average]
[info]   (min, avg, max) = (336023.610, 337630.498, 339378.968), stdev = 1440.738
[info]   CI (99.9%): [332082.729, 343178.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   515.337 ±(99.9%) 15.230 MB/sec [Average]
[info]   (min, avg, max) = (511.041, 515.337, 520.475), stdev = 3.955
[info]   CI (99.9%): [500.107, 530.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   2402.081 ±(99.9%) 100.641 B/op [Average]
[info]   (min, avg, max) = (2372.629, 2402.081, 2437.549), stdev = 26.136
[info]   CI (99.9%): [2301.439, 2502.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   523.219 ±(99.9%) 689.447 MB/sec [Average]
[info]   (min, avg, max) = (326.755, 523.219, 655.553), stdev = 179.047
[info]   CI (99.9%): [≈ 0, 1212.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2440.387 ±(99.9%) 3233.715 B/op [Average]
[info]   (min, avg, max) = (1518.288, 2440.387, 3066.695), stdev = 839.785
[info]   CI (99.9%): [≈ 0, 5674.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.058 ±(99.9%) 0.336 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.195), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 58.12% complete, ETA 00:37:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 469203.944 ops/s
[info] # Warmup Iteration   2: 635728.005 ops/s
[info] # Warmup Iteration   3: 638978.892 ops/s
[info] Iteration   1: 640832.650 ops/s
[info]                  ·gc.alloc.rate:               813.023 MB/sec
[info]                  ·gc.alloc.rate.norm:          1996.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1623.758 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 620565.692 ops/s
[info]                  ·gc.alloc.rate:                   795.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              2018.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2518.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 627898.068 ops/s
[info]                  ·gc.alloc.rate:                   798.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              2000.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1661.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 634779.624 ops/s
[info]                  ·gc.alloc.rate:                   800.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              1985.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1645.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.536 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 647192.670 ops/s
[info]                  ·gc.alloc.rate:                   835.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              2031.448 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2408.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.962 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala":
[info]   634253.741 ±(99.9%) 40327.648 ops/s [Average]
[info]   (min, avg, max) = (620565.692, 634253.741, 647192.670), stdev = 10472.962
[info]   CI (99.9%): [593926.093, 674581.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   808.708 ±(99.9%) 62.847 MB/sec [Average]
[info]   (min, avg, max) = (795.880, 808.708, 835.420), stdev = 16.321
[info]   CI (99.9%): [745.861, 871.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2006.523 ±(99.9%) 69.992 B/op [Average]
[info]   (min, avg, max) = (1985.590, 2006.523, 2031.448), stdev = 18.177
[info]   CI (99.9%): [1936.531, 2076.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   794.250 ±(99.9%) 694.565 MB/sec [Average]
[info]   (min, avg, max) = (661.196, 794.250, 993.090), stdev = 180.376
[info]   CI (99.9%): [99.686, 1488.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1971.401 ±(99.9%) 1736.667 B/op [Average]
[info]   (min, avg, max) = (1623.758, 1971.401, 2518.085), stdev = 451.007
[info]   CI (99.9%): [234.734, 3708.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.695 ±(99.9%) 5.086 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.695, 3.039), stdev = 1.321
[info]   CI (99.9%): [≈ 0, 5.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.720 ±(99.9%) 12.613 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.720, 7.536), stdev = 3.276
[info]   CI (99.9%): [≈ 0, 14.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 9.000), stdev = 1.732
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 58.35% complete, ETA 00:37:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 477108.386 ops/s
[info] # Warmup Iteration   2: 718308.840 ops/s
[info] # Warmup Iteration   3: 716789.881 ops/s
[info] Iteration   1: 730586.196 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 708212.802 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 709350.106 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 717379.661 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 711681.501 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc":
[info]   715442.053 ±(99.9%) 35324.019 ops/s [Average]
[info]   (min, avg, max) = (708212.802, 715442.053, 730586.196), stdev = 9173.535
[info]   CI (99.9%): [680118.035, 750766.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻⁴, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 58.59% complete, ETA 00:37:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 66989.197 ops/s
[info] # Warmup Iteration   2: 222356.724 ops/s
[info] # Warmup Iteration   3: 246724.972 ops/s
[info] Iteration   1: 250359.949 ops/s
[info]                  ·gc.alloc.rate:               827.834 MB/sec
[info]                  ·gc.alloc.rate.norm:          5202.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4124.543 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 248340.684 ops/s
[info]                  ·gc.alloc.rate:                   823.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              5220.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6248.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 250805.335 ops/s
[info]                  ·gc.alloc.rate:                   817.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              5130.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4129.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 249567.945 ops/s
[info]                  ·gc.alloc.rate:                   826.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6230.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.995 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.190 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 251219.023 ops/s
[info]                  ·gc.alloc.rate:                   823.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              5160.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4106.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.174 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson":
[info]   250058.587 ±(99.9%) 4384.911 ops/s [Average]
[info]   (min, avg, max) = (248340.684, 250058.587, 251219.023), stdev = 1138.747
[info]   CI (99.9%): [245673.676, 254443.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   823.831 ±(99.9%) 14.792 MB/sec [Average]
[info]   (min, avg, max) = (817.655, 823.831, 827.834), stdev = 3.841
[info]   CI (99.9%): [809.039, 838.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   5184.516 ±(99.9%) 144.910 B/op [Average]
[info]   (min, avg, max) = (5130.644, 5184.516, 5220.820), stdev = 37.633
[info]   CI (99.9%): [5039.607, 5329.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   788.822 ±(99.9%) 696.771 MB/sec [Average]
[info]   (min, avg, max) = (655.521, 788.822, 988.149), stdev = 180.949
[info]   CI (99.9%): [92.051, 1485.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4967.861 ±(99.9%) 4468.925 B/op [Average]
[info]   (min, avg, max) = (4106.482, 4967.861, 6248.032), stdev = 1160.566
[info]   CI (99.9%): [498.937, 9436.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.845 ±(99.9%) 6.788 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.845, 3.995), stdev = 1.763
[info]   CI (99.9%): [≈ 0, 7.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.325 ±(99.9%) 42.799 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.325, 25.190), stdev = 11.115
[info]   CI (99.9%): [≈ 0, 48.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 10.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 58.82% complete, ETA 00:37:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20985.814 ops/s
[info] # Warmup Iteration   2: 112357.987 ops/s
[info] # Warmup Iteration   3: 117558.540 ops/s
[info] Iteration   1: 122481.968 ops/s
[info]                  ·gc.alloc.rate:                   1717.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              22065.548 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21175.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.076 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 121896.821 ops/s
[info]                  ·gc.alloc.rate:                   1706.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              22028.961 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21165.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.419 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 122755.047 ops/s
[info]                  ·gc.alloc.rate:               1723.635 MB/sec
[info]                  ·gc.alloc.rate.norm:          22096.923 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1638.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21000.215 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 122323.685 ops/s
[info]                  ·gc.alloc.rate:                   1737.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              22354.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21216.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.536 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 123265.304 ops/s
[info]                  ·gc.alloc.rate:                   1750.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              22354.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1660.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21199.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.532 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce":
[info]   122544.565 ±(99.9%) 1959.715 ops/s [Average]
[info]   (min, avg, max) = (121896.821, 122544.565, 123265.304), stdev = 508.932
[info]   CI (99.9%): [120584.850, 124504.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate":
[info]   1727.178 ±(99.9%) 67.048 MB/sec [Average]
[info]   (min, avg, max) = (1706.332, 1727.178, 1750.934), stdev = 17.412
[info]   CI (99.9%): [1660.130, 1794.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   22180.193 ±(99.9%) 620.596 B/op [Average]
[info]   (min, avg, max) = (22028.961, 22180.193, 22354.818), stdev = 161.167
[info]   CI (99.9%): [21559.596, 22800.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1647.054 ±(99.9%) 34.576 MB/sec [Average]
[info]   (min, avg, max) = (1638.088, 1647.054, 1660.428), stdev = 8.979
[info]   CI (99.9%): [1612.478, 1681.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   21151.556 ±(99.9%) 334.833 B/op [Average]
[info]   (min, avg, max) = (21000.215, 21151.556, 21216.987), stdev = 86.955
[info]   CI (99.9%): [20816.723, 21486.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.787 ±(99.9%) 6.199 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.787, 3.664), stdev = 1.610
[info]   CI (99.9%): [≈ 0, 6.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   10.112 ±(99.9%) 79.646 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.112, 47.076), stdev = 20.684
[info]   CI (99.9%): [≈ 0, 89.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 14.000), stdev = 3.130
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.06% complete, ETA 00:37:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 57548.022 ops/s
[info] # Warmup Iteration   2: 162120.304 ops/s
[info] # Warmup Iteration   3: 181235.342 ops/s
[info] Iteration   1: 184397.810 ops/s
[info]                  ·gc.alloc.rate:               1122.895 MB/sec
[info]                  ·gc.alloc.rate.norm:          9580.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8426.042 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 182875.966 ops/s
[info]                  ·gc.alloc.rate:                   1107.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              9526.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8507.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.358 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 180789.329 ops/s
[info]                  ·gc.alloc.rate:                   1111.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              9675.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11458.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.173 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.320 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 184694.205 ops/s
[info]                  ·gc.alloc.rate:                   1126.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              9601.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8355.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 185646.084 ops/s
[info]                  ·gc.alloc.rate:               1132.715 MB/sec
[info]                  ·gc.alloc.rate.norm:          9601.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8306.749 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala":
[info]   183680.679 ±(99.9%) 7309.076 ops/s [Average]
[info]   (min, avg, max) = (180789.329, 183680.679, 185646.084), stdev = 1898.144
[info]   CI (99.9%): [176371.603, 190989.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1120.199 ±(99.9%) 41.107 MB/sec [Average]
[info]   (min, avg, max) = (1107.013, 1120.199, 1132.715), stdev = 10.675
[info]   CI (99.9%): [1079.092, 1161.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9597.113 ±(99.9%) 206.811 B/op [Average]
[info]   (min, avg, max) = (9526.078, 9597.113, 9675.737), stdev = 53.708
[info]   CI (99.9%): [9390.302, 9803.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1050.610 ±(99.9%) 572.192 MB/sec [Average]
[info]   (min, avg, max) = (979.932, 1050.610, 1316.334), stdev = 148.596
[info]   CI (99.9%): [478.418, 1622.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9010.726 ±(99.9%) 5276.253 B/op [Average]
[info]   (min, avg, max) = (8306.749, 9010.726, 11458.136), stdev = 1370.226
[info]   CI (99.9%): [3734.473, 14286.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.847 ±(99.9%) 7.159 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.847, 4.173), stdev = 1.859
[info]   CI (99.9%): [≈ 0, 8.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.371 ±(99.9%) 62.318 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.371, 36.320), stdev = 16.184
[info]   CI (99.9%): [≈ 0, 69.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 10.000), stdev = 2.793
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.29% complete, ETA 00:36:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 250660.192 ops/s
[info] # Warmup Iteration   2: 506744.576 ops/s
[info] # Warmup Iteration   3: 502379.753 ops/s
[info] Iteration   1: 518620.046 ops/s
[info]                  ·gc.alloc.rate:               346.336 MB/sec
[info]                  ·gc.alloc.rate.norm:          1050.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 776.229 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 514909.231 ops/s
[info]                  ·gc.alloc.rate:               343.189 MB/sec
[info]                  ·gc.alloc.rate.norm:          1048.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1007.814 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 513092.896 ops/s
[info]                  ·gc.alloc.rate:               346.420 MB/sec
[info]                  ·gc.alloc.rate.norm:          1062.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1011.386 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 509991.865 ops/s
[info]                  ·gc.alloc.rate:               341.929 MB/sec
[info]                  ·gc.alloc.rate.norm:          1054.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1019.596 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 514990.707 ops/s
[info]                  ·gc.alloc.rate:               345.319 MB/sec
[info]                  ·gc.alloc.rate.norm:          1055.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1009.710 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala":
[info]   514320.949 ±(99.9%) 12104.439 ops/s [Average]
[info]   (min, avg, max) = (509991.865, 514320.949, 518620.046), stdev = 3143.484
[info]   CI (99.9%): [502216.510, 526425.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   344.639 ±(99.9%) 7.692 MB/sec [Average]
[info]   (min, avg, max) = (341.929, 344.639, 346.420), stdev = 1.998
[info]   CI (99.9%): [336.947, 352.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1054.497 ±(99.9%) 20.133 B/op [Average]
[info]   (min, avg, max) = (1048.859, 1054.497, 1062.513), stdev = 5.228
[info]   CI (99.9%): [1034.364, 1074.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   315.242 ±(99.9%) 127.956 MB/sec [Average]
[info]   (min, avg, max) = (255.802, 315.242, 330.476), stdev = 33.230
[info]   CI (99.9%): [187.286, 443.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   964.947 ±(99.9%) 406.598 B/op [Average]
[info]   (min, avg, max) = (776.229, 964.947, 1019.596), stdev = 105.592
[info]   CI (99.9%): [558.349, 1371.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 59.53% complete, ETA 00:36:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1892.272 ops/s
[info] # Warmup Iteration   2: 57200.457 ops/s
[info] # Warmup Iteration   3: 66717.688 ops/s
[info] Iteration   1: 68182.937 ops/s
[info]                  ·gc.alloc.rate:                   2722.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              62843.608 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2640.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60949.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.415 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 68939.957 ops/s
[info]                  ·gc.alloc.rate:                   2789.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              63671.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2665.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60857.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.475 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 68862.990 ops/s
[info]                  ·gc.alloc.rate:               2787.297 MB/sec
[info]                  ·gc.alloc.rate.norm:          63686.624 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2688.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61437.800 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 67444.227 ops/s
[info]                  ·gc.alloc.rate:                   2727.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              63632.097 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2704.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63100.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.457 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 69091.405 ops/s
[info]                  ·gc.alloc.rate:                   2774.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              63159.362 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2710.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61709.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.947 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson":
[info]   68504.303 ±(99.9%) 2647.005 ops/s [Average]
[info]   (min, avg, max) = (67444.227, 68504.303, 69091.405), stdev = 687.419
[info]   CI (99.9%): [65857.299, 71151.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2760.172 ±(99.9%) 125.964 MB/sec [Average]
[info]   (min, avg, max) = (2722.796, 2760.172, 2789.268), stdev = 32.712
[info]   CI (99.9%): [2634.208, 2886.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63398.720 ±(99.9%) 1463.026 B/op [Average]
[info]   (min, avg, max) = (62843.608, 63398.720, 63686.624), stdev = 379.943
[info]   CI (99.9%): [61935.694, 64861.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2682.112 ±(99.9%) 111.106 MB/sec [Average]
[info]   (min, avg, max) = (2640.720, 2682.112, 2710.741), stdev = 28.854
[info]   CI (99.9%): [2571.005, 2793.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   61610.722 ±(99.9%) 3478.608 B/op [Average]
[info]   (min, avg, max) = (60857.097, 61610.722, 63100.465), stdev = 903.383
[info]   CI (99.9%): [58132.114, 65089.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.150 ±(99.9%) 1.026 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.150, 0.625), stdev = 0.266
[info]   CI (99.9%): [≈ 0, 1.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.459 ±(99.9%) 23.675 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.459, 14.415), stdev = 6.148
[info]   CI (99.9%): [≈ 0, 27.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 11.600, 12.000), stdev = 0.548
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 59.76% complete, ETA 00:36:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49521.849 ops/s
[info] # Warmup Iteration   2: 172057.540 ops/s
[info] # Warmup Iteration   3: 171310.046 ops/s
[info] Iteration   1: 178229.073 ops/s
[info]                  ·gc.alloc.rate:                   1164.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              10286.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11653.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 180052.932 ops/s
[info]                  ·gc.alloc.rate:                   1164.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              10174.721 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8667.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.915 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.475 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 179605.222 ops/s
[info]                  ·gc.alloc.rate:                   1165.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              10215.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8665.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.567 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 180054.751 ops/s
[info]                  ·gc.alloc.rate:                   1179.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              10306.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11481.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.728 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 176206.487 ops/s
[info]                  ·gc.alloc.rate:               1155.936 MB/sec
[info]                  ·gc.alloc.rate.norm:          10323.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:      985.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8802.389 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce":
[info]   178829.693 ±(99.9%) 6339.099 ops/s [Average]
[info]   (min, avg, max) = (176206.487, 178829.693, 180054.751), stdev = 1646.244
[info]   CI (99.9%): [172490.594, 185168.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1166.009 ±(99.9%) 32.216 MB/sec [Average]
[info]   (min, avg, max) = (1155.936, 1166.009, 1179.189), stdev = 8.366
[info]   CI (99.9%): [1133.793, 1198.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10261.432 ±(99.9%) 244.783 B/op [Average]
[info]   (min, avg, max) = (10174.721, 10261.432, 10323.643), stdev = 63.569
[info]   CI (99.9%): [10016.649, 10506.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1119.898 ±(99.9%) 691.821 MB/sec [Average]
[info]   (min, avg, max) = (985.602, 1119.898, 1319.738), stdev = 179.664
[info]   CI (99.9%): [428.077, 1811.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9853.904 ±(99.9%) 6031.605 B/op [Average]
[info]   (min, avg, max) = (8665.073, 9853.904, 11653.001), stdev = 1566.389
[info]   CI (99.9%): [3822.299, 15885.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.754 ±(99.9%) 4.803 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.754, 2.915), stdev = 1.247
[info]   CI (99.9%): [≈ 0, 5.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.591 ±(99.9%) 41.982 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.591, 25.475), stdev = 10.903
[info]   CI (99.9%): [≈ 0, 48.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 12.000), stdev = 3.633
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.00% complete, ETA 00:36:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 136118.062 ops/s
[info] # Warmup Iteration   2: 516079.422 ops/s
[info] # Warmup Iteration   3: 528054.280 ops/s
[info] Iteration   1: 530587.956 ops/s
[info]                  ·gc.alloc.rate:                   539.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              1599.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1932.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 545783.392 ops/s
[info]                  ·gc.alloc.rate:               549.929 MB/sec
[info]                  ·gc.alloc.rate.norm:          1585.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 944.154 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 545526.449 ops/s
[info]                  ·gc.alloc.rate:                   560.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              1616.289 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1890.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 548054.573 ops/s
[info]                  ·gc.alloc.rate:                   549.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              1576.742 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     941.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 531165.992 ops/s
[info]                  ·gc.alloc.rate:               545.473 MB/sec
[info]                  ·gc.alloc.rate.norm:          1615.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1946.157 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala":
[info]   540223.672 ±(99.9%) 33082.025 ops/s [Average]
[info]   (min, avg, max) = (530587.956, 540223.672, 548054.573), stdev = 8591.297
[info]   CI (99.9%): [507141.647, 573305.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   548.961 ±(99.9%) 28.736 MB/sec [Average]
[info]   (min, avg, max) = (539.963, 548.961, 560.304), stdev = 7.463
[info]   CI (99.9%): [520.225, 577.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1598.793 ±(99.9%) 68.454 B/op [Average]
[info]   (min, avg, max) = (1576.742, 1598.793, 1616.289), stdev = 17.777
[info]   CI (99.9%): [1530.340, 1667.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   523.940 ±(99.9%) 689.994 MB/sec [Average]
[info]   (min, avg, max) = (327.519, 523.940, 657.003), stdev = 179.189
[info]   CI (99.9%): [≈ 0, 1213.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1530.776 ±(99.9%) 2068.772 B/op [Average]
[info]   (min, avg, max) = (941.202, 1530.776, 1946.157), stdev = 537.253
[info]   CI (99.9%): [≈ 0, 3599.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.128 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.036, 0.062), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.24% complete, ETA 00:36:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 550824.541 ops/s
[info] # Warmup Iteration   2: 1078111.205 ops/s
[info] # Warmup Iteration   3: 1142962.824 ops/s
[info] Iteration   1: 1132585.155 ops/s
[info]                  ·gc.alloc.rate:               870.467 MB/sec
[info]                  ·gc.alloc.rate.norm:          1209.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1375.497 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 1122470.276 ops/s
[info]                  ·gc.alloc.rate:                   860.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              1206.710 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1390.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1132720.069 ops/s
[info]                  ·gc.alloc.rate:                   860.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              1195.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     919.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1144202.867 ops/s
[info]                  ·gc.alloc.rate:                   887.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              1220.992 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1367.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.152 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1156079.516 ops/s
[info]                  ·gc.alloc.rate:               883.759 MB/sec
[info]                  ·gc.alloc.rate.norm:          1203.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 898.666 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala":
[info]   1137611.577 ±(99.9%) 49573.232 ops/s [Average]
[info]   (min, avg, max) = (1122470.276, 1137611.577, 1156079.516), stdev = 12874.011
[info]   CI (99.9%): [1088038.344, 1187184.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   872.670 ±(99.9%) 48.832 MB/sec [Average]
[info]   (min, avg, max) = (860.660, 872.670, 887.766), stdev = 12.682
[info]   CI (99.9%): [823.838, 921.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1207.201 ±(99.9%) 35.763 B/op [Average]
[info]   (min, avg, max) = (1195.727, 1207.201, 1220.992), stdev = 9.287
[info]   CI (99.9%): [1171.439, 1242.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   859.622 ±(99.9%) 697.582 MB/sec [Average]
[info]   (min, avg, max) = (660.171, 859.622, 993.943), stdev = 181.160
[info]   CI (99.9%): [162.040, 1557.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1190.370 ±(99.9%) 988.873 B/op [Average]
[info]   (min, avg, max) = (898.666, 1190.370, 1390.677), stdev = 256.807
[info]   CI (99.9%): [201.497, 2179.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.612 ±(99.9%) 5.181 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.612, 3.019), stdev = 1.345
[info]   CI (99.9%): [≈ 0, 5.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.842 ±(99.9%) 7.125 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.842, 4.152), stdev = 1.850
[info]   CI (99.9%): [≈ 0, 7.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 9.000), stdev = 2.449
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 60.47% complete, ETA 00:35:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 805690.174 ops/s
[info] # Warmup Iteration   2: 1243094.471 ops/s
[info] # Warmup Iteration   3: 1277115.175 ops/s
[info] Iteration   1: 1274544.317 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1276716.386 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1275734.423 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1274613.650 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1276452.075 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc":
[info]   1275612.170 ±(99.9%) 3887.544 ops/s [Average]
[info]   (min, avg, max) = (1274544.317, 1275612.170, 1276716.386), stdev = 1009.583
[info]   CI (99.9%): [1271724.627, 1279499.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 60.71% complete, ETA 00:35:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 83930.253 ops/s
[info] # Warmup Iteration   2: 314046.543 ops/s
[info] # Warmup Iteration   3: 349258.153 ops/s
[info] Iteration   1: 345458.108 ops/s
[info]                  ·gc.alloc.rate:                   969.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              4417.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4462.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 351909.981 ops/s
[info]                  ·gc.alloc.rate:                   982.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              4394.461 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2928.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 351380.802 ops/s
[info]                  ·gc.alloc.rate:                   982.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              4398.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4409.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.394 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.197 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 353771.812 ops/s
[info]                  ·gc.alloc.rate:                   987.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              4393.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4371.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.408 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 354286.699 ops/s
[info]                  ·gc.alloc.rate:               995.565 MB/sec
[info]                  ·gc.alloc.rate.norm:          4422.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4349.820 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson":
[info]   351361.480 ±(99.9%) 13548.254 ops/s [Average]
[info]   (min, avg, max) = (345458.108, 351361.480, 354286.699), stdev = 3518.439
[info]   CI (99.9%): [337813.226, 364909.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   983.641 ±(99.9%) 36.232 MB/sec [Average]
[info]   (min, avg, max) = (969.747, 983.641, 995.565), stdev = 9.409
[info]   CI (99.9%): [947.409, 1019.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4405.408 ±(99.9%) 52.104 B/op [Average]
[info]   (min, avg, max) = (4393.709, 4405.408, 4422.348), stdev = 13.531
[info]   CI (99.9%): [4353.304, 4457.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   916.228 ±(99.9%) 562.565 MB/sec [Average]
[info]   (min, avg, max) = (654.914, 916.228, 984.730), stdev = 146.096
[info]   CI (99.9%): [353.662, 1478.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4104.276 ±(99.9%) 2536.817 B/op [Average]
[info]   (min, avg, max) = (2928.268, 4104.276, 4462.523), stdev = 658.803
[info]   CI (99.9%): [1567.459, 6641.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.799 ±(99.9%) 5.652 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.799, 3.394), stdev = 1.468
[info]   CI (99.9%): [≈ 0, 6.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.577 ±(99.9%) 25.310 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.577, 15.197), stdev = 6.573
[info]   CI (99.9%): [≈ 0, 28.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 10.000), stdev = 2.775
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 60.94% complete, ETA 00:35:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 214.541 ops/s
[info] # Warmup Iteration   2: 480.704 ops/s
[info] # Warmup Iteration   3: 564.858 ops/s
[info] Iteration   1: 593.244 ops/s
[info]                  ·gc.alloc.rate:                   1276.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              3385288.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3474069.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.165 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 602.268 ops/s
[info]                  ·gc.alloc.rate:                   1280.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              3342607.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3409608.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.299 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13834.172 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 602.983 ops/s
[info]                  ·gc.alloc.rate:                   1285.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              3354379.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2534637.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1356.291 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 601.491 ops/s
[info]                  ·gc.alloc.rate:                   1280.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              3350648.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1291.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3379131.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.432 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 586.194 ops/s
[info]                  ·gc.alloc.rate:               1269.886 MB/sec
[info]                  ·gc.alloc.rate.norm:          3407730.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1295.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3476199.141 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce":
[info]   597.236 ±(99.9%) 28.185 ops/s [Average]
[info]   (min, avg, max) = (586.194, 597.236, 602.983), stdev = 7.320
[info]   CI (99.9%): [569.050, 625.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1278.761 ±(99.9%) 22.925 MB/sec [Average]
[info]   (min, avg, max) = (1269.886, 1278.761, 1285.906), stdev = 5.953
[info]   CI (99.9%): [1255.837, 1301.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3368131.089 ±(99.9%) 105606.231 B/op [Average]
[info]   (min, avg, max) = (3342607.735, 3368131.089, 3407730.508), stdev = 27425.603
[info]   CI (99.9%): [3262524.858, 3473737.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1235.022 ±(99.9%) 567.646 MB/sec [Average]
[info]   (min, avg, max) = (971.656, 1235.022, 1310.135), stdev = 147.416
[info]   CI (99.9%): [667.376, 1802.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3254729.297 ±(99.9%) 1558387.388 B/op [Average]
[info]   (min, avg, max) = (2534637.351, 3254729.297, 3476199.141), stdev = 404708.256
[info]   CI (99.9%): [1696341.909, 4813116.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.172 ±(99.9%) 8.924 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.172, 5.299), stdev = 2.318
[info]   CI (99.9%): [≈ 0, 10.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3060.012 ±(99.9%) 23296.514 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3060.012, 13834.172), stdev = 6050.031
[info]   CI (99.9%): [≈ 0, 26356.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 15.000), stdev = 4.615
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.18% complete, ETA 00:35:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 120.891 ops/s
[info] # Warmup Iteration   2: 465.427 ops/s
[info] # Warmup Iteration   3: 598.151 ops/s
[info] Iteration   1: 597.130 ops/s
[info]                  ·gc.alloc.rate:                   1271.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              3348729.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3442064.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54.796 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 601.105 ops/s
[info]                  ·gc.alloc.rate:                   1269.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              3321589.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3426161.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.930 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12900.359 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 597.999 ops/s
[info]                  ·gc.alloc.rate:                   1279.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              3364920.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1296.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3410060.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1148.795 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 603.822 ops/s
[info]                  ·gc.alloc.rate:               1278.467 MB/sec
[info]                  ·gc.alloc.rate.norm:          3331869.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1294.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3374886.993 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 590.771 ops/s
[info]                  ·gc.alloc.rate:               1257.982 MB/sec
[info]                  ·gc.alloc.rate.norm:          3350763.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:      974.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2594826.396 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala":
[info]   598.165 ±(99.9%) 18.904 ops/s [Average]
[info]   (min, avg, max) = (590.771, 598.165, 603.822), stdev = 4.909
[info]   CI (99.9%): [579.261, 617.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1271.264 ±(99.9%) 33.137 MB/sec [Average]
[info]   (min, avg, max) = (1257.982, 1271.264, 1279.286), stdev = 8.606
[info]   CI (99.9%): [1238.128, 1304.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3343574.432 ±(99.9%) 65412.108 B/op [Average]
[info]   (min, avg, max) = (3321589.143, 3343574.432, 3364920.374), stdev = 16987.317
[info]   CI (99.9%): [3278162.324, 3408986.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1236.316 ±(99.9%) 564.781 MB/sec [Average]
[info]   (min, avg, max) = (974.179, 1236.316, 1309.339), stdev = 146.672
[info]   CI (99.9%): [671.535, 1801.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3249599.876 ±(99.9%) 1412705.250 B/op [Average]
[info]   (min, avg, max) = (2594826.396, 3249599.876, 3442064.696), stdev = 366875.067
[info]   CI (99.9%): [1836894.626, 4662305.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.078 ±(99.9%) 8.324 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.078, 4.930), stdev = 2.162
[info]   CI (99.9%): [≈ 0, 9.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2820.790 ±(99.9%) 21778.933 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2820.790, 12900.359), stdev = 5655.920
[info]   CI (99.9%): [≈ 0, 24599.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.400, 16.000), stdev = 5.177
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.41% complete, ETA 00:34:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17329.420 ops/s
[info] # Warmup Iteration   2: 46009.400 ops/s
[info] # Warmup Iteration   3: 48549.411 ops/s
[info] Iteration   1: 48141.589 ops/s
[info]                  ·gc.alloc.rate:                   803.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              26249.203 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21537.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.361 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 49222.588 ops/s
[info]                  ·gc.alloc.rate:                   825.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              26401.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31627.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.666 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 48414.997 ops/s
[info]                  ·gc.alloc.rate:                   812.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              26421.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21436.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.353 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 49522.525 ops/s
[info]                  ·gc.alloc.rate:                   836.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              26591.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31437.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 159.437 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 49375.431 ops/s
[info]                  ·gc.alloc.rate:               821.250 MB/sec
[info]                  ·gc.alloc.rate.norm:          26175.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20849.649 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala":
[info]   48935.426 ±(99.9%) 2375.082 ops/s [Average]
[info]   (min, avg, max) = (48141.589, 48935.426, 49522.525), stdev = 616.801
[info]   CI (99.9%): [46560.344, 51310.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   819.939 ±(99.9%) 49.251 MB/sec [Average]
[info]   (min, avg, max) = (803.043, 819.939, 836.760), stdev = 12.790
[info]   CI (99.9%): [770.688, 869.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   26367.719 ±(99.9%) 623.312 B/op [Average]
[info]   (min, avg, max) = (26175.701, 26367.719, 26591.064), stdev = 161.872
[info]   CI (99.9%): [25744.406, 26991.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   790.208 ±(99.9%) 699.733 MB/sec [Average]
[info]   (min, avg, max) = (654.147, 790.208, 989.269), stdev = 181.718
[info]   CI (99.9%): [90.475, 1489.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   25377.589 ±(99.9%) 21660.220 B/op [Average]
[info]   (min, avg, max) = (20849.649, 25377.589, 31627.236), stdev = 5625.090
[info]   CI (99.9%): [3717.369, 47037.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1.024 ±(99.9%) 8.595 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.024, 5.017), stdev = 2.232
[info]   CI (99.9%): [≈ 0, 9.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   32.563 ±(99.9%) 273.114 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 32.563, 159.437), stdev = 70.927
[info]   CI (99.9%): [≈ 0, 305.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 9.000), stdev = 2.280
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 61.65% complete, ETA 00:34:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 144.797 ops/s
[info] # Warmup Iteration   2: 411.539 ops/s
[info] # Warmup Iteration   3: 570.647 ops/s
[info] Iteration   1: 582.663 ops/s
[info]                  ·gc.alloc.rate:                   1282.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              3464923.595 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3525229.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 112.412 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 584.255 ops/s
[info]                  ·gc.alloc.rate:                   1281.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              3449618.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3520347.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.806 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12939.159 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 565.432 ops/s
[info]                  ·gc.alloc.rate:                   1249.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              3476980.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1295.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3605174.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2431.548 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 575.153 ops/s
[info]                  ·gc.alloc.rate:                   1257.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              3438616.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          966.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2644195.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.889 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 577.661 ops/s
[info]                  ·gc.alloc.rate:                   1254.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              3416609.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2645023.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 113.384 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson":
[info]   577.033 ±(99.9%) 28.710 ops/s [Average]
[info]   (min, avg, max) = (565.432, 577.033, 584.255), stdev = 7.456
[info]   CI (99.9%): [548.323, 605.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1265.162 ±(99.9%) 60.591 MB/sec [Average]
[info]   (min, avg, max) = (1249.631, 1265.162, 1282.982), stdev = 15.735
[info]   CI (99.9%): [1204.571, 1325.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   3449349.815 ±(99.9%) 90165.232 B/op [Average]
[info]   (min, avg, max) = (3416609.592, 3449349.815, 3476980.099), stdev = 23415.624
[info]   CI (99.9%): [3359184.583, 3539515.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1169.334 ±(99.9%) 704.218 MB/sec [Average]
[info]   (min, avg, max) = (966.815, 1169.334, 1307.530), stdev = 182.883
[info]   CI (99.9%): [465.116, 1873.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3187994.282 ±(99.9%) 1914470.923 B/op [Average]
[info]   (min, avg, max) = (2644195.556, 3187994.282, 3605174.728), stdev = 497182.019
[info]   CI (99.9%): [1273523.359, 5102465.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.157 ±(99.9%) 7.979 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.157, 4.806), stdev = 2.072
[info]   CI (99.9%): [≈ 0, 9.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3130.678 ±(99.9%) 21470.340 B/op [Average]
[info]   (min, avg, max) = (56.889, 3130.678, 12939.159), stdev = 5575.779
[info]   CI (99.9%): [≈ 0, 24601.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.400, 17.000), stdev = 5.771
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 61.88% complete, ETA 00:34:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3348.734 ops/s
[info] # Warmup Iteration   2: 12452.013 ops/s
[info] # Warmup Iteration   3: 14385.311 ops/s
[info] Iteration   1: 14314.954 ops/s
[info]                  ·gc.alloc.rate:                   1126.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              123835.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107882.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.289 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 14361.039 ops/s
[info]                  ·gc.alloc.rate:                   1133.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              124250.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107609.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.563 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 14243.128 ops/s
[info]                  ·gc.alloc.rate:                   1131.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              125056.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144265.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.704 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 630.242 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 14428.221 ops/s
[info]                  ·gc.alloc.rate:               1137.187 MB/sec
[info]                  ·gc.alloc.rate.norm:          124011.406 B/op
[info]                  ·gc.churn.PS_Eden_Space:      968.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 105642.288 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 14358.426 ops/s
[info]                  ·gc.alloc.rate:               1152.452 MB/sec
[info]                  ·gc.alloc.rate.norm:          126311.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1291.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 141540.601 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce":
[info]   14341.153 ±(99.9%) 262.368 ops/s [Average]
[info]   (min, avg, max) = (14243.128, 14341.153, 14428.221), stdev = 68.136
[info]   CI (99.9%): [14078.786, 14603.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1136.440 ±(99.9%) 37.405 MB/sec [Average]
[info]   (min, avg, max) = (1126.789, 1136.440, 1152.452), stdev = 9.714
[info]   CI (99.9%): [1099.035, 1173.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   124693.011 ±(99.9%) 3921.773 B/op [Average]
[info]   (min, avg, max) = (123835.475, 124693.011, 126311.990), stdev = 1018.472
[info]   CI (99.9%): [120771.238, 128614.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1105.908 ±(99.9%) 677.787 MB/sec [Average]
[info]   (min, avg, max) = (968.742, 1105.908, 1305.722), stdev = 176.019
[info]   CI (99.9%): [428.121, 1783.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   121388.111 ±(99.9%) 75791.812 B/op [Average]
[info]   (min, avg, max) = (105642.288, 121388.111, 144265.354), stdev = 19682.893
[info]   CI (99.9%): [45596.299, 197179.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1.153 ±(99.9%) 9.796 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.153, 5.704), stdev = 2.544
[info]   CI (99.9%): [≈ 0, 10.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   127.419 ±(99.9%) 1082.390 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 127.419, 630.242), stdev = 281.093
[info]   CI (99.9%): [≈ 0, 1209.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 12.000), stdev = 3.271
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.12% complete, ETA 00:34:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5449.986 ops/s
[info] # Warmup Iteration   2: 16726.319 ops/s
[info] # Warmup Iteration   3: 18635.407 ops/s
[info] Iteration   1: 18930.439 ops/s
[info]                  ·gc.alloc.rate:                   1142.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              94944.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81349.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.731 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 18356.596 ops/s
[info]                  ·gc.alloc.rate:                   1113.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              95456.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112053.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 430.125 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 18923.156 ops/s
[info]                  ·gc.alloc.rate:                   1136.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              94533.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81158.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69.248 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 19028.877 ops/s
[info]                  ·gc.alloc.rate:               1161.843 MB/sec
[info]                  ·gc.alloc.rate.norm:          96085.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1288.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 106548.940 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 19000.628 ops/s
[info]                  ·gc.alloc.rate:               1160.309 MB/sec
[info]                  ·gc.alloc.rate.norm:          96101.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:      967.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 80163.155 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala":
[info]   18847.939 ±(99.9%) 1071.860 ops/s [Average]
[info]   (min, avg, max) = (18356.596, 18847.939, 19028.877), stdev = 278.359
[info]   CI (99.9%): [17776.079, 19919.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1142.874 ±(99.9%) 76.247 MB/sec [Average]
[info]   (min, avg, max) = (1113.447, 1142.874, 1161.843), stdev = 19.801
[info]   CI (99.9%): [1066.627, 1219.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   95424.401 ±(99.9%) 2668.954 B/op [Average]
[info]   (min, avg, max) = (94533.297, 95424.401, 96101.943), stdev = 693.119
[info]   CI (99.9%): [92755.447, 98093.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1103.538 ±(99.9%) 683.163 MB/sec [Average]
[info]   (min, avg, max) = (967.868, 1103.538, 1307.049), stdev = 177.415
[info]   CI (99.9%): [420.375, 1786.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   92254.773 ±(99.9%) 60412.768 B/op [Average]
[info]   (min, avg, max) = (80163.155, 92254.773, 112053.710), stdev = 15689.004
[info]   CI (99.9%): [31842.004, 152667.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.174 ±(99.9%) 8.386 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.174, 5.017), stdev = 2.178
[info]   CI (99.9%): [≈ 0, 9.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   100.221 ±(99.9%) 719.320 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 100.221, 430.125), stdev = 186.805
[info]   CI (99.9%): [≈ 0, 819.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.400, 16.000), stdev = 5.413
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.35% complete, ETA 00:34:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 104699.609 ops/s
[info] # Warmup Iteration   2: 208891.522 ops/s
[info] # Warmup Iteration   3: 217186.818 ops/s
[info] Iteration   1: 217103.774 ops/s
[info]                  ·gc.alloc.rate:               785.395 MB/sec
[info]                  ·gc.alloc.rate.norm:          5692.789 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4771.237 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 216561.723 ops/s
[info]                  ·gc.alloc.rate:                   789.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              5738.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7179.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 214281.585 ops/s
[info]                  ·gc.alloc.rate:               769.636 MB/sec
[info]                  ·gc.alloc.rate.norm:          5652.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4843.488 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 213054.266 ops/s
[info]                  ·gc.alloc.rate:                   771.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              5699.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4871.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.517 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.368 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 215983.839 ops/s
[info]                  ·gc.alloc.rate:                   794.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              5786.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7169.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.730 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala":
[info]   215397.037 ±(99.9%) 6485.390 ops/s [Average]
[info]   (min, avg, max) = (213054.266, 215397.037, 217103.774), stdev = 1684.235
[info]   CI (99.9%): [208911.647, 221882.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   782.114 ±(99.9%) 42.145 MB/sec [Average]
[info]   (min, avg, max) = (769.636, 782.114, 794.121), stdev = 10.945
[info]   CI (99.9%): [739.969, 824.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5713.990 ±(99.9%) 195.432 B/op [Average]
[info]   (min, avg, max) = (5652.330, 5713.990, 5786.322), stdev = 50.753
[info]   CI (99.9%): [5518.559, 5909.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   789.841 ±(99.9%) 689.453 MB/sec [Average]
[info]   (min, avg, max) = (658.255, 789.841, 988.045), stdev = 179.049
[info]   CI (99.9%): [100.389, 1479.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5766.954 ±(99.9%) 4949.045 B/op [Average]
[info]   (min, avg, max) = (4771.237, 5766.954, 7179.474), stdev = 1285.251
[info]   CI (99.9%): [817.909, 10716.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.987 ±(99.9%) 7.624 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.987, 4.517), stdev = 1.980
[info]   CI (99.9%): [≈ 0, 8.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.280 ±(99.9%) 56.329 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.280, 33.368), stdev = 14.629
[info]   CI (99.9%): [≈ 0, 63.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 2.490
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 62.59% complete, ETA 00:33:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 151983.761 ops/s
[info] # Warmup Iteration   2: 246630.686 ops/s
[info] # Warmup Iteration   3: 248949.589 ops/s
[info] Iteration   1: 250028.312 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 248744.588 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 236792.133 ops/s
[info]                  ·gc.alloc.rate:      1.370 MB/sec
[info]                  ·gc.alloc.rate.norm: 9.102 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 249431.779 ops/s
[info]                  ·gc.alloc.rate:      0.171 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.080 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 251089.805 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   247217.324 ±(99.9%) 22684.405 ops/s [Average]
[info]   (min, avg, max) = (236792.133, 247217.324, 251089.805), stdev = 5891.068
[info]   CI (99.9%): [224532.919, 269901.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.308 ±(99.9%) 2.303 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.308, 1.370), stdev = 0.598
[info]   CI (99.9%): [≈ 0, 2.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2.037 ±(99.9%) 15.312 B/op [Average]
[info]   (min, avg, max) = (0.002, 2.037, 9.102), stdev = 3.977
[info]   CI (99.9%): [≈ 0, 17.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 62.82% complete, ETA 00:33:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4133.347 ops/s
[info] # Warmup Iteration   2: 15721.086 ops/s
[info] # Warmup Iteration   3: 17981.686 ops/s
[info] Iteration   1: 17840.428 ops/s
[info]                  ·gc.alloc.rate:                   1150.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              101466.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86588.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.673 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 17941.689 ops/s
[info]                  ·gc.alloc.rate:                   1154.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              101279.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114966.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 385.291 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 18049.829 ops/s
[info]                  ·gc.alloc.rate:                   1165.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              101617.956 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85266.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96.200 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 17971.317 ops/s
[info]                  ·gc.alloc.rate:               1169.882 MB/sec
[info]                  ·gc.alloc.rate.norm:          102417.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1294.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113287.043 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 17594.692 ops/s
[info]                  ·gc.alloc.rate:               1134.429 MB/sec
[info]                  ·gc.alloc.rate.norm:          101469.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:      970.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 86845.069 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson":
[info]   17879.591 ±(99.9%) 677.845 ops/s [Average]
[info]   (min, avg, max) = (17594.692, 17879.591, 18049.829), stdev = 176.034
[info]   CI (99.9%): [17201.746, 18557.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1154.935 ±(99.9%) 53.692 MB/sec [Average]
[info]   (min, avg, max) = (1134.429, 1154.935, 1169.882), stdev = 13.944
[info]   CI (99.9%): [1101.243, 1208.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   101650.049 ±(99.9%) 1714.786 B/op [Average]
[info]   (min, avg, max) = (101279.123, 101650.049, 102417.105), stdev = 445.324
[info]   CI (99.9%): [99935.263, 103364.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1107.034 ±(99.9%) 687.137 MB/sec [Average]
[info]   (min, avg, max) = (970.932, 1107.034, 1310.679), stdev = 178.447
[info]   CI (99.9%): [419.897, 1794.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   97390.549 ±(99.9%) 58919.712 B/op [Average]
[info]   (min, avg, max) = (85266.137, 97390.549, 114966.469), stdev = 15301.262
[info]   CI (99.9%): [38470.836, 156310.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.108 ±(99.9%) 7.301 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.108, 4.393), stdev = 1.896
[info]   CI (99.9%): [≈ 0, 8.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   97.033 ±(99.9%) 640.413 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 97.033, 385.291), stdev = 166.313
[info]   CI (99.9%): [≈ 0, 737.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 15.000), stdev = 4.506
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.06% complete, ETA 00:33:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 769872.342 ops/s
[info] # Warmup Iteration   2: 1402923.480 ops/s
[info] # Warmup Iteration   3: 1553577.124 ops/s
[info] Iteration   1: 1553555.853 ops/s
[info]                  ·gc.alloc.rate:      63.180 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1553084.917 ops/s
[info]                  ·gc.alloc.rate:      63.170 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1546555.675 ops/s
[info]                  ·gc.alloc.rate:                   69.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              70.877 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     260.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.745 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.758 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1549773.610 ops/s
[info]                  ·gc.alloc.rate:      63.025 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1549748.925 ops/s
[info]                  ·gc.alloc.rate:      63.191 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.169 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala":
[info]   1550543.796 ±(99.9%) 11002.993 ops/s [Average]
[info]   (min, avg, max) = (1546555.675, 1550543.796, 1553555.853), stdev = 2857.442
[info]   CI (99.9%): [1539540.804, 1561546.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   64.447 ±(99.9%) 11.241 MB/sec [Average]
[info]   (min, avg, max) = (63.025, 64.447, 69.668), stdev = 2.919
[info]   CI (99.9%): [53.205, 75.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   65.409 ±(99.9%) 11.773 B/op [Average]
[info]   (min, avg, max) = (64.000, 65.409, 70.877), stdev = 3.057
[info]   CI (99.9%): [53.637, 77.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   51.172 ±(99.9%) 440.608 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.172, 255.861), stdev = 114.425
[info]   CI (99.9%): [≈ 0, 491.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   52.060 ±(99.9%) 448.256 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 52.060, 260.302), stdev = 116.411
[info]   CI (99.9%): [≈ 0, 500.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.149 ±(99.9%) 1.282 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.149, 0.745), stdev = 0.333
[info]   CI (99.9%): [≈ 0, 1.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 1.305 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.152, 0.758), stdev = 0.339
[info]   CI (99.9%): [≈ 0, 1.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 63.29% complete, ETA 00:33:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5450.571 ops/s
[info] # Warmup Iteration   2: 67539.296 ops/s
[info] # Warmup Iteration   3: 78237.823 ops/s
[info] Iteration   1: 80617.204 ops/s
[info]                  ·gc.alloc.rate:                   3404.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              66460.178 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3315.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64724.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.251 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 79183.458 ops/s
[info]                  ·gc.alloc.rate:                   3396.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              67503.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3353.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66648.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.241 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 79940.319 ops/s
[info]                  ·gc.alloc.rate:                   3429.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              67504.608 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3378.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66501.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.820 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 80084.219 ops/s
[info]                  ·gc.alloc.rate:                   3422.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              67246.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3053.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59996.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.409 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 80681.802 ops/s
[info]                  ·gc.alloc.rate:               3460.700 MB/sec
[info]                  ·gc.alloc.rate.norm:          67501.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3398.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 66280.700 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson":
[info]   80101.400 ±(99.9%) 2335.743 ops/s [Average]
[info]   (min, avg, max) = (79183.458, 80101.400, 80681.802), stdev = 606.585
[info]   CI (99.9%): [77765.658, 82437.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3422.678 ±(99.9%) 96.371 MB/sec [Average]
[info]   (min, avg, max) = (3396.489, 3422.678, 3460.700), stdev = 25.027
[info]   CI (99.9%): [3326.307, 3519.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   67243.266 ±(99.9%) 1739.207 B/op [Average]
[info]   (min, avg, max) = (66460.178, 67243.266, 67504.608), stdev = 451.666
[info]   CI (99.9%): [65504.059, 68982.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3299.804 ±(99.9%) 544.155 MB/sec [Average]
[info]   (min, avg, max) = (3053.088, 3299.804, 3398.129), stdev = 141.315
[info]   CI (99.9%): [2755.649, 3843.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   64830.564 ±(99.9%) 10819.219 B/op [Average]
[info]   (min, avg, max) = (59996.802, 64830.564, 66648.968), stdev = 2809.717
[info]   CI (99.9%): [54011.345, 75649.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.250 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.167), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.144 ±(99.9%) 4.872 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.144, 3.251), stdev = 1.265
[info]   CI (99.9%): [≈ 0, 6.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 13.800, 15.000), stdev = 0.837
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.53% complete, ETA 00:33:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 336913.814 ops/s
[info] # Warmup Iteration   2: 1719823.324 ops/s
[info] # Warmup Iteration   3: 1811348.947 ops/s
[info] Iteration   1: 1839069.046 ops/s
[info]                  ·gc.alloc.rate:               991.828 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:      981.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 839.963 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 1849696.031 ops/s
[info]                  ·gc.alloc.rate:                   998.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              849.265 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     837.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1844338.101 ops/s
[info]                  ·gc.alloc.rate:                   997.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              851.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     841.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.873 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.304 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1853389.927 ops/s
[info]                  ·gc.alloc.rate:               997.183 MB/sec
[info]                  ·gc.alloc.rate.norm:          845.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 831.081 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 1850324.091 ops/s
[info]                  ·gc.alloc.rate:                   992.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              844.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     555.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala":
[info]   1847363.439 ±(99.9%) 21822.880 ops/s [Average]
[info]   (min, avg, max) = (1839069.046, 1847363.439, 1853389.927), stdev = 5667.333
[info]   CI (99.9%): [1825540.559, 1869186.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   995.586 ±(99.9%) 11.612 MB/sec [Average]
[info]   (min, avg, max) = (991.828, 995.586, 998.264), stdev = 3.016
[info]   CI (99.9%): [983.974, 1007.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   847.950 ±(99.9%) 10.621 B/op [Average]
[info]   (min, avg, max) = (844.417, 847.950, 851.366), stdev = 2.758
[info]   CI (99.9%): [837.329, 858.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   917.086 ±(99.9%) 568.884 MB/sec [Average]
[info]   (min, avg, max) = (652.850, 917.086, 986.720), stdev = 147.737
[info]   CI (99.9%): [348.202, 1485.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   781.176 ±(99.9%) 486.565 B/op [Average]
[info]   (min, avg, max) = (555.255, 781.176, 841.898), stdev = 126.360
[info]   CI (99.9%): [294.610, 1267.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.812 ±(99.9%) 6.594 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.812, 3.873), stdev = 1.712
[info]   CI (99.9%): [≈ 0, 7.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.693 ±(99.9%) 5.626 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.693, 3.304), stdev = 1.461
[info]   CI (99.9%): [≈ 0, 6.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.000, 10.000), stdev = 3.391
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.76% complete, ETA 00:32:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 882676.617 ops/s
[info] # Warmup Iteration   2: 2075757.063 ops/s
[info] # Warmup Iteration   3: 2119774.310 ops/s
[info] Iteration   1: 2171313.686 ops/s
[info]                  ·gc.alloc.rate:                   623.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              452.183 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     478.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2253948.935 ops/s
[info]                  ·gc.alloc.rate:               638.731 MB/sec
[info]                  ·gc.alloc.rate.norm:          445.942 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 230.717 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2229587.887 ops/s
[info]                  ·gc.alloc.rate:               645.560 MB/sec
[info]                  ·gc.alloc.rate.norm:          455.678 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 466.947 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 2239803.405 ops/s
[info]                  ·gc.alloc.rate:                   642.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              451.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     465.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2240906.648 ops/s
[info]                  ·gc.alloc.rate:               641.253 MB/sec
[info]                  ·gc.alloc.rate.norm:          450.256 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 465.960 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala":
[info]   2227112.112 ±(99.9%) 124643.848 ops/s [Average]
[info]   (min, avg, max) = (2171313.686, 2227112.112, 2253948.935), stdev = 32369.611
[info]   CI (99.9%): [2102468.264, 2351755.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   638.316 ±(99.9%) 32.393 MB/sec [Average]
[info]   (min, avg, max) = (623.917, 638.316, 645.560), stdev = 8.412
[info]   CI (99.9%): [605.923, 670.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   451.046 ±(99.9%) 13.537 B/op [Average]
[info]   (min, avg, max) = (445.942, 451.046, 455.678), stdev = 3.516
[info]   CI (99.9%): [437.508, 464.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   595.604 ±(99.9%) 570.759 MB/sec [Average]
[info]   (min, avg, max) = (330.461, 595.604, 663.618), stdev = 148.224
[info]   CI (99.9%): [24.845, 1166.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   421.479 ±(99.9%) 411.160 B/op [Average]
[info]   (min, avg, max) = (230.717, 421.479, 478.515), stdev = 106.777
[info]   CI (99.9%): [10.319, 832.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.051 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.029), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 64.00% complete, ETA 00:32:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1229042.126 ops/s
[info] # Warmup Iteration   2: 2293837.562 ops/s
[info] # Warmup Iteration   3: 2390834.770 ops/s
[info] Iteration   1: 2356626.970 ops/s
[info]                  ·gc.alloc.rate:               37.304 MB/sec
[info]                  ·gc.alloc.rate.norm:          24.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 170.826 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2395966.317 ops/s
[info]                  ·gc.alloc.rate:      24.360 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2392596.210 ops/s
[info]                  ·gc.alloc.rate:      24.325 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2393033.139 ops/s
[info]                  ·gc.alloc.rate:      24.336 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2366139.823 ops/s
[info]                  ·gc.alloc.rate:      24.064 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   2380872.492 ±(99.9%) 69898.662 ops/s [Average]
[info]   (min, avg, max) = (2356626.970, 2380872.492, 2395966.317), stdev = 18152.461
[info]   CI (99.9%): [2310973.830, 2450771.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   26.878 ±(99.9%) 22.448 MB/sec [Average]
[info]   (min, avg, max) = (24.064, 26.878, 37.304), stdev = 5.830
[info]   CI (99.9%): [4.430, 49.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   17.783 ±(99.9%) 15.347 B/op [Average]
[info]   (min, avg, max) = (16.000, 17.783, 24.912), stdev = 3.986
[info]   CI (99.9%): [2.436, 33.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   51.160 ±(99.9%) 440.500 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.160, 255.798), stdev = 114.397
[info]   CI (99.9%): [≈ 0, 491.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   34.165 ±(99.9%) 294.172 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 34.165, 170.826), stdev = 76.395
[info]   CI (99.9%): [≈ 0, 328.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 64.24% complete, ETA 00:32:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7233.255 ops/s
[info] # Warmup Iteration   2: 42221.105 ops/s
[info] # Warmup Iteration   3: 50727.116 ops/s
[info] Iteration   1: 50609.023 ops/s
[info]                  ·gc.alloc.rate:                   2179.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              67741.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61336.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.947 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 51596.230 ops/s
[info]                  ·gc.alloc.rate:                   2203.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              67184.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2325.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70912.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.270 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 51566.310 ops/s
[info]                  ·gc.alloc.rate:                   2228.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              68013.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61349.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.906 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 51089.672 ops/s
[info]                  ·gc.alloc.rate:                   2210.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              68064.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62238.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.641 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 51465.380 ops/s
[info]                  ·gc.alloc.rate:                   2239.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              68472.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2366.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72367.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.637 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson":
[info]   51265.323 ±(99.9%) 1612.794 ops/s [Average]
[info]   (min, avg, max) = (50609.023, 51265.323, 51596.230), stdev = 418.837
[info]   CI (99.9%): [49652.529, 52878.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2212.139 ±(99.9%) 90.052 MB/sec [Average]
[info]   (min, avg, max) = (2179.093, 2212.139, 2239.392), stdev = 23.386
[info]   CI (99.9%): [2122.087, 2302.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   67895.327 ±(99.9%) 1831.442 B/op [Average]
[info]   (min, avg, max) = (67184.501, 67895.327, 68472.554), stdev = 475.620
[info]   CI (99.9%): [66063.885, 69726.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2139.352 ±(99.9%) 732.499 MB/sec [Average]
[info]   (min, avg, max) = (1973.053, 2139.352, 2366.790), stdev = 190.228
[info]   CI (99.9%): [1406.853, 2871.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   65640.917 ±(99.9%) 21228.649 B/op [Average]
[info]   (min, avg, max) = (61336.103, 65640.917, 72367.919), stdev = 5513.013
[info]   CI (99.9%): [44412.268, 86869.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.112 ±(99.9%) 0.658 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.112, 0.416), stdev = 0.171
[info]   CI (99.9%): [≈ 0, 0.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.480 ±(99.9%) 20.478 B/op [Average]
[info]   (min, avg, max) = (0.637, 3.480, 12.947), stdev = 5.318
[info]   CI (99.9%): [≈ 0, 23.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 10.000), stdev = 1.225
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce
[info] # Run progress: 64.47% complete, ETA 00:32:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 88285.288 ops/s
[info] # Warmup Iteration   2: 678783.693 ops/s
[info] # Warmup Iteration   3: 858205.542 ops/s
[info] Iteration   1: 871315.376 ops/s
[info]                  ·gc.alloc.rate:                   2815.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              5084.367 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2955.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5336.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.053 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 873519.924 ops/s
[info]                  ·gc.alloc.rate:                   2834.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              5105.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2642.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4759.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 858342.903 ops/s
[info]                  ·gc.alloc.rate:               2789.619 MB/sec
[info]                  ·gc.alloc.rate.norm:          5114.474 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2671.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4897.964 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 849318.042 ops/s
[info]                  ·gc.alloc.rate:                   2761.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              5116.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2693.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4989.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 850991.820 ops/s
[info]                  ·gc.alloc.rate:               2768.359 MB/sec
[info]                  ·gc.alloc.rate.norm:          5119.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2707.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5006.641 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce":
[info]   860697.613 ±(99.9%) 43325.745 ops/s [Average]
[info]   (min, avg, max) = (849318.042, 860697.613, 873519.924), stdev = 11251.558
[info]   CI (99.9%): [817371.868, 904023.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate":
[info]   2794.008 ±(99.9%) 120.067 MB/sec [Average]
[info]   (min, avg, max) = (2761.400, 2794.008, 2834.981), stdev = 31.181
[info]   CI (99.9%): [2673.941, 2914.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   5108.108 ±(99.9%) 54.590 B/op [Average]
[info]   (min, avg, max) = (5084.367, 5108.108, 5119.230), stdev = 14.177
[info]   CI (99.9%): [5053.519, 5162.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2733.942 ±(99.9%) 485.392 MB/sec [Average]
[info]   (min, avg, max) = (2642.516, 2733.942, 2955.147), stdev = 126.055
[info]   CI (99.9%): [2248.550, 3219.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4997.997 ±(99.9%) 820.271 B/op [Average]
[info]   (min, avg, max) = (4759.283, 4997.997, 5336.200), stdev = 213.022
[info]   CI (99.9%): [4177.727, 5818.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.142 ±(99.9%) 0.965 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.142, 0.583), stdev = 0.250
[info]   CI (99.9%): [≈ 0, 1.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.257 ±(99.9%) 1.741 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.257, 1.053), stdev = 0.452
[info]   CI (99.9%): [≈ 0, 1.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.000, 12.000), stdev = 0.707
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava
[info] # Run progress: 64.71% complete, ETA 00:31:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.599 ops/s
[info] # Warmup Iteration   2: 4468084.832 ops/s
[info] # Warmup Iteration   3: 4892185.882 ops/s
[info] Iteration   1: 5098338.217 ops/s
[info]                  ·gc.alloc.rate:                   316.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              97.747 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 5145595.978 ops/s
[info]                  ·gc.alloc.rate:               320.189 MB/sec
[info]                  ·gc.alloc.rate.norm:          97.925 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 99.425 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 4908676.691 ops/s
[info]                  ·gc.alloc.rate:                   306.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4912195.880 ops/s
[info]                  ·gc.alloc.rate:                   311.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              99.704 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4911607.799 ops/s
[info]                  ·gc.alloc.rate:                   309.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              99.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava":
[info]   4995282.913 ±(99.9%) 449965.623 ops/s [Average]
[info]   (min, avg, max) = (4908676.691, 4995282.913, 5145595.978), stdev = 116854.643
[info]   CI (99.9%): [4545317.290, 5445248.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   312.738 ±(99.9%) 21.607 MB/sec [Average]
[info]   (min, avg, max) = (306.345, 312.738, 320.189), stdev = 5.611
[info]   CI (99.9%): [291.131, 334.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   98.534 ±(99.9%) 3.198 B/op [Average]
[info]   (min, avg, max) = (97.747, 98.534, 99.704), stdev = 0.831
[info]   CI (99.9%): [95.336, 101.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   311.243 ±(99.9%) 119.325 MB/sec [Average]
[info]   (min, avg, max) = (255.809, 311.243, 325.141), stdev = 30.988
[info]   CI (99.9%): [191.917, 430.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   98.184 ±(99.9%) 42.122 B/op [Average]
[info]   (min, avg, max) = (78.965, 98.184, 104.222), stdev = 10.939
[info]   CI (99.9%): [56.061, 140.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.019 ±(99.9%) 0.048 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.031), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala
[info] # Run progress: 64.94% complete, ETA 00:31:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42108.417 ops/s
[info] # Warmup Iteration   2: 732450.461 ops/s
[info] # Warmup Iteration   3: 975616.112 ops/s
[info] Iteration   1: 1004398.286 ops/s
[info]                  ·gc.alloc.rate:               1176.078 MB/sec
[info]                  ·gc.alloc.rate.norm:          1842.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:      980.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1536.960 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 1000234.816 ops/s
[info]                  ·gc.alloc.rate:                   1174.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              1848.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2063.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 1011225.094 ops/s
[info]                  ·gc.alloc.rate:                   1189.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              1850.474 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1530.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.413 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.869 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 995741.459 ops/s
[info]                  ·gc.alloc.rate:                   1184.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              1871.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2057.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1018854.184 ops/s
[info]                  ·gc.alloc.rate:               1197.587 MB/sec
[info]                  ·gc.alloc.rate.norm:          1849.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:      975.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1507.437 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala":
[info]   1006090.768 ±(99.9%) 35161.828 ops/s [Average]
[info]   (min, avg, max) = (995741.459, 1006090.768, 1018854.184), stdev = 9131.415
[info]   CI (99.9%): [970928.940, 1041252.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1184.335 ±(99.9%) 36.285 MB/sec [Average]
[info]   (min, avg, max) = (1174.885, 1184.335, 1197.587), stdev = 9.423
[info]   CI (99.9%): [1148.050, 1220.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1852.583 ±(99.9%) 42.194 B/op [Average]
[info]   (min, avg, max) = (1842.733, 1852.583, 1871.407), stdev = 10.958
[info]   CI (99.9%): [1810.388, 1894.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1110.708 ±(99.9%) 689.134 MB/sec [Average]
[info]   (min, avg, max) = (975.930, 1110.708, 1311.708), stdev = 178.966
[info]   CI (99.9%): [421.574, 1799.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1739.138 ±(99.9%) 1130.462 B/op [Average]
[info]   (min, avg, max) = (1507.437, 1739.138, 2063.755), stdev = 293.577
[info]   CI (99.9%): [608.676, 2869.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.889 ±(99.9%) 7.587 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.889, 4.413), stdev = 1.970
[info]   CI (99.9%): [≈ 0, 8.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.384 ±(99.9%) 11.807 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.384, 6.869), stdev = 3.066
[info]   CI (99.9%): [≈ 0, 13.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.200, 14.000), stdev = 4.438
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala
[info] # Run progress: 65.18% complete, ETA 00:31:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3352136.818 ops/s
[info] # Warmup Iteration   2: 8865361.988 ops/s
[info] # Warmup Iteration   3: 9161526.926 ops/s
[info] Iteration   1: 9116832.519 ops/s
[info]                  ·gc.alloc.rate:               425.595 MB/sec
[info]                  ·gc.alloc.rate.norm:          73.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 44.156 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 9196027.233 ops/s
[info]                  ·gc.alloc.rate:               442.891 MB/sec
[info]                  ·gc.alloc.rate.norm:          75.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113.203 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 9077422.778 ops/s
[info]                  ·gc.alloc.rate:               433.579 MB/sec
[info]                  ·gc.alloc.rate.norm:          75.149 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57.459 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 9097495.023 ops/s
[info]                  ·gc.alloc.rate:                   428.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              74.127 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 9159159.595 ops/s
[info]                  ·gc.alloc.rate:               434.322 MB/sec
[info]                  ·gc.alloc.rate.norm:          74.558 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113.812 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala":
[info]   9129387.429 ±(99.9%) 184693.695 ops/s [Average]
[info]   (min, avg, max) = (9077422.778, 9129387.429, 9196027.233), stdev = 47964.366
[info]   CI (99.9%): [8944693.734, 9314081.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   432.983 ±(99.9%) 25.453 MB/sec [Average]
[info]   (min, avg, max) = (425.595, 432.983, 442.891), stdev = 6.610
[info]   CI (99.9%): [407.530, 458.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   74.615 ±(99.9%) 3.487 B/op [Average]
[info]   (min, avg, max) = (73.447, 74.615, 75.793), stdev = 0.906
[info]   CI (99.9%): [71.128, 78.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   448.657 ±(99.9%) 760.127 MB/sec [Average]
[info]   (min, avg, max) = (255.867, 448.657, 662.990), stdev = 197.403
[info]   CI (99.9%): [≈ 0, 1208.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   77.192 ±(99.9%) 129.342 B/op [Average]
[info]   (min, avg, max) = (44.156, 77.192, 113.812), stdev = 33.590
[info]   CI (99.9%): [≈ 0, 206.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.006 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 5.000), stdev = 1.140
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson
[info] # Run progress: 65.41% complete, ETA 00:31:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2647.989 ops/s
[info] # Warmup Iteration   2: 96246.426 ops/s
[info] # Warmup Iteration   3: 404498.957 ops/s
[info] Iteration   1: 472104.718 ops/s
[info]                  ·gc.alloc.rate:                   2294.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              7647.804 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2299.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7664.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.845 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 469852.957 ops/s
[info]                  ·gc.alloc.rate:                   2283.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              7650.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2316.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7760.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.092 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 476058.782 ops/s
[info]                  ·gc.alloc.rate:               2321.067 MB/sec
[info]                  ·gc.alloc.rate.norm:          7670.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1997.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6600.025 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 466485.250 ops/s
[info]                  ·gc.alloc.rate:                   2296.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              7746.750 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2344.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7908.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 475081.713 ops/s
[info]                  ·gc.alloc.rate:                   2336.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              7739.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2359.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7816.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson":
[info]   471916.684 ±(99.9%) 15033.447 ops/s [Average]
[info]   (min, avg, max) = (466485.250, 471916.684, 476058.782), stdev = 3904.139
[info]   CI (99.9%): [456883.237, 486950.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2306.347 ±(99.9%) 83.592 MB/sec [Average]
[info]   (min, avg, max) = (2283.731, 2306.347, 2336.476), stdev = 21.708
[info]   CI (99.9%): [2222.756, 2389.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   7691.029 ±(99.9%) 186.885 B/op [Average]
[info]   (min, avg, max) = (7647.804, 7691.029, 7746.750), stdev = 48.533
[info]   CI (99.9%): [7504.144, 7877.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2263.401 ±(99.9%) 580.376 MB/sec [Average]
[info]   (min, avg, max) = (1997.056, 2263.401, 2359.573), stdev = 150.722
[info]   CI (99.9%): [1683.026, 2843.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   7550.120 ±(99.9%) 2073.317 B/op [Average]
[info]   (min, avg, max) = (6600.025, 7550.120, 7908.718), stdev = 538.434
[info]   CI (99.9%): [5476.803, 9623.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.312 ±(99.9%) 1.535 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.312, 0.854), stdev = 0.399
[info]   CI (99.9%): [≈ 0, 1.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.043 ±(99.9%) 5.122 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.043, 2.845), stdev = 1.330
[info]   CI (99.9%): [≈ 0, 6.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.400, 15.000), stdev = 2.074
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce
[info] # Run progress: 65.65% complete, ETA 00:31:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 533.954 ops/s
[info] # Warmup Iteration   2: 3351.417 ops/s
[info] # Warmup Iteration   3: 3855.968 ops/s
[info] Iteration   1: 4273.807 ops/s
[info]                  ·gc.alloc.rate:                   2145.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              789925.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     724314.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.422 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1628.074 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 4327.202 ops/s
[info]                  ·gc.alloc.rate:                   2160.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              785772.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1955.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     711161.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 158.958 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 4317.781 ops/s
[info]                  ·gc.alloc.rate:                   2188.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              797691.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2296.380 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     836869.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 91.043 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4345.094 ops/s
[info]                  ·gc.alloc.rate:                   2196.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              795427.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1987.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     719961.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 82.938 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 4354.590 ops/s
[info]                  ·gc.alloc.rate:                   2216.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              800874.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2340.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     845889.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.069 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.814 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce":
[info]   4323.694 ±(99.9%) 120.981 ops/s [Average]
[info]   (min, avg, max) = (4273.807, 4323.694, 4354.590), stdev = 31.418
[info]   CI (99.9%): [4202.713, 4444.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate":
[info]   2181.440 ±(99.9%) 109.127 MB/sec [Average]
[info]   (min, avg, max) = (2145.298, 2181.440, 2216.136), stdev = 28.340
[info]   CI (99.9%): [2072.313, 2290.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   793938.461 ±(99.9%) 23359.739 B/op [Average]
[info]   (min, avg, max) = (785772.237, 793938.461, 800874.927), stdev = 6066.450
[info]   CI (99.9%): [770578.722, 817298.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2109.510 ±(99.9%) 738.584 MB/sec [Average]
[info]   (min, avg, max) = (1955.543, 2109.510, 2340.699), stdev = 191.808
[info]   CI (99.9%): [1370.926, 2848.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   767639.441 ±(99.9%) 260139.366 B/op [Average]
[info]   (min, avg, max) = (711161.732, 767639.441, 845889.822), stdev = 67557.367
[info]   CI (99.9%): [507500.076, 1027778.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1.081 ±(99.9%) 7.208 MB/sec [Average]
[info]   (min, avg, max) = (0.069, 1.081, 4.422), stdev = 1.872
[info]   CI (99.9%): [≈ 0, 8.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   397.165 ±(99.9%) 2655.950 B/op [Average]
[info]   (min, avg, max) = (24.814, 397.165, 1628.074), stdev = 689.742
[info]   CI (99.9%): [≈ 0, 3053.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.600, 15.000), stdev = 2.510
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala
[info] # Run progress: 65.88% complete, ETA 00:30:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 583.570 ops/s
[info] # Warmup Iteration   2: 5415.291 ops/s
[info] # Warmup Iteration   3: 6786.358 ops/s
[info] Iteration   1: 6910.481 ops/s
[info]                  ·gc.alloc.rate:                   2335.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              531762.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2298.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     523529.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 175.407 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 6928.319 ops/s
[info]                  ·gc.alloc.rate:                   2358.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              535760.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2322.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     527616.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42.556 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 6924.226 ops/s
[info]                  ·gc.alloc.rate:               2378.177 MB/sec
[info]                  ·gc.alloc.rate.norm:          540487.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2342.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 532312.044 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 6869.040 ops/s
[info]                  ·gc.alloc.rate:                   2360.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              540855.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2357.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     540083.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.769 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 6943.063 ops/s
[info]                  ·gc.alloc.rate:               2372.394 MB/sec
[info]                  ·gc.alloc.rate.norm:          537690.671 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2029.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 459893.808 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala":
[info]   6915.026 ±(99.9%) 108.620 ops/s [Average]
[info]   (min, avg, max) = (6869.040, 6915.026, 6943.063), stdev = 28.208
[info]   CI (99.9%): [6806.406, 7023.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2361.070 ±(99.9%) 63.916 MB/sec [Average]
[info]   (min, avg, max) = (2335.069, 2361.070, 2378.177), stdev = 16.599
[info]   CI (99.9%): [2297.154, 2424.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   537311.325 ±(99.9%) 14407.220 B/op [Average]
[info]   (min, avg, max) = (531762.271, 537311.325, 540855.997), stdev = 3741.509
[info]   CI (99.9%): [522904.105, 551718.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2270.149 ±(99.9%) 525.611 MB/sec [Average]
[info]   (min, avg, max) = (2029.140, 2270.149, 2357.526), stdev = 136.499
[info]   CI (99.9%): [1744.538, 2795.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   516687.034 ±(99.9%) 124526.262 B/op [Average]
[info]   (min, avg, max) = (459893.808, 516687.034, 540083.025), stdev = 32339.075
[info]   CI (99.9%): [392160.773, 641213.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.196 ±(99.9%) 1.273 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.196, 0.770), stdev = 0.331
[info]   CI (99.9%): [≈ 0, 1.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   44.546 ±(99.9%) 289.948 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 44.546, 175.407), stdev = 75.299
[info]   CI (99.9%): [≈ 0, 334.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.000, 13.000), stdev = 1.414
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala
[info] # Run progress: 66.12% complete, ETA 00:30:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23109.859 ops/s
[info] # Warmup Iteration   2: 44267.971 ops/s
[info] # Warmup Iteration   3: 45684.661 ops/s
[info] Iteration   1: 45723.063 ops/s
[info]                  ·gc.alloc.rate:                   761.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              26206.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22768.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.150 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 46386.783 ops/s
[info]                  ·gc.alloc.rate:                   766.754 MB/sec
[info]                  ·gc.alloc.rate.norm:              26013.284 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22465.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.413 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 44769.219 ops/s
[info]                  ·gc.alloc.rate:                   751.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              26405.494 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34986.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.464 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 46069.253 ops/s
[info]                  ·gc.alloc.rate:                   763.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              26058.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22687.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 85.335 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 46099.257 ops/s
[info]                  ·gc.alloc.rate:                   763.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              26052.734 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22650.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.873 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala":
[info]   45809.515 ±(99.9%) 2415.754 ops/s [Average]
[info]   (min, avg, max) = (44769.219, 45809.515, 46386.783), stdev = 627.364
[info]   CI (99.9%): [43393.761, 48225.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   761.110 ±(99.9%) 22.669 MB/sec [Average]
[info]   (min, avg, max) = (751.177, 761.110, 766.754), stdev = 5.887
[info]   CI (99.9%): [738.441, 783.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   26147.245 ±(99.9%) 623.685 B/op [Average]
[info]   (min, avg, max) = (26013.284, 26147.245, 26405.494), stdev = 161.969
[info]   CI (99.9%): [25523.560, 26770.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   729.370 ±(99.9%) 572.444 MB/sec [Average]
[info]   (min, avg, max) = (661.524, 729.370, 995.298), stdev = 148.662
[info]   CI (99.9%): [156.927, 1301.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   25111.820 ±(99.9%) 21261.116 B/op [Average]
[info]   (min, avg, max) = (22465.450, 25111.820, 34986.880), stdev = 5521.444
[info]   CI (99.9%): [3850.704, 46372.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.675 ±(99.9%) 4.087 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.675, 2.499), stdev = 1.061
[info]   CI (99.9%): [≈ 0, 4.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   23.047 ±(99.9%) 139.553 B/op [Average]
[info]   (min, avg, max) = (1.413, 23.047, 85.335), stdev = 36.241
[info]   CI (99.9%): [≈ 0, 162.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 8.000), stdev = 1.483
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce
[info] # Run progress: 66.35% complete, ETA 00:30:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1385.484 ops/s
[info] # Warmup Iteration   2: 3659.781 ops/s
[info] # Warmup Iteration   3: 4325.597 ops/s
[info] Iteration   1: 4567.527 ops/s
[info]                  ·gc.alloc.rate:                   1007.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              346911.989 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     339886.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 86.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 4586.838 ops/s
[info]                  ·gc.alloc.rate:                   1005.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              344867.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     339164.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.568 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 4597.984 ops/s
[info]                  ·gc.alloc.rate:                   1001.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              342932.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     338581.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.319 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1135.901 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 4602.820 ops/s
[info]                  ·gc.alloc.rate:                   1019.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              348694.791 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     336391.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.868 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 296.801 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4607.152 ops/s
[info]                  ·gc.alloc.rate:                   1013.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              346307.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     334661.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63.986 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce":
[info]   4592.464 ±(99.9%) 61.095 ops/s [Average]
[info]   (min, avg, max) = (4567.527, 4592.464, 4607.152), stdev = 15.866
[info]   CI (99.9%): [4531.369, 4653.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate":
[info]   1009.693 ±(99.9%) 27.638 MB/sec [Average]
[info]   (min, avg, max) = (1001.999, 1009.693, 1019.937), stdev = 7.178
[info]   CI (99.9%): [982.055, 1037.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   345942.864 ±(99.9%) 8361.554 B/op [Average]
[info]   (min, avg, max) = (342932.921, 345942.864, 348694.791), stdev = 2171.469
[info]   CI (99.9%): [337581.310, 354304.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   985.729 ±(99.9%) 15.125 MB/sec [Average]
[info]   (min, avg, max) = (979.810, 985.729, 989.284), stdev = 3.928
[info]   CI (99.9%): [970.604, 1000.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   337737.077 ±(99.9%) 8312.162 B/op [Average]
[info]   (min, avg, max) = (334661.596, 337737.077, 339886.421), stdev = 2158.642
[info]   CI (99.9%): [329424.915, 346049.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.942 ±(99.9%) 5.252 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 0.942, 3.319), stdev = 1.364
[info]   CI (99.9%): [≈ 0, 6.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   322.264 ±(99.9%) 1797.275 B/op [Average]
[info]   (min, avg, max) = (28.568, 322.264, 1135.901), stdev = 466.747
[info]   CI (99.9%): [≈ 0, 2119.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 11.000), stdev = 3.033
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala
[info] # Run progress: 66.59% complete, ETA 00:30:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1247.585 ops/s
[info] # Warmup Iteration   2: 4455.989 ops/s
[info] # Warmup Iteration   3: 4923.882 ops/s
[info] Iteration   1: 4996.617 ops/s
[info]                  ·gc.alloc.rate:                   634.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              199682.707 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     201721.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.669 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5014.269 ops/s
[info]                  ·gc.alloc.rate:                   630.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              197922.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     201729.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.533 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 5001.366 ops/s
[info]                  ·gc.alloc.rate:               634.265 MB/sec
[info]                  ·gc.alloc.rate.norm:          199565.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 203092.173 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 4995.916 ops/s
[info]                  ·gc.alloc.rate:                   627.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              197695.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     204385.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.115 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4994.884 ops/s
[info]                  ·gc.alloc.rate:               625.021 MB/sec
[info]                  ·gc.alloc.rate.norm:          196918.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 102527.898 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala":
[info]   5000.610 ±(99.9%) 30.919 ops/s [Average]
[info]   (min, avg, max) = (4994.884, 5000.610, 5014.269), stdev = 8.030
[info]   CI (99.9%): [4969.692, 5031.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   630.323 ±(99.9%) 15.513 MB/sec [Average]
[info]   (min, avg, max) = (625.021, 630.323, 634.265), stdev = 4.029
[info]   CI (99.9%): [614.810, 645.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   198356.743 ±(99.9%) 4681.971 B/op [Average]
[info]   (min, avg, max) = (196918.357, 198356.743, 199682.707), stdev = 1215.893
[info]   CI (99.9%): [193674.772, 203038.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   580.615 ±(99.9%) 549.446 MB/sec [Average]
[info]   (min, avg, max) = (325.425, 580.615, 648.850), stdev = 142.689
[info]   CI (99.9%): [31.169, 1130.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   182691.359 ±(99.9%) 172610.388 B/op [Average]
[info]   (min, avg, max) = (102527.898, 182691.359, 204385.236), stdev = 44826.370
[info]   CI (99.9%): [10080.970, 355301.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.863 ±(99.9%) 32.921 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.863, 19.669), stdev = 8.550
[info]   CI (99.9%): [≈ 0, 40.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala
[info] # Run progress: 66.82% complete, ETA 00:30:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3637.174 ops/s
[info] # Warmup Iteration   2: 6275.492 ops/s
[info] # Warmup Iteration   3: 6361.175 ops/s
[info] Iteration   1: 6570.919 ops/s
[info]                  ·gc.alloc.rate:               328.617 MB/sec
[info]                  ·gc.alloc.rate.norm:          78697.675 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61258.662 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 6598.037 ops/s
[info]                  ·gc.alloc.rate:               330.305 MB/sec
[info]                  ·gc.alloc.rate.norm:          78758.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78643.200 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 6579.978 ops/s
[info]                  ·gc.alloc.rate:                   333.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              79756.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78858.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.465 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 6557.292 ops/s
[info]                  ·gc.alloc.rate:               334.080 MB/sec
[info]                  ·gc.alloc.rate.norm:          80152.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79134.795 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 6588.274 ops/s
[info]                  ·gc.alloc.rate:               333.599 MB/sec
[info]                  ·gc.alloc.rate.norm:          79667.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78762.537 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala":
[info]   6578.900 ±(99.9%) 60.453 ops/s [Average]
[info]   (min, avg, max) = (6557.292, 6578.900, 6598.037), stdev = 15.699
[info]   CI (99.9%): [6518.447, 6639.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   332.016 ±(99.9%) 9.310 MB/sec [Average]
[info]   (min, avg, max) = (328.617, 332.016, 334.080), stdev = 2.418
[info]   CI (99.9%): [322.706, 341.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   79406.616 ±(99.9%) 2487.744 B/op [Average]
[info]   (min, avg, max) = (78697.675, 79406.616, 80152.463), stdev = 646.059
[info]   CI (99.9%): [76918.872, 81894.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   314.997 ±(99.9%) 127.433 MB/sec [Average]
[info]   (min, avg, max) = (255.797, 314.997, 329.838), stdev = 33.094
[info]   CI (99.9%): [187.564, 442.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   75331.492 ±(99.9%) 30300.879 B/op [Average]
[info]   (min, avg, max) = (61258.662, 75331.492, 79134.795), stdev = 7869.042
[info]   CI (99.9%): [45030.613, 105632.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.493 ±(99.9%) 12.856 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.493, 7.465), stdev = 3.339
[info]   CI (99.9%): [≈ 0, 14.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 67.06% complete, ETA 00:29:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3599.065 ops/s
[info] # Warmup Iteration   2: 5938.961 ops/s
[info] # Warmup Iteration   3: 6618.430 ops/s
[info] Iteration   1: 6641.840 ops/s
[info]                  ·gc.alloc.rate:                   281.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              66636.526 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60604.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.067 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.865 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6664.166 ops/s
[info]                  ·gc.alloc.rate:               282.792 MB/sec
[info]                  ·gc.alloc.rate.norm:          66762.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60404.018 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 6611.623 ops/s
[info]                  ·gc.alloc.rate:               281.830 MB/sec
[info]                  ·gc.alloc.rate.norm:          67064.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78476.734 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 6638.037 ops/s
[info]                  ·gc.alloc.rate:               284.550 MB/sec
[info]                  ·gc.alloc.rate.norm:          67454.171 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78169.446 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 6638.954 ops/s
[info]                  ·gc.alloc.rate:               283.353 MB/sec
[info]                  ·gc.alloc.rate.norm:          67165.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78236.622 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc":
[info]   6638.924 ±(99.9%) 71.829 ops/s [Average]
[info]   (min, avg, max) = (6611.623, 6638.924, 6664.166), stdev = 18.654
[info]   CI (99.9%): [6567.095, 6710.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   282.756 ±(99.9%) 4.978 MB/sec [Average]
[info]   (min, avg, max) = (281.255, 282.756, 284.550), stdev = 1.293
[info]   CI (99.9%): [277.778, 287.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   67016.867 ±(99.9%) 1255.173 B/op [Average]
[info]   (min, avg, max) = (66636.526, 67016.867, 67454.171), stdev = 325.964
[info]   CI (99.9%): [65761.695, 68272.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   300.249 ±(99.9%) 156.156 MB/sec [Average]
[info]   (min, avg, max) = (255.793, 300.249, 330.056), stdev = 40.553
[info]   CI (99.9%): [144.094, 456.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   71178.170 ±(99.9%) 37524.692 B/op [Average]
[info]   (min, avg, max) = (60404.018, 71178.170, 78476.734), stdev = 9745.043
[info]   CI (99.9%): [33653.478, 108702.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.013 ±(99.9%) 0.115 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.067), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   3.173 ±(99.9%) 27.321 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.173, 15.865), stdev = 7.095
[info]   CI (99.9%): [≈ 0, 30.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce
[info] # Run progress: 67.29% complete, ETA 00:29:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2469.877 ops/s
[info] # Warmup Iteration   2: 6208.484 ops/s
[info] # Warmup Iteration   3: 7715.632 ops/s
[info] Iteration   1: 7920.566 ops/s
[info]                  ·gc.alloc.rate:                   1681.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              334118.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.405 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     328085.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.308 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 657.217 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 7957.683 ops/s
[info]                  ·gc.alloc.rate:                   1699.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              336152.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1641.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     324584.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 152.314 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 7975.235 ops/s
[info]                  ·gc.alloc.rate:                   1696.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              334733.399 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1639.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     323457.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.429 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 7961.111 ops/s
[info]                  ·gc.alloc.rate:                   1706.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              337441.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1647.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     325713.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.116 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.018 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 7957.558 ops/s
[info]                  ·gc.alloc.rate:                   1706.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              337571.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1659.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     328206.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.179 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.377 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce":
[info]   7954.430 ±(99.9%) 78.080 ops/s [Average]
[info]   (min, avg, max) = (7920.566, 7954.430, 7975.235), stdev = 20.277
[info]   CI (99.9%): [7876.351, 8032.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1698.374 ±(99.9%) 39.889 MB/sec [Average]
[info]   (min, avg, max) = (1681.772, 1698.374, 1706.979), stdev = 10.359
[info]   CI (99.9%): [1658.485, 1738.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   336003.192 ±(99.9%) 6000.346 B/op [Average]
[info]   (min, avg, max) = (334118.372, 336003.192, 337571.093), stdev = 1558.271
[info]   CI (99.9%): [330002.845, 342003.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1647.837 ±(99.9%) 31.483 MB/sec [Average]
[info]   (min, avg, max) = (1639.187, 1647.837, 1659.580), stdev = 8.176
[info]   CI (99.9%): [1616.354, 1679.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   326009.455 ±(99.9%) 8115.716 B/op [Average]
[info]   (min, avg, max) = (323457.701, 326009.455, 328206.923), stdev = 2107.626
[info]   CI (99.9%): [317893.739, 334125.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.891 ±(99.9%) 5.313 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 0.891, 3.308), stdev = 1.380
[info]   CI (99.9%): [≈ 0, 6.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   176.871 ±(99.9%) 1055.891 B/op [Average]
[info]   (min, avg, max) = (16.429, 176.871, 657.217), stdev = 274.212
[info]   CI (99.9%): [≈ 0, 1232.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 15.000), stdev = 3.209
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava
[info] # Run progress: 67.53% complete, ETA 00:29:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.757 ops/s
[info] # Warmup Iteration   2: 16607.056 ops/s
[info] # Warmup Iteration   3: 18955.641 ops/s
[info] Iteration   1: 19102.665 ops/s
[info]                  ·gc.alloc.rate:                   480.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              39555.674 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26671.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 386.057 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 19080.326 ops/s
[info]                  ·gc.alloc.rate:                   487.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              40167.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          644.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53184.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.434 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 19087.411 ops/s
[info]                  ·gc.alloc.rate:               482.619 MB/sec
[info]                  ·gc.alloc.rate.norm:          39782.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26472.535 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 18987.351 ops/s
[info]                  ·gc.alloc.rate:                   496.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              41184.477 B/op
[info]                  ·gc.churn.PS_Eden_Space:          642.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53223.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.725 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 19101.790 ops/s
[info]                  ·gc.alloc.rate:               482.072 MB/sec
[info]                  ·gc.alloc.rate.norm:          39717.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26453.137 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava":
[info]   19071.908 ±(99.9%) 185.672 ops/s [Average]
[info]   (min, avg, max) = (18987.351, 19071.908, 19102.665), stdev = 48.218
[info]   CI (99.9%): [18886.237, 19257.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   485.780 ±(99.9%) 25.801 MB/sec [Average]
[info]   (min, avg, max) = (480.267, 485.780, 496.910), stdev = 6.701
[info]   CI (99.9%): [459.979, 511.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   40081.444 ±(99.9%) 2527.201 B/op [Average]
[info]   (min, avg, max) = (39555.674, 40081.444, 41184.477), stdev = 656.306
[info]   CI (99.9%): [37554.243, 42608.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   450.617 ±(99.9%) 678.077 MB/sec [Average]
[info]   (min, avg, max) = (321.079, 450.617, 644.854), stdev = 176.094
[info]   CI (99.9%): [≈ 0, 1128.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   37201.009 ±(99.9%) 56253.937 B/op [Average]
[info]   (min, avg, max) = (26453.137, 37201.009, 53223.845), stdev = 14608.969
[info]   CI (99.9%): [≈ 0, 93454.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.950 ±(99.9%) 8.045 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.950, 4.687), stdev = 2.089
[info]   CI (99.9%): [≈ 0, 8.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   78.243 ±(99.9%) 662.615 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 78.243, 386.057), stdev = 172.079
[info]   CI (99.9%): [≈ 0, 740.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala
[info] # Run progress: 67.76% complete, ETA 00:29:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4668.364 ops/s
[info] # Warmup Iteration   2: 13886.465 ops/s
[info] # Warmup Iteration   3: 15775.794 ops/s
[info] Iteration   1: 15916.611 ops/s
[info]                  ·gc.alloc.rate:               431.156 MB/sec
[info]                  ·gc.alloc.rate.norm:          42627.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31551.473 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 15910.820 ops/s
[info]                  ·gc.alloc.rate:               430.243 MB/sec
[info]                  ·gc.alloc.rate.norm:          42544.428 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31563.370 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 15827.023 ops/s
[info]                  ·gc.alloc.rate:                   441.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              43860.831 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63656.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.140 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 15957.484 ops/s
[info]                  ·gc.alloc.rate:                   430.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              42496.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31733.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.053 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 15881.618 ops/s
[info]                  ·gc.alloc.rate:               434.429 MB/sec
[info]                  ·gc.alloc.rate.norm:          43036.961 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31885.055 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala":
[info]   15898.711 ±(99.9%) 186.196 ops/s [Average]
[info]   (min, avg, max) = (15827.023, 15898.711, 15957.484), stdev = 48.355
[info]   CI (99.9%): [15712.515, 16084.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   433.588 ±(99.9%) 17.413 MB/sec [Average]
[info]   (min, avg, max) = (430.243, 433.588, 441.146), stdev = 4.522
[info]   CI (99.9%): [416.175, 451.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   42913.179 ±(99.9%) 2199.330 B/op [Average]
[info]   (min, avg, max) = (42496.016, 42913.179, 43860.831), stdev = 571.159
[info]   CI (99.9%): [40713.849, 45112.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   384.449 ±(99.9%) 550.650 MB/sec [Average]
[info]   (min, avg, max) = (319.127, 384.449, 640.247), stdev = 143.002
[info]   CI (99.9%): [≈ 0, 935.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   38077.913 ±(99.9%) 55062.244 B/op [Average]
[info]   (min, avg, max) = (31551.473, 38077.913, 63656.446), stdev = 14299.490
[info]   CI (99.9%): [≈ 0, 93140.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.239 ±(99.9%) 7.122 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.239, 4.140), stdev = 1.850
[info]   CI (99.9%): [≈ 0, 8.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala
[info] # Run progress: 68.00% complete, ETA 00:29:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11066.761 ops/s
[info] # Warmup Iteration   2: 21140.847 ops/s
[info] # Warmup Iteration   3: 22923.473 ops/s
[info] Iteration   1: 23098.797 ops/s
[info]                  ·gc.alloc.rate:               444.425 MB/sec
[info]                  ·gc.alloc.rate.norm:          30278.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:      585.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 39893.452 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 23356.905 ops/s
[info]                  ·gc.alloc.rate:               446.112 MB/sec
[info]                  ·gc.alloc.rate.norm:          30049.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22216.544 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 22545.994 ops/s
[info]                  ·gc.alloc.rate:                   439.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              30685.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23064.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.453 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 23453.577 ops/s
[info]                  ·gc.alloc.rate:                   455.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              30556.536 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44364.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.397 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 23522.780 ops/s
[info]                  ·gc.alloc.rate:               441.715 MB/sec
[info]                  ·gc.alloc.rate.norm:          29550.827 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22127.592 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala":
[info]   23195.610 ±(99.9%) 1529.362 ops/s [Average]
[info]   (min, avg, max) = (22545.994, 23195.610, 23522.780), stdev = 397.170
[info]   CI (99.9%): [21666.249, 24724.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   445.454 ±(99.9%) 23.468 MB/sec [Average]
[info]   (min, avg, max) = (439.613, 445.454, 455.403), stdev = 6.094
[info]   CI (99.9%): [421.986, 468.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   30224.059 ±(99.9%) 1732.525 B/op [Average]
[info]   (min, avg, max) = (29550.827, 30224.059, 30685.202), stdev = 449.931
[info]   CI (99.9%): [28491.533, 31956.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   447.553 ±(99.9%) 626.575 MB/sec [Average]
[info]   (min, avg, max) = (329.822, 447.553, 661.198), stdev = 162.720
[info]   CI (99.9%): [≈ 0, 1074.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   30333.301 ±(99.9%) 41932.253 B/op [Average]
[info]   (min, avg, max) = (22127.592, 30333.301, 44364.894), stdev = 10889.673
[info]   CI (99.9%): [≈ 0, 72265.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.570 ±(99.9%) 3.006 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.570, 1.453), stdev = 0.781
[info]   CI (99.9%): [≈ 0, 3.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson
[info] # Run progress: 68.24% complete, ETA 00:28:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79.929 ops/s
[info] # Warmup Iteration   2: 2122.343 ops/s
[info] # Warmup Iteration   3: 3304.279 ops/s
[info] Iteration   1: 3315.802 ops/s
[info]                  ·gc.alloc.rate:                   2014.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              955948.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     935720.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.505 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 713.910 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 3345.105 ops/s
[info]                  ·gc.alloc.rate:                   2022.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              951203.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1982.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     932624.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.586 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 3346.750 ops/s
[info]                  ·gc.alloc.rate:                   2036.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              957432.160 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     781890.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107.661 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 3345.806 ops/s
[info]                  ·gc.alloc.rate:                   2049.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              964043.717 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     943624.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.581 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3345.354 ops/s
[info]                  ·gc.alloc.rate:               2050.043 MB/sec
[info]                  ·gc.alloc.rate.norm:          964290.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2017.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 948793.671 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson":
[info]   3339.763 ±(99.9%) 51.636 ops/s [Average]
[info]   (min, avg, max) = (3315.802, 3339.763, 3346.750), stdev = 13.410
[info]   CI (99.9%): [3288.128, 3391.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2034.674 ±(99.9%) 60.994 MB/sec [Average]
[info]   (min, avg, max) = (2014.884, 2034.674, 2050.043), stdev = 15.840
[info]   CI (99.9%): [1973.680, 2095.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   958583.737 ±(99.9%) 21534.788 B/op [Average]
[info]   (min, avg, max) = (951203.900, 958583.737, 964290.101), stdev = 5592.516
[info]   CI (99.9%): [937048.949, 980118.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1928.305 ±(99.9%) 575.328 MB/sec [Average]
[info]   (min, avg, max) = (1662.948, 1928.305, 2017.099), stdev = 149.411
[info]   CI (99.9%): [1352.977, 2503.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   908530.792 ±(99.9%) 273708.589 B/op [Average]
[info]   (min, avg, max) = (781890.676, 908530.792, 948793.671), stdev = 71081.251
[info]   CI (99.9%): [634822.202, 1182239.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.363 ±(99.9%) 2.480 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.363, 1.505), stdev = 0.644
[info]   CI (99.9%): [≈ 0, 2.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   172.148 ±(99.9%) 1177.208 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 172.148, 713.910), stdev = 305.717
[info]   CI (99.9%): [≈ 0, 1349.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.000, 13.000), stdev = 1.732
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce
[info] # Run progress: 68.47% complete, ETA 00:28:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3004.724 ops/s
[info] # Warmup Iteration   2: 8798.218 ops/s
[info] # Warmup Iteration   3: 10072.016 ops/s
[info] Iteration   1: 10186.356 ops/s
[info]                  ·gc.alloc.rate:                   2155.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              332994.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1971.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     304569.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 154.369 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 10290.302 ops/s
[info]                  ·gc.alloc.rate:                   2193.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              335454.530 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     300980.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.652 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 10176.980 ops/s
[info]                  ·gc.alloc.rate:                   2198.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              339885.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2313.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     357679.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.219 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 10187.170 ops/s
[info]                  ·gc.alloc.rate:                   2188.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              338086.872 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2000.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     309088.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.431 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 10134.265 ops/s
[info]                  ·gc.alloc.rate:                   2177.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              338099.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     312803.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.233 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce":
[info]   10195.015 ±(99.9%) 221.470 ops/s [Average]
[info]   (min, avg, max) = (10134.265, 10195.015, 10290.302), stdev = 57.515
[info]   CI (99.9%): [9973.545, 10416.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate":
[info]   2182.576 ±(99.9%) 65.261 MB/sec [Average]
[info]   (min, avg, max) = (2155.623, 2182.576, 2198.086), stdev = 16.948
[info]   CI (99.9%): [2117.314, 2247.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   336904.065 ±(99.9%) 10386.459 B/op [Average]
[info]   (min, avg, max) = (332994.270, 336904.065, 339885.077), stdev = 2697.330
[info]   CI (99.9%): [326517.607, 347290.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2053.587 ±(99.9%) 563.794 MB/sec [Average]
[info]   (min, avg, max) = (1968.016, 2053.587, 2313.167), stdev = 146.415
[info]   CI (99.9%): [1489.793, 2617.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   317024.557 ±(99.9%) 89193.919 B/op [Average]
[info]   (min, avg, max) = (300980.698, 317024.557, 357679.780), stdev = 23163.377
[info]   CI (99.9%): [227830.638, 406218.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.254 ±(99.9%) 1.627 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.254, 0.999), stdev = 0.422
[info]   CI (99.9%): [≈ 0, 1.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   39.181 ±(99.9%) 251.306 B/op [Average]
[info]   (min, avg, max) = (3.219, 39.181, 154.369), stdev = 65.263
[info]   CI (99.9%): [≈ 0, 290.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.200, 10.000), stdev = 0.837
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava
[info] # Run progress: 68.71% complete, ETA 00:28:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.827 ops/s
[info] # Warmup Iteration   2: 49463.916 ops/s
[info] # Warmup Iteration   3: 56988.552 ops/s
[info] Iteration   1: 57306.799 ops/s
[info]                  ·gc.alloc.rate:               556.826 MB/sec
[info]                  ·gc.alloc.rate.norm:          15291.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:      646.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17744.569 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 57345.963 ops/s
[info]                  ·gc.alloc.rate:                   555.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              15247.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17769.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.143 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 56457.821 ops/s
[info]                  ·gc.alloc.rate:               536.025 MB/sec
[info]                  ·gc.alloc.rate.norm:          14940.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9042.810 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 56084.659 ops/s
[info]                  ·gc.alloc.rate:                   547.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              15371.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18224.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.584 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 56188.851 ops/s
[info]                  ·gc.alloc.rate:                   541.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              15175.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18229.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.583 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava":
[info]   56676.819 ±(99.9%) 2343.328 ops/s [Average]
[info]   (min, avg, max) = (56084.659, 56676.819, 57345.963), stdev = 608.555
[info]   CI (99.9%): [54333.491, 59020.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   547.615 ±(99.9%) 34.263 MB/sec [Average]
[info]   (min, avg, max) = (536.025, 547.615, 556.826), stdev = 8.898
[info]   CI (99.9%): [513.353, 581.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   15205.063 ±(99.9%) 631.270 B/op [Average]
[info]   (min, avg, max) = (14940.762, 15205.063, 15371.027), stdev = 163.939
[info]   CI (99.9%): [14573.793, 15836.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   583.694 ±(99.9%) 558.138 MB/sec [Average]
[info]   (min, avg, max) = (324.426, 583.694, 650.854), stdev = 144.947
[info]   CI (99.9%): [25.556, 1141.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   16202.154 ±(99.9%) 15437.615 B/op [Average]
[info]   (min, avg, max) = (9042.810, 16202.154, 18229.128), stdev = 4009.100
[info]   CI (99.9%): [764.539, 31639.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.462 ±(99.9%) 1.846 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.462, 1.143), stdev = 0.479
[info]   CI (99.9%): [≈ 0, 2.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 7.000), stdev = 1.789
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala
[info] # Run progress: 68.94% complete, ETA 00:28:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13376.841 ops/s
[info] # Warmup Iteration   2: 42038.284 ops/s
[info] # Warmup Iteration   3: 43963.101 ops/s
[info] Iteration   1: 43744.894 ops/s
[info]                  ·gc.alloc.rate:                   647.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              23298.827 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23294.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.498 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 43802.865 ops/s
[info]                  ·gc.alloc.rate:               642.123 MB/sec
[info]                  ·gc.alloc.rate.norm:          23058.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:      645.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23181.136 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 44961.809 ops/s
[info]                  ·gc.alloc.rate:                   663.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              23205.175 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22594.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.457 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 44934.961 ops/s
[info]                  ·gc.alloc.rate:               659.965 MB/sec
[info]                  ·gc.alloc.rate.norm:          23107.256 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22654.132 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 45652.818 ops/s
[info]                  ·gc.alloc.rate:                   681.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              23484.795 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22343.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.718 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala":
[info]   44619.470 ±(99.9%) 3173.141 ops/s [Average]
[info]   (min, avg, max) = (43744.894, 44619.470, 45652.818), stdev = 824.055
[info]   CI (99.9%): [41446.328, 47792.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   658.807 ±(99.9%) 58.609 MB/sec [Average]
[info]   (min, avg, max) = (642.123, 658.807, 681.278), stdev = 15.220
[info]   CI (99.9%): [600.199, 717.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   23230.826 ±(99.9%) 652.608 B/op [Average]
[info]   (min, avg, max) = (23058.078, 23230.826, 23484.795), stdev = 169.480
[info]   CI (99.9%): [22578.219, 23883.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   646.769 ±(99.9%) 4.518 MB/sec [Average]
[info]   (min, avg, max) = (645.550, 646.769, 648.166), stdev = 1.173
[info]   CI (99.9%): [642.251, 651.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   22813.551 ±(99.9%) 1564.712 B/op [Average]
[info]   (min, avg, max) = (22343.351, 22813.551, 23294.233), stdev = 406.351
[info]   CI (99.9%): [21248.839, 24378.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.735 ±(99.9%) 2.846 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.735, 1.498), stdev = 0.739
[info]   CI (99.9%): [≈ 0, 3.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala
[info] # Run progress: 69.18% complete, ETA 00:27:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43203.513 ops/s
[info] # Warmup Iteration   2: 87609.035 ops/s
[info] # Warmup Iteration   3: 87486.064 ops/s
[info] Iteration   1: 89803.158 ops/s
[info]                  ·gc.alloc.rate:                   699.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              12251.507 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17285.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.098 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.710 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 88709.249 ops/s
[info]                  ·gc.alloc.rate:                   695.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              12346.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11735.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.369 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 90355.761 ops/s
[info]                  ·gc.alloc.rate:                   697.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              12150.633 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11533.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.725 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 89972.754 ops/s
[info]                  ·gc.alloc.rate:                   691.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              12096.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11593.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.728 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 89976.005 ops/s
[info]                  ·gc.alloc.rate:                   690.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              12077.979 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11605.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.000 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.473 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala":
[info]   89763.385 ±(99.9%) 2399.122 ops/s [Average]
[info]   (min, avg, max) = (88709.249, 89763.385, 90355.761), stdev = 623.044
[info]   CI (99.9%): [87364.263, 92162.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   695.137 ±(99.9%) 15.256 MB/sec [Average]
[info]   (min, avg, max) = (690.550, 695.137, 699.907), stdev = 3.962
[info]   CI (99.9%): [679.881, 710.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   12184.629 ±(99.9%) 433.793 B/op [Average]
[info]   (min, avg, max) = (12077.979, 12184.629, 12346.093), stdev = 112.655
[info]   CI (99.9%): [11750.836, 12618.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   727.509 ±(99.9%) 559.605 MB/sec [Average]
[info]   (min, avg, max) = (661.555, 727.509, 987.476), stdev = 145.328
[info]   CI (99.9%): [167.904, 1287.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   12750.434 ±(99.9%) 9765.649 B/op [Average]
[info]   (min, avg, max) = (11533.013, 12750.434, 17285.243), stdev = 2536.108
[info]   CI (99.9%): [2984.785, 22516.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.640 ±(99.9%) 5.081 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.640, 3.000), stdev = 1.319
[info]   CI (99.9%): [≈ 0, 5.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.201 ±(99.9%) 88.862 B/op [Average]
[info]   (min, avg, max) = (0.369, 11.201, 52.473), stdev = 23.077
[info]   CI (99.9%): [≈ 0, 100.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 9.000), stdev = 1.643
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 69.41% complete, ETA 00:27:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33234.933 ops/s
[info] # Warmup Iteration   2: 97890.572 ops/s
[info] # Warmup Iteration   3: 102379.940 ops/s
[info] Iteration   1: 104138.321 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 104279.300 ops/s
[info]                  ·gc.alloc.rate:      0.490 MB/sec
[info]                  ·gc.alloc.rate.norm: 7.388 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 104705.136 ops/s
[info]                  ·gc.alloc.rate:      0.383 MB/sec
[info]                  ·gc.alloc.rate.norm: 5.762 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 98754.544 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 104241.005 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   103223.661 ±(99.9%) 9656.164 ops/s [Average]
[info]   (min, avg, max) = (98754.544, 103223.661, 104705.136), stdev = 2507.675
[info]   CI (99.9%): [93567.497, 112879.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.175 ±(99.9%) 0.931 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.175, 0.490), stdev = 0.242
[info]   CI (99.9%): [≈ 0, 1.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2.633 ±(99.9%) 14.034 B/op [Average]
[info]   (min, avg, max) = (0.004, 2.633, 7.388), stdev = 3.645
[info]   CI (99.9%): [≈ 0, 16.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson
[info] # Run progress: 69.65% complete, ETA 00:27:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 534.444 ops/s
[info] # Warmup Iteration   2: 6235.142 ops/s
[info] # Warmup Iteration   3: 7697.180 ops/s
[info] Iteration   1: 7658.131 ops/s
[info]                  ·gc.alloc.rate:                   2296.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              471948.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2302.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     473097.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 136.872 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 7695.890 ops/s
[info]                  ·gc.alloc.rate:                   2326.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              475718.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2325.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     475455.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.540 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 7658.452 ops/s
[info]                  ·gc.alloc.rate:               2330.351 MB/sec
[info]                  ·gc.alloc.rate.norm:          478783.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2344.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 481783.712 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 7611.487 ops/s
[info]                  ·gc.alloc.rate:                   2302.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              476046.914 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     417901.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.607 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 7679.925 ops/s
[info]                  ·gc.alloc.rate:               2337.655 MB/sec
[info]                  ·gc.alloc.rate.norm:          478984.393 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2368.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 485249.633 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson":
[info]   7660.777 ±(99.9%) 122.398 ops/s [Average]
[info]   (min, avg, max) = (7611.487, 7660.777, 7695.890), stdev = 31.786
[info]   CI (99.9%): [7538.379, 7783.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2318.786 ±(99.9%) 69.245 MB/sec [Average]
[info]   (min, avg, max) = (2296.819, 2318.786, 2337.655), stdev = 17.983
[info]   CI (99.9%): [2249.540, 2388.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   476296.367 ±(99.9%) 11011.202 B/op [Average]
[info]   (min, avg, max) = (471948.754, 476296.367, 478984.393), stdev = 2859.574
[info]   CI (99.9%): [465285.165, 487307.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2272.434 ±(99.9%) 548.487 MB/sec [Average]
[info]   (min, avg, max) = (2021.363, 2272.434, 2368.232), stdev = 142.440
[info]   CI (99.9%): [1723.947, 2820.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   466697.646 ±(99.9%) 106685.503 B/op [Average]
[info]   (min, avg, max) = (417901.743, 466697.646, 485249.633), stdev = 27705.886
[info]   CI (99.9%): [360012.143, 573383.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.167 ±(99.9%) 1.093 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.167, 0.666), stdev = 0.284
[info]   CI (99.9%): [≈ 0, 1.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   34.204 ±(99.9%) 224.618 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 34.204, 136.872), stdev = 58.333
[info]   CI (99.9%): [≈ 0, 258.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 11.000), stdev = 0.837
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce
[info] # Run progress: 69.88% complete, ETA 00:27:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1127580.723 ops/s
[info] # Warmup Iteration   2: 6729196.162 ops/s
[info] # Warmup Iteration   3: 8332461.917 ops/s
[info] Iteration   1: 8396699.488 ops/s
[info]                  ·gc.alloc.rate:                   4609.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              864.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4327.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     811.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 8450948.154 ops/s
[info]                  ·gc.alloc.rate:                   4641.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              864.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4384.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     816.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 8225902.846 ops/s
[info]                  ·gc.alloc.rate:                   4512.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              863.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4411.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     843.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 8429840.515 ops/s
[info]                  ·gc.alloc.rate:                   4605.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              859.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4421.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     825.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 8430430.545 ops/s
[info]                  ·gc.alloc.rate:                   4634.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              864.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4426.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     826.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        13.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce":
[info]   8386764.310 ±(99.9%) 354264.387 ops/s [Average]
[info]   (min, avg, max) = (8225902.846, 8386764.310, 8450948.154), stdev = 92001.336
[info]   CI (99.9%): [8032499.922, 8741028.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate":
[info]   4600.694 ±(99.9%) 198.823 MB/sec [Average]
[info]   (min, avg, max) = (4512.523, 4600.694, 4641.056), stdev = 51.634
[info]   CI (99.9%): [4401.871, 4799.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   863.254 ±(99.9%) 7.794 B/op [Average]
[info]   (min, avg, max) = (859.784, 863.254, 864.920), stdev = 2.024
[info]   CI (99.9%): [855.460, 871.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   4394.315 ±(99.9%) 156.208 MB/sec [Average]
[info]   (min, avg, max) = (4327.986, 4394.315, 4426.636), stdev = 40.567
[info]   CI (99.9%): [4238.107, 4550.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   824.617 ±(99.9%) 48.130 B/op [Average]
[info]   (min, avg, max) = (811.200, 824.617, 843.967), stdev = 12.499
[info]   CI (99.9%): [776.487, 872.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.129 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 0.129, 0.146), stdev = 0.027
[info]   CI (99.9%): [0.025, 0.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.024, 0.028), stdev = 0.005
[info]   CI (99.9%): [0.004, 0.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.count":
[info]   65.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (13.000, 13.000, 13.000), stdev = 0.001
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.time":
[info]   84.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (16.000, 16.800, 17.000), stdev = 0.447
[info]   CI (99.9%): [84.000, 84.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava
[info] # Run progress: 70.12% complete, ETA 00:27:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.654 ops/s
[info] # Warmup Iteration   2: 34881050.619 ops/s
[info] # Warmup Iteration   3: 37484444.797 ops/s
[info] Iteration   1: 36989352.868 ops/s
[info]                  ·gc.alloc.rate:               31.675 MB/sec
[info]                  ·gc.alloc.rate.norm:          1.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10.884 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 38138791.653 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 38123379.110 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 37802053.448 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 38139215.571 ops/s
[info]                  ·gc.alloc.rate:      0.084 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava":
[info]   37838558.530 ±(99.9%) 1909993.357 ops/s [Average]
[info]   (min, avg, max) = (36989352.868, 37838558.530, 38139215.571), stdev = 496019.209
[info]   CI (99.9%): [35928565.173, 39748551.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   6.352 ±(99.9%) 54.509 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 6.352, 31.675), stdev = 14.156
[info]   CI (99.9%): [≈ 0, 60.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   0.270 ±(99.9%) 2.319 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.270, 1.347), stdev = 0.602
[info]   CI (99.9%): [≈ 0, 2.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   51.175 ±(99.9%) 440.631 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.175, 255.874), stdev = 114.430
[info]   CI (99.9%): [≈ 0, 491.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   2.177 ±(99.9%) 18.742 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.177, 10.884), stdev = 4.867
[info]   CI (99.9%): [≈ 0, 20.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 5.000), stdev = 2.236
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala
[info] # Run progress: 70.35% complete, ETA 00:26:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 766787.632 ops/s
[info] # Warmup Iteration   2: 9006059.038 ops/s
[info] # Warmup Iteration   3: 10364287.847 ops/s
[info] Iteration   1: 10502056.796 ops/s
[info]                  ·gc.alloc.rate:                   3606.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              540.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3613.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     541.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 10526857.636 ops/s
[info]                  ·gc.alloc.rate:                   3611.546 MB/sec
[info]                  ·gc.alloc.rate.norm:              539.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3336.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     498.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 10447686.401 ops/s
[info]                  ·gc.alloc.rate:                   3585.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              540.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3371.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     507.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 10450426.124 ops/s
[info]                  ·gc.alloc.rate:                   3585.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              539.879 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3388.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     510.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 10523316.442 ops/s
[info]                  ·gc.alloc.rate:                   3581.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              535.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3738.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     558.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala":
[info]   10490068.680 ±(99.9%) 148765.801 ops/s [Average]
[info]   (min, avg, max) = (10447686.401, 10490068.680, 10526857.636), stdev = 38634.006
[info]   CI (99.9%): [10341302.878, 10638834.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   3594.094 ±(99.9%) 53.881 MB/sec [Average]
[info]   (min, avg, max) = (3581.096, 3594.094, 3611.546), stdev = 13.993
[info]   CI (99.9%): [3540.213, 3647.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   539.107 ±(99.9%) 8.050 B/op [Average]
[info]   (min, avg, max) = (535.391, 539.107, 540.386), stdev = 2.091
[info]   CI (99.9%): [531.057, 547.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   3489.747 ±(99.9%) 680.175 MB/sec [Average]
[info]   (min, avg, max) = (3336.894, 3489.747, 3738.572), stdev = 176.639
[info]   CI (99.9%): [2809.573, 4169.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   523.420 ±(99.9%) 98.356 B/op [Average]
[info]   (min, avg, max) = (498.733, 523.420, 558.934), stdev = 25.543
[info]   CI (99.9%): [425.063, 621.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.005 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.004, 0.006), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.count":
[info]   52.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.400, 11.000), stdev = 0.548
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 14.000, 16.000), stdev = 1.225
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala
[info] # Run progress: 70.59% complete, ETA 00:26:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16617117.504 ops/s
[info] # Warmup Iteration   2: 44315550.546 ops/s
[info] # Warmup Iteration   3: 48672013.826 ops/s
[info] Iteration   1: 48703927.539 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 48868753.357 ops/s
[info]                  ·gc.alloc.rate:      0.083 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 48890620.311 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 48904155.708 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 48860408.279 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala":
[info]   48845573.039 ±(99.9%) 312128.154 ops/s [Average]
[info]   (min, avg, max) = (48703927.539, 48845573.039, 48904155.708), stdev = 81058.690
[info]   CI (99.9%): [48533444.885, 49157701.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.005 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala
[info] # Run progress: 70.82% complete, ETA 00:26:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6858963.780 ops/s
[info] # Warmup Iteration   2: 28132871.948 ops/s
[info] # Warmup Iteration   3: 30738636.741 ops/s
[info] Iteration   1: 31466294.722 ops/s
[info]                  ·gc.alloc.rate:                   828.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 31416095.512 ops/s
[info]                  ·gc.alloc.rate:                   829.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              41.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 31243821.367 ops/s
[info]                  ·gc.alloc.rate:                   809.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.797 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 31444486.800 ops/s
[info]                  ·gc.alloc.rate:                   817.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.373 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 31025406.484 ops/s
[info]                  ·gc.alloc.rate:                   834.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              42.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala":
[info]   31319220.977 ±(99.9%) 717086.019 ops/s [Average]
[info]   (min, avg, max) = (31025406.484, 31319220.977, 31466294.722), stdev = 186224.962
[info]   CI (99.9%): [30602134.958, 32036306.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate":
[info]   823.979 ±(99.9%) 38.811 MB/sec [Average]
[info]   (min, avg, max) = (809.955, 823.979, 834.493), stdev = 10.079
[info]   CI (99.9%): [785.168, 862.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate.norm":
[info]   41.405 ±(99.9%) 2.365 B/op [Average]
[info]   (min, avg, max) = (40.797, 41.405, 42.330), stdev = 0.614
[info]   CI (99.9%): [39.040, 43.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space":
[info]   796.755 ±(99.9%) 700.154 MB/sec [Average]
[info]   (min, avg, max) = (662.221, 796.755, 996.210), stdev = 181.828
[info]   CI (99.9%): [96.601, 1496.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   40.057 ±(99.9%) 35.680 B/op [Average]
[info]   (min, avg, max) = (33.119, 40.057, 50.533), stdev = 9.266
[info]   CI (99.9%): [4.377, 75.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.625 ±(99.9%) 3.900 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.625, 2.373), stdev = 1.013
[info]   CI (99.9%): [≈ 0, 4.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.031 ±(99.9%) 0.195 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.031, 0.119), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 8.000), stdev = 1.304
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson
[info] # Run progress: 71.06% complete, ETA 00:26:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 813757.078 ops/s
[info] # Warmup Iteration   2: 7371137.621 ops/s
[info] # Warmup Iteration   3: 8658977.153 ops/s
[info] Iteration   1: 8731121.109 ops/s
[info]                  ·gc.alloc.rate:                   3914.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              705.534 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3632.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     654.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 8732100.688 ops/s
[info]                  ·gc.alloc.rate:                   3918.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              706.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3684.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     663.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 8530038.254 ops/s
[info]                  ·gc.alloc.rate:                   3838.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              708.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3717.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     685.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 8598034.498 ops/s
[info]                  ·gc.alloc.rate:                   3864.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              707.341 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3733.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     683.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 8759298.390 ops/s
[info]                  ·gc.alloc.rate:               3933.046 MB/sec
[info]                  ·gc.alloc.rate.norm:          706.614 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3739.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 671.911 B/op
[info]                  ·gc.count:                    11.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson":
[info]   8670118.588 ±(99.9%) 386672.247 ops/s [Average]
[info]   (min, avg, max) = (8530038.254, 8670118.588, 8759298.390), stdev = 100417.555
[info]   CI (99.9%): [8283446.340, 9056790.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3893.854 ±(99.9%) 154.894 MB/sec [Average]
[info]   (min, avg, max) = (3838.654, 3893.854, 3933.046), stdev = 40.225
[info]   CI (99.9%): [3738.960, 4048.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   706.765 ±(99.9%) 3.965 B/op [Average]
[info]   (min, avg, max) = (705.534, 706.765, 708.181), stdev = 1.030
[info]   CI (99.9%): [702.800, 710.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3701.658 ±(99.9%) 170.774 MB/sec [Average]
[info]   (min, avg, max) = (3632.261, 3701.658, 3739.884), stdev = 44.349
[info]   CI (99.9%): [3530.885, 3872.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   671.972 ±(99.9%) 50.441 B/op [Average]
[info]   (min, avg, max) = (654.692, 671.972, 685.849), stdev = 13.099
[info]   CI (99.9%): [621.531, 722.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.286 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.187), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.035), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.count":
[info]   55.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (11.000, 11.000, 11.000), stdev = 0.001
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.time":
[info]   74.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 14.800, 15.000), stdev = 0.447
[info]   CI (99.9%): [74.000, 74.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce
[info] # Run progress: 71.29% complete, ETA 00:26:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1955840.321 ops/s
[info] # Warmup Iteration   2: 11842596.389 ops/s
[info] # Warmup Iteration   3: 13606350.778 ops/s
[info] Iteration   1: 13471656.991 ops/s
[info]                  ·gc.alloc.rate:                   1617.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              188.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     193.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.282 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 13359897.436 ops/s
[info]                  ·gc.alloc.rate:                   1618.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              190.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     194.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 13575355.544 ops/s
[info]                  ·gc.alloc.rate:               1645.538 MB/sec
[info]                  ·gc.alloc.rate.norm:          190.758 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1646.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 190.832 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 13563432.047 ops/s
[info]                  ·gc.alloc.rate:               1651.277 MB/sec
[info]                  ·gc.alloc.rate.norm:          191.541 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1653.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 191.844 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 13619120.013 ops/s
[info]                  ·gc.alloc.rate:               1645.075 MB/sec
[info]                  ·gc.alloc.rate.norm:          190.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1330.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 153.726 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce":
[info]   13517892.406 ±(99.9%) 397955.358 ops/s [Average]
[info]   (min, avg, max) = (13359897.436, 13517892.406, 13619120.013), stdev = 103347.743
[info]   CI (99.9%): [13119937.048, 13915847.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate":
[info]   1635.616 ±(99.9%) 62.320 MB/sec [Average]
[info]   (min, avg, max) = (1617.526, 1635.616, 1651.277), stdev = 16.184
[info]   CI (99.9%): [1573.297, 1697.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   190.392 ±(99.9%) 3.777 B/op [Average]
[info]   (min, avg, max) = (188.900, 190.392, 191.541), stdev = 0.981
[info]   CI (99.9%): [186.615, 194.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1587.182 ±(99.9%) 552.959 MB/sec [Average]
[info]   (min, avg, max) = (1330.373, 1587.182, 1654.926), stdev = 143.602
[info]   CI (99.9%): [1034.224, 2140.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   184.819 ±(99.9%) 67.136 B/op [Average]
[info]   (min, avg, max) = (153.726, 184.819, 194.425), stdev = 17.435
[info]   CI (99.9%): [117.683, 251.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.670 ±(99.9%) 4.068 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.670, 2.416), stdev = 1.057
[info]   CI (99.9%): [≈ 0, 4.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.078 ±(99.9%) 0.475 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.078, 0.282), stdev = 0.123
[info]   CI (99.9%): [≈ 0, 0.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 14.000), stdev = 3.536
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava
[info] # Run progress: 71.53% complete, ETA 00:25:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.644 ops/s
[info] # Warmup Iteration   2: 38890099.853 ops/s
[info] # Warmup Iteration   3: 42338171.817 ops/s
[info] Iteration   1: 40142507.484 ops/s
[info]                  ·gc.alloc.rate:                   869.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              34.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.237 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 42118627.831 ops/s
[info]                  ·gc.alloc.rate:                   887.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.154 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 42276834.339 ops/s
[info]                  ·gc.alloc.rate:               875.453 MB/sec
[info]                  ·gc.alloc.rate.norm:          32.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24.353 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 42068699.961 ops/s
[info]                  ·gc.alloc.rate:                   888.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.168 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 42033082.546 ops/s
[info]                  ·gc.alloc.rate:                   880.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:          976.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava":
[info]   41727950.432 ±(99.9%) 3431584.661 ops/s [Average]
[info]   (min, avg, max) = (40142507.484, 41727950.432, 42276834.339), stdev = 891171.639
[info]   CI (99.9%): [38296365.771, 45159535.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   880.214 ±(99.9%) 30.188 MB/sec [Average]
[info]   (min, avg, max) = (869.679, 880.214, 888.043), stdev = 7.840
[info]   CI (99.9%): [850.026, 910.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   33.204 ±(99.9%) 2.138 B/op [Average]
[info]   (min, avg, max) = (32.586, 33.204, 34.094), stdev = 0.555
[info]   CI (99.9%): [31.067, 35.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   913.776 ±(99.9%) 558.651 MB/sec [Average]
[info]   (min, avg, max) = (654.269, 913.776, 981.392), stdev = 145.080
[info]   CI (99.9%): [355.125, 1472.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   34.507 ±(99.9%) 22.042 B/op [Average]
[info]   (min, avg, max) = (24.353, 34.507, 38.326), stdev = 5.724
[info]   CI (99.9%): [12.465, 56.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.948 ±(99.9%) 7.609 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.948, 4.479), stdev = 1.976
[info]   CI (99.9%): [≈ 0, 8.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.284 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.036, 0.168), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 10.000), stdev = 2.074
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala
[info] # Run progress: 71.76% complete, ETA 00:25:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1361661.028 ops/s
[info] # Warmup Iteration   2: 11965096.540 ops/s
[info] # Warmup Iteration   3: 12943426.707 ops/s
[info] Iteration   1: 13140887.330 ops/s
[info]                  ·gc.alloc.rate:                   2693.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              322.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2618.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     313.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 13038540.056 ops/s
[info]                  ·gc.alloc.rate:                   2688.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              324.524 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2636.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     318.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 13020039.356 ops/s
[info]                  ·gc.alloc.rate:                   2687.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              324.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2668.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     322.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 13095175.254 ops/s
[info]                  ·gc.alloc.rate:                   2702.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              324.771 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2690.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     323.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 13080109.513 ops/s
[info]                  ·gc.alloc.rate:                   2687.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              323.299 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2367.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     284.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala":
[info]   13074950.302 ±(99.9%) 183908.825 ops/s [Average]
[info]   (min, avg, max) = (13020039.356, 13074950.302, 13140887.330), stdev = 47760.538
[info]   CI (99.9%): [12891041.477, 13258859.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2691.741 ±(99.9%) 24.996 MB/sec [Average]
[info]   (min, avg, max) = (2687.044, 2691.741, 2702.441), stdev = 6.491
[info]   CI (99.9%): [2666.745, 2716.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   323.986 ±(99.9%) 3.874 B/op [Average]
[info]   (min, avg, max) = (322.556, 323.986, 324.778), stdev = 1.006
[info]   CI (99.9%): [320.112, 327.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2596.311 ±(99.9%) 504.461 MB/sec [Average]
[info]   (min, avg, max) = (2367.300, 2596.311, 2690.724), stdev = 131.007
[info]   CI (99.9%): [2091.851, 3100.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   312.507 ±(99.9%) 61.444 B/op [Average]
[info]   (min, avg, max) = (284.815, 312.507, 323.363), stdev = 15.957
[info]   CI (99.9%): [251.062, 373.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.387 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.250), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.046 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.008, 0.030), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.000, 11.000), stdev = 0.707
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala
[info] # Run progress: 72.00% complete, ETA 00:25:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14034013.725 ops/s
[info] # Warmup Iteration   2: 45561691.745 ops/s
[info] # Warmup Iteration   3: 47822550.192 ops/s
[info] Iteration   1: 48075447.033 ops/s
[info]                  ·gc.alloc.rate:                   1006.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 46836149.489 ops/s
[info]                  ·gc.alloc.rate:                   991.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.324 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 47401909.908 ops/s
[info]                  ·gc.alloc.rate:                   996.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.175 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 47289094.733 ops/s
[info]                  ·gc.alloc.rate:                   986.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.835 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 49126288.271 ops/s
[info]                  ·gc.alloc.rate:                   1037.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala":
[info]   47745777.887 ±(99.9%) 3427245.710 ops/s [Average]
[info]   (min, avg, max) = (46836149.489, 47745777.887, 49126288.271), stdev = 890044.827
[info]   CI (99.9%): [44318532.177, 51173023.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1003.833 ±(99.9%) 78.359 MB/sec [Average]
[info]   (min, avg, max) = (986.725, 1003.833, 1037.840), stdev = 20.350
[info]   CI (99.9%): [925.475, 1082.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   33.085 ±(99.9%) 0.777 B/op [Average]
[info]   (min, avg, max) = (32.835, 33.085, 33.324), stdev = 0.202
[info]   CI (99.9%): [32.308, 33.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   992.068 ±(99.9%) 8.443 MB/sec [Average]
[info]   (min, avg, max) = (989.524, 992.068, 994.962), stdev = 2.193
[info]   CI (99.9%): [983.625, 1000.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   32.707 ±(99.9%) 2.529 B/op [Average]
[info]   (min, avg, max) = (31.691, 32.707, 33.385), stdev = 0.657
[info]   CI (99.9%): [30.178, 35.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.672 ±(99.9%) 5.388 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.672, 3.175), stdev = 1.399
[info]   CI (99.9%): [≈ 0, 6.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.179 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.022, 0.105), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 9.000), stdev = 2.168
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 72.24% complete, ETA 00:25:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12470109.429 ops/s
[info] # Warmup Iteration   2: 54159292.049 ops/s
[info] # Warmup Iteration   3: 60536281.339 ops/s
[info] Iteration   1: 60329815.721 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 60526543.182 ops/s
[info]                  ·gc.alloc.rate:      0.005 MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 60502011.561 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 60512577.248 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 60523695.176 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc":
[info]   60478928.578 ±(99.9%) 323149.677 ops/s [Average]
[info]   (min, avg, max) = (60329815.721, 60478928.578, 60526543.182), stdev = 83920.945
[info]   CI (99.9%): [60155778.901, 60802078.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.001 ±(99.9%) 0.009 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.001, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala
[info] # Run progress: 72.47% complete, ETA 00:24:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5007589.448 ops/s
[info] # Warmup Iteration   2: 16168368.803 ops/s
[info] # Warmup Iteration   3: 17325805.596 ops/s
[info] Iteration   1: 17721913.916 ops/s
[info]                  ·gc.alloc.rate:                   1668.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              148.210 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147.507 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 17796254.368 ops/s
[info]                  ·gc.alloc.rate:                   1687.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              149.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 17799765.306 ops/s
[info]                  ·gc.alloc.rate:               1697.150 MB/sec
[info]                  ·gc.alloc.rate.norm:          150.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1668.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 147.545 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 17747350.564 ops/s
[info]                  ·gc.alloc.rate:                   1687.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              149.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 17875460.449 ops/s
[info]                  ·gc.alloc.rate:                   1702.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              149.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     148.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala":
[info]   17788148.921 ±(99.9%) 226792.169 ops/s [Average]
[info]   (min, avg, max) = (17721913.916, 17788148.921, 17875460.449), stdev = 58897.206
[info]   CI (99.9%): [17561356.752, 18014941.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate":
[info]   1688.791 ±(99.9%) 49.275 MB/sec [Average]
[info]   (min, avg, max) = (1668.979, 1688.791, 1702.570), stdev = 12.797
[info]   CI (99.9%): [1639.515, 1738.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm":
[info]   149.406 ±(99.9%) 2.843 B/op [Average]
[info]   (min, avg, max) = (148.210, 149.406, 150.047), stdev = 0.738
[info]   CI (99.9%): [146.563, 152.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space":
[info]   1670.443 ±(99.9%) 31.555 MB/sec [Average]
[info]   (min, avg, max) = (1661.063, 1670.443, 1682.094), stdev = 8.195
[info]   CI (99.9%): [1638.889, 1701.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   147.784 ±(99.9%) 1.932 B/op [Average]
[info]   (min, avg, max) = (147.275, 147.784, 148.506), stdev = 0.502
[info]   CI (99.9%): [145.852, 149.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.279 ±(99.9%) 1.455 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.279, 0.854), stdev = 0.378
[info]   CI (99.9%): [≈ 0, 1.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.129 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.076), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 9.000), stdev = 1.483
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson
[info] # Run progress: 72.71% complete, ETA 00:24:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 376397.585 ops/s
[info] # Warmup Iteration   2: 2327410.307 ops/s
[info] # Warmup Iteration   3: 2646005.942 ops/s
[info] Iteration   1: 2697417.529 ops/s
[info]                  ·gc.alloc.rate:                   2169.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              1265.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2311.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1348.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.508 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.047 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2714696.270 ops/s
[info]                  ·gc.alloc.rate:                   2177.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              1262.290 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1145.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2739408.896 ops/s
[info]                  ·gc.alloc.rate:                   2207.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              1267.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1986.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1141.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2732013.983 ops/s
[info]                  ·gc.alloc.rate:               2217.986 MB/sec
[info]                  ·gc.alloc.rate.norm:          1277.461 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2337.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1346.185 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 2712905.203 ops/s
[info]                  ·gc.alloc.rate:               2189.629 MB/sec
[info]                  ·gc.alloc.rate.norm:          1270.164 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2016.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1169.747 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson":
[info]   2719288.376 ±(99.9%) 64056.902 ops/s [Average]
[info]   (min, avg, max) = (2697417.529, 2719288.376, 2739408.896), stdev = 16635.374
[info]   CI (99.9%): [2655231.475, 2783345.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2192.386 ±(99.9%) 77.443 MB/sec [Average]
[info]   (min, avg, max) = (2169.678, 2192.386, 2217.986), stdev = 20.112
[info]   CI (99.9%): [2114.943, 2269.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1268.733 ±(99.9%) 21.860 B/op [Average]
[info]   (min, avg, max) = (1262.290, 1268.733, 1277.461), stdev = 5.677
[info]   CI (99.9%): [1246.873, 1290.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2125.328 ±(99.9%) 702.256 MB/sec [Average]
[info]   (min, avg, max) = (1975.208, 2125.328, 2337.309), stdev = 182.374
[info]   CI (99.9%): [1423.072, 2827.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1230.092 ±(99.9%) 413.908 B/op [Average]
[info]   (min, avg, max) = (1141.237, 1230.092, 1348.269), stdev = 107.491
[info]   CI (99.9%): [816.184, 1644.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.710 ±(99.9%) 6.023 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.710, 3.508), stdev = 1.564
[info]   CI (99.9%): [≈ 0, 6.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.414 ±(99.9%) 3.514 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.414, 2.047), stdev = 0.913
[info]   CI (99.9%): [≈ 0, 3.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.200, 13.000), stdev = 2.168
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 72.94% complete, ETA 00:24:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77820.722 ops/s
[info] # Warmup Iteration   2: 162058.620 ops/s
[info] # Warmup Iteration   3: 168259.718 ops/s
[info] Iteration   1: 166691.366 ops/s
[info]                  ·gc.alloc.rate:                   3177.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              29987.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2986.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28183.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.393 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 169604.847 ops/s
[info]                  ·gc.alloc.rate:                   3246.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              30097.923 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3347.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31033.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.386 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 170254.695 ops/s
[info]                  ·gc.alloc.rate:                   3244.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              29988.700 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3038.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28086.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.577 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 168969.016 ops/s
[info]                  ·gc.alloc.rate:                   3221.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              30003.218 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3051.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28416.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 167262.272 ops/s
[info]                  ·gc.alloc.rate:                   3164.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              29774.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3057.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28768.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.448 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.214 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala":
[info]   168556.439 ±(99.9%) 5873.595 ops/s [Average]
[info]   (min, avg, max) = (166691.366, 168556.439, 170254.695), stdev = 1525.354
[info]   CI (99.9%): [162682.844, 174430.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   3210.858 ±(99.9%) 146.406 MB/sec [Average]
[info]   (min, avg, max) = (3164.679, 3210.858, 3246.522), stdev = 38.021
[info]   CI (99.9%): [3064.452, 3357.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   29970.478 ±(99.9%) 456.404 B/op [Average]
[info]   (min, avg, max) = (29774.894, 29970.478, 30097.923), stdev = 118.527
[info]   CI (99.9%): [29514.074, 30426.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   3096.188 ±(99.9%) 551.625 MB/sec [Average]
[info]   (min, avg, max) = (2986.012, 3096.188, 3347.443), stdev = 143.255
[info]   CI (99.9%): [2544.564, 3647.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   28897.725 ±(99.9%) 4707.507 B/op [Average]
[info]   (min, avg, max) = (28086.747, 28897.725, 31033.546), stdev = 1222.525
[info]   CI (99.9%): [24190.217, 33605.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.123 ±(99.9%) 0.702 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.123, 0.448), stdev = 0.182
[info]   CI (99.9%): [≈ 0, 0.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.153 ±(99.9%) 6.611 B/op [Average]
[info]   (min, avg, max) = (0.194, 1.153, 4.214), stdev = 1.717
[info]   CI (99.9%): [≈ 0, 7.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   46.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.200, 10.000), stdev = 0.447
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.600, 14.000), stdev = 1.140
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 73.18% complete, ETA 00:24:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1903.071 ops/s
[info] # Warmup Iteration   2: 23138.933 ops/s
[info] # Warmup Iteration   3: 35216.157 ops/s
[info] Iteration   1: 34676.112 ops/s
[info]                  ·gc.alloc.rate:                   2466.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              111944.350 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2618.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118843.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.453 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 35574.066 ops/s
[info]                  ·gc.alloc.rate:                   2552.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              112896.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2319.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102612.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.842 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 35447.205 ops/s
[info]                  ·gc.alloc.rate:               2564.324 MB/sec
[info]                  ·gc.alloc.rate.norm:          113848.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2677.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 118879.428 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   4: 35517.536 ops/s
[info]                  ·gc.alloc.rate:                   2556.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              113285.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2359.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     104535.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.922 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 35360.459 ops/s
[info]                  ·gc.alloc.rate:                   2547.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              113360.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2369.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105453.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.926 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson":
[info]   35315.076 ±(99.9%) 1409.380 ops/s [Average]
[info]   (min, avg, max) = (34676.112, 35315.076, 35574.066), stdev = 366.012
[info]   CI (99.9%): [33905.695, 36724.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2537.409 ±(99.9%) 153.985 MB/sec [Average]
[info]   (min, avg, max) = (2466.767, 2537.409, 2564.324), stdev = 39.990
[info]   CI (99.9%): [2383.423, 2691.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   113066.912 ±(99.9%) 2745.572 B/op [Average]
[info]   (min, avg, max) = (111944.350, 113066.912, 113848.415), stdev = 713.016
[info]   CI (99.9%): [110321.340, 115812.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2468.955 ±(99.9%) 639.240 MB/sec [Average]
[info]   (min, avg, max) = (2319.592, 2468.955, 2677.643), stdev = 166.008
[info]   CI (99.9%): [1829.715, 3108.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   110064.775 ±(99.9%) 31171.918 B/op [Average]
[info]   (min, avg, max) = (102612.041, 110064.775, 118879.428), stdev = 8095.248
[info]   CI (99.9%): [78892.857, 141236.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.133 ±(99.9%) 0.970 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.133, 0.583), stdev = 0.252
[info]   CI (99.9%): [≈ 0, 1.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   6.029 ±(99.9%) 44.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.029, 26.453), stdev = 11.436
[info]   CI (99.9%): [≈ 0, 50.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.200, 14.000), stdev = 1.789
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.41% complete, ETA 00:24:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29704.149 ops/s
[info] # Warmup Iteration   2: 132518.111 ops/s
[info] # Warmup Iteration   3: 141062.791 ops/s
[info] Iteration   1: 143580.718 ops/s
[info]                  ·gc.alloc.rate:                   1251.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              13720.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14369.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.456 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 143955.868 ops/s
[info]                  ·gc.alloc.rate:                   1259.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              13769.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14375.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.872 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42.330 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 143038.486 ops/s
[info]                  ·gc.alloc.rate:                   1246.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              13717.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14380.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.665 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 144180.421 ops/s
[info]                  ·gc.alloc.rate:                   1237.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              13505.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10674.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.227 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 144541.674 ops/s
[info]                  ·gc.alloc.rate:               1269.611 MB/sec
[info]                  ·gc.alloc.rate.norm:          13823.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1308.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14248.553 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala":
[info]   143859.433 ±(99.9%) 2219.907 ops/s [Average]
[info]   (min, avg, max) = (143038.486, 143859.433, 144541.674), stdev = 576.503
[info]   CI (99.9%): [141639.526, 146079.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1253.019 ±(99.9%) 47.327 MB/sec [Average]
[info]   (min, avg, max) = (1237.314, 1253.019, 1269.611), stdev = 12.291
[info]   CI (99.9%): [1205.692, 1300.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   13707.049 ±(99.9%) 465.374 B/op [Average]
[info]   (min, avg, max) = (13505.011, 13707.049, 13823.011), stdev = 120.856
[info]   CI (99.9%): [13241.675, 14172.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1243.946 ±(99.9%) 572.697 MB/sec [Average]
[info]   (min, avg, max) = (977.948, 1243.946, 1315.019), stdev = 148.727
[info]   CI (99.9%): [671.249, 1816.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   13609.588 ±(99.9%) 6322.436 B/op [Average]
[info]   (min, avg, max) = (10674.083, 13609.588, 14380.421), stdev = 1641.916
[info]   CI (99.9%): [7287.152, 19932.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.854 ±(99.9%) 6.519 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.854, 3.872), stdev = 1.693
[info]   CI (99.9%): [≈ 0, 7.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   9.336 ±(99.9%) 71.256 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.336, 42.330), stdev = 18.505
[info]   CI (99.9%): [≈ 0, 80.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 13.000), stdev = 4.025
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.65% complete, ETA 00:23:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 156225.387 ops/s
[info] # Warmup Iteration   2: 416061.972 ops/s
[info] # Warmup Iteration   3: 435710.161 ops/s
[info] Iteration   1: 421919.532 ops/s
[info]                  ·gc.alloc.rate:                   1691.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              6310.862 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1656.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6179.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.415 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 424002.686 ops/s
[info]                  ·gc.alloc.rate:                   1705.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              6331.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1648.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6117.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.314 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 442504.425 ops/s
[info]                  ·gc.alloc.rate:               1756.607 MB/sec
[info]                  ·gc.alloc.rate.norm:          6247.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1649.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5865.081 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 439945.249 ops/s
[info]                  ·gc.alloc.rate:                   1787.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              6394.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7121.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 441100.042 ops/s
[info]                  ·gc.alloc.rate:                   1779.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              6348.961 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1670.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5961.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala":
[info]   433894.387 ±(99.9%) 38694.185 ops/s [Average]
[info]   (min, avg, max) = (421919.532, 433894.387, 442504.425), stdev = 10048.757
[info]   CI (99.9%): [395200.202, 472588.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1744.309 ±(99.9%) 166.541 MB/sec [Average]
[info]   (min, avg, max) = (1691.938, 1744.309, 1787.638), stdev = 43.250
[info]   CI (99.9%): [1577.768, 1910.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   6326.653 ±(99.9%) 207.778 B/op [Average]
[info]   (min, avg, max) = (6247.429, 6326.653, 6394.469), stdev = 53.959
[info]   CI (99.9%): [6118.875, 6534.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1723.117 ±(99.9%) 577.306 MB/sec [Average]
[info]   (min, avg, max) = (1648.116, 1723.117, 1990.821), stdev = 149.924
[info]   CI (99.9%): [1145.811, 2300.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6248.857 ±(99.9%) 1938.144 B/op [Average]
[info]   (min, avg, max) = (5865.081, 6248.857, 7121.264), stdev = 503.330
[info]   CI (99.9%): [4310.712, 8187.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.691 ±(99.9%) 5.131 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.691, 3.060), stdev = 1.333
[info]   CI (99.9%): [≈ 0, 5.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.575 ±(99.9%) 19.144 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.575, 11.415), stdev = 4.972
[info]   CI (99.9%): [≈ 0, 21.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 12.000), stdev = 2.168
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 73.88% complete, ETA 00:23:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 195730.116 ops/s
[info] # Warmup Iteration   2: 444061.834 ops/s
[info] # Warmup Iteration   3: 471486.462 ops/s
[info] Iteration   1: 469435.001 ops/s
[info]                  ·gc.alloc.rate:                   1350.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              4528.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4444.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 477803.981 ops/s
[info]                  ·gc.alloc.rate:                   1373.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              4523.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4362.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.765 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 479092.833 ops/s
[info]                  ·gc.alloc.rate:               1381.996 MB/sec
[info]                  ·gc.alloc.rate.norm:          4539.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4332.760 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 480260.334 ops/s
[info]                  ·gc.alloc.rate:                   1392.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              4561.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4324.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 471242.728 ops/s
[info]                  ·gc.alloc.rate:                   1374.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              4589.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4424.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   475566.975 ±(99.9%) 18840.996 ops/s [Average]
[info]   (min, avg, max) = (469435.001, 475566.975, 480260.334), stdev = 4892.947
[info]   CI (99.9%): [456725.980, 494407.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1374.455 ±(99.9%) 58.568 MB/sec [Average]
[info]   (min, avg, max) = (1350.868, 1374.455, 1392.077), stdev = 15.210
[info]   CI (99.9%): [1315.887, 1433.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   4548.349 ±(99.9%) 104.291 B/op [Average]
[info]   (min, avg, max) = (4523.132, 4548.349, 4589.087), stdev = 27.084
[info]   CI (99.9%): [4444.058, 4652.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1322.761 ±(99.9%) 11.820 MB/sec [Average]
[info]   (min, avg, max) = (1319.142, 1322.761, 1325.661), stdev = 3.070
[info]   CI (99.9%): [1310.941, 1334.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   4377.696 ±(99.9%) 208.738 B/op [Average]
[info]   (min, avg, max) = (4324.515, 4377.696, 4444.302), stdev = 54.209
[info]   CI (99.9%): [4168.959, 4586.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.666 ±(99.9%) 5.602 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.666, 3.268), stdev = 1.455
[info]   CI (99.9%): [≈ 0, 6.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2.195 ±(99.9%) 18.449 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.195, 10.765), stdev = 4.791
[info]   CI (99.9%): [≈ 0, 20.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 11.000), stdev = 2.550
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 74.12% complete, ETA 00:23:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11448.167 ops/s
[info] # Warmup Iteration   2: 55120.357 ops/s
[info] # Warmup Iteration   3: 72878.082 ops/s
[info] Iteration   1: 74908.282 ops/s
[info]                  ·gc.alloc.rate:                   1553.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              32629.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1630.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34255.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.875 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 74694.601 ops/s
[info]                  ·gc.alloc.rate:                   1544.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              32549.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27699.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.124 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.685 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 73465.491 ops/s
[info]                  ·gc.alloc.rate:                   1532.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              32833.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1651.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35376.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.446 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 74878.880 ops/s
[info]                  ·gc.alloc.rate:               1561.580 MB/sec
[info]                  ·gc.alloc.rate.norm:          32818.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1327.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27890.713 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 75480.632 ops/s
[info]                  ·gc.alloc.rate:               1587.680 MB/sec
[info]                  ·gc.alloc.rate.norm:          33095.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1668.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34785.400 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson":
[info]   74685.577 ±(99.9%) 2860.751 ops/s [Average]
[info]   (min, avg, max) = (73465.491, 74685.577, 75480.632), stdev = 742.928
[info]   CI (99.9%): [71824.827, 77546.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1556.038 ±(99.9%) 79.447 MB/sec [Average]
[info]   (min, avg, max) = (1532.795, 1556.038, 1587.680), stdev = 20.632
[info]   CI (99.9%): [1476.590, 1635.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   32785.339 ±(99.9%) 815.315 B/op [Average]
[info]   (min, avg, max) = (32549.990, 32785.339, 33095.339), stdev = 211.735
[info]   CI (99.9%): [31970.024, 33600.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1518.539 ±(99.9%) 696.794 MB/sec [Average]
[info]   (min, avg, max) = (1314.762, 1518.539, 1668.757), stdev = 180.955
[info]   CI (99.9%): [821.745, 2215.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   32001.550 ±(99.9%) 14866.693 B/op [Average]
[info]   (min, avg, max) = (27699.743, 32001.550, 35376.365), stdev = 3860.833
[info]   CI (99.9%): [17134.856, 46868.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.237 ±(99.9%) 1.910 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.237, 1.124), stdev = 0.496
[info]   CI (99.9%): [≈ 0, 2.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.001 ±(99.9%) 40.244 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.001, 23.685), stdev = 10.451
[info]   CI (99.9%): [≈ 0, 45.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 9.000), stdev = 1.414
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 74.35% complete, ETA 00:23:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 50711.316 ops/s
[info] # Warmup Iteration   2: 273490.566 ops/s
[info] # Warmup Iteration   3: 299730.966 ops/s
[info] Iteration   1: 316517.861 ops/s
[info]                  ·gc.alloc.rate:                   2345.886 MB/sec
[info]                  ·gc.alloc.rate.norm:              11663.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2311.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11493.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.477 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.285 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 317044.506 ops/s
[info]                  ·gc.alloc.rate:                   2358.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              11707.597 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2307.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11451.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.033 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 308805.361 ops/s
[info]                  ·gc.alloc.rate:                   2320.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              11826.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2324.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11846.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.212 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 312208.178 ops/s
[info]                  ·gc.alloc.rate:                   2343.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              11812.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2343.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11811.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 318525.327 ops/s
[info]                  ·gc.alloc.rate:               2378.140 MB/sec
[info]                  ·gc.alloc.rate.norm:          11749.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2021.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9986.062 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce":
[info]   314620.247 ±(99.9%) 15445.666 ops/s [Average]
[info]   (min, avg, max) = (308805.361, 314620.247, 318525.327), stdev = 4011.190
[info]   CI (99.9%): [299174.581, 330065.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2349.358 ±(99.9%) 81.432 MB/sec [Average]
[info]   (min, avg, max) = (2320.614, 2349.358, 2378.140), stdev = 21.148
[info]   CI (99.9%): [2267.927, 2430.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   11751.690 ±(99.9%) 265.514 B/op [Average]
[info]   (min, avg, max) = (11663.194, 11751.690, 11826.148), stdev = 68.953
[info]   CI (99.9%): [11486.176, 12017.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2261.599 ±(99.9%) 520.109 MB/sec [Average]
[info]   (min, avg, max) = (2021.288, 2261.599, 2343.299), stdev = 135.071
[info]   CI (99.9%): [1741.489, 2781.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11317.789 ±(99.9%) 2948.874 B/op [Average]
[info]   (min, avg, max) = (9986.062, 11317.789, 11846.849), stdev = 765.813
[info]   CI (99.9%): [8368.915, 14266.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.754 ±(99.9%) 5.870 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.754, 3.477), stdev = 1.524
[info]   CI (99.9%): [≈ 0, 6.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.748 ±(99.9%) 29.179 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.748, 17.285), stdev = 7.578
[info]   CI (99.9%): [≈ 0, 32.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 11.000), stdev = 1.581
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.59% complete, ETA 00:23:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106276.912 ops/s
[info] # Warmup Iteration   2: 451698.301 ops/s
[info] # Warmup Iteration   3: 480334.989 ops/s
[info] Iteration   1: 490075.627 ops/s
[info]                  ·gc.alloc.rate:               1296.790 MB/sec
[info]                  ·gc.alloc.rate.norm:          4163.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4205.951 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   2: 492788.581 ops/s
[info]                  ·gc.alloc.rate:                   1303.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              4162.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1311.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4186.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.455 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.228 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 492391.778 ops/s
[info]                  ·gc.alloc.rate:                   1306.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              4174.896 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3125.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 492273.480 ops/s
[info]                  ·gc.alloc.rate:               1301.263 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1301.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4159.300 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 490530.623 ops/s
[info]                  ·gc.alloc.rate:                   1316.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              4222.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4193.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala":
[info]   491612.018 ±(99.9%) 4700.220 ops/s [Average]
[info]   (min, avg, max) = (490075.627, 491612.018, 492788.581), stdev = 1220.632
[info]   CI (99.9%): [486911.798, 496312.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1304.747 ±(99.9%) 27.790 MB/sec [Average]
[info]   (min, avg, max) = (1296.790, 1304.747, 1316.092), stdev = 7.217
[info]   CI (99.9%): [1276.957, 1332.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   4176.684 ±(99.9%) 100.814 B/op [Average]
[info]   (min, avg, max) = (4160.026, 4176.684, 4222.380), stdev = 26.181
[info]   CI (99.9%): [4075.869, 4277.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1241.390 ±(99.9%) 567.249 MB/sec [Average]
[info]   (min, avg, max) = (977.961, 1241.390, 1311.115), stdev = 147.313
[info]   CI (99.9%): [674.141, 1808.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3974.201 ±(99.9%) 1827.686 B/op [Average]
[info]   (min, avg, max) = (3125.679, 3974.201, 4205.951), stdev = 474.644
[info]   CI (99.9%): [2146.515, 5801.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.904 ±(99.9%) 7.646 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.904, 4.455), stdev = 1.986
[info]   CI (99.9%): [≈ 0, 8.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.886 ±(99.9%) 24.416 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.886, 14.228), stdev = 6.341
[info]   CI (99.9%): [≈ 0, 27.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 14.000), stdev = 3.847
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.82% complete, ETA 00:22:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 579427.809 ops/s
[info] # Warmup Iteration   2: 1265540.614 ops/s
[info] # Warmup Iteration   3: 1337203.485 ops/s
[info] Iteration   1: 1348195.321 ops/s
[info]                  ·gc.alloc.rate:                   2715.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              3169.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2645.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3087.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.340 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1316873.658 ops/s
[info]                  ·gc.alloc.rate:                   2654.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              3172.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2663.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3182.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1341742.860 ops/s
[info]                  ·gc.alloc.rate:                   2705.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              3173.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2686.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3150.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1350964.322 ops/s
[info]                  ·gc.alloc.rate:                   2730.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              3181.333 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2363.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2753.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1312287.825 ops/s
[info]                  ·gc.alloc.rate:                   2682.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              3216.373 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2710.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3250.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala":
[info]   1334012.797 ±(99.9%) 69790.640 ops/s [Average]
[info]   (min, avg, max) = (1312287.825, 1334012.797, 1350964.322), stdev = 18124.408
[info]   CI (99.9%): [1264222.157, 1403803.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2697.755 ±(99.9%) 115.576 MB/sec [Average]
[info]   (min, avg, max) = (2654.373, 2697.755, 2730.937), stdev = 30.015
[info]   CI (99.9%): [2582.179, 2813.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3182.616 ±(99.9%) 74.569 B/op [Average]
[info]   (min, avg, max) = (3169.753, 3182.616, 3216.373), stdev = 19.365
[info]   CI (99.9%): [3108.047, 3257.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2613.742 ±(99.9%) 546.839 MB/sec [Average]
[info]   (min, avg, max) = (2363.573, 2613.742, 2710.884), stdev = 142.012
[info]   CI (99.9%): [2066.904, 3160.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3084.932 ±(99.9%) 748.721 B/op [Average]
[info]   (min, avg, max) = (2753.382, 3084.932, 3250.751), stdev = 194.440
[info]   CI (99.9%): [2336.211, 3833.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.104 ±(99.9%) 0.413 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.104, 0.291), stdev = 0.107
[info]   CI (99.9%): [≈ 0, 0.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.122 ±(99.9%) 0.480 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.122, 0.340), stdev = 0.125
[info]   CI (99.9%): [≈ 0, 0.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 10.200, 11.000), stdev = 0.447
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 75.06% complete, ETA 00:22:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17726.009 ops/s
[info] # Warmup Iteration   2: 94742.077 ops/s
[info] # Warmup Iteration   3: 103382.934 ops/s
[info] Iteration   1: 102047.696 ops/s
[info]                  ·gc.alloc.rate:                   3373.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              52025.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3285.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50666.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.926 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 100885.548 ops/s
[info]                  ·gc.alloc.rate:                   3389.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              52866.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3332.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51969.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.649 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 100293.118 ops/s
[info]                  ·gc.alloc.rate:                   3371.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              52900.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3368.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52849.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.653 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 98718.336 ops/s
[info]                  ·gc.alloc.rate:                   3307.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              52730.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3047.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48585.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.332 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 102758.005 ops/s
[info]                  ·gc.alloc.rate:               3452.324 MB/sec
[info]                  ·gc.alloc.rate.norm:          52874.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3396.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52013.043 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson":
[info]   100940.541 ±(99.9%) 6054.622 ops/s [Average]
[info]   (min, avg, max) = (98718.336, 100940.541, 102758.005), stdev = 1572.366
[info]   CI (99.9%): [94885.918, 106995.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3378.987 ±(99.9%) 198.763 MB/sec [Average]
[info]   (min, avg, max) = (3307.772, 3378.987, 3452.324), stdev = 51.618
[info]   CI (99.9%): [3180.225, 3577.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52679.218 ±(99.9%) 1431.049 B/op [Average]
[info]   (min, avg, max) = (52025.020, 52679.218, 52900.198), stdev = 371.639
[info]   CI (99.9%): [51248.169, 54110.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3285.975 ±(99.9%) 537.024 MB/sec [Average]
[info]   (min, avg, max) = (3047.737, 3285.975, 3396.084), stdev = 139.463
[info]   CI (99.9%): [2748.951, 3822.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   51216.804 ±(99.9%) 6413.078 B/op [Average]
[info]   (min, avg, max) = (48585.009, 51216.804, 52849.527), stdev = 1665.456
[info]   CI (99.9%): [44803.727, 57629.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.712 ±(99.9%) 2.812 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.712, 1.926), stdev = 0.730
[info]   CI (99.9%): [≈ 0, 3.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   49.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 10.000), stdev = 0.447
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.000, 14.000), stdev = 1.225
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 75.29% complete, ETA 00:22:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 95354.383 ops/s
[info] # Warmup Iteration   2: 327268.799 ops/s
[info] # Warmup Iteration   3: 344823.417 ops/s
[info] Iteration   1: 344819.300 ops/s
[info]                  ·gc.alloc.rate:               1195.027 MB/sec
[info]                  ·gc.alloc.rate.norm:          5453.683 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6023.328 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   2: 346836.649 ops/s
[info]                  ·gc.alloc.rate:                   1190.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              5403.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4501.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.697 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 348671.962 ops/s
[info]                  ·gc.alloc.rate:                   1209.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              5456.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5953.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.503 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 349751.057 ops/s
[info]                  ·gc.alloc.rate:                   1199.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              5395.158 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4433.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.843 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 348803.877 ops/s
[info]                  ·gc.alloc.rate:               1222.556 MB/sec
[info]                  ·gc.alloc.rate.norm:          5515.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1316.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5939.204 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce":
[info]   347776.569 ±(99.9%) 7551.727 ops/s [Average]
[info]   (min, avg, max) = (344819.300, 347776.569, 349751.057), stdev = 1961.159
[info]   CI (99.9%): [340224.842, 355328.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1203.383 ±(99.9%) 48.946 MB/sec [Average]
[info]   (min, avg, max) = (1190.930, 1203.383, 1222.556), stdev = 12.711
[info]   CI (99.9%): [1154.437, 1252.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5444.855 ±(99.9%) 186.797 B/op [Average]
[info]   (min, avg, max) = (5395.158, 5444.855, 5515.653), stdev = 48.511
[info]   CI (99.9%): [5258.059, 5631.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1186.645 ±(99.9%) 695.901 MB/sec [Average]
[info]   (min, avg, max) = (985.347, 1186.645, 1319.849), stdev = 180.723
[info]   CI (99.9%): [490.744, 1882.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5370.152 ±(99.9%) 3177.532 B/op [Average]
[info]   (min, avg, max) = (4433.478, 5370.152, 6023.328), stdev = 825.195
[info]   CI (99.9%): [2192.620, 8547.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.708 ±(99.9%) 5.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.708, 3.019), stdev = 1.299
[info]   CI (99.9%): [≈ 0, 5.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.209 ±(99.9%) 22.708 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.209, 13.697), stdev = 5.897
[info]   CI (99.9%): [≈ 0, 25.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 12.000), stdev = 3.130
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.53% complete, ETA 00:22:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 244454.834 ops/s
[info] # Warmup Iteration   2: 787307.879 ops/s
[info] # Warmup Iteration   3: 836886.598 ops/s
[info] Iteration   1: 843833.422 ops/s
[info]                  ·gc.alloc.rate:                   627.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              1169.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1215.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 846593.416 ops/s
[info]                  ·gc.alloc.rate:               630.940 MB/sec
[info]                  ·gc.alloc.rate.norm:          1172.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1214.847 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 824745.815 ops/s
[info]                  ·gc.alloc.rate:                   626.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              1194.197 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1248.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 835645.210 ops/s
[info]                  ·gc.alloc.rate:               625.628 MB/sec
[info]                  ·gc.alloc.rate.norm:          1178.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1234.475 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 822416.831 ops/s
[info]                  ·gc.alloc.rate:                   612.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              1172.459 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1256.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala":
[info]   834646.939 ±(99.9%) 41992.951 ops/s [Average]
[info]   (min, avg, max) = (822416.831, 834646.939, 846593.416), stdev = 10905.436
[info]   CI (99.9%): [792653.988, 876639.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   624.525 ±(99.9%) 26.750 MB/sec [Average]
[info]   (min, avg, max) = (612.677, 624.525, 630.940), stdev = 6.947
[info]   CI (99.9%): [597.775, 651.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1177.474 ±(99.9%) 37.888 B/op [Average]
[info]   (min, avg, max) = (1169.694, 1177.474, 1194.197), stdev = 9.840
[info]   CI (99.9%): [1139.585, 1215.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   654.384 ±(99.9%) 7.493 MB/sec [Average]
[info]   (min, avg, max) = (651.683, 654.384, 656.799), stdev = 1.946
[info]   CI (99.9%): [646.891, 661.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1233.911 ±(99.9%) 73.458 B/op [Average]
[info]   (min, avg, max) = (1214.847, 1233.911, 1256.894), stdev = 19.077
[info]   CI (99.9%): [1160.453, 1307.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.151 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.079), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.76% complete, ETA 00:21:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1286368.221 ops/s
[info] # Warmup Iteration   2: 2042598.021 ops/s
[info] # Warmup Iteration   3: 2018097.462 ops/s
[info] Iteration   1: 2020362.725 ops/s
[info]                  ·gc.alloc.rate:                   967.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              754.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     773.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2032796.595 ops/s
[info]                  ·gc.alloc.rate:                   958.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              741.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     512.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1915072.823 ops/s
[info]                  ·gc.alloc.rate:                   926.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              761.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     817.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.224 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2044493.303 ops/s
[info]                  ·gc.alloc.rate:                   966.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     764.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2045544.380 ops/s
[info]                  ·gc.alloc.rate:                   978.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     761.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala":
[info]   2011653.965 ±(99.9%) 211590.631 ops/s [Average]
[info]   (min, avg, max) = (1915072.823, 2011653.965, 2045544.380), stdev = 54949.415
[info]   CI (99.9%): [1800063.335, 2223244.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   959.649 ±(99.9%) 76.631 MB/sec [Average]
[info]   (min, avg, max) = (926.497, 959.649, 978.683), stdev = 19.901
[info]   CI (99.9%): [883.019, 1036.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   750.868 ±(99.9%) 30.485 B/op [Average]
[info]   (min, avg, max) = (741.798, 750.868, 761.370), stdev = 7.917
[info]   CI (99.9%): [720.382, 781.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   926.521 ±(99.9%) 568.135 MB/sec [Average]
[info]   (min, avg, max) = (662.607, 926.521, 994.895), stdev = 147.543
[info]   CI (99.9%): [358.386, 1494.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   725.865 ±(99.9%) 466.570 B/op [Average]
[info]   (min, avg, max) = (512.930, 725.865, 817.578), stdev = 121.167
[info]   CI (99.9%): [259.295, 1192.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.608 ±(99.9%) 4.532 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.608, 2.706), stdev = 1.177
[info]   CI (99.9%): [≈ 0, 5.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.496 ±(99.9%) 3.730 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.496, 2.224), stdev = 0.969
[info]   CI (99.9%): [≈ 0, 4.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.517
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 76.00% complete, ETA 00:21:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1284301.885 ops/s
[info] # Warmup Iteration   2: 2242588.704 ops/s
[info] # Warmup Iteration   3: 2340193.556 ops/s
[info] Iteration   1: 2339236.723 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2338781.999 ops/s
[info]                  ·gc.alloc.rate:      1.516 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.020 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2343599.806 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2343765.056 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2343490.909 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2341774.899 ±(99.9%) 9748.195 ops/s [Average]
[info]   (min, avg, max) = (2338781.999, 2341774.899, 2343765.056), stdev = 2531.575
[info]   CI (99.9%): [2332026.704, 2351523.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.303 ±(99.9%) 2.610 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.303, 1.516), stdev = 0.678
[info]   CI (99.9%): [≈ 0, 2.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.204 ±(99.9%) 1.756 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.204, 1.020), stdev = 0.456
[info]   CI (99.9%): [≈ 0, 1.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 76.24% complete, ETA 00:21:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 139352.025 ops/s
[info] # Warmup Iteration   2: 419720.626 ops/s
[info] # Warmup Iteration   3: 464785.990 ops/s
[info] Iteration   1: 473131.605 ops/s
[info]                  ·gc.alloc.rate:               700.346 MB/sec
[info]                  ·gc.alloc.rate.norm:          2329.504 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2188.097 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 474519.347 ops/s
[info]                  ·gc.alloc.rate:                   703.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              2332.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2183.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 462712.904 ops/s
[info]                  ·gc.alloc.rate:               690.210 MB/sec
[info]                  ·gc.alloc.rate.norm:          2347.441 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2241.990 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 477903.654 ops/s
[info]                  ·gc.alloc.rate:                   715.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              2356.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2171.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 473990.144 ops/s
[info]                  ·gc.alloc.rate:                   698.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              2318.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2191.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.206 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.644 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson":
[info]   472451.531 ±(99.9%) 22092.783 ops/s [Average]
[info]   (min, avg, max) = (462712.904, 472451.531, 477903.654), stdev = 5737.425
[info]   CI (99.9%): [450358.748, 494544.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   701.651 ±(99.9%) 35.997 MB/sec [Average]
[info]   (min, avg, max) = (690.210, 701.651, 715.852), stdev = 9.348
[info]   CI (99.9%): [665.654, 737.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2337.039 ±(99.9%) 58.615 B/op [Average]
[info]   (min, avg, max) = (2318.361, 2337.039, 2356.945), stdev = 15.222
[info]   CI (99.9%): [2278.424, 2395.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   659.083 ±(99.9%) 3.450 MB/sec [Average]
[info]   (min, avg, max) = (657.833, 659.083, 660.157), stdev = 0.896
[info]   CI (99.9%): [655.632, 662.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2195.503 ±(99.9%) 104.222 B/op [Average]
[info]   (min, avg, max) = (2171.732, 2195.503, 2241.990), stdev = 27.066
[info]   CI (99.9%): [2091.281, 2299.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.650 ±(99.9%) 5.503 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.650, 3.206), stdev = 1.429
[info]   CI (99.9%): [≈ 0, 6.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.156 ±(99.9%) 18.271 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.156, 10.644), stdev = 4.745
[info]   CI (99.9%): [≈ 0, 20.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 76.47% complete, ETA 00:21:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12013.567 ops/s
[info] # Warmup Iteration   2: 47122.267 ops/s
[info] # Warmup Iteration   3: 54982.094 ops/s
[info] Iteration   1: 56858.291 ops/s
[info]                  ·gc.alloc.rate:                   1995.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              55218.539 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1984.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54930.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98.534 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 58222.099 ops/s
[info]                  ·gc.alloc.rate:                   2027.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              54814.476 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1972.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53315.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.566 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 58584.343 ops/s
[info]                  ·gc.alloc.rate:                   2032.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              54584.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53166.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.678 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 58947.799 ops/s
[info]                  ·gc.alloc.rate:                   2064.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              55110.434 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1994.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53247.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.112 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 59016.246 ops/s
[info]                  ·gc.alloc.rate:               2079.817 MB/sec
[info]                  ·gc.alloc.rate.norm:          55455.626 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2008.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 53557.686 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce":
[info]   58325.756 ±(99.9%) 3387.024 ops/s [Average]
[info]   (min, avg, max) = (56858.291, 58325.756, 59016.246), stdev = 879.599
[info]   CI (99.9%): [54938.732, 61712.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2039.895 ±(99.9%) 127.518 MB/sec [Average]
[info]   (min, avg, max) = (1995.286, 2039.895, 2079.817), stdev = 33.116
[info]   CI (99.9%): [1912.377, 2167.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   55036.700 ±(99.9%) 1317.034 B/op [Average]
[info]   (min, avg, max) = (54584.425, 55036.700, 55455.626), stdev = 342.030
[info]   CI (99.9%): [53719.666, 56353.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1987.975 ±(99.9%) 54.298 MB/sec [Average]
[info]   (min, avg, max) = (1972.509, 1987.975, 2008.636), stdev = 14.101
[info]   CI (99.9%): [1933.677, 2042.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   53643.623 ±(99.9%) 2825.561 B/op [Average]
[info]   (min, avg, max) = (53166.982, 53643.623, 54930.063), stdev = 733.789
[info]   CI (99.9%): [50818.062, 56469.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.804 ±(99.9%) 5.959 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.804, 3.560), stdev = 1.547
[info]   CI (99.9%): [≈ 0, 6.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   22.178 ±(99.9%) 165.008 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22.178, 98.534), stdev = 42.852
[info]   CI (99.9%): [≈ 0, 187.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 14.000), stdev = 2.775
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.71% complete, ETA 00:21:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12576.009 ops/s
[info] # Warmup Iteration   2: 80052.687 ops/s
[info] # Warmup Iteration   3: 87839.832 ops/s
[info] Iteration   1: 89756.540 ops/s
[info]                  ·gc.alloc.rate:                   1652.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              28967.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28767.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72.999 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 90810.185 ops/s
[info]                  ·gc.alloc.rate:                   1673.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              28998.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1629.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28238.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.855 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 92604.138 ops/s
[info]                  ·gc.alloc.rate:                   1724.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              29310.992 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1628.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27669.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.708 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 93002.112 ops/s
[info]                  ·gc.alloc.rate:               1738.938 MB/sec
[info]                  ·gc.alloc.rate.norm:          29424.332 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1639.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27748.963 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 92674.620 ops/s
[info]                  ·gc.alloc.rate:                   1727.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              29333.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28084.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.354 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   91769.519 ±(99.9%) 5448.181 ops/s [Average]
[info]   (min, avg, max) = (89756.540, 91769.519, 93002.112), stdev = 1414.875
[info]   CI (99.9%): [86321.338, 97217.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1703.326 ±(99.9%) 146.865 MB/sec [Average]
[info]   (min, avg, max) = (1652.224, 1703.326, 1738.938), stdev = 38.140
[info]   CI (99.9%): [1556.461, 1850.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   29206.979 ±(99.9%) 804.752 B/op [Average]
[info]   (min, avg, max) = (28967.746, 29206.979, 29424.332), stdev = 208.992
[info]   CI (99.9%): [28402.227, 30011.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1638.446 ±(99.9%) 40.121 MB/sec [Average]
[info]   (min, avg, max) = (1628.113, 1638.446, 1653.918), stdev = 10.419
[info]   CI (99.9%): [1598.325, 1678.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   28101.857 ±(99.9%) 1693.138 B/op [Average]
[info]   (min, avg, max) = (27669.482, 28101.857, 28767.309), stdev = 439.703
[info]   CI (99.9%): [26408.719, 29794.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.924 ±(99.9%) 7.001 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.924, 4.164), stdev = 1.818
[info]   CI (99.9%): [≈ 0, 7.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16.183 ±(99.9%) 122.783 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16.183, 72.999), stdev = 31.886
[info]   CI (99.9%): [≈ 0, 138.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.000, 16.000), stdev = 4.000
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.94% complete, ETA 00:20:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45828.213 ops/s
[info] # Warmup Iteration   2: 155312.861 ops/s
[info] # Warmup Iteration   3: 155603.158 ops/s
[info] Iteration   1: 161758.509 ops/s
[info]                  ·gc.alloc.rate:                   2544.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              24757.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2639.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25678.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.823 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 160744.565 ops/s
[info]                  ·gc.alloc.rate:                   2549.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              24954.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2321.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22722.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.853 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 161654.980 ops/s
[info]                  ·gc.alloc.rate:               2570.243 MB/sec
[info]                  ·gc.alloc.rate.norm:          25021.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2338.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22765.807 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 162451.568 ops/s
[info]                  ·gc.alloc.rate:                   2596.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              25157.503 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2691.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26071.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.403 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 162409.105 ops/s
[info]                  ·gc.alloc.rate:               2585.157 MB/sec
[info]                  ·gc.alloc.rate.norm:          25045.156 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2366.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22931.246 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   161803.745 ±(99.9%) 2676.248 ops/s [Average]
[info]   (min, avg, max) = (160744.565, 161803.745, 162451.568), stdev = 695.013
[info]   CI (99.9%): [159127.497, 164479.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2569.206 ±(99.9%) 86.817 MB/sec [Average]
[info]   (min, avg, max) = (2544.687, 2569.206, 2596.932), stdev = 22.546
[info]   CI (99.9%): [2482.388, 2656.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   24987.250 ±(99.9%) 569.345 B/op [Average]
[info]   (min, avg, max) = (24757.243, 24987.250, 25157.503), stdev = 147.857
[info]   CI (99.9%): [24417.905, 25556.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2471.429 ±(99.9%) 688.091 MB/sec [Average]
[info]   (min, avg, max) = (2321.006, 2471.429, 2691.260), stdev = 178.695
[info]   CI (99.9%): [1783.337, 3159.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   24033.916 ±(99.9%) 6500.131 B/op [Average]
[info]   (min, avg, max) = (22722.821, 24033.916, 26071.298), stdev = 1688.063
[info]   CI (99.9%): [17533.785, 30534.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.104 ±(99.9%) 0.501 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.104, 0.291), stdev = 0.130
[info]   CI (99.9%): [≈ 0, 0.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.016 ±(99.9%) 4.896 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.016, 2.853), stdev = 1.272
[info]   CI (99.9%): [≈ 0, 5.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.000, 11.000), stdev = 1.000
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 77.18% complete, ETA 00:20:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2763.900 ops/s
[info] # Warmup Iteration   2: 26353.163 ops/s
[info] # Warmup Iteration   3: 32709.412 ops/s
[info] Iteration   1: 32795.080 ops/s
[info]                  ·gc.alloc.rate:                   2186.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              104896.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1960.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94075.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.967 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 32203.846 ops/s
[info]                  ·gc.alloc.rate:                   2165.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              105809.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2311.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112976.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.017 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 32605.944 ops/s
[info]                  ·gc.alloc.rate:               2193.816 MB/sec
[info]                  ·gc.alloc.rate.norm:          105865.436 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2000.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 96517.604 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 32581.934 ops/s
[info]                  ·gc.alloc.rate:                   2192.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              105908.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97299.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.011 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 32944.457 ops/s
[info]                  ·gc.alloc.rate:                   2230.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              106535.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2362.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112857.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.994 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson":
[info]   32626.252 ±(99.9%) 1072.943 ops/s [Average]
[info]   (min, avg, max) = (32203.846, 32626.252, 32944.457), stdev = 278.640
[info]   CI (99.9%): [31553.309, 33699.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2193.589 ±(99.9%) 90.379 MB/sec [Average]
[info]   (min, avg, max) = (2165.253, 2193.589, 2230.227), stdev = 23.471
[info]   CI (99.9%): [2103.210, 2283.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   105803.039 ±(99.9%) 2256.426 B/op [Average]
[info]   (min, avg, max) = (104896.338, 105803.039, 106535.390), stdev = 585.987
[info]   CI (99.9%): [103546.613, 108059.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2129.902 ±(99.9%) 736.041 MB/sec [Average]
[info]   (min, avg, max) = (1960.514, 2129.902, 2362.580), stdev = 191.147
[info]   CI (99.9%): [1393.861, 2865.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   102745.352 ±(99.9%) 36047.382 B/op [Average]
[info]   (min, avg, max) = (94075.517, 102745.352, 112976.406), stdev = 9361.391
[info]   CI (99.9%): [66697.971, 138792.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.146 ±(99.9%) 1.077 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.146, 0.645), stdev = 0.280
[info]   CI (99.9%): [≈ 0, 1.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   6.998 ±(99.9%) 51.668 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.998, 30.967), stdev = 13.418
[info]   CI (99.9%): [≈ 0, 58.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.41% complete, ETA 00:20:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 48406.738 ops/s
[info] # Warmup Iteration   2: 145091.822 ops/s
[info] # Warmup Iteration   3: 153375.285 ops/s
[info] Iteration   1: 154734.772 ops/s
[info]                  ·gc.alloc.rate:               1036.475 MB/sec
[info]                  ·gc.alloc.rate.norm:          10540.837 B/op
[info]                  ·gc.churn.PS_Eden_Space:      980.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9966.692 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 150821.350 ops/s
[info]                  ·gc.alloc.rate:               1026.825 MB/sec
[info]                  ·gc.alloc.rate.norm:          10714.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10252.762 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   3: 155298.765 ops/s
[info]                  ·gc.alloc.rate:                   1035.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              10498.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9957.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.059 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.137 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 154800.317 ops/s
[info]                  ·gc.alloc.rate:                   1042.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              10598.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9942.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.693 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 156086.528 ops/s
[info]                  ·gc.alloc.rate:                   1044.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              10526.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9853.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.630 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   154348.346 ±(99.9%) 7872.159 ops/s [Average]
[info]   (min, avg, max) = (150821.350, 154348.346, 156086.528), stdev = 2044.375
[info]   CI (99.9%): [146476.187, 162220.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1037.166 ±(99.9%) 26.171 MB/sec [Average]
[info]   (min, avg, max) = (1026.825, 1037.166, 1044.024), stdev = 6.797
[info]   CI (99.9%): [1010.995, 1063.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   10575.553 ±(99.9%) 330.103 B/op [Average]
[info]   (min, avg, max) = (10498.033, 10575.553, 10714.223), stdev = 85.727
[info]   CI (99.9%): [10245.450, 10905.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   980.098 ±(99.9%) 9.612 MB/sec [Average]
[info]   (min, avg, max) = (977.267, 980.098, 982.600), stdev = 2.496
[info]   CI (99.9%): [970.486, 989.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9994.443 ±(99.9%) 582.549 B/op [Average]
[info]   (min, avg, max) = (9853.194, 9994.443, 10252.762), stdev = 151.286
[info]   CI (99.9%): [9411.894, 10576.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 6.897 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.858, 4.059), stdev = 1.791
[info]   CI (99.9%): [≈ 0, 7.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8.692 ±(99.9%) 69.891 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.692, 41.137), stdev = 18.150
[info]   CI (99.9%): [≈ 0, 78.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 3.050
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.65% complete, ETA 00:20:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 203869.482 ops/s
[info] # Warmup Iteration   2: 424055.515 ops/s
[info] # Warmup Iteration   3: 437952.120 ops/s
[info] Iteration   1: 440968.630 ops/s
[info]                  ·gc.alloc.rate:               496.403 MB/sec
[info]                  ·gc.alloc.rate.norm:          1771.587 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1175.632 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 433734.775 ops/s
[info]                  ·gc.alloc.rate:               500.782 MB/sec
[info]                  ·gc.alloc.rate.norm:          1816.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2392.883 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 456791.770 ops/s
[info]                  ·gc.alloc.rate:               513.202 MB/sec
[info]                  ·gc.alloc.rate.norm:          1768.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1137.177 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 440129.254 ops/s
[info]                  ·gc.alloc.rate:                   510.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              1824.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2362.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 440605.804 ops/s
[info]                  ·gc.alloc.rate:               494.743 MB/sec
[info]                  ·gc.alloc.rate.norm:          1766.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1182.584 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   442446.047 ±(99.9%) 32934.985 ops/s [Average]
[info]   (min, avg, max) = (433734.775, 442446.047, 456791.770), stdev = 8553.111
[info]   CI (99.9%): [409511.062, 475381.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   503.098 ±(99.9%) 31.917 MB/sec [Average]
[info]   (min, avg, max) = (494.743, 503.098, 513.202), stdev = 8.289
[info]   CI (99.9%): [471.181, 535.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1789.702 ±(99.9%) 110.415 B/op [Average]
[info]   (min, avg, max) = (1766.996, 1789.702, 1824.865), stdev = 28.675
[info]   CI (99.9%): [1679.287, 1900.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   462.190 ±(99.9%) 695.954 MB/sec [Average]
[info]   (min, avg, max) = (329.415, 462.190, 660.834), stdev = 180.737
[info]   CI (99.9%): [≈ 0, 1158.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1650.237 ±(99.9%) 2559.015 B/op [Average]
[info]   (min, avg, max) = (1137.177, 1650.237, 2392.883), stdev = 664.568
[info]   CI (99.9%): [≈ 0, 4209.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.256 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.149), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.414
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 77.88% complete, ETA 00:20:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 271305.314 ops/s
[info] # Warmup Iteration   2: 496951.541 ops/s
[info] # Warmup Iteration   3: 498783.069 ops/s
[info] Iteration   1: 500683.648 ops/s
[info]                  ·gc.alloc.rate:      12.266 MB/sec
[info]                  ·gc.alloc.rate.norm: 38.551 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 508993.915 ops/s
[info]                  ·gc.alloc.rate:      5.176 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 509472.089 ops/s
[info]                  ·gc.alloc.rate:      5.180 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 510098.548 ops/s
[info]                  ·gc.alloc.rate:      5.187 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 509522.555 ops/s
[info]                  ·gc.alloc.rate:      5.181 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   507754.151 ±(99.9%) 15294.352 ops/s [Average]
[info]   (min, avg, max) = (500683.648, 507754.151, 510098.548), stdev = 3971.895
[info]   CI (99.9%): [492459.799, 523048.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   6.598 ±(99.9%) 12.200 MB/sec [Average]
[info]   (min, avg, max) = (5.176, 6.598, 12.266), stdev = 3.168
[info]   CI (99.9%): [≈ 0, 18.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   20.511 ±(99.9%) 38.833 B/op [Average]
[info]   (min, avg, max) = (16.001, 20.511, 38.551), stdev = 10.085
[info]   CI (99.9%): [≈ 0, 59.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 78.12% complete, ETA 00:19:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7515.673 ops/s
[info] # Warmup Iteration   2: 64662.133 ops/s
[info] # Warmup Iteration   3: 71612.119 ops/s
[info] Iteration   1: 73272.934 ops/s
[info]                  ·gc.alloc.rate:                   1319.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              28347.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28014.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.341 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 73459.718 ops/s
[info]                  ·gc.alloc.rate:                   1310.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              28067.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28163.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.604 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.933 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 72136.219 ops/s
[info]                  ·gc.alloc.rate:                   1298.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              28332.716 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28841.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.904 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 73272.782 ops/s
[info]                  ·gc.alloc.rate:               1305.692 MB/sec
[info]                  ·gc.alloc.rate.norm:          28042.374 B/op
[info]                  ·gc.churn.PS_Eden_Space:      995.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21382.721 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 71591.255 ops/s
[info]                  ·gc.alloc.rate:                   1296.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              28510.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29286.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.915 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson":
[info]   72746.581 ±(99.9%) 3204.269 ops/s [Average]
[info]   (min, avg, max) = (71591.255, 72746.581, 73459.718), stdev = 832.138
[info]   CI (99.9%): [69542.313, 75950.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1306.287 ±(99.9%) 35.704 MB/sec [Average]
[info]   (min, avg, max) = (1296.989, 1306.287, 1319.870), stdev = 9.272
[info]   CI (99.9%): [1270.583, 1341.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   28260.041 ±(99.9%) 769.720 B/op [Average]
[info]   (min, avg, max) = (28042.374, 28260.041, 28510.297), stdev = 199.894
[info]   CI (99.9%): [27490.321, 29029.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1253.798 ±(99.9%) 557.159 MB/sec [Average]
[info]   (min, avg, max) = (995.610, 1253.798, 1332.321), stdev = 144.693
[info]   CI (99.9%): [696.638, 1810.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   27137.819 ±(99.9%) 12546.055 B/op [Average]
[info]   (min, avg, max) = (21382.721, 27137.819, 29286.969), stdev = 3258.171
[info]   CI (99.9%): [14591.764, 39683.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.196 ±(99.9%) 0.966 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.196, 0.604), stdev = 0.251
[info]   CI (99.9%): [≈ 0, 1.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.219 ±(99.9%) 20.716 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.219, 12.933), stdev = 5.380
[info]   CI (99.9%): [≈ 0, 24.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.304
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce
[info] # Run progress: 78.35% complete, ETA 00:19:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 154265.281 ops/s
[info] # Warmup Iteration   2: 2220935.388 ops/s
[info] # Warmup Iteration   3: 2724589.486 ops/s
[info] Iteration   1: 2897651.156 ops/s
[info]                  ·gc.alloc.rate:                   3705.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              2011.804 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3623.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1967.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 2895209.002 ops/s
[info]                  ·gc.alloc.rate:                   3735.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              2030.633 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3670.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1995.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        11.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 2890450.071 ops/s
[info]                  ·gc.alloc.rate:                   3718.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              2024.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3371.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1835.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 2876411.933 ops/s
[info]                  ·gc.alloc.rate:               3716.206 MB/sec
[info]                  ·gc.alloc.rate.norm:          2033.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3729.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2040.304 B/op
[info]                  ·gc.count:                    11.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   5: 2905328.279 ops/s
[info]                  ·gc.alloc.rate:               3752.461 MB/sec
[info]                  ·gc.alloc.rate.norm:          2032.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3737.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2024.661 B/op
[info]                  ·gc.count:                    11.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce":
[info]   2893010.088 ±(99.9%) 41300.961 ops/s [Average]
[info]   (min, avg, max) = (2876411.933, 2893010.088, 2905328.279), stdev = 10725.728
[info]   CI (99.9%): [2851709.128, 2934311.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate":
[info]   3725.745 ±(99.9%) 71.346 MB/sec [Average]
[info]   (min, avg, max) = (3705.261, 3725.745, 3752.461), stdev = 18.528
[info]   CI (99.9%): [3654.399, 3797.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2026.595 ±(99.9%) 34.327 B/op [Average]
[info]   (min, avg, max) = (2011.804, 2026.595, 2033.200), stdev = 8.915
[info]   CI (99.9%): [1992.268, 2060.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3626.491 ±(99.9%) 576.869 MB/sec [Average]
[info]   (min, avg, max) = (3371.774, 3626.491, 3737.845), stdev = 149.811
[info]   CI (99.9%): [3049.622, 4203.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1972.607 ±(99.9%) 313.753 B/op [Average]
[info]   (min, avg, max) = (1835.751, 1972.607, 2040.304), stdev = 81.481
[info]   CI (99.9%): [1658.854, 2286.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.303 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.187), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.165 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.102), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.count":
[info]   54.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (10.000, 10.800, 11.000), stdev = 0.447
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.time":
[info]   74.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (14.000, 14.800, 16.000), stdev = 0.837
[info]   CI (99.9%): [74.000, 74.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava
[info] # Run progress: 78.59% complete, ETA 00:19:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.636 ops/s
[info] # Warmup Iteration   2: 743801.469 ops/s
[info] # Warmup Iteration   3: 800763.367 ops/s
[info] Iteration   1: 804962.912 ops/s
[info]                  ·gc.alloc.rate:                   471.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              922.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     634.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.059 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 803390.984 ops/s
[info]                  ·gc.alloc.rate:               476.289 MB/sec
[info]                  ·gc.alloc.rate.norm:          933.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1271.685 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 788355.148 ops/s
[info]                  ·gc.alloc.rate:               458.203 MB/sec
[info]                  ·gc.alloc.rate.norm:          914.655 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 648.285 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 755573.134 ops/s
[info]                  ·gc.alloc.rate:                   449.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              936.510 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1355.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 791540.802 ops/s
[info]                  ·gc.alloc.rate:                   461.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              918.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     647.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava":
[info]   788764.596 ±(99.9%) 76671.938 ops/s [Average]
[info]   (min, avg, max) = (755573.134, 788764.596, 804962.912), stdev = 19911.459
[info]   CI (99.9%): [712092.658, 865436.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   463.572 ±(99.9%) 40.938 MB/sec [Average]
[info]   (min, avg, max) = (449.733, 463.572, 476.289), stdev = 10.631
[info]   CI (99.9%): [422.634, 504.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   924.956 ±(99.9%) 36.316 B/op [Average]
[info]   (min, avg, max) = (914.655, 924.956, 936.510), stdev = 9.431
[info]   CI (99.9%): [888.640, 961.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   455.022 ±(99.9%) 685.691 MB/sec [Average]
[info]   (min, avg, max) = (324.417, 455.022, 650.992), stdev = 178.072
[info]   CI (99.9%): [≈ 0, 1140.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   911.499 ±(99.9%) 1418.375 B/op [Average]
[info]   (min, avg, max) = (634.259, 911.499, 1355.606), stdev = 368.347
[info]   CI (99.9%): [≈ 0, 2329.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.018 ±(99.9%) 0.094 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.059), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.115), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala
[info] # Run progress: 78.82% complete, ETA 00:19:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19595.687 ops/s
[info] # Warmup Iteration   2: 209370.896 ops/s
[info] # Warmup Iteration   3: 348605.526 ops/s
[info] Iteration   1: 357326.971 ops/s
[info]                  ·gc.alloc.rate:                   836.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              3683.646 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4323.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 360612.104 ops/s
[info]                  ·gc.alloc.rate:                   837.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              3655.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2860.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 354975.895 ops/s
[info]                  ·gc.alloc.rate:                   840.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              3724.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4365.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 356018.628 ops/s
[info]                  ·gc.alloc.rate:                   829.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              3663.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2904.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.842 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.561 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 350666.071 ops/s
[info]                  ·gc.alloc.rate:                   819.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              3676.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4411.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.848 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala":
[info]   355919.934 ±(99.9%) 13950.315 ops/s [Average]
[info]   (min, avg, max) = (350666.071, 355919.934, 360612.104), stdev = 3622.852
[info]   CI (99.9%): [341969.619, 369870.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   832.490 ±(99.9%) 32.777 MB/sec [Average]
[info]   (min, avg, max) = (819.164, 832.490, 840.147), stdev = 8.512
[info]   CI (99.9%): [799.713, 865.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3680.831 ±(99.9%) 103.170 B/op [Average]
[info]   (min, avg, max) = (3655.653, 3680.831, 3724.692), stdev = 26.793
[info]   CI (99.9%): [3577.661, 3784.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   852.387 ±(99.9%) 688.869 MB/sec [Average]
[info]   (min, avg, max) = (655.513, 852.387, 984.582), stdev = 178.897
[info]   CI (99.9%): [163.518, 1541.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3772.990 ±(99.9%) 3132.033 B/op [Average]
[info]   (min, avg, max) = (2860.672, 3772.990, 4411.246), stdev = 813.379
[info]   CI (99.9%): [640.958, 6905.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.939 ±(99.9%) 4.996 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.939, 2.842), stdev = 1.297
[info]   CI (99.9%): [≈ 0, 5.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.173 ±(99.9%) 22.151 B/op [Average]
[info]   (min, avg, max) = (0.091, 4.173, 12.561), stdev = 5.753
[info]   CI (99.9%): [≈ 0, 26.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 11.000), stdev = 2.608
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala
[info] # Run progress: 79.06% complete, ETA 00:18:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 353884.499 ops/s
[info] # Warmup Iteration   2: 638199.424 ops/s
[info] # Warmup Iteration   3: 751264.071 ops/s
[info] Iteration   1: 735746.059 ops/s
[info]                  ·gc.alloc.rate:               666.273 MB/sec
[info]                  ·gc.alloc.rate.norm:          1425.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1417.788 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 754870.726 ops/s
[info]                  ·gc.alloc.rate:               688.405 MB/sec
[info]                  ·gc.alloc.rate.norm:          1435.155 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1383.925 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 760040.716 ops/s
[info]                  ·gc.alloc.rate:                   691.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              1431.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1375.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 754773.718 ops/s
[info]                  ·gc.alloc.rate:                   689.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              1436.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1387.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 718186.530 ops/s
[info]                  ·gc.alloc.rate:                   656.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              1438.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1459.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.957 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.288 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala":
[info]   744723.550 ±(99.9%) 67342.121 ops/s [Average]
[info]   (min, avg, max) = (718186.530, 744723.550, 760040.716), stdev = 17488.535
[info]   CI (99.9%): [677381.429, 812065.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   678.366 ±(99.9%) 61.508 MB/sec [Average]
[info]   (min, avg, max) = (656.395, 678.366, 691.444), stdev = 15.973
[info]   CI (99.9%): [616.858, 739.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1433.418 ±(99.9%) 20.216 B/op [Average]
[info]   (min, avg, max) = (1425.118, 1433.418, 1438.298), stdev = 5.250
[info]   CI (99.9%): [1413.202, 1453.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   664.607 ±(99.9%) 5.214 MB/sec [Average]
[info]   (min, avg, max) = (662.846, 664.607, 666.187), stdev = 1.354
[info]   CI (99.9%): [659.394, 669.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1404.984 ±(99.9%) 132.783 B/op [Average]
[info]   (min, avg, max) = (1375.921, 1404.984, 1459.754), stdev = 34.483
[info]   CI (99.9%): [1272.200, 1537.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.400 ±(99.9%) 3.352 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.957), stdev = 0.871
[info]   CI (99.9%): [≈ 0, 3.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.875 ±(99.9%) 7.347 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.875, 4.288), stdev = 1.908
[info]   CI (99.9%): [≈ 0, 8.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless
[info] # Run progress: 79.29% complete, ETA 00:18:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 884139.835 ops/s
[info] # Warmup Iteration   2: 2285558.788 ops/s
[info] # Warmup Iteration   3: 3346639.435 ops/s
[info] Iteration   1: 3356315.090 ops/s
[info]                  ·gc.alloc.rate:                   2016.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              945.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1998.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     936.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.498 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.171 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 3386024.007 ops/s
[info]                  ·gc.alloc.rate:                   2044.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              950.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1991.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     925.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3387006.002 ops/s
[info]                  ·gc.alloc.rate:                   2059.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              956.846 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1996.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     927.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3388989.428 ops/s
[info]                  ·gc.alloc.rate:                   2061.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              957.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     932.514 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 3362936.997 ops/s
[info]                  ·gc.alloc.rate:                   2047.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              957.978 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     944.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless":
[info]   3376254.305 ±(99.9%) 59284.674 ops/s [Average]
[info]   (min, avg, max) = (3356315.090, 3376254.305, 3388989.428), stdev = 15396.042
[info]   CI (99.9%): [3316969.631, 3435538.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate":
[info]   2045.753 ±(99.9%) 68.818 MB/sec [Average]
[info]   (min, avg, max) = (2016.462, 2045.753, 2061.032), stdev = 17.872
[info]   CI (99.9%): [1976.935, 2114.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm":
[info]   953.561 ±(99.9%) 20.899 B/op [Average]
[info]   (min, avg, max) = (945.497, 953.561, 957.978), stdev = 5.427
[info]   CI (99.9%): [932.662, 974.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   2002.530 ±(99.9%) 40.702 MB/sec [Average]
[info]   (min, avg, max) = (1991.521, 2002.530, 2018.096), stdev = 10.570
[info]   CI (99.9%): [1961.828, 2043.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   933.444 ±(99.9%) 28.993 B/op [Average]
[info]   (min, avg, max) = (925.591, 933.444, 944.415), stdev = 7.529
[info]   CI (99.9%): [904.452, 962.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.520 ±(99.9%) 4.257 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.520, 2.498), stdev = 1.106
[info]   CI (99.9%): [≈ 0, 4.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.244 ±(99.9%) 1.996 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.244, 1.171), stdev = 0.518
[info]   CI (99.9%): [≈ 0, 2.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.000, 12.000), stdev = 1.732
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump
[info] # Run progress: 79.53% complete, ETA 00:18:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1705935.708 ops/s
[info] # Warmup Iteration   2: 4202593.129 ops/s
[info] # Warmup Iteration   3: 7440737.641 ops/s
[info] Iteration   1: 7285922.007 ops/s
[info]                  ·gc.alloc.rate:               810.367 MB/sec
[info]                  ·gc.alloc.rate.norm:          175.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:      992.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 214.480 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 7502939.755 ops/s
[info]                  ·gc.alloc.rate:               843.876 MB/sec
[info]                  ·gc.alloc.rate.norm:          176.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139.105 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 7554795.306 ops/s
[info]                  ·gc.alloc.rate:                   836.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              174.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 7573183.390 ops/s
[info]                  ·gc.alloc.rate:                   823.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              171.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 7423537.003 ops/s
[info]                  ·gc.alloc.rate:                   812.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              172.315 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.516 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump":
[info]   7468075.492 ±(99.9%) 451310.755 ops/s [Average]
[info]   (min, avg, max) = (7285922.007, 7468075.492, 7573183.390), stdev = 117203.970
[info]   CI (99.9%): [7016764.737, 7919386.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   825.363 ±(99.9%) 56.144 MB/sec [Average]
[info]   (min, avg, max) = (810.367, 825.363, 843.876), stdev = 14.580
[info]   CI (99.9%): [769.220, 881.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   173.923 ±(99.9%) 8.857 B/op [Average]
[info]   (min, avg, max) = (171.083, 173.923, 176.952), stdev = 2.300
[info]   CI (99.9%): [165.066, 182.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   863.690 ±(99.9%) 699.196 MB/sec [Average]
[info]   (min, avg, max) = (663.385, 863.690, 999.301), stdev = 181.579
[info]   CI (99.9%): [164.494, 1562.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   182.292 ±(99.9%) 153.281 B/op [Average]
[info]   (min, avg, max) = (138.434, 182.292, 214.480), stdev = 39.807
[info]   CI (99.9%): [29.011, 335.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.500 ±(99.9%) 4.168 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.500, 2.436), stdev = 1.082
[info]   CI (99.9%): [≈ 0, 4.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.106 ±(99.9%) 0.884 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.106, 0.516), stdev = 0.230
[info]   CI (99.9%): [≈ 0, 0.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 7.000), stdev = 1.140
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson
[info] # Run progress: 79.76% complete, ETA 00:18:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3489.782 ops/s
[info] # Warmup Iteration   2: 59884.060 ops/s
[info] # Warmup Iteration   3: 213970.296 ops/s
[info] Iteration   1: 233567.475 ops/s
[info]                  ·gc.alloc.rate:                   2070.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              13948.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2301.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15501.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.208 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 227689.114 ops/s
[info]                  ·gc.alloc.rate:                   2007.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              13878.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11439.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.468 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 227281.943 ops/s
[info]                  ·gc.alloc.rate:               2004.711 MB/sec
[info]                  ·gc.alloc.rate.norm:          13881.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1992.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13798.691 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 228457.382 ops/s
[info]                  ·gc.alloc.rate:                   2041.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              14059.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13807.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 231284.543 ops/s
[info]                  ·gc.alloc.rate:                   2073.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              14109.651 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13720.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson":
[info]   229656.091 ±(99.9%) 10349.077 ops/s [Average]
[info]   (min, avg, max) = (227281.943, 229656.091, 233567.475), stdev = 2687.622
[info]   CI (99.9%): [219307.014, 240005.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2039.609 ±(99.9%) 126.892 MB/sec [Average]
[info]   (min, avg, max) = (2004.711, 2039.609, 2073.687), stdev = 32.953
[info]   CI (99.9%): [1912.718, 2166.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   13975.492 ±(99.9%) 404.851 B/op [Average]
[info]   (min, avg, max) = (13878.180, 13975.492, 14109.651), stdev = 105.139
[info]   CI (99.9%): [13570.641, 14380.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1993.993 ±(99.9%) 881.808 MB/sec [Average]
[info]   (min, avg, max) = (1655.055, 1993.993, 2301.029), stdev = 229.003
[info]   CI (99.9%): [1112.186, 2875.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   13653.516 ±(99.9%) 5569.091 B/op [Average]
[info]   (min, avg, max) = (11439.254, 13653.516, 15501.360), stdev = 1446.275
[info]   CI (99.9%): [8084.425, 19222.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.296 ±(99.9%) 1.468 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.296, 0.791), stdev = 0.381
[info]   CI (99.9%): [≈ 0, 1.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.021 ±(99.9%) 10.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.021, 5.468), stdev = 2.612
[info]   CI (99.9%): [≈ 0, 12.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.600, 14.000), stdev = 2.510
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.00% complete, ETA 00:18:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 973800.717 ops/s
[info] # Warmup Iteration   2: 1522717.215 ops/s
[info] # Warmup Iteration   3: 1578041.883 ops/s
[info] Iteration   1: 1573086.257 ops/s
[info]                  ·gc.alloc.rate:      87.962 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1570852.959 ops/s
[info]                  ·gc.alloc.rate:                   94.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              94.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     256.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.681 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.682 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1579161.797 ops/s
[info]                  ·gc.alloc.rate:      88.476 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.168 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1572628.818 ops/s
[info]                  ·gc.alloc.rate:                   94.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              94.214 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1579618.244 ops/s
[info]                  ·gc.alloc.rate:      88.331 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala":
[info]   1575069.615 ±(99.9%) 15535.257 ops/s [Average]
[info]   (min, avg, max) = (1570852.959, 1575069.615, 1579618.244), stdev = 4034.457
[info]   CI (99.9%): [1559534.358, 1590604.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   90.662 ±(99.9%) 12.710 MB/sec [Average]
[info]   (min, avg, max) = (87.962, 90.662, 94.392), stdev = 3.301
[info]   CI (99.9%): [77.952, 103.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   90.589 ±(99.9%) 13.366 B/op [Average]
[info]   (min, avg, max) = (88.000, 90.589, 94.562), stdev = 3.471
[info]   CI (99.9%): [77.223, 103.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   102.329 ±(99.9%) 539.550 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.329, 255.824), stdev = 140.120
[info]   CI (99.9%): [≈ 0, 641.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   102.456 ±(99.9%) 540.223 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 102.456, 256.284), stdev = 140.294
[info]   CI (99.9%): [≈ 0, 642.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.144 ±(99.9%) 1.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.144, 0.681), stdev = 0.300
[info]   CI (99.9%): [≈ 0, 1.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.145 ±(99.9%) 1.158 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.145, 0.682), stdev = 0.301
[info]   CI (99.9%): [≈ 0, 1.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.24% complete, ETA 00:17:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5403.143 ops/s
[info] # Warmup Iteration   2: 63905.021 ops/s
[info] # Warmup Iteration   3: 72784.491 ops/s
[info] Iteration   1: 76680.905 ops/s
[info]                  ·gc.alloc.rate:                   3344.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              68649.291 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3317.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68087.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.991 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 75885.861 ops/s
[info]                  ·gc.alloc.rate:                   3334.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              69145.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3017.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62570.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.317 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 75311.549 ops/s
[info]                  ·gc.alloc.rate:                   3337.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              69735.955 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3376.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70552.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.435 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 75931.955 ops/s
[info]                  ·gc.alloc.rate:                   3352.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              69469.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3051.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63236.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.863 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 76137.601 ops/s
[info]                  ·gc.alloc.rate:               3373.073 MB/sec
[info]                  ·gc.alloc.rate.norm:          69717.613 B/op
[info]                  ·gc.churn.PS_Eden_Space:      3397.553 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 70223.597 B/op
[info]                  ·gc.count:                    10.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson":
[info]   75989.574 ±(99.9%) 1899.781 ops/s [Average]
[info]   (min, avg, max) = (75311.549, 75989.574, 76680.905), stdev = 493.367
[info]   CI (99.9%): [74089.793, 77889.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3348.408 ±(99.9%) 59.645 MB/sec [Average]
[info]   (min, avg, max) = (3334.296, 3348.408, 3373.073), stdev = 15.490
[info]   CI (99.9%): [3288.763, 3408.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   69343.580 ±(99.9%) 1755.365 B/op [Average]
[info]   (min, avg, max) = (68649.291, 69343.580, 69735.955), stdev = 455.863
[info]   CI (99.9%): [67588.216, 71098.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3232.072 ±(99.9%) 705.373 MB/sec [Average]
[info]   (min, avg, max) = (3017.232, 3232.072, 3397.553), stdev = 183.183
[info]   CI (99.9%): [2526.699, 3937.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   66934.062 ±(99.9%) 14658.531 B/op [Average]
[info]   (min, avg, max) = (62570.004, 66934.062, 70552.869), stdev = 3806.774
[info]   CI (99.9%): [52275.531, 81592.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.345 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.208), stdev = 0.090
[info]   CI (99.9%): [≈ 0, 0.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.721 ±(99.9%) 7.128 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.721, 4.317), stdev = 1.851
[info]   CI (99.9%): [≈ 0, 8.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.count":
[info]   48.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.600, 10.000), stdev = 0.548
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 13.600, 15.000), stdev = 0.894
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.47% complete, ETA 00:17:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 574394.479 ops/s
[info] # Warmup Iteration   2: 1462540.387 ops/s
[info] # Warmup Iteration   3: 1535241.166 ops/s
[info] Iteration   1: 1536828.022 ops/s
[info]                  ·gc.alloc.rate:               838.761 MB/sec
[info]                  ·gc.alloc.rate.norm:          858.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:      980.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1004.201 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 1587624.602 ops/s
[info]                  ·gc.alloc.rate:                   853.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              846.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     649.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1582677.810 ops/s
[info]                  ·gc.alloc.rate:                   857.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              852.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     979.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1587414.280 ops/s
[info]                  ·gc.alloc.rate:                   852.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              844.784 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     652.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.768 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.736 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1553785.920 ops/s
[info]                  ·gc.alloc.rate:                   849.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              860.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     993.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.253 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala":
[info]   1569666.127 ±(99.9%) 89010.067 ops/s [Average]
[info]   (min, avg, max) = (1536828.022, 1569666.127, 1587624.602), stdev = 23115.632
[info]   CI (99.9%): [1480656.060, 1658676.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   850.291 ±(99.9%) 27.074 MB/sec [Average]
[info]   (min, avg, max) = (838.761, 850.291, 857.219), stdev = 7.031
[info]   CI (99.9%): [823.218, 877.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   852.542 ±(99.9%) 27.286 B/op [Average]
[info]   (min, avg, max) = (844.784, 852.542, 860.369), stdev = 7.086
[info]   CI (99.9%): [825.257, 879.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   851.810 ±(99.9%) 686.328 MB/sec [Average]
[info]   (min, avg, max) = (654.928, 851.810, 984.665), stdev = 178.237
[info]   CI (99.9%): [165.482, 1538.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   855.622 ±(99.9%) 720.707 B/op [Average]
[info]   (min, avg, max) = (649.156, 855.622, 1004.201), stdev = 187.165
[info]   CI (99.9%): [134.915, 1576.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.816 ±(99.9%) 6.366 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.816, 3.768), stdev = 1.653
[info]   CI (99.9%): [≈ 0, 7.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.810 ±(99.9%) 6.309 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.810, 3.736), stdev = 1.639
[info]   CI (99.9%): [≈ 0, 7.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 10.000), stdev = 2.387
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.71% complete, ETA 00:17:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 932929.726 ops/s
[info] # Warmup Iteration   2: 1715203.937 ops/s
[info] # Warmup Iteration   3: 1838130.764 ops/s
[info] Iteration   1: 1813788.738 ops/s
[info]                  ·gc.alloc.rate:                   500.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              433.884 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     286.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1766172.633 ops/s
[info]                  ·gc.alloc.rate:                   521.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              464.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     588.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1792030.727 ops/s
[info]                  ·gc.alloc.rate:               494.113 MB/sec
[info]                  ·gc.alloc.rate.norm:          433.923 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 290.166 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1807460.837 ops/s
[info]                  ·gc.alloc.rate:                   504.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              439.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     575.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1842568.069 ops/s
[info]                  ·gc.alloc.rate:               506.581 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 282.778 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala":
[info]   1804404.201 ±(99.9%) 108377.827 ops/s [Average]
[info]   (min, avg, max) = (1766172.633, 1804404.201, 1842568.069), stdev = 28145.377
[info]   CI (99.9%): [1696026.374, 1912782.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   505.364 ±(99.9%) 38.773 MB/sec [Average]
[info]   (min, avg, max) = (494.113, 505.364, 521.146), stdev = 10.069
[info]   CI (99.9%): [466.591, 544.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   440.895 ±(99.9%) 51.564 B/op [Average]
[info]   (min, avg, max) = (432.681, 440.895, 464.357), stdev = 13.391
[info]   CI (99.9%): [389.331, 492.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   462.584 ±(99.9%) 696.918 MB/sec [Average]
[info]   (min, avg, max) = (329.742, 462.584, 661.511), stdev = 180.987
[info]   CI (99.9%): [≈ 0, 1159.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   404.651 ±(99.9%) 624.067 B/op [Average]
[info]   (min, avg, max) = (282.778, 404.651, 588.239), stdev = 162.068
[info]   CI (99.9%): [≈ 0, 1028.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.036), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.414
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 80.94% complete, ETA 00:17:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 726251.635 ops/s
[info] # Warmup Iteration   2: 1754214.520 ops/s
[info] # Warmup Iteration   3: 1740235.944 ops/s
[info] Iteration   1: 1775365.465 ops/s
[info]                  ·gc.alloc.rate:      18.054 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1716916.308 ops/s
[info]                  ·gc.alloc.rate:               47.319 MB/sec
[info]                  ·gc.alloc.rate.norm:          43.373 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 234.484 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1801006.423 ops/s
[info]                  ·gc.alloc.rate:      18.311 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1796902.988 ops/s
[info]                  ·gc.alloc.rate:      18.269 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1799717.606 ops/s
[info]                  ·gc.alloc.rate:      18.334 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.031 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   1777981.758 ±(99.9%) 137447.350 ops/s [Average]
[info]   (min, avg, max) = (1716916.308, 1777981.758, 1801006.423), stdev = 35694.640
[info]   CI (99.9%): [1640534.408, 1915429.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   24.057 ±(99.9%) 50.073 MB/sec [Average]
[info]   (min, avg, max) = (18.054, 24.057, 47.319), stdev = 13.004
[info]   CI (99.9%): [≈ 0, 74.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   21.481 ±(99.9%) 47.124 B/op [Average]
[info]   (min, avg, max) = (16.000, 21.481, 43.373), stdev = 12.238
[info]   CI (99.9%): [≈ 0, 68.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   51.163 ±(99.9%) 440.527 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.163, 255.814), stdev = 114.403
[info]   CI (99.9%): [≈ 0, 491.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   46.897 ±(99.9%) 403.795 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 46.897, 234.484), stdev = 104.864
[info]   CI (99.9%): [≈ 0, 450.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.18% complete, ETA 00:17:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11036.984 ops/s
[info] # Warmup Iteration   2: 45471.032 ops/s
[info] # Warmup Iteration   3: 51598.425 ops/s
[info] Iteration   1: 50518.254 ops/s
[info]                  ·gc.alloc.rate:                   2170.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              67599.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2301.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71705.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.103 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 51018.143 ops/s
[info]                  ·gc.alloc.rate:                   2198.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              67806.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1991.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61419.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.642 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 51402.765 ops/s
[info]                  ·gc.alloc.rate:                   2222.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              68020.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61424.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.637 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 50639.656 ops/s
[info]                  ·gc.alloc.rate:                   2204.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              68499.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2356.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73213.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.647 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 50842.342 ops/s
[info]                  ·gc.alloc.rate:               2199.896 MB/sec
[info]                  ·gc.alloc.rate.norm:          68092.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2028.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62776.820 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson":
[info]   50884.232 ±(99.9%) 1337.123 ops/s [Average]
[info]   (min, avg, max) = (50518.254, 50884.232, 51402.765), stdev = 347.247
[info]   CI (99.9%): [49547.109, 52221.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2199.037 ±(99.9%) 72.471 MB/sec [Average]
[info]   (min, avg, max) = (2170.069, 2199.037, 2222.456), stdev = 18.821
[info]   CI (99.9%): [2126.566, 2271.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   68003.565 ±(99.9%) 1301.196 B/op [Average]
[info]   (min, avg, max) = (67599.219, 68003.565, 68499.803), stdev = 337.917
[info]   CI (99.9%): [66702.368, 69304.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2136.881 ±(99.9%) 681.087 MB/sec [Average]
[info]   (min, avg, max) = (1991.356, 2136.881, 2356.045), stdev = 176.876
[info]   CI (99.9%): [1455.794, 2817.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   66108.095 ±(99.9%) 22522.257 B/op [Average]
[info]   (min, avg, max) = (61419.853, 66108.095, 73213.998), stdev = 5848.959
[info]   CI (99.9%): [43585.838, 88630.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.142 ±(99.9%) 1.085 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.142, 0.645), stdev = 0.282
[info]   CI (99.9%): [≈ 0, 1.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.406 ±(99.9%) 33.806 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.406, 20.103), stdev = 8.779
[info]   CI (99.9%): [≈ 0, 38.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.200, 11.000), stdev = 1.095
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.41% complete, ETA 00:16:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 116587.700 ops/s
[info] # Warmup Iteration   2: 256564.601 ops/s
[info] # Warmup Iteration   3: 269550.966 ops/s
[info] Iteration   1: 271220.420 ops/s
[info]                  ·gc.alloc.rate:               1088.337 MB/sec
[info]                  ·gc.alloc.rate.norm:          6315.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5767.056 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 264776.748 ops/s
[info]                  ·gc.alloc.rate:                   1068.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              6351.774 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5915.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.247 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 271668.070 ops/s
[info]                  ·gc.alloc.rate:                   1095.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              6347.187 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5769.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.693 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 270166.832 ops/s
[info]                  ·gc.alloc.rate:               1102.969 MB/sec
[info]                  ·gc.alloc.rate.norm:          6424.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7691.172 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 268869.273 ops/s
[info]                  ·gc.alloc.rate:               1091.225 MB/sec
[info]                  ·gc.alloc.rate.norm:          6387.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5794.401 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala":
[info]   269340.269 ±(99.9%) 10665.032 ops/s [Average]
[info]   (min, avg, max) = (264776.748, 269340.269, 271668.070), stdev = 2769.675
[info]   CI (99.9%): [258675.237, 280005.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1089.386 ±(99.9%) 49.366 MB/sec [Average]
[info]   (min, avg, max) = (1068.687, 1089.386, 1102.969), stdev = 12.820
[info]   CI (99.9%): [1040.020, 1138.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6365.139 ±(99.9%) 161.320 B/op [Average]
[info]   (min, avg, max) = (6315.091, 6365.139, 6424.592), stdev = 41.894
[info]   CI (99.9%): [6203.819, 6526.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1059.099 ±(99.9%) 562.573 MB/sec [Average]
[info]   (min, avg, max) = (989.972, 1059.099, 1320.415), stdev = 146.098
[info]   CI (99.9%): [496.526, 1621.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6187.466 ±(99.9%) 3245.318 B/op [Average]
[info]   (min, avg, max) = (5767.056, 6187.466, 7691.172), stdev = 842.799
[info]   CI (99.9%): [2942.148, 9432.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.654 ±(99.9%) 5.539 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.654, 3.227), stdev = 1.439
[info]   CI (99.9%): [≈ 0, 6.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.788 ±(99.9%) 32.086 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.788, 18.693), stdev = 8.333
[info]   CI (99.9%): [≈ 0, 35.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 8.000), stdev = 1.517
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.65% complete, ETA 00:16:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1334.367 ops/s
[info] # Warmup Iteration   2: 36116.887 ops/s
[info] # Warmup Iteration   3: 40508.187 ops/s
[info] Iteration   1: 40069.017 ops/s
[info]                  ·gc.alloc.rate:                   2000.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              78586.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1968.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77301.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.340 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 40731.123 ops/s
[info]                  ·gc.alloc.rate:                   2011.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              77713.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1986.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76751.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.804 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 40648.208 ops/s
[info]                  ·gc.alloc.rate:               2034.737 MB/sec
[info]                  ·gc.alloc.rate.norm:          78776.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2001.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77486.512 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 41175.969 ops/s
[info]                  ·gc.alloc.rate:                   2060.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              78732.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76991.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.591 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 41227.090 ops/s
[info]                  ·gc.alloc.rate:                   2059.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              78555.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77161.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.793 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson":
[info]   40770.281 ±(99.9%) 1807.614 ops/s [Average]
[info]   (min, avg, max) = (40069.017, 40770.281, 41227.090), stdev = 469.432
[info]   CI (99.9%): [38962.667, 42577.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2033.313 ±(99.9%) 104.088 MB/sec [Average]
[info]   (min, avg, max) = (2000.985, 2033.313, 2060.431), stdev = 27.031
[info]   CI (99.9%): [1929.225, 2137.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   78472.676 ±(99.9%) 1674.211 B/op [Average]
[info]   (min, avg, max) = (77713.202, 78472.676, 78776.491), stdev = 434.787
[info]   CI (99.9%): [76798.465, 80146.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1998.713 ±(99.9%) 84.106 MB/sec [Average]
[info]   (min, avg, max) = (1968.281, 1998.713, 2022.477), stdev = 21.842
[info]   CI (99.9%): [1914.607, 2082.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   77138.546 ±(99.9%) 1088.609 B/op [Average]
[info]   (min, avg, max) = (76751.439, 77138.546, 77486.512), stdev = 282.708
[info]   CI (99.9%): [76049.936, 78227.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.192 ±(99.9%) 1.471 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.192, 0.874), stdev = 0.382
[info]   CI (99.9%): [≈ 0, 1.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   7.506 ±(99.9%) 57.804 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.506, 34.340), stdev = 15.011
[info]   CI (99.9%): [≈ 0, 65.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.000, 11.000), stdev = 1.225
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.88% complete, ETA 00:16:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32681.032 ops/s
[info] # Warmup Iteration   2: 104126.530 ops/s
[info] # Warmup Iteration   3: 113314.538 ops/s
[info] Iteration   1: 113056.143 ops/s
[info]                  ·gc.alloc.rate:                   1135.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              15802.378 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13696.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 112797.402 ops/s
[info]                  ·gc.alloc.rate:                   1131.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              15789.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18355.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.471 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 114295.478 ops/s
[info]                  ·gc.alloc.rate:                   1142.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              15727.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13557.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.319 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 112369.895 ops/s
[info]                  ·gc.alloc.rate:                   1129.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              15814.870 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18285.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.624 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 113907.044 ops/s
[info]                  ·gc.alloc.rate:               1158.199 MB/sec
[info]                  ·gc.alloc.rate.norm:          16000.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13538.860 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala":
[info]   113285.192 ±(99.9%) 3065.769 ops/s [Average]
[info]   (min, avg, max) = (112369.895, 113285.192, 114295.478), stdev = 796.171
[info]   CI (99.9%): [110219.423, 116350.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1139.415 ±(99.9%) 44.664 MB/sec [Average]
[info]   (min, avg, max) = (1129.457, 1139.415, 1158.199), stdev = 11.599
[info]   CI (99.9%): [1094.751, 1184.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15826.951 ±(99.9%) 396.034 B/op [Average]
[info]   (min, avg, max) = (15727.344, 15826.951, 16000.809), stdev = 102.849
[info]   CI (99.9%): [15430.917, 16222.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1114.069 ±(99.9%) 691.692 MB/sec [Average]
[info]   (min, avg, max) = (979.994, 1114.069, 1315.674), stdev = 179.630
[info]   CI (99.9%): [422.377, 1805.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   15486.790 ±(99.9%) 9965.343 B/op [Average]
[info]   (min, avg, max) = (13538.860, 15486.790, 18355.959), stdev = 2587.968
[info]   CI (99.9%): [5521.447, 25452.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.858 ±(99.9%) 5.450 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.858, 3.331), stdev = 1.415
[info]   CI (99.9%): [≈ 0, 6.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.941 ±(99.9%) 76.046 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.941, 46.471), stdev = 19.749
[info]   CI (99.9%): [≈ 0, 87.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 15.000), stdev = 4.712
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.12% complete, ETA 00:16:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 170006.329 ops/s
[info] # Warmup Iteration   2: 295014.907 ops/s
[info] # Warmup Iteration   3: 334919.721 ops/s
[info] Iteration   1: 336191.469 ops/s
[info]                  ·gc.alloc.rate:               459.564 MB/sec
[info]                  ·gc.alloc.rate.norm:          2150.749 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1542.024 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 321245.977 ops/s
[info]                  ·gc.alloc.rate:               454.739 MB/sec
[info]                  ·gc.alloc.rate.norm:          2227.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3227.748 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 335512.744 ops/s
[info]                  ·gc.alloc.rate:                   461.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              2166.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1546.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 335604.271 ops/s
[info]                  ·gc.alloc.rate:                   462.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              2167.471 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1549.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 321034.855 ops/s
[info]                  ·gc.alloc.rate:                   449.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              2201.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3241.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala":
[info]   329917.863 ±(99.9%) 30871.594 ops/s [Average]
[info]   (min, avg, max) = (321034.855, 329917.863, 336191.469), stdev = 8017.255
[info]   CI (99.9%): [299046.269, 360789.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   457.462 ±(99.9%) 21.415 MB/sec [Average]
[info]   (min, avg, max) = (449.041, 457.462, 462.169), stdev = 5.561
[info]   CI (99.9%): [436.048, 478.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2182.545 ±(99.9%) 119.494 B/op [Average]
[info]   (min, avg, max) = (2150.749, 2182.545, 2227.196), stdev = 31.032
[info]   CI (99.9%): [2063.051, 2302.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   461.964 ±(99.9%) 696.464 MB/sec [Average]
[info]   (min, avg, max) = (329.494, 461.964, 661.163), stdev = 180.870
[info]   CI (99.9%): [≈ 0, 1158.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2221.396 ±(99.9%) 3560.932 B/op [Average]
[info]   (min, avg, max) = (1542.024, 2221.396, 3241.063), stdev = 924.763
[info]   CI (99.9%): [≈ 0, 5782.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.100 ±(99.9%) 0.481 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.100, 0.306), stdev = 0.125
[info]   CI (99.9%): [≈ 0, 0.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 6.000), stdev = 2.049
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 82.35% complete, ETA 00:15:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 175212.296 ops/s
[info] # Warmup Iteration   2: 324701.128 ops/s
[info] # Warmup Iteration   3: 366372.966 ops/s
[info] Iteration   1: 364526.315 ops/s
[info]                  ·gc.alloc.rate:      3.706 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 366913.437 ops/s
[info]                  ·gc.alloc.rate:      4.558 MB/sec
[info]                  ·gc.alloc.rate.norm: 19.550 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 366692.757 ops/s
[info]                  ·gc.alloc.rate:      4.028 MB/sec
[info]                  ·gc.alloc.rate.norm: 17.285 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 366524.790 ops/s
[info]                  ·gc.alloc.rate:      3.727 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 366437.572 ops/s
[info]                  ·gc.alloc.rate:      3.726 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   366218.974 ±(99.9%) 3710.006 ops/s [Average]
[info]   (min, avg, max) = (364526.315, 366218.974, 366913.437), stdev = 963.477
[info]   CI (99.9%): [362508.968, 369928.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   3.949 ±(99.9%) 1.408 MB/sec [Average]
[info]   (min, avg, max) = (3.706, 3.949, 4.558), stdev = 0.366
[info]   CI (99.9%): [2.541, 5.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.968 ±(99.9%) 5.957 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.968, 19.550), stdev = 1.547
[info]   CI (99.9%): [11.011, 22.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 82.59% complete, ETA 00:15:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9259.596 ops/s
[info] # Warmup Iteration   2: 43661.775 ops/s
[info] # Warmup Iteration   3: 57440.510 ops/s
[info] Iteration   1: 57427.365 ops/s
[info]                  ·gc.alloc.rate:                   1388.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              38047.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35742.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.852 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 58098.171 ops/s
[info]                  ·gc.alloc.rate:                   1389.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              37637.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35611.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.865 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 58334.791 ops/s
[info]                  ·gc.alloc.rate:                   1412.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              38109.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35666.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.123 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 58260.985 ops/s
[info]                  ·gc.alloc.rate:                   1404.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              37934.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.336 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35880.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.687 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 58384.044 ops/s
[info]                  ·gc.alloc.rate:                   1434.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              38655.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1669.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44989.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.561 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson":
[info]   58101.071 ±(99.9%) 1508.842 ops/s [Average]
[info]   (min, avg, max) = (57427.365, 58101.071, 58384.044), stdev = 391.842
[info]   CI (99.9%): [56592.229, 59609.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1405.891 ±(99.9%) 72.144 MB/sec [Average]
[info]   (min, avg, max) = (1388.811, 1405.891, 1434.104), stdev = 18.735
[info]   CI (99.9%): [1333.747, 1478.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   38076.967 ±(99.9%) 1427.477 B/op [Average]
[info]   (min, avg, max) = (37637.873, 38076.967, 38655.514), stdev = 370.711
[info]   CI (99.9%): [36649.491, 39504.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1387.781 ±(99.9%) 606.493 MB/sec [Average]
[info]   (min, avg, max) = (1304.690, 1387.781, 1669.092), stdev = 157.504
[info]   CI (99.9%): [781.288, 1994.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   37578.144 ±(99.9%) 15958.252 B/op [Average]
[info]   (min, avg, max) = (35611.777, 37578.144, 44989.506), stdev = 4144.307
[info]   CI (99.9%): [21619.891, 53536.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.200 ±(99.9%) 1.234 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.200, 0.770), stdev = 0.320
[info]   CI (99.9%): [≈ 0, 1.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.418 ±(99.9%) 33.410 B/op [Average]
[info]   (min, avg, max) = (0.561, 5.418, 20.865), stdev = 8.677
[info]   CI (99.9%): [≈ 0, 38.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 82.82% complete, ETA 00:15:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15164.386 ops/s
[info] # Warmup Iteration   2: 67169.238 ops/s
[info] # Warmup Iteration   3: 68511.871 ops/s
[info] Iteration   1: 71241.581 ops/s
[info]                  ·gc.alloc.rate:                   1662.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              36729.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36568.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.956 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65.301 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 70758.145 ops/s
[info]                  ·gc.alloc.rate:                   1646.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              36622.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36612.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.354 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 72426.643 ops/s
[info]                  ·gc.alloc.rate:                   1681.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              36535.326 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1644.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35723.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.976 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 71188.884 ops/s
[info]                  ·gc.alloc.rate:               1682.691 MB/sec
[info]                  ·gc.alloc.rate.norm:          37188.858 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1652.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36529.771 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 70680.362 ops/s
[info]                  ·gc.alloc.rate:               1668.188 MB/sec
[info]                  ·gc.alloc.rate.norm:          37140.657 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1662.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37015.807 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce":
[info]   71259.123 ±(99.9%) 2691.520 ops/s [Average]
[info]   (min, avg, max) = (70680.362, 71259.123, 72426.643), stdev = 698.979
[info]   CI (99.9%): [68567.603, 73950.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1668.361 ±(99.9%) 57.039 MB/sec [Average]
[info]   (min, avg, max) = (1646.657, 1668.361, 1682.691), stdev = 14.813
[info]   CI (99.9%): [1611.322, 1725.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   36843.380 ±(99.9%) 1162.216 B/op [Average]
[info]   (min, avg, max) = (36535.326, 36843.380, 37188.858), stdev = 301.824
[info]   CI (99.9%): [35681.164, 38005.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1652.253 ±(99.9%) 28.640 MB/sec [Average]
[info]   (min, avg, max) = (1644.069, 1652.253, 1662.581), stdev = 7.438
[info]   CI (99.9%): [1623.613, 1680.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   36489.990 ±(99.9%) 1812.920 B/op [Average]
[info]   (min, avg, max) = (35723.547, 36489.990, 37015.807), stdev = 470.810
[info]   CI (99.9%): [34677.070, 38302.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.766 ±(99.9%) 4.822 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.766, 2.956), stdev = 1.252
[info]   CI (99.9%): [≈ 0, 5.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   16.926 ±(99.9%) 106.547 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16.926, 65.301), stdev = 27.670
[info]   CI (99.9%): [≈ 0, 123.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 15.000), stdev = 3.647
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.06% complete, ETA 00:15:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16571.443 ops/s
[info] # Warmup Iteration   2: 94888.466 ops/s
[info] # Warmup Iteration   3: 124419.650 ops/s
[info] Iteration   1: 132811.213 ops/s
[info]                  ·gc.alloc.rate:                   899.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              10662.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7759.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.247 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 132784.496 ops/s
[info]                  ·gc.alloc.rate:                   910.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              10791.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11657.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.247 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 132910.389 ops/s
[info]                  ·gc.alloc.rate:               910.449 MB/sec
[info]                  ·gc.alloc.rate.norm:          10779.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11661.799 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 133648.988 ops/s
[info]                  ·gc.alloc.rate:                   900.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              10606.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7742.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.455 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.458 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 133636.540 ops/s
[info]                  ·gc.alloc.rate:                   920.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              10841.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11524.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.226 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   133158.325 ±(99.9%) 1712.505 ops/s [Average]
[info]   (min, avg, max) = (132784.496, 133158.325, 133648.988), stdev = 444.732
[info]   CI (99.9%): [131445.820, 134870.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   908.521 ±(99.9%) 32.834 MB/sec [Average]
[info]   (min, avg, max) = (899.900, 908.521, 920.696), stdev = 8.527
[info]   CI (99.9%): [875.687, 941.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   10736.450 ±(99.9%) 376.019 B/op [Average]
[info]   (min, avg, max) = (10606.714, 10736.450, 10841.469), stdev = 97.651
[info]   CI (99.9%): [10360.431, 11112.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   851.972 ±(99.9%) 688.264 MB/sec [Average]
[info]   (min, avg, max) = (654.858, 851.972, 984.930), stdev = 178.740
[info]   CI (99.9%): [163.708, 1540.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   10069.011 ±(99.9%) 8151.592 B/op [Average]
[info]   (min, avg, max) = (7742.186, 10069.011, 11661.799), stdev = 2116.943
[info]   CI (99.9%): [1917.419, 18220.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.920 ±(99.9%) 7.611 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.920, 4.455), stdev = 1.977
[info]   CI (99.9%): [≈ 0, 8.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   10.835 ±(99.9%) 89.614 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.835, 52.458), stdev = 23.272
[info]   CI (99.9%): [≈ 0, 100.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 11.000), stdev = 3.033
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.29% complete, ETA 00:15:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96955.544 ops/s
[info] # Warmup Iteration   2: 238139.446 ops/s
[info] # Warmup Iteration   3: 257533.348 ops/s
[info] Iteration   1: 260548.788 ops/s
[info]                  ·gc.alloc.rate:               1103.102 MB/sec
[info]                  ·gc.alloc.rate.norm:          6661.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6001.278 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 260981.701 ops/s
[info]                  ·gc.alloc.rate:                   1098.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              6623.465 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5999.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.251 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 261393.269 ops/s
[info]                  ·gc.alloc.rate:                   1103.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              6644.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7985.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.289 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.803 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 262416.946 ops/s
[info]                  ·gc.alloc.rate:                   1114.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              6680.797 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5932.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.624 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 261723.771 ops/s
[info]                  ·gc.alloc.rate:                   1115.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              6705.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5948.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.250 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   261412.895 ±(99.9%) 2748.397 ops/s [Average]
[info]   (min, avg, max) = (260548.788, 261412.895, 262416.946), stdev = 713.750
[info]   CI (99.9%): [258664.498, 264161.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1106.862 ±(99.9%) 28.400 MB/sec [Average]
[info]   (min, avg, max) = (1098.397, 1106.862, 1115.214), stdev = 7.375
[info]   CI (99.9%): [1078.462, 1135.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6663.048 ±(99.9%) 122.821 B/op [Average]
[info]   (min, avg, max) = (6623.465, 6663.048, 6705.768), stdev = 31.896
[info]   CI (99.9%): [6540.227, 6785.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1058.733 ±(99.9%) 576.177 MB/sec [Average]
[info]   (min, avg, max) = (989.243, 1058.733, 1326.361), stdev = 149.631
[info]   CI (99.9%): [482.557, 1634.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6373.472 ±(99.9%) 3471.743 B/op [Average]
[info]   (min, avg, max) = (5932.803, 6373.472, 7985.384), stdev = 901.601
[info]   CI (99.9%): [2901.728, 9845.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.695 ±(99.9%) 5.585 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.695, 3.289), stdev = 1.451
[info]   CI (99.9%): [≈ 0, 6.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.186 ±(99.9%) 33.628 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.186, 19.803), stdev = 8.733
[info]   CI (99.9%): [≈ 0, 37.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 9.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.53% complete, ETA 00:14:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1091.139 ops/s
[info] # Warmup Iteration   2: 21448.919 ops/s
[info] # Warmup Iteration   3: 29383.453 ops/s
[info] Iteration   1: 29267.471 ops/s
[info]                  ·gc.alloc.rate:                   1479.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              79529.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1625.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87381.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.239 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 28829.313 ops/s
[info]                  ·gc.alloc.rate:                   1456.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              79486.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71635.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.500 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 29409.742 ops/s
[info]                  ·gc.alloc.rate:                   1491.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              79800.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1653.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88456.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.228 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 29572.984 ops/s
[info]                  ·gc.alloc.rate:                   1490.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              79292.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70755.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.108 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 29476.194 ops/s
[info]                  ·gc.alloc.rate:               1492.376 MB/sec
[info]                  ·gc.alloc.rate.norm:          79676.152 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1336.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 71362.064 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson":
[info]   29311.141 ±(99.9%) 1121.971 ops/s [Average]
[info]   (min, avg, max) = (28829.313, 29311.141, 29572.984), stdev = 291.372
[info]   CI (99.9%): [28189.169, 30433.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1481.905 ±(99.9%) 59.122 MB/sec [Average]
[info]   (min, avg, max) = (1456.181, 1481.905, 1492.376), stdev = 15.354
[info]   CI (99.9%): [1422.783, 1541.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   79556.968 ±(99.9%) 743.593 B/op [Average]
[info]   (min, avg, max) = (79292.578, 79556.968, 79800.444), stdev = 193.109
[info]   CI (99.9%): [78813.376, 80300.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1451.479 ±(99.9%) 662.349 MB/sec [Average]
[info]   (min, avg, max) = (1312.368, 1451.479, 1653.520), stdev = 172.010
[info]   CI (99.9%): [789.130, 2113.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   77918.374 ±(99.9%) 35205.448 B/op [Average]
[info]   (min, avg, max) = (70755.838, 77918.374, 88456.668), stdev = 9142.743
[info]   CI (99.9%): [42712.926, 113123.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.158 ±(99.9%) 1.140 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.158, 0.687), stdev = 0.296
[info]   CI (99.9%): [≈ 0, 1.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.615 ±(99.9%) 62.279 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.615, 37.500), stdev = 16.174
[info]   CI (99.9%): [≈ 0, 70.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 9.000), stdev = 1.483
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.76% complete, ETA 00:14:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32030.910 ops/s
[info] # Warmup Iteration   2: 164543.894 ops/s
[info] # Warmup Iteration   3: 173970.912 ops/s
[info] Iteration   1: 178767.240 ops/s
[info]                  ·gc.alloc.rate:                   1018.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              8966.805 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8614.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.367 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 175451.904 ops/s
[info]                  ·gc.alloc.rate:                   993.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              8909.846 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8807.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.373 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 175516.315 ops/s
[info]                  ·gc.alloc.rate:                   1001.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              8980.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8828.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.122 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.958 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 176421.593 ops/s
[info]                  ·gc.alloc.rate:                   1002.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              8940.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8729.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 179662.504 ops/s
[info]                  ·gc.alloc.rate:               1018.418 MB/sec
[info]                  ·gc.alloc.rate.norm:          8919.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8560.447 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   177163.911 ±(99.9%) 7459.276 ops/s [Average]
[info]   (min, avg, max) = (175451.904, 177163.911, 179662.504), stdev = 1937.150
[info]   CI (99.9%): [169704.635, 184623.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1006.880 ±(99.9%) 43.072 MB/sec [Average]
[info]   (min, avg, max) = (993.327, 1006.880, 1018.564), stdev = 11.186
[info]   CI (99.9%): [963.809, 1049.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   8943.336 ±(99.9%) 116.172 B/op [Average]
[info]   (min, avg, max) = (8909.846, 8943.336, 8980.549), stdev = 30.170
[info]   CI (99.9%): [8827.164, 9059.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   980.267 ±(99.9%) 11.261 MB/sec [Average]
[info]   (min, avg, max) = (977.433, 980.267, 984.583), stdev = 2.925
[info]   CI (99.9%): [969.006, 991.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   8707.945 ±(99.9%) 452.273 B/op [Average]
[info]   (min, avg, max) = (8560.447, 8707.945, 8828.077), stdev = 117.454
[info]   CI (99.9%): [8255.672, 9160.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.845 ±(99.9%) 7.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.845, 4.122), stdev = 1.832
[info]   CI (99.9%): [≈ 0, 7.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.577 ±(99.9%) 63.248 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.577, 36.958), stdev = 16.425
[info]   CI (99.9%): [≈ 0, 70.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 10.000), stdev = 2.793
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.00% complete, ETA 00:14:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 186336.614 ops/s
[info] # Warmup Iteration   2: 420914.111 ops/s
[info] # Warmup Iteration   3: 482253.524 ops/s
[info] Iteration   1: 476927.278 ops/s
[info]                  ·gc.alloc.rate:                   1431.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              4723.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4367.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 463964.688 ops/s
[info]                  ·gc.alloc.rate:                   1396.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              4738.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4489.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.298 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 465955.789 ops/s
[info]                  ·gc.alloc.rate:               1422.078 MB/sec
[info]                  ·gc.alloc.rate.norm:          4802.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1645.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5557.402 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 482197.603 ops/s
[info]                  ·gc.alloc.rate:               1464.259 MB/sec
[info]                  ·gc.alloc.rate.norm:          4778.716 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1319.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4304.776 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 482556.203 ops/s
[info]                  ·gc.alloc.rate:               1465.417 MB/sec
[info]                  ·gc.alloc.rate.norm:          4779.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1325.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4322.231 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   474320.312 ±(99.9%) 34110.386 ops/s [Average]
[info]   (min, avg, max) = (463964.688, 474320.312, 482556.203), stdev = 8858.359
[info]   CI (99.9%): [440209.927, 508430.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1436.063 ±(99.9%) 112.272 MB/sec [Average]
[info]   (min, avg, max) = (1396.970, 1436.063, 1465.417), stdev = 29.157
[info]   CI (99.9%): [1323.791, 1548.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   4764.603 ±(99.9%) 124.942 B/op [Average]
[info]   (min, avg, max) = (4723.918, 4764.603, 4802.830), stdev = 32.447
[info]   CI (99.9%): [4639.660, 4889.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1387.436 ±(99.9%) 555.577 MB/sec [Average]
[info]   (min, avg, max) = (1319.038, 1387.436, 1645.501), stdev = 144.282
[info]   CI (99.9%): [831.859, 1943.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4608.390 ±(99.9%) 2061.675 B/op [Average]
[info]   (min, avg, max) = (4304.776, 4608.390, 5557.402), stdev = 535.410
[info]   CI (99.9%): [2546.715, 6670.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.674 ±(99.9%) 5.718 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.674, 3.331), stdev = 1.485
[info]   CI (99.9%): [≈ 0, 6.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.287 ±(99.9%) 19.398 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.287, 11.298), stdev = 5.038
[info]   CI (99.9%): [≈ 0, 21.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 11.000), stdev = 2.280
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 84.24% complete, ETA 00:14:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 231490.761 ops/s
[info] # Warmup Iteration   2: 498443.178 ops/s
[info] # Warmup Iteration   3: 523631.642 ops/s
[info] Iteration   1: 516911.271 ops/s
[info]                  ·gc.alloc.rate:                   985.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              3000.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3019.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 500990.887 ops/s
[info]                  ·gc.alloc.rate:               941.160 MB/sec
[info]                  ·gc.alloc.rate.norm:          2955.882 B/op
[info]                  ·gc.churn.PS_Eden_Space:      994.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3122.095 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 525566.170 ops/s
[info]                  ·gc.alloc.rate:                   997.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              2986.676 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2980.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.914 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 529238.566 ops/s
[info]                  ·gc.alloc.rate:                   997.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              2965.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2945.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.929 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 523079.381 ops/s
[info]                  ·gc.alloc.rate:                   1001.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              3012.829 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2976.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   519157.255 ±(99.9%) 42755.653 ops/s [Average]
[info]   (min, avg, max) = (500990.887, 519157.255, 529238.566), stdev = 11103.507
[info]   CI (99.9%): [476401.602, 561912.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   984.641 ±(99.9%) 96.264 MB/sec [Average]
[info]   (min, avg, max) = (941.160, 984.641, 1001.405), stdev = 24.999
[info]   CI (99.9%): [888.378, 1080.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2984.243 ±(99.9%) 91.304 B/op [Average]
[info]   (min, avg, max) = (2955.882, 2984.243, 3012.829), stdev = 23.711
[info]   CI (99.9%): [2892.940, 3075.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   992.294 ±(99.9%) 9.828 MB/sec [Average]
[info]   (min, avg, max) = (989.234, 992.294, 995.501), stdev = 2.552
[info]   CI (99.9%): [982.466, 1002.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   3008.763 ±(99.9%) 264.261 B/op [Average]
[info]   (min, avg, max) = (2945.577, 3008.763, 3122.095), stdev = 68.628
[info]   CI (99.9%): [2744.502, 3273.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.679 ±(99.9%) 4.971 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.679, 2.978), stdev = 1.291
[info]   CI (99.9%): [≈ 0, 5.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2.031 ±(99.9%) 14.881 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.031, 8.914), stdev = 3.865
[info]   CI (99.9%): [≈ 0, 16.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 9.000), stdev = 2.302
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 84.47% complete, ETA 00:14:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14554.655 ops/s
[info] # Warmup Iteration   2: 67836.569 ops/s
[info] # Warmup Iteration   3: 74014.796 ops/s
[info] Iteration   1: 75255.592 ops/s
[info]                  ·gc.alloc.rate:                   1475.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              30858.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27458.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.435 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 76169.346 ops/s
[info]                  ·gc.alloc.rate:                   1506.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              31133.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1638.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33844.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.580 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 94.623 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 76131.929 ops/s
[info]                  ·gc.alloc.rate:                   1504.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              31102.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26934.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.430 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 73359.567 ops/s
[info]                  ·gc.alloc.rate:                        1439.581 MB/sec
[info]                  ·gc.alloc.rate.norm:                   30881.523 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.018 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.378 B/op
[info]                  ·gc.churn.Metaspace:                   0.052 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              1.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1593.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          34186.027 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.373 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             50.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      4.466 B/op
[info]                  ·gc.count:                             6.000 counts
[info]                  ·gc.time:                              43.000 ms
[info] Iteration   5: 76357.236 ops/s
[info]                  ·gc.alloc.rate:                   1491.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              30739.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27102.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.858 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson":
[info]   75454.734 ±(99.9%) 4799.096 ops/s [Average]
[info]   (min, avg, max) = (73359.567, 75454.734, 76357.236), stdev = 1246.310
[info]   CI (99.9%): [70655.638, 80253.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1483.725 ±(99.9%) 106.437 MB/sec [Average]
[info]   (min, avg, max) = (1439.581, 1483.725, 1506.937), stdev = 27.641
[info]   CI (99.9%): [1377.288, 1590.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   30943.085 ±(99.9%) 650.276 B/op [Average]
[info]   (min, avg, max) = (30739.776, 30943.085, 31133.981), stdev = 168.875
[info]   CI (99.9%): [30292.808, 31593.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space":
[info]   0.004 ±(99.9%) 0.030 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.018), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm":
[info]   0.076 ±(99.9%) 0.652 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.076, 0.378), stdev = 0.169
[info]   CI (99.9%): [≈ 0, 0.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.Metaspace":
[info]   0.010 ±(99.9%) 0.089 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.Metaspace.norm":
[info]   0.222 ±(99.9%) 1.913 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.222, 1.111), stdev = 0.497
[info]   CI (99.9%): [≈ 0, 2.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1432.624 ±(99.9%) 647.220 MB/sec [Average]
[info]   (min, avg, max) = (1302.987, 1432.624, 1638.113), stdev = 168.081
[info]   CI (99.9%): [785.403, 2079.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   29905.041 ±(99.9%) 14473.208 B/op [Average]
[info]   (min, avg, max) = (26934.230, 29905.041, 34186.027), stdev = 3758.646
[info]   CI (99.9%): [15431.833, 44378.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Old_Gen":
[info]   0.475 ±(99.9%) 4.086 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.475, 2.373), stdev = 1.061
[info]   CI (99.9%): [≈ 0, 4.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm":
[info]   10.180 ±(99.9%) 87.657 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.180, 50.902), stdev = 22.764
[info]   CI (99.9%): [≈ 0, 97.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.974 ±(99.9%) 7.767 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.974, 4.580), stdev = 2.017
[info]   CI (99.9%): [≈ 0, 8.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   20.163 ±(99.9%) 160.415 B/op [Average]
[info]   (min, avg, max) = (0.430, 20.163, 94.623), stdev = 41.659
[info]   CI (99.9%): [≈ 0, 180.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   79.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 15.800, 43.000), stdev = 15.643
[info]   CI (99.9%): [79.000, 79.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 84.71% complete, ETA 00:13:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29542.298 ops/s
[info] # Warmup Iteration   2: 82645.492 ops/s
[info] # Warmup Iteration   3: 92981.078 ops/s
[info] Iteration   1: 97657.368 ops/s
[info]                  ·gc.alloc.rate:                   1590.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              25625.722 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21373.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.457 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.585 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 97380.305 ops/s
[info]                  ·gc.alloc.rate:                   1592.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              25737.302 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26677.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.176 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 97468.041 ops/s
[info]                  ·gc.alloc.rate:                   1613.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              26043.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1646.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26573.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.689 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 97172.686 ops/s
[info]                  ·gc.alloc.rate:               1615.097 MB/sec
[info]                  ·gc.alloc.rate.norm:          26157.405 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1651.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26740.635 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 97229.475 ops/s
[info]                  ·gc.alloc.rate:               1603.422 MB/sec
[info]                  ·gc.alloc.rate.norm:          25949.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1327.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21490.174 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce":
[info]   97381.575 ±(99.9%) 746.441 ops/s [Average]
[info]   (min, avg, max) = (97172.686, 97381.575, 97657.368), stdev = 193.848
[info]   CI (99.9%): [96635.134, 98128.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1602.945 ±(99.9%) 44.180 MB/sec [Average]
[info]   (min, avg, max) = (1590.230, 1602.945, 1615.097), stdev = 11.473
[info]   CI (99.9%): [1558.765, 1647.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   25902.636 ±(99.9%) 841.131 B/op [Average]
[info]   (min, avg, max) = (25625.722, 25902.636, 26157.405), stdev = 218.439
[info]   CI (99.9%): [25061.505, 26743.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1520.469 ±(99.9%) 679.723 MB/sec [Average]
[info]   (min, avg, max) = (1326.350, 1520.469, 1651.109), stdev = 176.522
[info]   CI (99.9%): [840.746, 2200.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   24571.047 ±(99.9%) 11038.393 B/op [Average]
[info]   (min, avg, max) = (21373.439, 24571.047, 26740.635), stdev = 2866.636
[info]   CI (99.9%): [13532.654, 35609.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.762 ±(99.9%) 4.115 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.762, 2.457), stdev = 1.069
[info]   CI (99.9%): [≈ 0, 4.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   12.290 ±(99.9%) 66.325 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.290, 39.585), stdev = 17.224
[info]   CI (99.9%): [≈ 0, 78.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 12.000), stdev = 2.588
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.94% complete, ETA 00:13:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24644.799 ops/s
[info] # Warmup Iteration   2: 143451.140 ops/s
[info] # Warmup Iteration   3: 171844.364 ops/s
[info] Iteration   1: 178167.508 ops/s
[info]                  ·gc.alloc.rate:                   751.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              6633.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5766.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.368 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 177674.911 ops/s
[info]                  ·gc.alloc.rate:                   764.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              6775.655 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8688.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.369 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 174340.361 ops/s
[info]                  ·gc.alloc.rate:               738.703 MB/sec
[info]                  ·gc.alloc.rate.norm:          6668.310 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5911.316 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 175261.016 ops/s
[info]                  ·gc.alloc.rate:                   744.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              6684.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5886.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.374 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 178035.184 ops/s
[info]                  ·gc.alloc.rate:                   749.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              6626.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5800.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.477 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.564 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala":
[info]   176695.796 ±(99.9%) 6813.908 ops/s [Average]
[info]   (min, avg, max) = (174340.361, 176695.796, 178167.508), stdev = 1769.550
[info]   CI (99.9%): [169881.888, 183509.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   749.810 ±(99.9%) 37.681 MB/sec [Average]
[info]   (min, avg, max) = (738.703, 749.810, 764.969), stdev = 9.786
[info]   CI (99.9%): [712.129, 787.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   6677.874 ±(99.9%) 229.855 B/op [Average]
[info]   (min, avg, max) = (6626.967, 6677.874, 6775.655), stdev = 59.693
[info]   CI (99.9%): [6448.018, 6907.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   720.095 ±(99.9%) 561.550 MB/sec [Average]
[info]   (min, avg, max) = (652.842, 720.095, 980.959), stdev = 145.833
[info]   CI (99.9%): [158.545, 1281.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   6410.528 ±(99.9%) 4909.445 B/op [Average]
[info]   (min, avg, max) = (5766.321, 6410.528, 8688.764), stdev = 1274.967
[info]   CI (99.9%): [1501.082, 11319.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.920 ±(99.9%) 7.656 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.920, 4.477), stdev = 1.988
[info]   CI (99.9%): [≈ 0, 8.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8.135 ±(99.9%) 67.656 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.135, 39.564), stdev = 17.570
[info]   CI (99.9%): [≈ 0, 75.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 11.000), stdev = 1.924
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.18% complete, ETA 00:13:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 105757.231 ops/s
[info] # Warmup Iteration   2: 265779.451 ops/s
[info] # Warmup Iteration   3: 276378.521 ops/s
[info] Iteration   1: 276053.392 ops/s
[info]                  ·gc.alloc.rate:                   1016.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              5793.483 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5654.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 274335.041 ops/s
[info]                  ·gc.alloc.rate:                   1011.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              5803.208 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5699.925 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.240 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.375 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 275329.310 ops/s
[info]                  ·gc.alloc.rate:                   1007.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              5759.388 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5686.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.977 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 273353.119 ops/s
[info]                  ·gc.alloc.rate:                   1011.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              5819.464 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5703.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.558 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 277337.394 ops/s
[info]                  ·gc.alloc.rate:               1014.222 MB/sec
[info]                  ·gc.alloc.rate.norm:          5755.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5613.402 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala":
[info]   275281.651 ±(99.9%) 5915.234 ops/s [Average]
[info]   (min, avg, max) = (273353.119, 275281.651, 277337.394), stdev = 1536.167
[info]   CI (99.9%): [269366.418, 281196.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1012.149 ±(99.9%) 12.643 MB/sec [Average]
[info]   (min, avg, max) = (1007.592, 1012.149, 1016.229), stdev = 3.283
[info]   CI (99.9%): [999.506, 1024.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5786.131 ±(99.9%) 107.788 B/op [Average]
[info]   (min, avg, max) = (5755.110, 5786.131, 5819.464), stdev = 27.992
[info]   CI (99.9%): [5678.343, 5893.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   992.099 ±(99.9%) 8.546 MB/sec [Average]
[info]   (min, avg, max) = (989.249, 992.099, 994.882), stdev = 2.219
[info]   CI (99.9%): [983.553, 1000.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5671.572 ±(99.9%) 145.311 B/op [Average]
[info]   (min, avg, max) = (5613.402, 5671.572, 5703.097), stdev = 37.737
[info]   CI (99.9%): [5526.261, 5816.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.702 ±(99.9%) 4.920 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.702, 2.977), stdev = 1.278
[info]   CI (99.9%): [≈ 0, 5.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.014 ±(99.9%) 28.120 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.014, 17.015), stdev = 7.303
[info]   CI (99.9%): [≈ 0, 32.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 9.000), stdev = 2.168
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 85.41% complete, ETA 00:13:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7567.449 ops/s
[info] # Warmup Iteration   2: 52768.413 ops/s
[info] # Warmup Iteration   3: 62667.452 ops/s
[info] Iteration   1: 66650.452 ops/s
[info]                  ·gc.alloc.rate:                   2503.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              59123.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2288.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54045.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.950 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 67913.977 ops/s
[info]                  ·gc.alloc.rate:                   2556.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              59235.552 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2616.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60619.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.930 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 68334.483 ops/s
[info]                  ·gc.alloc.rate:               2592.432 MB/sec
[info]                  ·gc.alloc.rate.norm:          59704.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2316.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 53350.057 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 66916.246 ops/s
[info]                  ·gc.alloc.rate:                   2554.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              60084.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2676.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62949.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.979 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 68197.738 ops/s
[info]                  ·gc.alloc.rate:               2589.530 MB/sec
[info]                  ·gc.alloc.rate.norm:          59756.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2359.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54440.237 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson":
[info]   67602.579 ±(99.9%) 2960.532 ops/s [Average]
[info]   (min, avg, max) = (66650.452, 67602.579, 68334.483), stdev = 768.841
[info]   CI (99.9%): [64642.047, 70563.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2559.406 ±(99.9%) 137.683 MB/sec [Average]
[info]   (min, avg, max) = (2503.858, 2559.406, 2592.432), stdev = 35.756
[info]   CI (99.9%): [2421.723, 2697.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   59580.776 ±(99.9%) 1526.562 B/op [Average]
[info]   (min, avg, max) = (59123.176, 59580.776, 60084.881), stdev = 396.443
[info]   CI (99.9%): [58054.214, 61107.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2451.449 ±(99.9%) 696.784 MB/sec [Average]
[info]   (min, avg, max) = (2288.830, 2451.449, 2676.620), stdev = 180.953
[info]   CI (99.9%): [1754.664, 3148.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   57080.908 ±(99.9%) 16901.274 B/op [Average]
[info]   (min, avg, max) = (53350.057, 57080.908, 62949.027), stdev = 4389.207
[info]   CI (99.9%): [40179.634, 73982.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.296 ±(99.9%) 2.280 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.296, 1.353), stdev = 0.592
[info]   CI (99.9%): [≈ 0, 2.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   6.972 ±(99.9%) 53.856 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.972, 31.950), stdev = 13.986
[info]   CI (99.9%): [≈ 0, 60.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 10.800, 12.000), stdev = 0.837
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 85.65% complete, ETA 00:13:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42327.139 ops/s
[info] # Warmup Iteration   2: 185807.776 ops/s
[info] # Warmup Iteration   3: 200273.591 ops/s
[info] Iteration   1: 196220.406 ops/s
[info]                  ·gc.alloc.rate:                   1375.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              11031.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10589.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.501 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 202261.876 ops/s
[info]                  ·gc.alloc.rate:                   1407.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              10954.354 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12838.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.601 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.022 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 201430.530 ops/s
[info]                  ·gc.alloc.rate:                   1414.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              11047.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10252.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.301 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 203249.111 ops/s
[info]                  ·gc.alloc.rate:                   1431.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              11081.602 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10176.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 204593.045 ops/s
[info]                  ·gc.alloc.rate:                   1442.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              11089.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10150.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce":
[info]   201550.993 ±(99.9%) 12339.003 ops/s [Average]
[info]   (min, avg, max) = (196220.406, 201550.993, 204593.045), stdev = 3204.400
[info]   CI (99.9%): [189211.991, 213889.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1414.160 ±(99.9%) 98.224 MB/sec [Average]
[info]   (min, avg, max) = (1375.516, 1414.160, 1442.098), stdev = 25.509
[info]   CI (99.9%): [1315.936, 1512.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   11041.010 ±(99.9%) 207.461 B/op [Average]
[info]   (min, avg, max) = (10954.354, 11041.010, 11089.228), stdev = 53.877
[info]   CI (99.9%): [10833.549, 11248.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1383.424 ±(99.9%) 574.185 MB/sec [Average]
[info]   (min, avg, max) = (1312.332, 1383.424, 1650.094), stdev = 149.114
[info]   CI (99.9%): [809.239, 1957.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10801.664 ±(99.9%) 4436.673 B/op [Average]
[info]   (min, avg, max) = (10150.551, 10801.664, 12838.712), stdev = 1152.190
[info]   CI (99.9%): [6364.991, 15238.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.774 ±(99.9%) 6.090 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.774, 3.601), stdev = 1.581
[info]   CI (99.9%): [≈ 0, 6.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.029 ±(99.9%) 47.375 B/op [Average]
[info]   (min, avg, max) = (0.160, 6.029, 28.022), stdev = 12.303
[info]   CI (99.9%): [≈ 0, 53.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 12.000), stdev = 3.493
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.88% complete, ETA 00:12:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 159062.167 ops/s
[info] # Warmup Iteration   2: 506216.953 ops/s
[info] # Warmup Iteration   3: 522479.950 ops/s
[info] Iteration   1: 520582.684 ops/s
[info]                  ·gc.alloc.rate:               417.730 MB/sec
[info]                  ·gc.alloc.rate.norm:          1262.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 773.338 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 512113.124 ops/s
[info]                  ·gc.alloc.rate:               438.090 MB/sec
[info]                  ·gc.alloc.rate.norm:          1346.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2000.052 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 513539.939 ops/s
[info]                  ·gc.alloc.rate:                   416.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              1277.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     999.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 516349.238 ops/s
[info]                  ·gc.alloc.rate:               419.056 MB/sec
[info]                  ·gc.alloc.rate.norm:          1277.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 993.837 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 512607.245 ops/s
[info]                  ·gc.alloc.rate:                   425.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              1305.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2008.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala":
[info]   515038.446 ±(99.9%) 13500.685 ops/s [Average]
[info]   (min, avg, max) = (512113.124, 515038.446, 520582.684), stdev = 3506.085
[info]   CI (99.9%): [501537.761, 528539.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   423.463 ±(99.9%) 34.063 MB/sec [Average]
[info]   (min, avg, max) = (416.937, 423.463, 438.090), stdev = 8.846
[info]   CI (99.9%): [389.401, 457.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1293.985 ±(99.9%) 127.515 B/op [Average]
[info]   (min, avg, max) = (1262.935, 1293.985, 1346.224), stdev = 33.115
[info]   CI (99.9%): [1166.470, 1421.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   442.640 ±(99.9%) 746.305 MB/sec [Average]
[info]   (min, avg, max) = (255.790, 442.640, 654.352), stdev = 193.813
[info]   CI (99.9%): [≈ 0, 1188.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1354.975 ±(99.9%) 2308.974 B/op [Average]
[info]   (min, avg, max) = (773.338, 1354.975, 2008.343), stdev = 599.633
[info]   CI (99.9%): [≈ 0, 3663.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.220 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.128), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 7.000), stdev = 2.049
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.12% complete, ETA 00:12:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 349167.759 ops/s
[info] # Warmup Iteration   2: 608275.360 ops/s
[info] # Warmup Iteration   3: 600958.488 ops/s
[info] Iteration   1: 619952.366 ops/s
[info]                  ·gc.alloc.rate:                   343.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              870.667 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     649.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 630343.636 ops/s
[info]                  ·gc.alloc.rate:               350.080 MB/sec
[info]                  ·gc.alloc.rate.norm:          874.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 823.264 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 629074.530 ops/s
[info]                  ·gc.alloc.rate:               350.895 MB/sec
[info]                  ·gc.alloc.rate.norm:          877.837 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 824.954 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 631213.986 ops/s
[info]                  ·gc.alloc.rate:                   348.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              868.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     823.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 629994.850 ops/s
[info]                  ·gc.alloc.rate:               352.190 MB/sec
[info]                  ·gc.alloc.rate.norm:          879.765 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 825.380 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala":
[info]   628115.874 ±(99.9%) 17818.712 ops/s [Average]
[info]   (min, avg, max) = (619952.366, 628115.874, 631213.986), stdev = 4627.463
[info]   CI (99.9%): [610297.161, 645934.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   348.942 ±(99.9%) 13.726 MB/sec [Average]
[info]   (min, avg, max) = (343.027, 348.942, 352.190), stdev = 3.565
[info]   CI (99.9%): [335.216, 362.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   874.245 ±(99.9%) 17.697 B/op [Average]
[info]   (min, avg, max) = (868.928, 874.245, 879.765), stdev = 4.596
[info]   CI (99.9%): [856.548, 891.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   315.236 ±(99.9%) 127.867 MB/sec [Average]
[info]   (min, avg, max) = (255.837, 315.236, 330.421), stdev = 33.207
[info]   CI (99.9%): [187.369, 443.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   789.354 ±(99.9%) 301.360 B/op [Average]
[info]   (min, avg, max) = (649.363, 789.354, 825.380), stdev = 78.262
[info]   CI (99.9%): [487.995, 1090.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.052 ±(99.9%) 0.284 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.052, 0.156), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 86.35% complete, ETA 00:12:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 401824.878 ops/s
[info] # Warmup Iteration   2: 662310.084 ops/s
[info] # Warmup Iteration   3: 681091.626 ops/s
[info] Iteration   1: 681182.844 ops/s
[info]                  ·gc.alloc.rate:      6.926 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 682133.907 ops/s
[info]                  ·gc.alloc.rate:      6.936 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 688403.855 ops/s
[info]                  ·gc.alloc.rate:      6.999 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 685010.893 ops/s
[info]                  ·gc.alloc.rate:      6.967 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 684727.800 ops/s
[info]                  ·gc.alloc.rate:      12.077 MB/sec
[info]                  ·gc.alloc.rate.norm: 27.760 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   684291.860 ±(99.9%) 10880.760 ops/s [Average]
[info]   (min, avg, max) = (681182.844, 684291.860, 688403.855), stdev = 2825.699
[info]   CI (99.9%): [673411.099, 695172.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   7.981 ±(99.9%) 8.819 MB/sec [Average]
[info]   (min, avg, max) = (6.926, 7.981, 12.077), stdev = 2.290
[info]   CI (99.9%): [≈ 0, 16.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   18.353 ±(99.9%) 20.250 B/op [Average]
[info]   (min, avg, max) = (16.001, 18.353, 27.760), stdev = 5.259
[info]   CI (99.9%): [≈ 0, 38.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 86.59% complete, ETA 00:12:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9431.660 ops/s
[info] # Warmup Iteration   2: 31800.882 ops/s
[info] # Warmup Iteration   3: 34574.638 ops/s
[info] Iteration   1: 34704.086 ops/s
[info]                  ·gc.alloc.rate:                   1880.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              85284.485 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74934.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.976 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 180.314 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 35263.644 ops/s
[info]                  ·gc.alloc.rate:                   1913.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              85406.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87822.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.645 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 35444.685 ops/s
[info]                  ·gc.alloc.rate:               1947.752 MB/sec
[info]                  ·gc.alloc.rate.norm:          86461.333 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1973.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87613.036 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 35559.432 ops/s
[info]                  ·gc.alloc.rate:                   1941.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              85913.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1657.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73369.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.921 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 34825.861 ops/s
[info]                  ·gc.alloc.rate:               1917.263 MB/sec
[info]                  ·gc.alloc.rate.norm:          86618.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2003.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 90537.216 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson":
[info]   35159.542 ±(99.9%) 1454.655 ops/s [Average]
[info]   (min, avg, max) = (34704.086, 35159.542, 35559.432), stdev = 377.769
[info]   CI (99.9%): [33704.887, 36614.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1920.173 ±(99.9%) 102.221 MB/sec [Average]
[info]   (min, avg, max) = (1880.689, 1920.173, 1947.752), stdev = 26.546
[info]   CI (99.9%): [1817.952, 2022.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   85936.923 ±(99.9%) 2316.527 B/op [Average]
[info]   (min, avg, max) = (85284.485, 85936.923, 86618.844), stdev = 601.595
[info]   CI (99.9%): [83620.396, 88253.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1851.198 ±(99.9%) 691.044 MB/sec [Average]
[info]   (min, avg, max) = (1652.462, 1851.198, 2003.994), stdev = 179.462
[info]   CI (99.9%): [1160.153, 2542.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   82855.382 ±(99.9%) 30987.153 B/op [Average]
[info]   (min, avg, max) = (73369.362, 82855.382, 90537.216), stdev = 8047.265
[info]   CI (99.9%): [51868.229, 113842.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 6.796 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.820, 3.976), stdev = 1.765
[info]   CI (99.9%): [≈ 0, 7.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   37.176 ±(99.9%) 308.203 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 37.176, 180.314), stdev = 80.039
[info]   CI (99.9%): [≈ 0, 345.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.400, 12.000), stdev = 2.074
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce
[info] # Run progress: 86.82% complete, ETA 00:11:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54734.664 ops/s
[info] # Warmup Iteration   2: 560403.288 ops/s
[info] # Warmup Iteration   3: 821223.656 ops/s
[info] Iteration   1: 850732.656 ops/s
[info]                  ·gc.alloc.rate:                   2277.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              4212.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2311.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4276.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.831 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.086 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 858213.230 ops/s
[info]                  ·gc.alloc.rate:                   2304.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              4225.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2296.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4210.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.496 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 849816.997 ops/s
[info]                  ·gc.alloc.rate:                   2303.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              4265.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2311.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4280.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 852380.985 ops/s
[info]                  ·gc.alloc.rate:                   2297.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              4242.071 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1999.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3691.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 851825.123 ops/s
[info]                  ·gc.alloc.rate:               2316.787 MB/sec
[info]                  ·gc.alloc.rate.norm:          4280.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2348.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4339.697 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce":
[info]   852593.798 ±(99.9%) 12682.107 ops/s [Average]
[info]   (min, avg, max) = (849816.997, 852593.798, 858213.230), stdev = 3293.503
[info]   CI (99.9%): [839911.691, 865275.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate":
[info]   2299.961 ±(99.9%) 55.348 MB/sec [Average]
[info]   (min, avg, max) = (2277.448, 2299.961, 2316.787), stdev = 14.374
[info]   CI (99.9%): [2244.613, 2355.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4245.121 ±(99.9%) 107.236 B/op [Average]
[info]   (min, avg, max) = (4212.764, 4245.121, 4280.370), stdev = 27.849
[info]   CI (99.9%): [4137.885, 4352.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2253.643 ±(99.9%) 552.418 MB/sec [Average]
[info]   (min, avg, max) = (1999.331, 2253.643, 2348.898), stdev = 143.461
[info]   CI (99.9%): [1701.226, 2806.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4159.676 ±(99.9%) 1024.008 B/op [Average]
[info]   (min, avg, max) = (3691.008, 4159.676, 4339.697), stdev = 265.932
[info]   CI (99.9%): [3135.668, 5183.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.829 ±(99.9%) 6.476 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.829, 3.831), stdev = 1.682
[info]   CI (99.9%): [≈ 0, 7.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.532 ±(99.9%) 11.981 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.532, 7.086), stdev = 3.111
[info]   CI (99.9%): [≈ 0, 13.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.200, 16.000), stdev = 3.421
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala
[info] # Run progress: 87.06% complete, ETA 00:11:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44073.001 ops/s
[info] # Warmup Iteration   2: 1195121.508 ops/s
[info] # Warmup Iteration   3: 1774749.664 ops/s
[info] Iteration   1: 1766082.975 ops/s
[info]                  ·gc.alloc.rate:                   1173.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              1045.658 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1306.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1164.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 1837035.731 ops/s
[info]                  ·gc.alloc.rate:                   1216.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              1042.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1122.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 1829442.775 ops/s
[info]                  ·gc.alloc.rate:                   1207.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              1038.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     845.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.752 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1688972.775 ops/s
[info]                  ·gc.alloc.rate:                        1151.051 MB/sec
[info]                  ·gc.alloc.rate.norm:                   1072.505 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.025 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.023 B/op
[info]                  ·gc.churn.Metaspace:                   0.074 MB/sec
[info]                  ·gc.churn.Metaspace.norm:              0.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:               1092.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          1018.038 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  2.420 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             2.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           0.989 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      0.922 B/op
[info]                  ·gc.count:                             5.000 counts
[info]                  ·gc.time:                              39.000 ms
[info] Iteration   5: 1786945.209 ops/s
[info]                  ·gc.alloc.rate:                   1192.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              1050.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1303.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1147.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala":
[info]   1781695.893 ±(99.9%) 229518.710 ops/s [Average]
[info]   (min, avg, max) = (1688972.775, 1781695.893, 1837035.731), stdev = 59605.280
[info]   CI (99.9%): [1552177.183, 2011214.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1188.151 ±(99.9%) 101.528 MB/sec [Average]
[info]   (min, avg, max) = (1151.051, 1188.151, 1216.373), stdev = 26.367
[info]   CI (99.9%): [1086.623, 1289.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1049.815 ±(99.9%) 51.495 B/op [Average]
[info]   (min, avg, max) = (1038.735, 1049.815, 1072.505), stdev = 13.373
[info]   CI (99.9%): [998.320, 1101.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space":
[info]   0.005 ±(99.9%) 0.042 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.025), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.005 ±(99.9%) 0.039 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.023), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.Metaspace":
[info]   0.015 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.074), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm":
[info]   0.014 ±(99.9%) 0.118 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.069), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1199.177 ±(99.9%) 586.196 MB/sec [Average]
[info]   (min, avg, max) = (983.219, 1199.177, 1310.375), stdev = 152.233
[info]   CI (99.9%): [612.982, 1785.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1059.670 ±(99.9%) 509.739 B/op [Average]
[info]   (min, avg, max) = (845.822, 1059.670, 1164.070), stdev = 132.377
[info]   CI (99.9%): [549.931, 1569.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen":
[info]   0.484 ±(99.9%) 4.167 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.484, 2.420), stdev = 1.082
[info]   CI (99.9%): [≈ 0, 4.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm":
[info]   0.451 ±(99.9%) 3.882 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.451, 2.254), stdev = 1.008
[info]   CI (99.9%): [≈ 0, 4.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.089 ±(99.9%) 7.223 MB/sec [Average]
[info]   (min, avg, max) = (0.010, 1.089, 4.361), stdev = 1.876
[info]   CI (99.9%): [≈ 0, 8.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.951 ±(99.9%) 6.210 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.951, 3.752), stdev = 1.613
[info]   CI (99.9%): [≈ 0, 7.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.time":
[info]   81.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 16.200, 39.000), stdev = 13.517
[info]   CI (99.9%): [81.000, 81.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala
[info] # Run progress: 87.29% complete, ETA 00:11:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1531814.743 ops/s
[info] # Warmup Iteration   2: 7983549.669 ops/s
[info] # Warmup Iteration   3: 8413464.348 ops/s
[info] Iteration   1: 8633006.253 ops/s
[info]                  ·gc.alloc.rate:                   271.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.443 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 8611733.809 ops/s
[info]                  ·gc.alloc.rate:                   289.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              52.914 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 8799973.302 ops/s
[info]                  ·gc.alloc.rate:      268.480 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 8770333.058 ops/s
[info]                  ·gc.alloc.rate:                   275.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.506 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 8767308.457 ops/s
[info]                  ·gc.alloc.rate:               275.946 MB/sec
[info]                  ·gc.alloc.rate.norm:          49.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59.369 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala":
[info]   8716470.976 ±(99.9%) 335660.689 ops/s [Average]
[info]   (min, avg, max) = (8611733.809, 8716470.976, 8799973.302), stdev = 87170.015
[info]   CI (99.9%): [8380810.287, 9052131.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   276.221 ±(99.9%) 31.205 MB/sec [Average]
[info]   (min, avg, max) = (268.480, 276.221, 289.550), stdev = 8.104
[info]   CI (99.9%): [245.016, 307.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   49.879 ±(99.9%) 6.992 B/op [Average]
[info]   (min, avg, max) = (48.000, 49.879, 52.914), stdev = 1.816
[info]   CI (99.9%): [42.887, 56.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   285.787 ±(99.9%) 714.241 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 285.787, 511.626), stdev = 185.486
[info]   CI (99.9%): [≈ 0, 1000.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   51.769 ±(99.9%) 130.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 51.769, 93.497), stdev = 33.774
[info]   CI (99.9%): [≈ 0, 181.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.236 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.146), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.027), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 5.000), stdev = 1.817
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson
[info] # Run progress: 87.53% complete, ETA 00:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2035.203 ops/s
[info] # Warmup Iteration   2: 51041.497 ops/s
[info] # Warmup Iteration   3: 121910.774 ops/s
[info] Iteration   1: 265580.339 ops/s
[info]                  ·gc.alloc.rate:                   1875.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              11110.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1964.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11641.589 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.370 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 296354.130 ops/s
[info]                  ·gc.alloc.rate:                   1936.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              10278.090 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8764.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.186 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 292315.719 ops/s
[info]                  ·gc.alloc.rate:                   1909.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              10279.356 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1988.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10702.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.587 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 294419.962 ops/s
[info]                  ·gc.alloc.rate:                   1933.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              10337.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1995.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10664.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 297100.139 ops/s
[info]                  ·gc.alloc.rate:               1951.233 MB/sec
[info]                  ·gc.alloc.rate.norm:          10333.510 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1671.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8853.284 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson":
[info]   289154.058 ±(99.9%) 51244.943 ops/s [Average]
[info]   (min, avg, max) = (265580.339, 289154.058, 297100.139), stdev = 13308.149
[info]   CI (99.9%): [237909.115, 340399.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1921.165 ±(99.9%) 114.608 MB/sec [Average]
[info]   (min, avg, max) = (1875.156, 1921.165, 1951.233), stdev = 29.763
[info]   CI (99.9%): [1806.558, 2035.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   10467.784 ±(99.9%) 1388.470 B/op [Average]
[info]   (min, avg, max) = (10278.090, 10467.784, 11110.817), stdev = 360.581
[info]   CI (99.9%): [9079.314, 11856.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1854.125 ±(99.9%) 679.624 MB/sec [Average]
[info]   (min, avg, max) = (1650.962, 1854.125, 1995.172), stdev = 176.496
[info]   CI (99.9%): [1174.502, 2533.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   10125.268 ±(99.9%) 4867.781 B/op [Average]
[info]   (min, avg, max) = (8764.637, 10125.268, 11641.589), stdev = 1264.147
[info]   CI (99.9%): [5257.487, 14993.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.421 ±(99.9%) 2.275 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.421, 1.354), stdev = 0.591
[info]   CI (99.9%): [≈ 0, 2.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.251 ±(99.9%) 12.073 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.251, 7.186), stdev = 3.135
[info]   CI (99.9%): [≈ 0, 14.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.600, 13.000), stdev = 2.074
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce
[info] # Run progress: 87.76% complete, ETA 00:11:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80229.197 ops/s
[info] # Warmup Iteration   2: 951392.780 ops/s
[info] # Warmup Iteration   3: 1077124.539 ops/s
[info] Iteration   1: 1106499.461 ops/s
[info]                  ·gc.alloc.rate:                   1791.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              2548.775 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2347.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.872 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.507 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 1105300.563 ops/s
[info]                  ·gc.alloc.rate:                   1798.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              2559.831 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2335.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1121348.153 ops/s
[info]                  ·gc.alloc.rate:                   1822.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              2557.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1640.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2302.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1112592.885 ops/s
[info]                  ·gc.alloc.rate:                   1804.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              2552.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2335.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1126888.818 ops/s
[info]                  ·gc.alloc.rate:               1860.449 MB/sec
[info]                  ·gc.alloc.rate.norm:          2598.182 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1997.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2789.046 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce":
[info]   1114525.976 ±(99.9%) 36155.680 ops/s [Average]
[info]   (min, avg, max) = (1105300.563, 1114525.976, 1126888.818), stdev = 9389.515
[info]   CI (99.9%): [1078370.296, 1150681.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1815.537 ±(99.9%) 106.231 MB/sec [Average]
[info]   (min, avg, max) = (1791.999, 1815.537, 1860.449), stdev = 27.588
[info]   CI (99.9%): [1709.306, 1921.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   2563.376 ±(99.9%) 76.811 B/op [Average]
[info]   (min, avg, max) = (2548.775, 2563.376, 2598.182), stdev = 19.948
[info]   CI (99.9%): [2486.565, 2640.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1715.951 ±(99.9%) 605.554 MB/sec [Average]
[info]   (min, avg, max) = (1640.342, 1715.951, 1997.118), stdev = 157.261
[info]   CI (99.9%): [1110.396, 2321.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2421.920 ±(99.9%) 792.875 B/op [Average]
[info]   (min, avg, max) = (2302.662, 2421.920, 2789.046), stdev = 205.907
[info]   CI (99.9%): [1629.045, 3214.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.808 ±(99.9%) 6.597 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.808, 3.872), stdev = 1.713
[info]   CI (99.9%): [≈ 0, 7.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.149 ±(99.9%) 9.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.149, 5.507), stdev = 2.437
[info]   CI (99.9%): [≈ 0, 10.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 15.000), stdev = 3.464
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala
[info] # Run progress: 88.00% complete, ETA 00:10:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 225197.382 ops/s
[info] # Warmup Iteration   2: 2332070.647 ops/s
[info] # Warmup Iteration   3: 2692469.907 ops/s
[info] Iteration   1: 2603100.637 ops/s
[info]                  ·gc.alloc.rate:                   1153.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              697.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     791.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2692918.693 ops/s
[info]                  ·gc.alloc.rate:                   1182.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              691.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     575.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2704188.417 ops/s
[info]                  ·gc.alloc.rate:                   1199.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              697.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     763.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.873 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.254 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2734892.725 ops/s
[info]                  ·gc.alloc.rate:               1199.719 MB/sec
[info]                  ·gc.alloc.rate.norm:          690.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 563.532 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 2725354.113 ops/s
[info]                  ·gc.alloc.rate:               1215.902 MB/sec
[info]                  ·gc.alloc.rate.norm:          702.071 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1307.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 754.942 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala":
[info]   2692090.917 ±(99.9%) 201972.969 ops/s [Average]
[info]   (min, avg, max) = (2603100.637, 2692090.917, 2734892.725), stdev = 52451.739
[info]   CI (99.9%): [2490117.948, 2894063.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1190.218 ±(99.9%) 91.319 MB/sec [Average]
[info]   (min, avg, max) = (1153.480, 1190.218, 1215.902), stdev = 23.715
[info]   CI (99.9%): [1098.899, 1281.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   695.760 ±(99.9%) 19.153 B/op [Average]
[info]   (min, avg, max) = (690.330, 695.760, 702.071), stdev = 4.974
[info]   CI (99.9%): [676.607, 714.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1178.884 ±(99.9%) 691.685 MB/sec [Average]
[info]   (min, avg, max) = (979.357, 1178.884, 1312.660), stdev = 179.628
[info]   CI (99.9%): [487.199, 1870.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   689.976 ±(99.9%) 426.761 B/op [Average]
[info]   (min, avg, max) = (563.532, 689.976, 791.990), stdev = 110.828
[info]   CI (99.9%): [263.215, 1116.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.793 ±(99.9%) 6.630 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.793, 3.873), stdev = 1.722
[info]   CI (99.9%): [≈ 0, 7.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.462 ±(99.9%) 3.857 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.462, 2.254), stdev = 1.002
[info]   CI (99.9%): [≈ 0, 4.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 13.000), stdev = 3.674
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala
[info] # Run progress: 88.24% complete, ETA 00:10:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1300675.528 ops/s
[info] # Warmup Iteration   2: 5957048.675 ops/s
[info] # Warmup Iteration   3: 6402422.211 ops/s
[info] Iteration   1: 6208432.486 ops/s
[info]                  ·gc.alloc.rate:                   716.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              181.540 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 6231431.809 ops/s
[info]                  ·gc.alloc.rate:               725.360 MB/sec
[info]                  ·gc.alloc.rate.norm:          183.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 166.983 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 6391827.524 ops/s
[info]                  ·gc.alloc.rate:               734.735 MB/sec
[info]                  ·gc.alloc.rate.norm:          180.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 162.962 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 6353090.100 ops/s
[info]                  ·gc.alloc.rate:                   738.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              182.821 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     246.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 6483256.221 ops/s
[info]                  ·gc.alloc.rate:                   743.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              180.504 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     161.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.814 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala":
[info]   6333607.628 ±(99.9%) 440189.989 ops/s [Average]
[info]   (min, avg, max) = (6208432.486, 6333607.628, 6483256.221), stdev = 114315.942
[info]   CI (99.9%): [5893417.639, 6773797.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   731.618 ±(99.9%) 41.988 MB/sec [Average]
[info]   (min, avg, max) = (716.185, 731.618, 743.736), stdev = 10.904
[info]   CI (99.9%): [689.630, 773.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   181.791 ±(99.9%) 4.541 B/op [Average]
[info]   (min, avg, max) = (180.504, 181.791, 183.196), stdev = 1.179
[info]   CI (99.9%): [177.249, 186.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   728.310 ±(99.9%) 573.390 MB/sec [Average]
[info]   (min, avg, max) = (660.167, 728.310, 994.674), stdev = 148.908
[info]   CI (99.9%): [154.920, 1301.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   180.946 ±(99.9%) 141.225 B/op [Average]
[info]   (min, avg, max) = (161.064, 180.946, 246.380), stdev = 36.676
[info]   CI (99.9%): [39.720, 322.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.683 ±(99.9%) 5.746 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.683, 3.352), stdev = 1.492
[info]   CI (99.9%): [≈ 0, 6.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.166 ±(99.9%) 1.394 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.166, 0.814), stdev = 0.362
[info]   CI (99.9%): [≈ 0, 1.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 8.000), stdev = 1.225
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 88.47% complete, ETA 00:10:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1442396.573 ops/s
[info] # Warmup Iteration   2: 6184856.660 ops/s
[info] # Warmup Iteration   3: 6775551.576 ops/s
[info] Iteration   1: 6791578.237 ops/s
[info]                  ·gc.alloc.rate:               423.428 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59.274 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 6799125.047 ops/s
[info]                  ·gc.alloc.rate:               426.236 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.657 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76.169 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 6786036.214 ops/s
[info]                  ·gc.alloc.rate:                   431.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              99.945 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     152.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6815483.619 ops/s
[info]                  ·gc.alloc.rate:               427.494 MB/sec
[info]                  ·gc.alloc.rate.norm:          98.695 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76.142 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 6794844.591 ops/s
[info]                  ·gc.alloc.rate:                   424.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc":
[info]   6797413.542 ±(99.9%) 43032.166 ops/s [Average]
[info]   (min, avg, max) = (6786036.214, 6797413.542, 6815483.619), stdev = 11175.317
[info]   CI (99.9%): [6754381.376, 6840445.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   426.459 ±(99.9%) 11.836 MB/sec [Average]
[info]   (min, avg, max) = (423.428, 426.459, 431.105), stdev = 3.074
[info]   CI (99.9%): [414.623, 438.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   98.724 ±(99.9%) 2.810 B/op [Average]
[info]   (min, avg, max) = (98.118, 98.724, 99.945), stdev = 0.730
[info]   CI (99.9%): [95.914, 101.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   380.830 ±(99.9%) 611.450 MB/sec [Average]
[info]   (min, avg, max) = (255.796, 380.830, 659.045), stdev = 158.792
[info]   CI (99.9%): [≈ 0, 992.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   88.180 ±(99.9%) 141.937 B/op [Average]
[info]   (min, avg, max) = (59.274, 88.180, 152.789), stdev = 36.861
[info]   CI (99.9%): [≈ 0, 230.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.031 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.014), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 6.000), stdev = 1.673
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson
[info] # Run progress: 88.71% complete, ETA 00:10:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16750.400 ops/s
[info] # Warmup Iteration   2: 321315.875 ops/s
[info] # Warmup Iteration   3: 403157.180 ops/s
[info] Iteration   1: 412661.477 ops/s
[info]                  ·gc.alloc.rate:                   2581.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              9845.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2609.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9951.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.457 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.557 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 413615.646 ops/s
[info]                  ·gc.alloc.rate:                   2600.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              9893.797 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2286.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8699.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 413948.273 ops/s
[info]                  ·gc.alloc.rate:                   2617.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              9950.613 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2645.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10057.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 414082.923 ops/s
[info]                  ·gc.alloc.rate:                   2606.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              9907.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2341.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8899.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 407674.558 ops/s
[info]                  ·gc.alloc.rate:                   2584.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              9975.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2696.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10407.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson":
[info]   412396.575 ±(99.9%) 10386.981 ops/s [Average]
[info]   (min, avg, max) = (407674.558, 412396.575, 414082.923), stdev = 2697.466
[info]   CI (99.9%): [402009.595, 422783.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2598.058 ±(99.9%) 58.389 MB/sec [Average]
[info]   (min, avg, max) = (2581.562, 2598.058, 2617.350), stdev = 15.163
[info]   CI (99.9%): [2539.669, 2656.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   9914.456 ±(99.9%) 195.746 B/op [Average]
[info]   (min, avg, max) = (9845.007, 9914.456, 9975.519), stdev = 50.835
[info]   CI (99.9%): [9718.710, 10110.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2515.778 ±(99.9%) 723.074 MB/sec [Average]
[info]   (min, avg, max) = (2286.357, 2515.778, 2696.149), stdev = 187.780
[info]   CI (99.9%): [1792.704, 3238.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9602.898 ±(99.9%) 2911.673 B/op [Average]
[info]   (min, avg, max) = (8699.141, 9602.898, 10407.760), stdev = 756.152
[info]   CI (99.9%): [6691.225, 12514.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.312 ±(99.9%) 2.465 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.312, 1.457), stdev = 0.640
[info]   CI (99.9%): [≈ 0, 2.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.191 ±(99.9%) 9.400 B/op [Average]
[info]   (min, avg, max) = (0.079, 1.191, 5.557), stdev = 2.441
[info]   CI (99.9%): [≈ 0, 10.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.count":
[info]   38.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 8.000), stdev = 0.548
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.800, 13.000), stdev = 1.789
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 88.94% complete, ETA 00:10:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16780.884 ops/s
[info] # Warmup Iteration   2: 68406.389 ops/s
[info] # Warmup Iteration   3: 76259.269 ops/s
[info] Iteration   1: 77887.137 ops/s
[info]                  ·gc.alloc.rate:                   2160.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              43661.917 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1981.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40043.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.554 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 78456.972 ops/s
[info]                  ·gc.alloc.rate:                   2199.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              44123.338 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2301.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46168.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.418 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 78414.477 ops/s
[info]                  ·gc.alloc.rate:               2200.216 MB/sec
[info]                  ·gc.alloc.rate.norm:          44156.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1985.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 39854.204 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 78094.700 ops/s
[info]                  ·gc.alloc.rate:                   2205.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              44447.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2336.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47091.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.259 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 77374.557 ops/s
[info]                  ·gc.alloc.rate:               2173.560 MB/sec
[info]                  ·gc.alloc.rate.norm:          44207.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2016.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 41012.502 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce":
[info]   78045.568 ±(99.9%) 1703.792 ops/s [Average]
[info]   (min, avg, max) = (77374.557, 78045.568, 78456.972), stdev = 442.469
[info]   CI (99.9%): [76341.776, 79749.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2188.026 ±(99.9%) 75.565 MB/sec [Average]
[info]   (min, avg, max) = (2160.946, 2188.026, 2205.731), stdev = 19.624
[info]   CI (99.9%): [2112.461, 2263.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   44119.445 ±(99.9%) 1099.923 B/op [Average]
[info]   (min, avg, max) = (43661.917, 44119.445, 44447.853), stdev = 285.646
[info]   CI (99.9%): [43019.523, 45219.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2124.543 ±(99.9%) 688.115 MB/sec [Average]
[info]   (min, avg, max) = (1981.863, 2124.543, 2336.919), stdev = 178.701
[info]   CI (99.9%): [1436.428, 2812.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   42834.006 ±(99.9%) 13508.439 B/op [Average]
[info]   (min, avg, max) = (39854.204, 42834.006, 47091.415), stdev = 3508.099
[info]   CI (99.9%): [29325.566, 56342.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.774 ±(99.9%) 6.490 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.774, 3.789), stdev = 1.685
[info]   CI (99.9%): [≈ 0, 7.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   15.646 ±(99.9%) 131.124 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.646, 76.554), stdev = 34.052
[info]   CI (99.9%): [≈ 0, 146.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.600, 12.000), stdev = 1.517
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.18% complete, ETA 00:09:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13657.468 ops/s
[info] # Warmup Iteration   2: 110823.741 ops/s
[info] # Warmup Iteration   3: 121987.212 ops/s
[info] Iteration   1: 120529.726 ops/s
[info]                  ·gc.alloc.rate:                   1895.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              24750.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1965.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25667.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.372 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57.080 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 121458.278 ops/s
[info]                  ·gc.alloc.rate:                   1921.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              24891.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1952.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25299.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.697 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 121408.574 ops/s
[info]                  ·gc.alloc.rate:                   1927.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              24978.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1634.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21186.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.079 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 121697.495 ops/s
[info]                  ·gc.alloc.rate:                   1945.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              25155.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1979.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25592.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 124713.345 ops/s
[info]                  ·gc.alloc.rate:               1994.121 MB/sec
[info]                  ·gc.alloc.rate.norm:          25156.388 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1998.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25213.873 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala":
[info]   121961.483 ±(99.9%) 6164.425 ops/s [Average]
[info]   (min, avg, max) = (120529.726, 121961.483, 124713.345), stdev = 1600.882
[info]   CI (99.9%): [115797.058, 128125.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1936.716 ±(99.9%) 141.473 MB/sec [Average]
[info]   (min, avg, max) = (1895.527, 1936.716, 1994.121), stdev = 36.740
[info]   CI (99.9%): [1795.243, 2078.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24986.466 ±(99.9%) 674.068 B/op [Average]
[info]   (min, avg, max) = (24750.011, 24986.466, 25156.388), stdev = 175.053
[info]   CI (99.9%): [24312.398, 25660.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1906.220 ±(99.9%) 587.916 MB/sec [Average]
[info]   (min, avg, max) = (1634.807, 1906.220, 1998.678), stdev = 152.680
[info]   CI (99.9%): [1318.304, 2494.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   24592.079 ±(99.9%) 7366.770 B/op [Average]
[info]   (min, avg, max) = (21186.886, 24592.079, 25667.519), stdev = 1913.127
[info]   CI (99.9%): [17225.310, 31958.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.937 ±(99.9%) 7.400 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.937, 4.372), stdev = 1.922
[info]   CI (99.9%): [≈ 0, 8.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   12.225 ±(99.9%) 96.638 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.225, 57.080), stdev = 25.097
[info]   CI (99.9%): [≈ 0, 108.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.600, 16.000), stdev = 3.647
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.41% complete, ETA 00:09:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41383.641 ops/s
[info] # Warmup Iteration   2: 172397.788 ops/s
[info] # Warmup Iteration   3: 171950.655 ops/s
[info] Iteration   1: 178932.045 ops/s
[info]                  ·gc.alloc.rate:                   2686.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              23627.593 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2638.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23207.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.366 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 179016.040 ops/s
[info]                  ·gc.alloc.rate:                   2733.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              24026.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2655.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23346.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.464 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 178861.442 ops/s
[info]                  ·gc.alloc.rate:               2720.320 MB/sec
[info]                  ·gc.alloc.rate.norm:          23934.847 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2344.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20628.753 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 180691.487 ops/s
[info]                  ·gc.alloc.rate:                   2762.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              24053.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2698.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23493.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.907 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 178786.047 ops/s
[info]                  ·gc.alloc.rate:               2734.517 MB/sec
[info]                  ·gc.alloc.rate.norm:          24068.451 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2709.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23845.933 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala":
[info]   179257.412 ±(99.9%) 3104.292 ops/s [Average]
[info]   (min, avg, max) = (178786.047, 179257.412, 180691.487), stdev = 806.175
[info]   CI (99.9%): [176153.120, 182361.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2727.418 ±(99.9%) 106.141 MB/sec [Average]
[info]   (min, avg, max) = (2686.551, 2727.418, 2762.570), stdev = 27.565
[info]   CI (99.9%): [2621.277, 2833.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   23942.167 ±(99.9%) 705.968 B/op [Average]
[info]   (min, avg, max) = (23627.593, 23942.167, 24068.451), stdev = 183.338
[info]   CI (99.9%): [23236.199, 24648.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2609.338 ±(99.9%) 580.866 MB/sec [Average]
[info]   (min, avg, max) = (2344.565, 2609.338, 2709.235), stdev = 150.849
[info]   CI (99.9%): [2028.473, 3190.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   22904.553 ±(99.9%) 4983.532 B/op [Average]
[info]   (min, avg, max) = (20628.753, 22904.553, 23845.933), stdev = 1294.207
[info]   CI (99.9%): [17921.021, 27888.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.278 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.167), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.547 ±(99.9%) 2.436 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.547, 1.464), stdev = 0.633
[info]   CI (99.9%): [≈ 0, 2.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   39.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.800, 8.000), stdev = 0.447
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 10.600, 12.000), stdev = 1.140
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 89.65% complete, ETA 00:09:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5443.979 ops/s
[info] # Warmup Iteration   2: 47460.888 ops/s
[info] # Warmup Iteration   3: 59580.074 ops/s
[info] Iteration   1: 59955.252 ops/s
[info]                  ·gc.alloc.rate:                   3008.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              78972.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2644.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69417.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.639 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 59843.797 ops/s
[info]                  ·gc.alloc.rate:                   3047.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              80147.721 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3012.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79226.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.285 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 60289.804 ops/s
[info]                  ·gc.alloc.rate:                   3072.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              80198.307 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3037.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79293.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.543 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 59485.395 ops/s
[info]                  ·gc.alloc.rate:                   3035.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              80303.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3049.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80656.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.202 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 60231.129 ops/s
[info]                  ·gc.alloc.rate:                   3055.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              79831.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2717.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71014.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.544 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson":
[info]   59961.076 ±(99.9%) 1249.313 ops/s [Average]
[info]   (min, avg, max) = (59485.395, 59961.076, 60289.804), stdev = 324.443
[info]   CI (99.9%): [58711.763, 61210.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3044.031 ±(99.9%) 91.598 MB/sec [Average]
[info]   (min, avg, max) = (3008.739, 3044.031, 3072.463), stdev = 23.788
[info]   CI (99.9%): [2952.433, 3135.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   79890.776 ±(99.9%) 2088.889 B/op [Average]
[info]   (min, avg, max) = (78972.664, 79890.776, 80303.258), stdev = 542.478
[info]   CI (99.9%): [77801.887, 81979.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2892.472 ±(99.9%) 750.719 MB/sec [Average]
[info]   (min, avg, max) = (2644.714, 2892.472, 3049.177), stdev = 194.959
[info]   CI (99.9%): [2141.754, 3643.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   75921.941 ±(99.9%) 20293.644 B/op [Average]
[info]   (min, avg, max) = (69417.801, 75921.941, 80656.982), stdev = 5270.195
[info]   CI (99.9%): [55628.297, 96215.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.643 ±(99.9%) 4.484 B/op [Average]
[info]   (min, avg, max) = (0.543, 1.643, 3.285), stdev = 1.165
[info]   CI (99.9%): [≈ 0, 6.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   43.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.600, 9.000), stdev = 0.548
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 11.800, 13.000), stdev = 0.837
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 89.88% complete, ETA 00:09:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73544.180 ops/s
[info] # Warmup Iteration   2: 178104.051 ops/s
[info] # Warmup Iteration   3: 187992.841 ops/s
[info] Iteration   1: 185200.738 ops/s
[info]                  ·gc.alloc.rate:               1300.888 MB/sec
[info]                  ·gc.alloc.rate.norm:          11051.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8411.749 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 186260.492 ops/s
[info]                  ·gc.alloc.rate:                   1312.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              11091.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11155.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.602 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.429 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 186441.508 ops/s
[info]                  ·gc.alloc.rate:               1332.203 MB/sec
[info]                  ·gc.alloc.rate.norm:          11244.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11094.227 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 183662.361 ops/s
[info]                  ·gc.alloc.rate:               1333.858 MB/sec
[info]                  ·gc.alloc.rate.norm:          11429.961 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11258.900 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 188355.690 ops/s
[info]                  ·gc.alloc.rate:                   1331.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              11123.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11020.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.522 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce":
[info]   185984.158 ±(99.9%) 6645.620 ops/s [Average]
[info]   (min, avg, max) = (183662.361, 185984.158, 188355.690), stdev = 1725.846
[info]   CI (99.9%): [179338.538, 192629.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1322.236 ±(99.9%) 56.583 MB/sec [Average]
[info]   (min, avg, max) = (1300.888, 1322.236, 1333.858), stdev = 14.694
[info]   CI (99.9%): [1265.653, 1378.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   11188.155 ±(99.9%) 589.548 B/op [Average]
[info]   (min, avg, max) = (11051.282, 11188.155, 11429.961), stdev = 153.104
[info]   CI (99.9%): [10598.607, 11777.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1251.596 ±(99.9%) 562.826 MB/sec [Average]
[info]   (min, avg, max) = (990.179, 1251.596, 1320.357), stdev = 146.164
[info]   CI (99.9%): [688.770, 1814.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10588.238 ±(99.9%) 4697.103 B/op [Average]
[info]   (min, avg, max) = (8411.749, 10588.238, 11258.900), stdev = 1219.823
[info]   CI (99.9%): [5891.135, 15285.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.733 ±(99.9%) 6.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.733, 3.602), stdev = 1.604
[info]   CI (99.9%): [≈ 0, 6.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.190 ±(99.9%) 52.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.190, 30.429), stdev = 13.552
[info]   CI (99.9%): [≈ 0, 58.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 10.000), stdev = 2.168
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.12% complete, ETA 00:08:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 167810.869 ops/s
[info] # Warmup Iteration   2: 463759.031 ops/s
[info] # Warmup Iteration   3: 468598.125 ops/s
[info] Iteration   1: 466167.421 ops/s
[info]                  ·gc.alloc.rate:               432.095 MB/sec
[info]                  ·gc.alloc.rate.norm:          1458.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:      581.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1962.173 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 472661.813 ops/s
[info]                  ·gc.alloc.rate:               419.956 MB/sec
[info]                  ·gc.alloc.rate.norm:          1397.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1083.494 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 468577.994 ops/s
[info]                  ·gc.alloc.rate:                   413.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              1390.166 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1095.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 469497.597 ops/s
[info]                  ·gc.alloc.rate:               417.405 MB/sec
[info]                  ·gc.alloc.rate.norm:          1399.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1093.106 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 463022.219 ops/s
[info]                  ·gc.alloc.rate:                   410.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              1394.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1110.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala":
[info]   467985.409 ±(99.9%) 13942.969 ops/s [Average]
[info]   (min, avg, max) = (463022.219, 467985.409, 472661.813), stdev = 3620.945
[info]   CI (99.9%): [454042.440, 481928.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   418.759 ±(99.9%) 31.880 MB/sec [Average]
[info]   (min, avg, max) = (410.403, 418.759, 432.095), stdev = 8.279
[info]   CI (99.9%): [386.879, 450.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1408.145 ±(99.9%) 109.703 B/op [Average]
[info]   (min, avg, max) = (1390.166, 1408.145, 1458.736), stdev = 28.490
[info]   CI (99.9%): [1298.442, 1517.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   377.147 ±(99.9%) 439.284 MB/sec [Average]
[info]   (min, avg, max) = (325.498, 377.147, 581.219), stdev = 114.081
[info]   CI (99.9%): [≈ 0, 816.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1268.925 ±(99.9%) 1492.739 B/op [Average]
[info]   (min, avg, max) = (1083.494, 1268.925, 1962.173), stdev = 387.660
[info]   CI (99.9%): [≈ 0, 2761.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.148 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.071), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 7.000), stdev = 1.732
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.35% complete, ETA 00:08:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 312554.362 ops/s
[info] # Warmup Iteration   2: 634997.448 ops/s
[info] # Warmup Iteration   3: 628894.665 ops/s
[info] Iteration   1: 632135.754 ops/s
[info]                  ·gc.alloc.rate:               346.946 MB/sec
[info]                  ·gc.alloc.rate.norm:          863.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 636.842 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 637203.369 ops/s
[info]                  ·gc.alloc.rate:               349.616 MB/sec
[info]                  ·gc.alloc.rate.norm:          863.456 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 814.390 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 634514.399 ops/s
[info]                  ·gc.alloc.rate:               350.600 MB/sec
[info]                  ·gc.alloc.rate.norm:          869.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 817.852 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 635507.980 ops/s
[info]                  ·gc.alloc.rate:               352.126 MB/sec
[info]                  ·gc.alloc.rate.norm:          871.992 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 818.241 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 633643.638 ops/s
[info]                  ·gc.alloc.rate:               348.920 MB/sec
[info]                  ·gc.alloc.rate.norm:          866.645 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 820.621 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala":
[info]   634601.028 ±(99.9%) 7355.743 ops/s [Average]
[info]   (min, avg, max) = (632135.754, 634601.028, 637203.369), stdev = 1910.263
[info]   CI (99.9%): [627245.286, 641956.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   349.642 ±(99.9%) 7.426 MB/sec [Average]
[info]   (min, avg, max) = (346.946, 349.642, 352.126), stdev = 1.928
[info]   CI (99.9%): [342.216, 357.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   867.086 ±(99.9%) 14.235 B/op [Average]
[info]   (min, avg, max) = (863.456, 867.086, 871.992), stdev = 3.697
[info]   CI (99.9%): [852.852, 881.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   315.221 ±(99.9%) 127.917 MB/sec [Average]
[info]   (min, avg, max) = (255.799, 315.221, 330.420), stdev = 33.220
[info]   CI (99.9%): [187.305, 443.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   781.589 ±(99.9%) 311.696 B/op [Average]
[info]   (min, avg, max) = (636.842, 781.589, 820.621), stdev = 80.947
[info]   CI (99.9%): [469.893, 1093.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 90.59% complete, ETA 00:08:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 381618.993 ops/s
[info] # Warmup Iteration   2: 705971.031 ops/s
[info] # Warmup Iteration   3: 709425.032 ops/s
[info] Iteration   1: 713128.814 ops/s
[info]                  ·gc.alloc.rate:      7.251 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 713845.380 ops/s
[info]                  ·gc.alloc.rate:      7.258 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 712688.914 ops/s
[info]                  ·gc.alloc.rate:      7.247 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 713296.993 ops/s
[info]                  ·gc.alloc.rate:      7.253 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 713556.610 ops/s
[info]                  ·gc.alloc.rate:      7.255 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   713303.342 ±(99.9%) 1685.038 ops/s [Average]
[info]   (min, avg, max) = (712688.914, 713303.342, 713845.380), stdev = 437.599
[info]   CI (99.9%): [711618.304, 714988.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   7.253 ±(99.9%) 0.017 MB/sec [Average]
[info]   (min, avg, max) = (7.247, 7.253, 7.258), stdev = 0.004
[info]   CI (99.9%): [7.236, 7.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.001), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 90.82% complete, ETA 00:08:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11099.293 ops/s
[info] # Warmup Iteration   2: 30578.996 ops/s
[info] # Warmup Iteration   3: 34435.568 ops/s
[info] Iteration   1: 35149.367 ops/s
[info]                  ·gc.alloc.rate:                   1904.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              85258.557 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1650.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73909.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 179.890 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 35384.660 ops/s
[info]                  ·gc.alloc.rate:                   1915.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              85176.311 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1967.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87514.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.852 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 35515.010 ops/s
[info]                  ·gc.alloc.rate:                   1951.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              86472.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1973.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87437.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.922 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 35480.327 ops/s
[info]                  ·gc.alloc.rate:                   1951.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              86517.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1990.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88265.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.923 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 35160.298 ops/s
[info]                  ·gc.alloc.rate:               1920.870 MB/sec
[info]                  ·gc.alloc.rate.norm:          85971.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1670.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 74781.147 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson":
[info]   35337.932 ±(99.9%) 669.522 ops/s [Average]
[info]   (min, avg, max) = (35149.367, 35337.932, 35515.010), stdev = 173.873
[info]   CI (99.9%): [34668.411, 36007.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1928.613 ±(99.9%) 83.271 MB/sec [Average]
[info]   (min, avg, max) = (1904.208, 1928.613, 1951.502), stdev = 21.625
[info]   CI (99.9%): [1845.342, 2011.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   85879.438 ±(99.9%) 2471.407 B/op [Average]
[info]   (min, avg, max) = (85176.311, 85879.438, 86517.834), stdev = 641.817
[info]   CI (99.9%): [83408.031, 88350.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1850.666 ±(99.9%) 668.805 MB/sec [Average]
[info]   (min, avg, max) = (1650.738, 1850.666, 1990.651), stdev = 173.686
[info]   CI (99.9%): [1181.861, 2519.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   82381.706 ±(99.9%) 28300.840 B/op [Average]
[info]   (min, avg, max) = (73909.754, 82381.706, 88265.067), stdev = 7349.638
[info]   CI (99.9%): [54080.866, 110682.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.820 ±(99.9%) 6.883 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.820, 4.018), stdev = 1.788
[info]   CI (99.9%): [≈ 0, 7.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   36.718 ±(99.9%) 308.201 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 36.718, 179.890), stdev = 80.039
[info]   CI (99.9%): [≈ 0, 344.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 12.000), stdev = 2.191
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 91.06% complete, ETA 00:08:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1155327.972 ops/s
[info] # Warmup Iteration   2: 3217527.944 ops/s
[info] # Warmup Iteration   3: 3326572.432 ops/s
[info] Iteration   1: 3372286.154 ops/s
[info]                  ·gc.alloc.rate:               2839.873 MB/sec
[info]                  ·gc.alloc.rate.norm:          1325.300 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2635.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1229.869 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 3390181.922 ops/s
[info]                  ·gc.alloc.rate:                   2862.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2657.393 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1233.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 3386359.357 ops/s
[info]                  ·gc.alloc.rate:                   2861.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              1329.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2683.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1247.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 3382476.640 ops/s
[info]                  ·gc.alloc.rate:                   2871.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              1336.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3039.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1414.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 3337180.028 ops/s
[info]                  ·gc.alloc.rate:               2823.575 MB/sec
[info]                  ·gc.alloc.rate.norm:          1331.559 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2711.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1278.874 B/op
[info]                  ·gc.count:                    8.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce":
[info]   3373696.820 ±(99.9%) 82691.396 ops/s [Average]
[info]   (min, avg, max) = (3337180.028, 3373696.820, 3390181.922), stdev = 21474.693
[info]   CI (99.9%): [3291005.424, 3456388.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2851.816 ±(99.9%) 75.659 MB/sec [Average]
[info]   (min, avg, max) = (2823.575, 2851.816, 2871.789), stdev = 19.648
[info]   CI (99.9%): [2776.157, 2927.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1330.293 ±(99.9%) 15.290 B/op [Average]
[info]   (min, avg, max) = (1325.300, 1330.293, 1336.114), stdev = 3.971
[info]   CI (99.9%): [1315.003, 1345.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2745.538 ±(99.9%) 642.723 MB/sec [Average]
[info]   (min, avg, max) = (2635.382, 2745.538, 3039.706), stdev = 166.913
[info]   CI (99.9%): [2102.815, 3388.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1280.709 ±(99.9%) 296.887 B/op [Average]
[info]   (min, avg, max) = (1229.869, 1280.709, 1414.237), stdev = 77.101
[info]   CI (99.9%): [983.822, 1577.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.068 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.039), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.count":
[info]   41.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.200, 9.000), stdev = 0.447
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.000, 12.000), stdev = 0.707
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 91.29% complete, ETA 00:07:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.720 ops/s
[info] # Warmup Iteration   2: 5475141.493 ops/s
[info] # Warmup Iteration   3: 5763323.555 ops/s
[info] Iteration   1: 5925559.368 ops/s
[info]                  ·gc.alloc.rate:                   1141.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              303.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     259.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 5839941.571 ops/s
[info]                  ·gc.alloc.rate:                   1147.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              309.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1305.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     351.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 5894622.064 ops/s
[info]                  ·gc.alloc.rate:                   1141.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     261.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.078 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6035229.055 ops/s
[info]                  ·gc.alloc.rate:                   1173.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              306.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1300.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     339.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 6064982.874 ops/s
[info]                  ·gc.alloc.rate:               1166.547 MB/sec
[info]                  ·gc.alloc.rate.norm:          302.672 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 253.513 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava":
[info]   5952066.986 ±(99.9%) 366522.896 ops/s [Average]
[info]   (min, avg, max) = (5839941.571, 5952066.986, 6064982.874), stdev = 95184.832
[info]   CI (99.9%): [5585544.090, 6318589.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1154.110 ±(99.9%) 58.259 MB/sec [Average]
[info]   (min, avg, max) = (1141.289, 1154.110, 1173.931), stdev = 15.130
[info]   CI (99.9%): [1095.851, 1212.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   305.144 ±(99.9%) 9.934 B/op [Average]
[info]   (min, avg, max) = (302.672, 305.144, 309.051), stdev = 2.580
[info]   CI (99.9%): [295.209, 315.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1107.882 ±(99.9%) 686.703 MB/sec [Average]
[info]   (min, avg, max) = (975.953, 1107.882, 1305.993), stdev = 178.335
[info]   CI (99.9%): [421.179, 1794.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   293.054 ±(99.9%) 185.436 B/op [Average]
[info]   (min, avg, max) = (253.513, 293.054, 351.856), stdev = 48.157
[info]   CI (99.9%): [107.617, 478.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.844 ±(99.9%) 6.879 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.844, 4.038), stdev = 1.787
[info]   CI (99.9%): [≈ 0, 7.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.225 ±(99.9%) 1.837 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.225, 1.078), stdev = 0.477
[info]   CI (99.9%): [≈ 0, 2.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 12.000), stdev = 2.881
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.53% complete, ETA 00:07:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 801218.919 ops/s
[info] # Warmup Iteration   2: 3671733.163 ops/s
[info] # Warmup Iteration   3: 4084175.456 ops/s
[info] Iteration   1: 4011320.493 ops/s
[info]                  ·gc.alloc.rate:                   2205.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              865.262 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2294.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     900.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.934 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.544 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 4043679.624 ops/s
[info]                  ·gc.alloc.rate:                   2248.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              875.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2293.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     892.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 4104663.848 ops/s
[info]                  ·gc.alloc.rate:                   2269.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              870.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     760.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 4006775.718 ops/s
[info]                  ·gc.alloc.rate:                   2233.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              877.379 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2336.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     917.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 4097181.850 ops/s
[info]                  ·gc.alloc.rate:               2264.409 MB/sec
[info]                  ·gc.alloc.rate.norm:          869.772 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2017.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 774.945 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala":
[info]   4052724.307 ±(99.9%) 178355.325 ops/s [Average]
[info]   (min, avg, max) = (4006775.718, 4052724.307, 4104663.848), stdev = 46318.312
[info]   CI (99.9%): [3874368.981, 4231079.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2244.434 ±(99.9%) 99.495 MB/sec [Average]
[info]   (min, avg, max) = (2205.496, 2244.434, 2269.407), stdev = 25.838
[info]   CI (99.9%): [2144.940, 2343.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   871.557 ±(99.9%) 18.531 B/op [Average]
[info]   (min, avg, max) = (865.262, 871.557, 877.379), stdev = 4.812
[info]   CI (99.9%): [853.026, 890.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2185.220 ±(99.9%) 653.658 MB/sec [Average]
[info]   (min, avg, max) = (1983.896, 2185.220, 2336.772), stdev = 169.753
[info]   CI (99.9%): [1531.562, 2838.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   849.222 ±(99.9%) 289.056 B/op [Average]
[info]   (min, avg, max) = (760.632, 849.222, 917.785), stdev = 75.067
[info]   CI (99.9%): [560.166, 1138.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.812 ±(99.9%) 6.722 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.812, 3.934), stdev = 1.746
[info]   CI (99.9%): [≈ 0, 7.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.318 ±(99.9%) 2.637 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.318, 1.544), stdev = 0.685
[info]   CI (99.9%): [≈ 0, 2.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.400, 15.000), stdev = 2.793
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.76% complete, ETA 00:07:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3448898.350 ops/s
[info] # Warmup Iteration   2: 6595652.106 ops/s
[info] # Warmup Iteration   3: 6916770.524 ops/s
[info] Iteration   1: 6912169.550 ops/s
[info]                  ·gc.alloc.rate:                   1329.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              302.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     302.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 6968852.066 ops/s
[info]                  ·gc.alloc.rate:                   1350.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     299.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.269 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.738 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 6886698.255 ops/s
[info]                  ·gc.alloc.rate:               1333.089 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 301.730 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 6988222.906 ops/s
[info]                  ·gc.alloc.rate:                   1366.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.791 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     297.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 6984559.861 ops/s
[info]                  ·gc.alloc.rate:                   1366.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              307.863 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     298.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala":
[info]   6948100.528 ±(99.9%) 176783.865 ops/s [Average]
[info]   (min, avg, max) = (6886698.255, 6948100.528, 6988222.906), stdev = 45910.208
[info]   CI (99.9%): [6771316.663, 7124884.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1349.374 ±(99.9%) 67.625 MB/sec [Average]
[info]   (min, avg, max) = (1329.932, 1349.374, 1366.775), stdev = 17.562
[info]   CI (99.9%): [1281.749, 1416.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   305.619 ±(99.9%) 8.403 B/op [Average]
[info]   (min, avg, max) = (302.799, 305.619, 307.863), stdev = 2.182
[info]   CI (99.9%): [297.217, 314.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1324.349 ±(99.9%) 13.199 MB/sec [Average]
[info]   (min, avg, max) = (1320.378, 1324.349, 1327.630), stdev = 3.428
[info]   CI (99.9%): [1311.150, 1337.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   299.970 ±(99.9%) 7.775 B/op [Average]
[info]   (min, avg, max) = (297.486, 299.970, 302.275), stdev = 2.019
[info]   CI (99.9%): [292.196, 307.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.670 ±(99.9%) 5.593 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.670, 3.269), stdev = 1.453
[info]   CI (99.9%): [≈ 0, 6.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.151 ±(99.9%) 1.263 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.151, 0.738), stdev = 0.328
[info]   CI (99.9%): [≈ 0, 1.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 10.000), stdev = 2.302
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 92.00% complete, ETA 00:07:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1378905.941 ops/s
[info] # Warmup Iteration   2: 3903210.471 ops/s
[info] # Warmup Iteration   3: 4169839.395 ops/s
[info] Iteration   1: 4193795.264 ops/s
[info]                  ·gc.alloc.rate:                   2507.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              941.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2619.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     983.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 4173638.028 ops/s
[info]                  ·gc.alloc.rate:                   2510.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              946.364 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2306.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     869.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 4217225.068 ops/s
[info]                  ·gc.alloc.rate:                   2536.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              946.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2329.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     869.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 4185105.023 ops/s
[info]                  ·gc.alloc.rate:                   2531.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              952.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2685.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1010.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 4160333.863 ops/s
[info]                  ·gc.alloc.rate:                   2511.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              950.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2364.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     894.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson":
[info]   4186019.449 ±(99.9%) 82769.566 ops/s [Average]
[info]   (min, avg, max) = (4160333.863, 4186019.449, 4217225.068), stdev = 21494.994
[info]   CI (99.9%): [4103249.883, 4268789.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2519.671 ±(99.9%) 52.282 MB/sec [Average]
[info]   (min, avg, max) = (2507.749, 2519.671, 2536.712), stdev = 13.577
[info]   CI (99.9%): [2467.389, 2571.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   947.232 ±(99.9%) 16.256 B/op [Average]
[info]   (min, avg, max) = (941.039, 947.232, 952.135), stdev = 4.222
[info]   CI (99.9%): [930.976, 963.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2461.202 ±(99.9%) 684.611 MB/sec [Average]
[info]   (min, avg, max) = (2306.130, 2461.202, 2685.893), stdev = 177.791
[info]   CI (99.9%): [1776.592, 3145.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   925.243 ±(99.9%) 256.446 B/op [Average]
[info]   (min, avg, max) = (869.317, 925.243, 1010.007), stdev = 66.598
[info]   CI (99.9%): [668.797, 1181.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.142 ±(99.9%) 0.772 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.142, 0.500), stdev = 0.200
[info]   CI (99.9%): [≈ 0, 0.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.053 ±(99.9%) 0.290 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.053, 0.187), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 9.800, 12.000), stdev = 1.304
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 92.24% complete, ETA 00:07:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 873442.979 ops/s
[info] # Warmup Iteration   2: 2083689.840 ops/s
[info] # Warmup Iteration   3: 2174094.565 ops/s
[info] Iteration   1: 2097928.455 ops/s
[info]                  ·gc.alloc.rate:                   1268.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              951.286 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     989.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 2135835.050 ops/s
[info]                  ·gc.alloc.rate:                   1272.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              937.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     974.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.332 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2173243.922 ops/s
[info]                  ·gc.alloc.rate:                   1305.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              945.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     953.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2177499.958 ops/s
[info]                  ·gc.alloc.rate:                   1295.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              935.476 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     951.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2153233.764 ops/s
[info]                  ·gc.alloc.rate:                   1287.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              940.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     724.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce":
[info]   2147548.230 ±(99.9%) 124611.925 ops/s [Average]
[info]   (min, avg, max) = (2097928.455, 2147548.230, 2177499.958), stdev = 32361.321
[info]   CI (99.9%): [2022936.304, 2272160.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1285.500 ±(99.9%) 59.590 MB/sec [Average]
[info]   (min, avg, max) = (1268.132, 1285.500, 1305.060), stdev = 15.475
[info]   CI (99.9%): [1225.910, 1345.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   941.973 ±(99.9%) 24.478 B/op [Average]
[info]   (min, avg, max) = (935.476, 941.973, 951.286), stdev = 6.357
[info]   CI (99.9%): [917.495, 966.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1253.380 ±(99.9%) 563.645 MB/sec [Average]
[info]   (min, avg, max) = (991.565, 1253.380, 1322.359), stdev = 146.377
[info]   CI (99.9%): [689.735, 1817.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   918.701 ±(99.9%) 421.982 B/op [Average]
[info]   (min, avg, max) = (724.720, 918.701, 989.727), stdev = 109.587
[info]   CI (99.9%): [496.718, 1340.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.674 ±(99.9%) 5.364 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.674, 3.164), stdev = 1.393
[info]   CI (99.9%): [≈ 0, 6.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.497 ±(99.9%) 3.952 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.497, 2.332), stdev = 1.026
[info]   CI (99.9%): [≈ 0, 4.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 3.114
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 92.47% complete, ETA 00:06:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.879 ops/s
[info] # Warmup Iteration   2: 5227332.440 ops/s
[info] # Warmup Iteration   3: 5631665.773 ops/s
[info] Iteration   1: 5860365.723 ops/s
[info]                  ·gc.alloc.rate:                   582.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 5878910.151 ops/s
[info]                  ·gc.alloc.rate:                   587.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 5877992.020 ops/s
[info]                  ·gc.alloc.rate:               591.499 MB/sec
[info]                  ·gc.alloc.rate.norm:          158.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 174.253 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 5885645.739 ops/s
[info]                  ·gc.alloc.rate:                   578.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              154.582 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5888569.925 ops/s
[info]                  ·gc.alloc.rate:                   589.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava":
[info]   5878296.712 ±(99.9%) 42249.154 ops/s [Average]
[info]   (min, avg, max) = (5860365.723, 5878296.712, 5888569.925), stdev = 10971.971
[info]   CI (99.9%): [5836047.558, 5920545.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   585.822 ±(99.9%) 20.828 MB/sec [Average]
[info]   (min, avg, max) = (578.135, 585.822, 591.499), stdev = 5.409
[info]   CI (99.9%): [564.994, 606.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   156.832 ±(99.9%) 5.505 B/op [Average]
[info]   (min, avg, max) = (154.582, 156.832, 158.357), stdev = 1.430
[info]   CI (99.9%): [151.327, 162.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   585.707 ±(99.9%) 558.865 MB/sec [Average]
[info]   (min, avg, max) = (326.092, 585.707, 652.518), stdev = 145.136
[info]   CI (99.9%): [26.842, 1144.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   156.823 ±(99.9%) 149.890 B/op [Average]
[info]   (min, avg, max) = (87.191, 156.823, 174.385), stdev = 38.926
[info]   CI (99.9%): [6.934, 306.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.071 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.044), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.012), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 7.000), stdev = 1.517
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.71% complete, ETA 00:06:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1977198.314 ops/s
[info] # Warmup Iteration   2: 4467979.938 ops/s
[info] # Warmup Iteration   3: 4641619.489 ops/s
[info] Iteration   1: 4677552.738 ops/s
[info]                  ·gc.alloc.rate:                   1268.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              426.730 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     442.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 4684347.723 ops/s
[info]                  ·gc.alloc.rate:                   1277.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              429.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     442.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.196 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 4718847.048 ops/s
[info]                  ·gc.alloc.rate:                   1286.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              428.925 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     436.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 4727574.135 ops/s
[info]                  ·gc.alloc.rate:                   1301.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              433.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     436.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 4722661.615 ops/s
[info]                  ·gc.alloc.rate:                   1287.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              429.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     328.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala":
[info]   4706196.652 ±(99.9%) 90017.270 ops/s [Average]
[info]   (min, avg, max) = (4677552.738, 4706196.652, 4727574.135), stdev = 23377.199
[info]   CI (99.9%): [4616179.381, 4796213.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1284.185 ±(99.9%) 47.678 MB/sec [Average]
[info]   (min, avg, max) = (1268.510, 1284.185, 1301.597), stdev = 12.382
[info]   CI (99.9%): [1236.508, 1331.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   429.405 ±(99.9%) 9.155 B/op [Average]
[info]   (min, avg, max) = (426.730, 429.405, 433.274), stdev = 2.378
[info]   CI (99.9%): [420.250, 438.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1247.466 ±(99.9%) 563.659 MB/sec [Average]
[info]   (min, avg, max) = (985.673, 1247.466, 1317.052), stdev = 146.380
[info]   CI (99.9%): [683.807, 1811.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   417.221 ±(99.9%) 191.440 B/op [Average]
[info]   (min, avg, max) = (328.446, 417.221, 442.469), stdev = 49.716
[info]   CI (99.9%): [225.781, 608.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.783 ±(99.9%) 5.995 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.783, 3.560), stdev = 1.557
[info]   CI (99.9%): [≈ 0, 6.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.263 ±(99.9%) 2.014 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.263, 1.196), stdev = 0.523
[info]   CI (99.9%): [≈ 0, 2.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 12.000), stdev = 3.435
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.94% complete, ETA 00:06:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3651664.834 ops/s
[info] # Warmup Iteration   2: 5654855.760 ops/s
[info] # Warmup Iteration   3: 5916311.398 ops/s
[info] Iteration   1: 5952935.824 ops/s
[info]                  ·gc.alloc.rate:                   586.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5917862.053 ops/s
[info]                  ·gc.alloc.rate:                   591.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     175.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 5851781.434 ops/s
[info]                  ·gc.alloc.rate:                   584.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5970961.753 ops/s
[info]                  ·gc.alloc.rate:                   597.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 5998260.126 ops/s
[info]                  ·gc.alloc.rate:               592.502 MB/sec
[info]                  ·gc.alloc.rate.norm:          155.454 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87.043 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala":
[info]   5938360.238 ±(99.9%) 217649.690 ops/s [Average]
[info]   (min, avg, max) = (5851781.434, 5938360.238, 5998260.126), stdev = 56522.933
[info]   CI (99.9%): [5720710.548, 6156009.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   590.554 ±(99.9%) 20.319 MB/sec [Average]
[info]   (min, avg, max) = (584.105, 590.554, 597.658), stdev = 5.277
[info]   CI (99.9%): [570.235, 610.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   156.493 ±(99.9%) 4.321 B/op [Average]
[info]   (min, avg, max) = (155.116, 156.493, 157.521), stdev = 1.122
[info]   CI (99.9%): [152.172, 160.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   529.212 ±(99.9%) 698.162 MB/sec [Average]
[info]   (min, avg, max) = (329.441, 529.212, 662.205), stdev = 181.310
[info]   CI (99.9%): [≈ 0, 1227.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   140.462 ±(99.9%) 187.757 B/op [Average]
[info]   (min, avg, max) = (87.043, 140.462, 177.906), stdev = 48.760
[info]   CI (99.9%): [≈ 0, 328.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.011), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 93.18% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4187541.469 ops/s
[info] # Warmup Iteration   2: 6198996.089 ops/s
[info] # Warmup Iteration   3: 6465105.650 ops/s
[info] Iteration   1: 6462071.385 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6453710.195 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6464857.002 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6460207.898 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6458895.360 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   6459948.368 ±(99.9%) 15957.293 ops/s [Average]
[info]   (min, avg, max) = (6453710.195, 6459948.368, 6464857.002), stdev = 4144.058
[info]   CI (99.9%): [6443991.075, 6475905.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 93.41% complete, ETA 00:05:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1702899.087 ops/s
[info] # Warmup Iteration   2: 4385864.008 ops/s
[info] # Warmup Iteration   3: 4548157.080 ops/s
[info] Iteration   1: 4486758.983 ops/s
[info]                  ·gc.alloc.rate:                   1275.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              447.560 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     462.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 4563110.057 ops/s
[info]                  ·gc.alloc.rate:                   1292.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              445.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     455.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.561 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.228 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 4554846.196 ops/s
[info]                  ·gc.alloc.rate:               1289.922 MB/sec
[info]                  ·gc.alloc.rate.norm:          445.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 453.914 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 4564902.198 ops/s
[info]                  ·gc.alloc.rate:               1304.270 MB/sec
[info]                  ·gc.alloc.rate.norm:          449.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1313.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 452.788 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 4554929.701 ops/s
[info]                  ·gc.alloc.rate:               1289.688 MB/sec
[info]                  ·gc.alloc.rate.norm:          445.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:      988.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 341.431 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson":
[info]   4544909.427 ±(99.9%) 126421.884 ops/s [Average]
[info]   (min, avg, max) = (4486758.983, 4544909.427, 4564902.198), stdev = 32831.362
[info]   CI (99.9%): [4418487.543, 4671331.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1290.405 ±(99.9%) 38.755 MB/sec [Average]
[info]   (min, avg, max) = (1275.949, 1290.405, 1304.270), stdev = 10.065
[info]   CI (99.9%): [1251.650, 1329.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   446.805 ±(99.9%) 6.929 B/op [Average]
[info]   (min, avg, max) = (445.549, 446.805, 449.644), stdev = 1.799
[info]   CI (99.9%): [439.876, 453.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1250.877 ±(99.9%) 565.454 MB/sec [Average]
[info]   (min, avg, max) = (988.247, 1250.877, 1320.377), stdev = 146.846
[info]   CI (99.9%): [685.424, 1816.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   433.188 ±(99.9%) 198.057 B/op [Average]
[info]   (min, avg, max) = (341.431, 433.188, 462.541), stdev = 51.435
[info]   CI (99.9%): [235.130, 631.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.716 ±(99.9%) 6.123 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.716, 3.561), stdev = 1.590
[info]   CI (99.9%): [≈ 0, 6.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.247 ±(99.9%) 2.111 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.247, 1.228), stdev = 0.548
[info]   CI (99.9%): [≈ 0, 2.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 12.000), stdev = 3.271
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 93.65% complete, ETA 00:05:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 361794.499 ops/s
[info] # Warmup Iteration   2: 1458246.612 ops/s
[info] # Warmup Iteration   3: 1563685.651 ops/s
[info] Iteration   1: 1555661.246 ops/s
[info]                  ·gc.alloc.rate:                   2083.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              2107.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1983.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2006.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.435 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.475 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1565069.019 ops/s
[info]                  ·gc.alloc.rate:                   2121.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              2132.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1977.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1987.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1576348.729 ops/s
[info]                  ·gc.alloc.rate:               2145.459 MB/sec
[info]                  ·gc.alloc.rate.norm:          2140.850 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2318.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2313.938 B/op
[info]                  ·gc.count:                    7.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 1578295.698 ops/s
[info]                  ·gc.alloc.rate:                   2141.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              2135.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2005.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1999.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1577345.014 ops/s
[info]                  ·gc.alloc.rate:                   2140.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              2135.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2012.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce":
[info]   1570543.941 ±(99.9%) 38095.563 ops/s [Average]
[info]   (min, avg, max) = (1555661.246, 1570543.941, 1578295.698), stdev = 9893.297
[info]   CI (99.9%): [1532448.378, 1608639.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2126.529 ±(99.9%) 99.429 MB/sec [Average]
[info]   (min, avg, max) = (2083.344, 2126.529, 2145.459), stdev = 25.821
[info]   CI (99.9%): [2027.100, 2225.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2130.461 ±(99.9%) 50.702 B/op [Average]
[info]   (min, avg, max) = (2107.486, 2130.461, 2140.850), stdev = 13.167
[info]   CI (99.9%): [2079.759, 2181.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2060.563 ±(99.9%) 559.629 MB/sec [Average]
[info]   (min, avg, max) = (1977.085, 2060.563, 2318.920), stdev = 145.334
[info]   CI (99.9%): [1500.934, 2620.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2064.172 ±(99.9%) 538.875 B/op [Average]
[info]   (min, avg, max) = (1987.471, 2064.172, 2313.938), stdev = 139.944
[info]   CI (99.9%): [1525.297, 2603.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.708 ±(99.9%) 5.871 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.708, 3.435), stdev = 1.525
[info]   CI (99.9%): [≈ 0, 6.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.716 ±(99.9%) 5.940 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.716, 3.475), stdev = 1.543
[info]   CI (99.9%): [≈ 0, 6.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 12.000), stdev = 1.789
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 93.88% complete, ETA 00:05:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.711 ops/s
[info] # Warmup Iteration   2: 2519738.276 ops/s
[info] # Warmup Iteration   3: 2758966.415 ops/s
[info] Iteration   1: 2767157.216 ops/s
[info]                  ·gc.alloc.rate:                   538.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              306.280 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     369.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.064 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2748432.110 ops/s
[info]                  ·gc.alloc.rate:               524.442 MB/sec
[info]                  ·gc.alloc.rate.norm:          300.294 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 186.333 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2767520.488 ops/s
[info]                  ·gc.alloc.rate:                   536.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              305.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     370.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2763996.080 ops/s
[info]                  ·gc.alloc.rate:               539.652 MB/sec
[info]                  ·gc.alloc.rate.norm:          307.259 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 371.534 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 2775358.600 ops/s
[info]                  ·gc.alloc.rate:                   529.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              300.320 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     185.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava":
[info]   2764492.899 ±(99.9%) 38144.905 ops/s [Average]
[info]   (min, avg, max) = (2748432.110, 2764492.899, 2775358.600), stdev = 9906.111
[info]   CI (99.9%): [2726347.994, 2802637.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   533.750 ±(99.9%) 25.015 MB/sec [Average]
[info]   (min, avg, max) = (524.442, 533.750, 539.652), stdev = 6.496
[info]   CI (99.9%): [508.735, 558.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   303.832 ±(99.9%) 12.767 B/op [Average]
[info]   (min, avg, max) = (300.294, 303.832, 307.259), stdev = 3.315
[info]   CI (99.9%): [291.066, 316.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   521.244 ±(99.9%) 686.606 MB/sec [Average]
[info]   (min, avg, max) = (325.416, 521.244, 652.541), stdev = 178.309
[info]   CI (99.9%): [≈ 0, 1207.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   296.644 ±(99.9%) 389.952 B/op [Average]
[info]   (min, avg, max) = (185.092, 296.644, 371.534), stdev = 101.269
[info]   CI (99.9%): [≈ 0, 686.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.110 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.064), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.063 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.036), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.643
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.12% complete, ETA 00:05:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 100782.487 ops/s
[info] # Warmup Iteration   2: 1543132.602 ops/s
[info] # Warmup Iteration   3: 1631157.291 ops/s
[info] Iteration   1: 1683599.391 ops/s
[info]                  ·gc.alloc.rate:                   1055.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              986.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1223.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 1681016.059 ops/s
[info]                  ·gc.alloc.rate:                   1044.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              977.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     921.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1694212.956 ops/s
[info]                  ·gc.alloc.rate:                   1057.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              982.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     916.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.820 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.548 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1670152.806 ops/s
[info]                  ·gc.alloc.rate:                   1042.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              981.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     924.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1665331.977 ops/s
[info]                  ·gc.alloc.rate:               1033.028 MB/sec
[info]                  ·gc.alloc.rate.norm:          976.185 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 925.402 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala":
[info]   1678862.638 ±(99.9%) 43973.539 ops/s [Average]
[info]   (min, avg, max) = (1665331.977, 1678862.638, 1694212.956), stdev = 11419.788
[info]   CI (99.9%): [1634889.099, 1722836.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1046.576 ±(99.9%) 38.963 MB/sec [Average]
[info]   (min, avg, max) = (1033.028, 1046.576, 1057.423), stdev = 10.118
[info]   CI (99.9%): [1007.614, 1085.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   980.984 ±(99.9%) 16.137 B/op [Average]
[info]   (min, avg, max) = (976.185, 980.984, 986.874), stdev = 4.191
[info]   CI (99.9%): [964.847, 997.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1048.083 ±(99.9%) 561.936 MB/sec [Average]
[info]   (min, avg, max) = (979.288, 1048.083, 1309.083), stdev = 145.933
[info]   CI (99.9%): [486.147, 1610.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   982.258 ±(99.9%) 519.778 B/op [Average]
[info]   (min, avg, max) = (916.458, 982.258, 1223.649), stdev = 134.985
[info]   CI (99.9%): [462.480, 1502.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.789 ±(99.9%) 6.526 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.789, 3.820), stdev = 1.695
[info]   CI (99.9%): [≈ 0, 7.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.733 ±(99.9%) 6.061 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.733, 3.548), stdev = 1.574
[info]   CI (99.9%): [≈ 0, 6.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 14.000), stdev = 4.266
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.35% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1032495.517 ops/s
[info] # Warmup Iteration   2: 2214078.795 ops/s
[info] # Warmup Iteration   3: 2370709.170 ops/s
[info] Iteration   1: 2399936.799 ops/s
[info]                  ·gc.alloc.rate:                   473.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              310.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          586.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     384.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2435011.741 ops/s
[info]                  ·gc.alloc.rate:               468.415 MB/sec
[info]                  ·gc.alloc.rate.norm:          302.732 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 213.763 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2433969.477 ops/s
[info]                  ·gc.alloc.rate:                   470.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2367070.011 ops/s
[info]                  ·gc.alloc.rate:               469.587 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.205 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 441.346 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 2420127.879 ops/s
[info]                  ·gc.alloc.rate:               468.281 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.506 B/op
[info]                  ·gc.churn.PS_Eden_Space:      332.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 215.943 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala":
[info]   2411223.181 ±(99.9%) 109582.251 ops/s [Average]
[info]   (min, avg, max) = (2367070.011, 2411223.181, 2435011.741), stdev = 28458.163
[info]   CI (99.9%): [2301640.930, 2520805.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   469.998 ±(99.9%) 8.017 MB/sec [Average]
[info]   (min, avg, max) = (468.281, 469.998, 473.408), stdev = 2.082
[info]   CI (99.9%): [461.981, 478.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   306.791 ±(99.9%) 16.285 B/op [Average]
[info]   (min, avg, max) = (302.732, 306.791, 312.205), stdev = 4.229
[info]   CI (99.9%): [290.506, 323.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   448.998 ±(99.9%) 628.250 MB/sec [Average]
[info]   (min, avg, max) = (330.754, 448.998, 663.829), stdev = 163.155
[info]   CI (99.9%): [≈ 0, 1077.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   294.037 ±(99.9%) 425.214 B/op [Average]
[info]   (min, avg, max) = (213.763, 294.037, 441.346), stdev = 110.427
[info]   CI (99.9%): [≈ 0, 719.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.027), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 94.59% complete, ETA 00:04:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 181781.322 ops/s
[info] # Warmup Iteration   2: 1305124.523 ops/s
[info] # Warmup Iteration   3: 1610812.451 ops/s
[info] Iteration   1: 1601873.428 ops/s
[info]                  ·gc.alloc.rate:                   955.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              938.480 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     966.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1624855.756 ops/s
[info]                  ·gc.alloc.rate:                   965.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              935.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     955.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1628661.644 ops/s
[info]                  ·gc.alloc.rate:               969.176 MB/sec
[info]                  ·gc.alloc.rate.norm:          936.487 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 636.615 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 1630591.911 ops/s
[info]                  ·gc.alloc.rate:                   970.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              936.499 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     953.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.758 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.627 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1604281.232 ops/s
[info]                  ·gc.alloc.rate:               967.412 MB/sec
[info]                  ·gc.alloc.rate.norm:          949.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 965.191 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson":
[info]   1618052.794 ±(99.9%) 53338.203 ops/s [Average]
[info]   (min, avg, max) = (1601873.428, 1618052.794, 1630591.911), stdev = 13851.762
[info]   CI (99.9%): [1564714.591, 1671390.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   965.622 ±(99.9%) 23.192 MB/sec [Average]
[info]   (min, avg, max) = (955.288, 965.622, 970.355), stdev = 6.023
[info]   CI (99.9%): [942.430, 988.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   939.194 ±(99.9%) 21.542 B/op [Average]
[info]   (min, avg, max) = (935.493, 939.194, 949.012), stdev = 5.594
[info]   CI (99.9%): [917.652, 960.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   920.246 ±(99.9%) 562.742 MB/sec [Average]
[info]   (min, avg, max) = (658.837, 920.246, 987.939), stdev = 146.142
[info]   CI (99.9%): [357.504, 1482.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   895.494 ±(99.9%) 557.701 B/op [Average]
[info]   (min, avg, max) = (636.615, 895.494, 966.648), stdev = 144.833
[info]   CI (99.9%): [337.793, 1453.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.766 ±(99.9%) 6.440 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.766, 3.758), stdev = 1.672
[info]   CI (99.9%): [≈ 0, 7.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.740 ±(99.9%) 6.215 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.740, 3.627), stdev = 1.614
[info]   CI (99.9%): [≈ 0, 6.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 10.000), stdev = 2.387
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 94.82% complete, ETA 00:04:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 394093.890 ops/s
[info] # Warmup Iteration   2: 1695381.887 ops/s
[info] # Warmup Iteration   3: 1827834.990 ops/s
[info] Iteration   1: 1849868.993 ops/s
[info]                  ·gc.alloc.rate:                   1405.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              1195.434 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1124.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1835033.326 ops/s
[info]                  ·gc.alloc.rate:                   1414.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              1213.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1417.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.874 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1866312.921 ops/s
[info]                  ·gc.alloc.rate:                   1423.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              1199.675 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1109.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1864582.137 ops/s
[info]                  ·gc.alloc.rate:                   1435.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              1211.803 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1112.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1856149.378 ops/s
[info]                  ·gc.alloc.rate:                   1430.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              1212.401 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1122.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce":
[info]   1854389.351 ±(99.9%) 48868.731 ops/s [Average]
[info]   (min, avg, max) = (1835033.326, 1854389.351, 1866312.921), stdev = 12691.054
[info]   CI (99.9%): [1805520.619, 1903258.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1421.763 ±(99.9%) 46.637 MB/sec [Average]
[info]   (min, avg, max) = (1405.263, 1421.763, 1435.734), stdev = 12.111
[info]   CI (99.9%): [1375.126, 1468.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1206.518 ±(99.9%) 32.095 B/op [Average]
[info]   (min, avg, max) = (1195.434, 1206.518, 1213.276), stdev = 8.335
[info]   CI (99.9%): [1174.422, 1238.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1386.391 ±(99.9%) 572.731 MB/sec [Average]
[info]   (min, avg, max) = (1316.708, 1386.391, 1652.411), stdev = 148.736
[info]   CI (99.9%): [813.660, 1959.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1177.138 ±(99.9%) 517.137 B/op [Average]
[info]   (min, avg, max) = (1109.985, 1177.138, 1417.127), stdev = 134.299
[info]   CI (99.9%): [660.001, 1694.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.695 ±(99.9%) 5.718 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.695, 3.352), stdev = 1.485
[info]   CI (99.9%): [≈ 0, 6.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.596 ±(99.9%) 4.905 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.596, 2.874), stdev = 1.274
[info]   CI (99.9%): [≈ 0, 5.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 11.000), stdev = 2.881
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 95.06% complete, ETA 00:04:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.707 ops/s
[info] # Warmup Iteration   2: 2763882.897 ops/s
[info] # Warmup Iteration   3: 2963062.151 ops/s
[info] Iteration   1: 3049044.507 ops/s
[info]                  ·gc.alloc.rate:                   805.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              415.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     336.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3046121.093 ops/s
[info]                  ·gc.alloc.rate:                   818.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              423.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     505.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 3053307.693 ops/s
[info]                  ·gc.alloc.rate:               811.690 MB/sec
[info]                  ·gc.alloc.rate.norm:          418.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 336.842 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 3051618.345 ops/s
[info]                  ·gc.alloc.rate:                   805.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              415.256 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     337.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3050055.198 ops/s
[info]                  ·gc.alloc.rate:                   816.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              421.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     506.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.139 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava":
[info]   3050029.367 ±(99.9%) 10460.275 ops/s [Average]
[info]   (min, avg, max) = (3046121.093, 3050029.367, 3053307.693), stdev = 2716.500
[info]   CI (99.9%): [3039569.092, 3060489.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   811.705 ±(99.9%) 23.463 MB/sec [Average]
[info]   (min, avg, max) = (805.415, 811.705, 818.998), stdev = 6.093
[info]   CI (99.9%): [788.242, 835.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   418.793 ±(99.9%) 12.983 B/op [Average]
[info]   (min, avg, max) = (415.256, 418.793, 423.114), stdev = 3.372
[info]   CI (99.9%): [405.811, 431.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   784.135 ±(99.9%) 689.533 MB/sec [Average]
[info]   (min, avg, max) = (651.535, 784.135, 981.947), stdev = 179.070
[info]   CI (99.9%): [94.602, 1473.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   404.613 ±(99.9%) 356.808 B/op [Average]
[info]   (min, avg, max) = (336.272, 404.613, 506.652), stdev = 92.662
[info]   CI (99.9%): [47.806, 761.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.849 ±(99.9%) 7.095 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.849, 4.145), stdev = 1.843
[info]   CI (99.9%): [≈ 0, 7.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.438 ±(99.9%) 3.661 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.438, 2.139), stdev = 0.951
[info]   CI (99.9%): [≈ 0, 4.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 9.000), stdev = 1.342
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.29% complete, ETA 00:04:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 284992.868 ops/s
[info] # Warmup Iteration   2: 2409252.867 ops/s
[info] # Warmup Iteration   3: 2948452.195 ops/s
[info] Iteration   1: 2939484.792 ops/s
[info]                  ·gc.alloc.rate:                   1289.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              690.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     703.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 2960762.509 ops/s
[info]                  ·gc.alloc.rate:                   1297.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              689.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     699.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.661 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.945 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2946530.948 ops/s
[info]                  ·gc.alloc.rate:               1284.590 MB/sec
[info]                  ·gc.alloc.rate.norm:          686.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 525.883 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 2958584.694 ops/s
[info]                  ·gc.alloc.rate:               1294.871 MB/sec
[info]                  ·gc.alloc.rate.norm:          688.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1310.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 696.645 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 2948392.951 ops/s
[info]                  ·gc.alloc.rate:               1311.218 MB/sec
[info]                  ·gc.alloc.rate.norm:          699.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1314.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 701.378 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala":
[info]   2950751.179 ±(99.9%) 34002.176 ops/s [Average]
[info]   (min, avg, max) = (2939484.792, 2950751.179, 2960762.509), stdev = 8830.257
[info]   CI (99.9%): [2916749.003, 2984753.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1295.516 ±(99.9%) 39.006 MB/sec [Average]
[info]   (min, avg, max) = (1284.590, 1295.516, 1311.218), stdev = 10.130
[info]   CI (99.9%): [1256.510, 1334.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   690.831 ±(99.9%) 20.271 B/op [Average]
[info]   (min, avg, max) = (686.105, 690.831, 699.834), stdev = 5.264
[info]   CI (99.9%): [670.560, 711.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1247.775 ±(99.9%) 566.555 MB/sec [Average]
[info]   (min, avg, max) = (984.608, 1247.775, 1316.477), stdev = 147.133
[info]   CI (99.9%): [681.220, 1814.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   665.320 ±(99.9%) 300.299 B/op [Average]
[info]   (min, avg, max) = (525.883, 665.320, 703.304), stdev = 77.987
[info]   CI (99.9%): [365.022, 965.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.740 ±(99.9%) 6.286 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.740, 3.661), stdev = 1.633
[info]   CI (99.9%): [≈ 0, 7.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.393 ±(99.9%) 3.340 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.393, 1.945), stdev = 0.867
[info]   CI (99.9%): [≈ 0, 3.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 12.000), stdev = 3.578
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.53% complete, ETA 00:04:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1023626.634 ops/s
[info] # Warmup Iteration   2: 3212158.094 ops/s
[info] # Warmup Iteration   3: 3301569.130 ops/s
[info] Iteration   1: 3289387.128 ops/s
[info]                  ·gc.alloc.rate:               887.847 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 474.107 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 3307811.092 ops/s
[info]                  ·gc.alloc.rate:               880.656 MB/sec
[info]                  ·gc.alloc.rate.norm:          418.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 314.876 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 3337984.570 ops/s
[info]                  ·gc.alloc.rate:                   889.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              419.558 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     468.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3350387.997 ops/s
[info]                  ·gc.alloc.rate:                   895.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              420.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     466.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.977 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.398 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3357600.308 ops/s
[info]                  ·gc.alloc.rate:                   895.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              419.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     309.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala":
[info]   3328634.219 ±(99.9%) 111828.345 ops/s [Average]
[info]   (min, avg, max) = (3289387.128, 3328634.219, 3357600.308), stdev = 29041.466
[info]   CI (99.9%): [3216805.875, 3440462.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   889.843 ±(99.9%) 23.612 MB/sec [Average]
[info]   (min, avg, max) = (880.656, 889.843, 895.686), stdev = 6.132
[info]   CI (99.9%): [866.231, 913.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   420.713 ±(99.9%) 8.964 B/op [Average]
[info]   (min, avg, max) = (418.973, 420.713, 424.768), stdev = 2.328
[info]   CI (99.9%): [411.750, 429.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   860.431 ±(99.9%) 699.851 MB/sec [Average]
[info]   (min, avg, max) = (660.831, 860.431, 994.575), stdev = 181.749
[info]   CI (99.9%): [160.580, 1560.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   406.898 ±(99.9%) 332.730 B/op [Average]
[info]   (min, avg, max) = (309.738, 406.898, 474.107), stdev = 86.409
[info]   CI (99.9%): [74.168, 739.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.604 ±(99.9%) 5.109 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.604, 2.977), stdev = 1.327
[info]   CI (99.9%): [≈ 0, 5.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.284 ±(99.9%) 2.400 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.284, 1.398), stdev = 0.623
[info]   CI (99.9%): [≈ 0, 2.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 8.000), stdev = 2.121
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 95.76% complete, ETA 00:03:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1235149.864 ops/s
[info] # Warmup Iteration   2: 3523617.923 ops/s
[info] # Warmup Iteration   3: 3636398.419 ops/s
[info] Iteration   1: 3639262.326 ops/s
[info]                  ·gc.alloc.rate:      0.084 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.036 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3640751.133 ops/s
[info]                  ·gc.alloc.rate:      0.098 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.042 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3641922.605 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3632883.440 ops/s
[info]                  ·gc.alloc.rate:      0.113 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.049 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3516735.566 ops/s
[info]                  ·gc.alloc.rate:      9.981 MB/sec
[info]                  ·gc.alloc.rate.norm: 4.467 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3614311.014 ±(99.9%) 210468.170 ops/s [Average]
[info]   (min, avg, max) = (3516735.566, 3614311.014, 3641922.605), stdev = 54657.915
[info]   CI (99.9%): [3403842.844, 3824779.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   2.055 ±(99.9%) 17.062 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 2.055, 9.981), stdev = 4.431
[info]   CI (99.9%): [≈ 0, 19.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.919 ±(99.9%) 7.637 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.919, 4.467), stdev = 1.983
[info]   CI (99.9%): [≈ 0, 8.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 96.00% complete, ETA 00:03:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 616910.427 ops/s
[info] # Warmup Iteration   2: 2491326.874 ops/s
[info] # Warmup Iteration   3: 2862830.771 ops/s
[info] Iteration   1: 2835527.350 ops/s
[info]                  ·gc.alloc.rate:                   1400.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              777.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     733.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 2870156.477 ops/s
[info]                  ·gc.alloc.rate:                   1433.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              786.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     906.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.497 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.918 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2877328.548 ops/s
[info]                  ·gc.alloc.rate:               1427.902 MB/sec
[info]                  ·gc.alloc.rate.norm:          780.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1315.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 719.261 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 2878451.395 ops/s
[info]                  ·gc.alloc.rate:               1441.338 MB/sec
[info]                  ·gc.alloc.rate.norm:          788.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1317.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 720.049 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 2874119.143 ops/s
[info]                  ·gc.alloc.rate:               1440.296 MB/sec
[info]                  ·gc.alloc.rate.norm:          788.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1322.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 724.049 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson":
[info]   2867116.583 ±(99.9%) 69121.973 ops/s [Average]
[info]   (min, avg, max) = (2835527.350, 2867116.583, 2878451.395), stdev = 17950.757
[info]   CI (99.9%): [2797994.610, 2936238.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1428.699 ±(99.9%) 64.101 MB/sec [Average]
[info]   (min, avg, max) = (1400.565, 1428.699, 1441.338), stdev = 16.647
[info]   CI (99.9%): [1364.598, 1492.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   784.205 ±(99.9%) 18.759 B/op [Average]
[info]   (min, avg, max) = (777.353, 784.205, 788.643), stdev = 4.872
[info]   CI (99.9%): [765.446, 802.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1385.687 ±(99.9%) 574.097 MB/sec [Average]
[info]   (min, avg, max) = (1315.068, 1385.687, 1652.333), stdev = 149.091
[info]   CI (99.9%): [811.589, 1959.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   760.606 ±(99.9%) 313.979 B/op [Average]
[info]   (min, avg, max) = (719.261, 760.606, 906.114), stdev = 81.539
[info]   CI (99.9%): [446.627, 1074.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.710 ±(99.9%) 6.001 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.710, 3.497), stdev = 1.558
[info]   CI (99.9%): [≈ 0, 6.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.389 ±(99.9%) 3.290 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.389, 1.918), stdev = 0.855
[info]   CI (99.9%): [≈ 0, 3.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 12.000), stdev = 3.421
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce
[info] # Run progress: 96.24% complete, ETA 00:03:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1429.231 ops/s
[info] # Warmup Iteration   2: 7831.304 ops/s
[info] # Warmup Iteration   3: 11511.340 ops/s
[info] Iteration   1: 11780.107 ops/s
[info]                  ·gc.alloc.rate:                   1387.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              185394.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1308.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174866.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.781 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 11775.315 ops/s
[info]                  ·gc.alloc.rate:                   1382.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              184802.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     175103.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 539.690 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 11671.210 ops/s
[info]                  ·gc.alloc.rate:                   1372.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              185040.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1302.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     175675.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.680 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 11844.992 ops/s
[info]                  ·gc.alloc.rate:                   1397.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              185738.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1301.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172977.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.766 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 11837.077 ops/s
[info]                  ·gc.alloc.rate:                   1404.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              186700.476 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174024.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.149 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce":
[info]   11781.740 ±(99.9%) 267.639 ops/s [Average]
[info]   (min, avg, max) = (11671.210, 11781.740, 11844.992), stdev = 69.505
[info]   CI (99.9%): [11514.101, 12049.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1389.076 ±(99.9%) 48.457 MB/sec [Average]
[info]   (min, avg, max) = (1372.320, 1389.076, 1404.385), stdev = 12.584
[info]   CI (99.9%): [1340.619, 1437.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   185535.502 ±(99.9%) 2856.183 B/op [Average]
[info]   (min, avg, max) = (184802.190, 185535.502, 186700.476), stdev = 741.742
[info]   CI (99.9%): [182679.319, 188391.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1306.629 ±(99.9%) 15.115 MB/sec [Average]
[info]   (min, avg, max) = (1301.906, 1306.629, 1310.341), stdev = 3.925
[info]   CI (99.9%): [1291.513, 1321.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   174529.739 ±(99.9%) 4047.706 B/op [Average]
[info]   (min, avg, max) = (172977.869, 174529.739, 175675.774), stdev = 1051.177
[info]   CI (99.9%): [170482.032, 178577.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.874 ±(99.9%) 6.823 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.874, 4.039), stdev = 1.772
[info]   CI (99.9%): [≈ 0, 7.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   116.813 ±(99.9%) 911.666 B/op [Average]
[info]   (min, avg, max) = (2.766, 116.813, 539.690), stdev = 236.757
[info]   CI (99.9%): [≈ 0, 1028.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 15.000), stdev = 4.278
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala
[info] # Run progress: 96.47% complete, ETA 00:03:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3053.642 ops/s
[info] # Warmup Iteration   2: 15563.539 ops/s
[info] # Warmup Iteration   3: 21059.266 ops/s
[info] Iteration   1: 21032.696 ops/s
[info]                  ·gc.alloc.rate:               318.867 MB/sec
[info]                  ·gc.alloc.rate.norm:          23857.966 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19139.328 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 21056.450 ops/s
[info]                  ·gc.alloc.rate:               321.661 MB/sec
[info]                  ·gc.alloc.rate.norm:          24040.340 B/op
[info]                  ·gc.churn.PS_Eden_Space:      318.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23823.352 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 20705.339 ops/s
[info]                  ·gc.alloc.rate:               323.325 MB/sec
[info]                  ·gc.alloc.rate.norm:          24574.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:      318.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24228.288 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 21083.679 ops/s
[info]                  ·gc.alloc.rate:               329.645 MB/sec
[info]                  ·gc.alloc.rate.norm:          24604.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23892.297 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 21107.488 ops/s
[info]                  ·gc.alloc.rate:               320.794 MB/sec
[info]                  ·gc.alloc.rate.norm:          23916.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:      320.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23865.137 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala":
[info]   20997.130 ±(99.9%) 637.382 ops/s [Average]
[info]   (min, avg, max) = (20705.339, 20997.130, 21107.488), stdev = 165.526
[info]   CI (99.9%): [20359.748, 21634.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   322.858 ±(99.9%) 15.866 MB/sec [Average]
[info]   (min, avg, max) = (318.867, 322.858, 329.645), stdev = 4.120
[info]   CI (99.9%): [306.993, 338.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24198.816 ±(99.9%) 1397.252 B/op [Average]
[info]   (min, avg, max) = (23857.966, 24198.816, 24604.572), stdev = 362.862
[info]   CI (99.9%): [22801.565, 25596.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   306.707 ±(99.9%) 109.608 MB/sec [Average]
[info]   (min, avg, max) = (255.801, 306.707, 320.103), stdev = 28.465
[info]   CI (99.9%): [197.099, 416.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   22989.680 ±(99.9%) 8311.397 B/op [Average]
[info]   (min, avg, max) = (19139.328, 22989.680, 24228.288), stdev = 2158.443
[info]   CI (99.9%): [14678.284, 31301.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala
[info] # Run progress: 96.71% complete, ETA 00:02:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9979.818 ops/s
[info] # Warmup Iteration   2: 19586.913 ops/s
[info] # Warmup Iteration   3: 22409.859 ops/s
[info] Iteration   1: 22457.530 ops/s
[info]                  ·gc.alloc.rate:               251.802 MB/sec
[info]                  ·gc.alloc.rate.norm:          17644.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17925.174 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 22355.537 ops/s
[info]                  ·gc.alloc.rate:               250.075 MB/sec
[info]                  ·gc.alloc.rate.norm:          17603.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18007.745 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 22288.720 ops/s
[info]                  ·gc.alloc.rate:      252.726 MB/sec
[info]                  ·gc.alloc.rate.norm: 17843.915 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 22536.861 ops/s
[info]                  ·gc.alloc.rate:                   249.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              17446.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23025.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.454 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 22466.296 ops/s
[info]                  ·gc.alloc.rate:               255.358 MB/sec
[info]                  ·gc.alloc.rate.norm:          17887.719 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23097.415 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala":
[info]   22420.989 ±(99.9%) 378.234 ops/s [Average]
[info]   (min, avg, max) = (22288.720, 22420.989, 22536.861), stdev = 98.226
[info]   CI (99.9%): [22042.755, 22799.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   251.961 ±(99.9%) 8.651 MB/sec [Average]
[info]   (min, avg, max) = (249.844, 251.961, 255.358), stdev = 2.247
[info]   CI (99.9%): [243.310, 260.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   17685.237 ±(99.9%) 698.489 B/op [Average]
[info]   (min, avg, max) = (17446.239, 17685.237, 17887.719), stdev = 181.395
[info]   CI (99.9%): [16986.749, 18383.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   234.220 ±(99.9%) 523.881 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 234.220, 329.746), stdev = 136.050
[info]   CI (99.9%): [≈ 0, 758.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   16411.205 ±(99.9%) 36663.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16411.205, 23097.415), stdev = 9521.364
[info]   CI (99.9%): [≈ 0, 53074.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.291 ±(99.9%) 2.503 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.291, 1.454), stdev = 0.650
[info]   CI (99.9%): [≈ 0, 2.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 4.000), stdev = 1.643
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson
[info] # Run progress: 96.94% complete, ETA 00:02:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 151.840 ops/s
[info] # Warmup Iteration   2: 2319.143 ops/s
[info] # Warmup Iteration   3: 5498.981 ops/s
[info] Iteration   1: 7385.964 ops/s
[info]                  ·gc.alloc.rate:                   2073.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              441798.866 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1847.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     393570.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.301 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 277.208 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         31.000 ms
[info] Iteration   2: 7373.903 ops/s
[info]                  ·gc.alloc.rate:                   2075.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              443021.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2195.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     468561.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.096 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1727.711 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         27.000 ms
[info] Iteration   3: 7521.194 ops/s
[info]                  ·gc.alloc.rate:                   2123.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              444367.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1876.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     392710.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.846 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 7489.538 ops/s
[info]                  ·gc.alloc.rate:                   2141.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              449919.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2218.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     465994.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.374 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 7491.987 ops/s
[info]                  ·gc.alloc.rate:                   2131.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              447683.205 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1942.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     408012.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.373 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson":
[info]   7452.517 ±(99.9%) 260.128 ops/s [Average]
[info]   (min, avg, max) = (7373.903, 7452.517, 7521.194), stdev = 67.554
[info]   CI (99.9%): [7192.389, 7712.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2109.284 ±(99.9%) 124.124 MB/sec [Average]
[info]   (min, avg, max) = (2073.501, 2109.284, 2141.837), stdev = 32.235
[info]   CI (99.9%): [1985.160, 2233.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   445358.090 ±(99.9%) 12961.512 B/op [Average]
[info]   (min, avg, max) = (441798.866, 445358.090, 449919.469), stdev = 3366.064
[info]   CI (99.9%): [432396.578, 458319.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2016.102 ±(99.9%) 684.569 MB/sec [Average]
[info]   (min, avg, max) = (1847.152, 2016.102, 2218.364), stdev = 177.780
[info]   CI (99.9%): [1331.533, 2700.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   425770.059 ±(99.9%) 147813.328 B/op [Average]
[info]   (min, avg, max) = (392710.738, 425770.059, 468561.076), stdev = 38386.652
[info]   CI (99.9%): [277956.732, 573583.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1.921 ±(99.9%) 13.451 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 1.921, 8.096), stdev = 3.493
[info]   CI (99.9%): [≈ 0, 15.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   409.702 ±(99.9%) 2871.122 B/op [Average]
[info]   (min, avg, max) = (4.373, 409.702, 1727.711), stdev = 745.621
[info]   CI (99.9%): [≈ 0, 3280.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.time":
[info]   88.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 17.600, 31.000), stdev = 10.526
[info]   CI (99.9%): [88.000, 88.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala
[info] # Run progress: 97.18% complete, ETA 00:02:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2530.223 ops/s
[info] # Warmup Iteration   2: 51018.886 ops/s
[info] # Warmup Iteration   3: 64216.742 ops/s
[info] Iteration   1: 62856.635 ops/s
[info]                  ·gc.alloc.rate:               820.823 MB/sec
[info]                  ·gc.alloc.rate.norm:          20548.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:      970.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24292.978 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   2: 63124.085 ops/s
[info]                  ·gc.alloc.rate:               815.272 MB/sec
[info]                  ·gc.alloc.rate.norm:          20325.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:      648.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16175.885 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 63857.457 ops/s
[info]                  ·gc.alloc.rate:                   827.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              20384.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24051.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 62788.276 ops/s
[info]                  ·gc.alloc.rate:                   814.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              20418.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16345.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4.236 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 106.180 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 64394.892 ops/s
[info]                  ·gc.alloc.rate:                   840.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              20529.998 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23833.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.367 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala":
[info]   63404.269 ±(99.9%) 2684.818 ops/s [Average]
[info]   (min, avg, max) = (62788.276, 63404.269, 64394.892), stdev = 697.239
[info]   CI (99.9%): [60719.451, 66089.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   823.600 ±(99.9%) 40.415 MB/sec [Average]
[info]   (min, avg, max) = (814.682, 823.600, 840.075), stdev = 10.496
[info]   CI (99.9%): [783.186, 864.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   20441.498 ±(99.9%) 367.638 B/op [Average]
[info]   (min, avg, max) = (20325.352, 20441.498, 20548.355), stdev = 95.474
[info]   CI (99.9%): [20073.860, 20809.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   844.518 ±(99.9%) 682.056 MB/sec [Average]
[info]   (min, avg, max) = (648.832, 844.518, 975.912), stdev = 177.128
[info]   CI (99.9%): [162.463, 1526.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20939.935 ±(99.9%) 16460.985 B/op [Average]
[info]   (min, avg, max) = (16175.885, 20939.935, 24292.978), stdev = 4274.866
[info]   CI (99.9%): [4478.949, 37400.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1.030 ±(99.9%) 7.049 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.030, 4.236), stdev = 1.831
[info]   CI (99.9%): [≈ 0, 8.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   25.715 ±(99.9%) 176.727 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 25.715, 106.180), stdev = 45.895
[info]   CI (99.9%): [≈ 0, 202.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.800, 12.000), stdev = 3.347
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala
[info] # Run progress: 97.41% complete, ETA 00:02:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29927.673 ops/s
[info] # Warmup Iteration   2: 67148.447 ops/s
[info] # Warmup Iteration   3: 70131.842 ops/s
[info] Iteration   1: 70440.136 ops/s
[info]                  ·gc.alloc.rate:                   485.186 MB/sec
[info]                  ·gc.alloc.rate.norm:              10836.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14540.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.465 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 71031.167 ops/s
[info]                  ·gc.alloc.rate:               486.487 MB/sec
[info]                  ·gc.alloc.rate.norm:          10776.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7224.891 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 70716.592 ops/s
[info]                  ·gc.alloc.rate:                   491.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              10943.340 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14528.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.390 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 70954.208 ops/s
[info]                  ·gc.alloc.rate:                   486.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              10800.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7247.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.462 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 70403.165 ops/s
[info]                  ·gc.alloc.rate:               490.276 MB/sec
[info]                  ·gc.alloc.rate.norm:          10955.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14637.596 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala":
[info]   70709.054 ±(99.9%) 1105.677 ops/s [Average]
[info]   (min, avg, max) = (70403.165, 70709.054, 71031.167), stdev = 287.141
[info]   CI (99.9%): [69603.377, 71814.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   488.154 ±(99.9%) 10.778 MB/sec [Average]
[info]   (min, avg, max) = (485.186, 488.154, 491.869), stdev = 2.799
[info]   CI (99.9%): [477.376, 498.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   10862.618 ±(99.9%) 317.192 B/op [Average]
[info]   (min, avg, max) = (10776.894, 10862.618, 10955.939), stdev = 82.374
[info]   CI (99.9%): [10545.425, 11179.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   522.391 ±(99.9%) 688.774 MB/sec [Average]
[info]   (min, avg, max) = (326.144, 522.391, 655.030), stdev = 178.872
[info]   CI (99.9%): [≈ 0, 1211.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   11635.749 ±(99.9%) 15466.288 B/op [Average]
[info]   (min, avg, max) = (7224.891, 11635.749, 14637.596), stdev = 4016.546
[info]   CI (99.9%): [≈ 0, 27102.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.463 ±(99.9%) 2.185 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.463, 1.390), stdev = 0.567
[info]   CI (99.9%): [≈ 0, 2.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 97.65% complete, ETA 00:02:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16972.715 ops/s
[info] # Warmup Iteration   2: 66689.064 ops/s
[info] # Warmup Iteration   3: 75775.848 ops/s
[info] Iteration   1: 75828.159 ops/s
[info]                  ·gc.alloc.rate:      7.790 MB/sec
[info]                  ·gc.alloc.rate.norm: 161.675 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 76048.041 ops/s
[info]                  ·gc.alloc.rate:      7.732 MB/sec
[info]                  ·gc.alloc.rate.norm: 160.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 75675.506 ops/s
[info]                  ·gc.alloc.rate:      8.731 MB/sec
[info]                  ·gc.alloc.rate.norm: 181.560 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 75930.385 ops/s
[info]                  ·gc.alloc.rate:      7.720 MB/sec
[info]                  ·gc.alloc.rate.norm: 160.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 75963.819 ops/s
[info]                  ·gc.alloc.rate:      7.724 MB/sec
[info]                  ·gc.alloc.rate.norm: 160.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   75889.182 ±(99.9%) 550.944 ops/s [Average]
[info]   (min, avg, max) = (75675.506, 75889.182, 76048.041), stdev = 143.078
[info]   CI (99.9%): [75338.239, 76440.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   7.940 ±(99.9%) 1.707 MB/sec [Average]
[info]   (min, avg, max) = (7.720, 7.940, 8.731), stdev = 0.443
[info]   CI (99.9%): [6.232, 9.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   164.650 ±(99.9%) 36.505 B/op [Average]
[info]   (min, avg, max) = (160.006, 164.650, 181.560), stdev = 9.480
[info]   CI (99.9%): [128.145, 201.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 97.88% complete, ETA 00:01:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52898.404 ops/s
[info] # Warmup Iteration   2: 288443.891 ops/s
[info] # Warmup Iteration   3: 293984.800 ops/s
[info] Iteration   1: 310808.935 ops/s
[info]                  ·gc.alloc.rate:                   1839.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              9315.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8378.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.971 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 307422.597 ops/s
[info]                  ·gc.alloc.rate:                   1839.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              9417.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1975.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10111.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.320 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 312013.680 ops/s
[info]                  ·gc.alloc.rate:                   1866.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              9414.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1649.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8319.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.945 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 311831.282 ops/s
[info]                  ·gc.alloc.rate:                   1886.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              9520.364 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1991.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10052.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 313325.228 ops/s
[info]                  ·gc.alloc.rate:                   1881.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              9449.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1670.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8391.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.209 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce":
[info]   311080.344 ±(99.9%) 8594.639 ops/s [Average]
[info]   (min, avg, max) = (307422.597, 311080.344, 313325.228), stdev = 2232.000
[info]   CI (99.9%): [302485.706, 319674.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1862.858 ±(99.9%) 86.026 MB/sec [Average]
[info]   (min, avg, max) = (1839.556, 1862.858, 1886.462), stdev = 22.341
[info]   CI (99.9%): [1776.832, 1948.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9423.610 ±(99.9%) 284.279 B/op [Average]
[info]   (min, avg, max) = (9315.786, 9423.610, 9520.364), stdev = 73.826
[info]   CI (99.9%): [9139.331, 9707.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1788.464 ±(99.9%) 686.771 MB/sec [Average]
[info]   (min, avg, max) = (1649.464, 1788.464, 1991.923), stdev = 178.352
[info]   CI (99.9%): [1101.692, 2475.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9050.700 ±(99.9%) 3627.596 B/op [Average]
[info]   (min, avg, max) = (8319.045, 9050.700, 10111.416), stdev = 942.075
[info]   CI (99.9%): [5423.104, 12678.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.737 ±(99.9%) 5.634 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.737, 3.352), stdev = 1.463
[info]   CI (99.9%): [≈ 0, 6.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.731 ±(99.9%) 28.525 B/op [Average]
[info]   (min, avg, max) = (0.209, 3.731, 16.971), stdev = 7.408
[info]   CI (99.9%): [≈ 0, 32.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 13.000), stdev = 2.702
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.12% complete, ETA 00:01:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51855.162 ops/s
[info] # Warmup Iteration   2: 413079.632 ops/s
[info] # Warmup Iteration   3: 470642.338 ops/s
[info] Iteration   1: 498476.053 ops/s
[info]                  ·gc.alloc.rate:                   586.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              1852.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2052.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 503977.643 ops/s
[info]                  ·gc.alloc.rate:               580.441 MB/sec
[info]                  ·gc.alloc.rate.norm:          1812.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1017.209 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 498163.672 ops/s
[info]                  ·gc.alloc.rate:                   580.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              1834.794 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2060.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 500357.945 ops/s
[info]                  ·gc.alloc.rate:               586.294 MB/sec
[info]                  ·gc.alloc.rate.norm:          1843.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2055.493 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 499940.550 ops/s
[info]                  ·gc.alloc.rate:                   582.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              1833.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2060.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala":
[info]   500183.173 ±(99.9%) 8923.208 ops/s [Average]
[info]   (min, avg, max) = (498163.672, 500183.173, 503977.643), stdev = 2317.329
[info]   CI (99.9%): [491259.964, 509106.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   583.378 ±(99.9%) 11.435 MB/sec [Average]
[info]   (min, avg, max) = (580.441, 583.378, 586.701), stdev = 2.970
[info]   CI (99.9%): [571.943, 594.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1835.351 ±(99.9%) 57.791 B/op [Average]
[info]   (min, avg, max) = (1812.039, 1835.351, 1852.230), stdev = 15.008
[info]   CI (99.9%): [1777.560, 1893.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   587.287 ±(99.9%) 562.825 MB/sec [Average]
[info]   (min, avg, max) = (325.837, 587.287, 654.551), stdev = 146.164
[info]   CI (99.9%): [24.462, 1150.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1849.211 ±(99.9%) 1790.991 B/op [Average]
[info]   (min, avg, max) = (1017.209, 1849.211, 2060.360), stdev = 465.115
[info]   CI (99.9%): [58.220, 3640.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.066 ±(99.9%) 0.253 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.066, 0.132), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 8.000), stdev = 1.949
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.35% complete, ETA 00:01:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 481669.377 ops/s
[info] # Warmup Iteration   2: 1213624.859 ops/s
[info] # Warmup Iteration   3: 1212480.277 ops/s
[info] Iteration   1: 1214384.086 ops/s
[info]                  ·gc.alloc.rate:                   653.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              846.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     855.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1196756.483 ops/s
[info]                  ·gc.alloc.rate:               654.079 MB/sec
[info]                  ·gc.alloc.rate.norm:          860.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 869.065 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 1204517.675 ops/s
[info]                  ·gc.alloc.rate:                   655.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              855.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     864.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1218580.597 ops/s
[info]                  ·gc.alloc.rate:                   652.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              843.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     856.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1211717.078 ops/s
[info]                  ·gc.alloc.rate:                   648.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              842.789 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     862.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.515 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala":
[info]   1209191.184 ±(99.9%) 33234.589 ops/s [Average]
[info]   (min, avg, max) = (1196756.483, 1209191.184, 1218580.597), stdev = 8630.917
[info]   CI (99.9%): [1175956.595, 1242425.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   652.882 ±(99.9%) 9.172 MB/sec [Average]
[info]   (min, avg, max) = (648.947, 652.882, 655.247), stdev = 2.382
[info]   CI (99.9%): [643.710, 662.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   849.690 ±(99.9%) 30.229 B/op [Average]
[info]   (min, avg, max) = (842.789, 849.690, 860.062), stdev = 7.850
[info]   CI (99.9%): [819.461, 879.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   661.894 ±(99.9%) 6.097 MB/sec [Average]
[info]   (min, avg, max) = (659.819, 661.894, 663.857), stdev = 1.583
[info]   CI (99.9%): [655.797, 667.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   861.408 ±(99.9%) 22.714 B/op [Average]
[info]   (min, avg, max) = (855.082, 861.408, 869.065), stdev = 5.899
[info]   CI (99.9%): [838.694, 884.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.562 ±(99.9%) 4.616 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.562, 2.706), stdev = 1.199
[info]   CI (99.9%): [≈ 0, 5.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.730 ±(99.9%) 5.995 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.730, 3.515), stdev = 1.557
[info]   CI (99.9%): [≈ 0, 6.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 98.59% complete, ETA 00:01:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9339.104 ops/s
[info] # Warmup Iteration   2: 94176.064 ops/s
[info] # Warmup Iteration   3: 99923.859 ops/s
[info] Iteration   1: 100941.517 ops/s
[info]                  ·gc.alloc.rate:                   3209.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              50025.137 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2986.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46555.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.947 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 103126.013 ops/s
[info]                  ·gc.alloc.rate:                   3284.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              50121.673 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3359.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51258.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.588 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 103077.402 ops/s
[info]                  ·gc.alloc.rate:                   3301.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              50410.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3044.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46481.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.954 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 101561.513 ops/s
[info]                  ·gc.alloc.rate:                   3258.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              50496.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3054.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47327.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.645 B/op
[info]                  ·gc.count:                        9.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 103979.920 ops/s
[info]                  ·gc.alloc.rate:                   3342.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              50584.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3398.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51440.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.315 B/op
[info]                  ·gc.count:                        10.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson":
[info]   102537.273 ±(99.9%) 4801.017 ops/s [Average]
[info]   (min, avg, max) = (100941.517, 102537.273, 103979.920), stdev = 1246.809
[info]   CI (99.9%): [97736.256, 107338.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3279.458 ±(99.9%) 190.634 MB/sec [Average]
[info]   (min, avg, max) = (3209.609, 3279.458, 3342.450), stdev = 49.507
[info]   CI (99.9%): [3088.824, 3470.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   50327.688 ±(99.9%) 934.209 B/op [Average]
[info]   (min, avg, max) = (50025.137, 50327.688, 50584.977), stdev = 242.611
[info]   CI (99.9%): [49393.479, 51261.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3168.758 ±(99.9%) 747.636 MB/sec [Average]
[info]   (min, avg, max) = (2986.967, 3168.758, 3398.961), stdev = 194.159
[info]   CI (99.9%): [2421.122, 3916.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   48612.455 ±(99.9%) 9707.471 B/op [Average]
[info]   (min, avg, max) = (46481.326, 48612.455, 51440.224), stdev = 2520.999
[info]   CI (99.9%): [38904.984, 58319.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.090 ±(99.9%) 2.584 B/op [Average]
[info]   (min, avg, max) = (0.315, 1.090, 1.947), stdev = 0.671
[info]   CI (99.9%): [≈ 0, 3.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   47.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (9.000, 9.400, 10.000), stdev = 0.548
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   67.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (12.000, 13.400, 15.000), stdev = 1.140
[info]   CI (99.9%): [67.000, 67.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 98.82% complete, ETA 00:01:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 121856.488 ops/s
[info] # Warmup Iteration   2: 309536.001 ops/s
[info] # Warmup Iteration   3: 335731.138 ops/s
[info] Iteration   1: 342537.132 ops/s
[info]                  ·gc.alloc.rate:                   1198.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              5508.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6066.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 342729.549 ops/s
[info]                  ·gc.alloc.rate:                   1189.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              5463.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4557.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.618 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 342306.407 ops/s
[info]                  ·gc.alloc.rate:                   1215.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              5586.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6067.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.680 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 345986.796 ops/s
[info]                  ·gc.alloc.rate:                   1199.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              5457.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4490.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.663 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 341735.814 ops/s
[info]                  ·gc.alloc.rate:               1213.139 MB/sec
[info]                  ·gc.alloc.rate.norm:          5584.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1317.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6064.857 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce":
[info]   343059.140 ±(99.9%) 6463.490 ops/s [Average]
[info]   (min, avg, max) = (341735.814, 343059.140, 345986.796), stdev = 1678.548
[info]   CI (99.9%): [336595.650, 349522.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1203.436 ±(99.9%) 40.869 MB/sec [Average]
[info]   (min, avg, max) = (1189.966, 1203.436, 1215.336), stdev = 10.614
[info]   CI (99.9%): [1162.566, 1244.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5520.174 ±(99.9%) 242.366 B/op [Average]
[info]   (min, avg, max) = (5457.255, 5520.174, 5586.481), stdev = 62.942
[info]   CI (99.9%): [5277.808, 5762.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1187.509 ±(99.9%) 694.516 MB/sec [Average]
[info]   (min, avg, max) = (987.283, 1187.509, 1320.364), stdev = 180.364
[info]   CI (99.9%): [492.993, 1882.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5449.292 ±(99.9%) 3253.044 B/op [Average]
[info]   (min, avg, max) = (4490.728, 5449.292, 6067.081), stdev = 844.805
[info]   CI (99.9%): [2196.249, 8702.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.708 ±(99.9%) 4.479 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.708, 2.748), stdev = 1.163
[info]   CI (99.9%): [≈ 0, 5.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.249 ±(99.9%) 20.567 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.249, 12.618), stdev = 5.341
[info]   CI (99.9%): [≈ 0, 23.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.06% complete, ETA 00:00:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 214418.969 ops/s
[info] # Warmup Iteration   2: 737245.987 ops/s
[info] # Warmup Iteration   3: 741314.168 ops/s
[info] Iteration   1: 725340.735 ops/s
[info]                  ·gc.alloc.rate:                   571.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              1238.978 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1414.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 737294.084 ops/s
[info]                  ·gc.alloc.rate:                   582.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              1243.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1394.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 737821.213 ops/s
[info]                  ·gc.alloc.rate:               581.912 MB/sec
[info]                  ·gc.alloc.rate.norm:          1240.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1392.981 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 739456.532 ops/s
[info]                  ·gc.alloc.rate:                   571.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              1216.172 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     697.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 741117.359 ops/s
[info]                  ·gc.alloc.rate:                   579.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              1231.149 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1393.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala":
[info]   736205.984 ±(99.9%) 24088.404 ops/s [Average]
[info]   (min, avg, max) = (725340.735, 736205.984, 741117.359), stdev = 6255.682
[info]   CI (99.9%): [712117.580, 760294.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   577.340 ±(99.9%) 21.749 MB/sec [Average]
[info]   (min, avg, max) = (571.048, 577.340, 582.499), stdev = 5.648
[info]   CI (99.9%): [555.591, 599.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1234.035 ±(99.9%) 42.222 B/op [Average]
[info]   (min, avg, max) = (1216.172, 1234.035, 1243.377), stdev = 10.965
[info]   CI (99.9%): [1191.813, 1276.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   588.601 ±(99.9%) 561.526 MB/sec [Average]
[info]   (min, avg, max) = (327.751, 588.601, 656.168), stdev = 145.827
[info]   CI (99.9%): [27.074, 1150.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1258.743 ±(99.9%) 1208.612 B/op [Average]
[info]   (min, avg, max) = (697.513, 1258.743, 1414.979), stdev = 313.873
[info]   CI (99.9%): [50.131, 2467.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.044 ±(99.9%) 0.120 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.044, 0.088), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 7.000), stdev = 1.643
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.29% complete, ETA 00:00:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 923933.605 ops/s
[info] # Warmup Iteration   2: 1512317.669 ops/s
[info] # Warmup Iteration   3: 1557672.893 ops/s
[info] Iteration   1: 1563700.484 ops/s
[info]                  ·gc.alloc.rate:                   748.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.724 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     665.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1564152.269 ops/s
[info]                  ·gc.alloc.rate:                   742.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              746.870 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     665.539 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1520208.816 ops/s
[info]                  ·gc.alloc.rate:               718.489 MB/sec
[info]                  ·gc.alloc.rate.norm:          743.799 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 685.507 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 1505163.358 ops/s
[info]                  ·gc.alloc.rate:                   729.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              762.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1039.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.764 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1561380.050 ops/s
[info]                  ·gc.alloc.rate:                   742.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     667.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.567 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala":
[info]   1542920.996 ±(99.9%) 108311.520 ops/s [Average]
[info]   (min, avg, max) = (1505163.358, 1542920.996, 1564152.269), stdev = 28128.158
[info]   CI (99.9%): [1434609.476, 1651232.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   736.143 ±(99.9%) 46.199 MB/sec [Average]
[info]   (min, avg, max) = (718.489, 736.143, 748.073), stdev = 11.998
[info]   CI (99.9%): [689.944, 782.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   750.865 ±(99.9%) 28.322 B/op [Average]
[info]   (min, avg, max) = (743.799, 750.865, 762.701), stdev = 7.355
[info]   CI (99.9%): [722.543, 779.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   728.271 ±(99.9%) 573.176 MB/sec [Average]
[info]   (min, avg, max) = (660.962, 728.271, 994.544), stdev = 148.852
[info]   CI (99.9%): [155.096, 1301.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   744.680 ±(99.9%) 636.274 B/op [Average]
[info]   (min, avg, max) = (665.072, 744.680, 1039.877), stdev = 165.238
[info]   CI (99.9%): [108.406, 1380.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.658 ±(99.9%) 4.367 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.658, 2.644), stdev = 1.134
[info]   CI (99.9%): [≈ 0, 5.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.683 ±(99.9%) 4.570 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.683, 2.764), stdev = 1.187
[info]   CI (99.9%): [≈ 0, 5.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 9.000), stdev = 2.191
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 99.53% complete, ETA 00:00:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 999942.829 ops/s
[info] # Warmup Iteration   2: 1719131.501 ops/s
[info] # Warmup Iteration   3: 1750114.892 ops/s
[info] Iteration   1: 1747701.149 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1748794.867 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1746924.317 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1747579.883 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1747696.363 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   1747739.316 ±(99.9%) 2588.202 ops/s [Average]
[info]   (min, avg, max) = (1746924.317, 1747739.316, 1748794.867), stdev = 672.148
[info]   CI (99.9%): [1745151.114, 1750327.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.20
[info] # VM version: JDK 1.8.0_161, VM 25.71-b01-internal-jvmci-0.42
[info] # VM invoker: /usr/lib/jvm/graalvm-ce-1.0.0-rc1/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 3 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 99.76% complete, ETA 00:00:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 120720.125 ops/s
[info] # Warmup Iteration   2: 413593.633 ops/s
[info] # Warmup Iteration   3: 452126.127 ops/s
[info] Iteration   1: 460838.879 ops/s
[info]                  ·gc.alloc.rate:                   699.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              2388.789 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2239.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 460446.726 ops/s
[info]                  ·gc.alloc.rate:                   709.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              2425.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2243.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 443922.639 ops/s
[info]                  ·gc.alloc.rate:               697.222 MB/sec
[info]                  ·gc.alloc.rate.norm:          2471.678 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2330.935 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 453193.113 ops/s
[info]                  ·gc.alloc.rate:                   692.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              2405.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2286.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 453686.364 ops/s
[info]                  ·gc.alloc.rate:                   690.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              2393.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2286.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.481 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson":
[info]   454417.544 ±(99.9%) 26522.068 ops/s [Average]
[info]   (min, avg, max) = (443922.639, 454417.544, 460838.879), stdev = 6887.697
[info]   CI (99.9%): [427895.476, 480939.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   697.846 ±(99.9%) 29.226 MB/sec [Average]
[info]   (min, avg, max) = (690.009, 697.846, 709.666), stdev = 7.590
[info]   CI (99.9%): [668.620, 727.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2416.954 ±(99.9%) 129.727 B/op [Average]
[info]   (min, avg, max) = (2388.789, 2416.954, 2471.678), stdev = 33.690
[info]   CI (99.9%): [2287.227, 2546.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   657.522 ±(99.9%) 5.133 MB/sec [Average]
[info]   (min, avg, max) = (655.895, 657.522, 659.124), stdev = 1.333
[info]   CI (99.9%): [652.389, 662.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2277.468 ±(99.9%) 143.901 B/op [Average]
[info]   (min, avg, max) = (2239.633, 2277.468, 2330.935), stdev = 37.371
[info]   CI (99.9%): [2133.566, 2421.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.679 ±(99.9%) 5.664 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.679, 3.310), stdev = 1.471
[info]   CI (99.9%): [≈ 0, 6.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.353 ±(99.9%) 19.648 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.353, 11.481), stdev = 5.103
[info]   CI (99.9%): [≈ 0, 22.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # Run complete. Total time: 01:30:34
[info] Benchmark                                                                                        (size)   Mode  Cnt         Score         Error   Units
[info] AdtBenchmark.readCirce                                                                              N/A  thrpt    5    797470.709 ±   41793.101   ops/s
[info] AdtBenchmark.readCirce:·gc.alloc.rate                                                               N/A  thrpt    5      2315.029 ±     125.339  MB/sec
[info] AdtBenchmark.readCirce:·gc.alloc.rate.norm                                                          N/A  thrpt    5      4568.116 ±      90.197    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                      N/A  thrpt    5      2253.837 ±     590.813  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                                 N/A  thrpt    5      4445.680 ±    1031.878    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                                  N/A  thrpt    5         0.795 ±       6.624  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                             N/A  thrpt    5         1.556 ±      12.959    B/op
[info] AdtBenchmark.readCirce:·gc.count                                                                    N/A  thrpt    5        34.000                counts
[info] AdtBenchmark.readCirce:·gc.time                                                                     N/A  thrpt    5        50.000                    ms
[info] AdtBenchmark.readJacksonScala                                                                       N/A  thrpt    5   1912725.290 ±  145522.041   ops/s
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate                                                        N/A  thrpt    5      1270.233 ±      69.096  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm                                                   N/A  thrpt    5      1045.132 ±      34.055    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      1241.174 ±     570.842  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5      1022.176 ±     500.602    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.887 ±       6.540  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.737 ±       5.451    B/op
[info] AdtBenchmark.readJacksonScala:·gc.count                                                             N/A  thrpt    5        19.000                counts
[info] AdtBenchmark.readJacksonScala:·gc.time                                                              N/A  thrpt    5        48.000                    ms
[info] AdtBenchmark.readJsoniterScala                                                                      N/A  thrpt    5   5898146.520 ±  496470.934   ops/s
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate                                                       N/A  thrpt    5       402.715 ±      42.214  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       107.451 ±       6.315    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5       382.387 ±     616.664  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       102.010 ±     162.555    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.001 ±       0.010    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.count                                                            N/A  thrpt    5         6.000                counts
[info] AdtBenchmark.readJsoniterScala:·gc.time                                                             N/A  thrpt    5        15.000                    ms
[info] AdtBenchmark.readPlayJson                                                                           N/A  thrpt    5    259563.553 ±    9783.848   ops/s
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate                                                            N/A  thrpt    5      2273.092 ±     113.789  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate.norm                                                       N/A  thrpt    5     13781.438 ±     289.704    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                   N/A  thrpt    5      2201.343 ±     661.758  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                              N/A  thrpt    5     13350.808 ±    4222.832    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                               N/A  thrpt    5         0.308 ±       2.476  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                          N/A  thrpt    5         1.898 ±      15.273    B/op
[info] AdtBenchmark.readPlayJson:·gc.count                                                                 N/A  thrpt    5        33.000                counts
[info] AdtBenchmark.readPlayJson:·gc.time                                                                  N/A  thrpt    5        51.000                    ms
[info] AdtBenchmark.writeCirce                                                                             N/A  thrpt    5    890637.427 ±   43459.713   ops/s
[info] AdtBenchmark.writeCirce:·gc.alloc.rate                                                              N/A  thrpt    5      2394.280 ±      98.968  MB/sec
[info] AdtBenchmark.writeCirce:·gc.alloc.rate.norm                                                         N/A  thrpt    5      4230.802 ±      84.903    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                     N/A  thrpt    5      2323.944 ±      97.583  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                                N/A  thrpt    5      4107.223 ±     341.618    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                                 N/A  thrpt    5         0.766 ±       6.506  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                            N/A  thrpt    5         1.344 ±      11.414    B/op
[info] AdtBenchmark.writeCirce:·gc.count                                                                   N/A  thrpt    5        35.000                counts
[info] AdtBenchmark.writeCirce:·gc.time                                                                    N/A  thrpt    5        52.000                    ms
[info] AdtBenchmark.writeJacksonScala                                                                      N/A  thrpt    5   2787111.596 ±  176259.838   ops/s
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate                                                       N/A  thrpt    5      1199.553 ±      81.114  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       677.221 ±      20.950    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      1178.504 ±     690.563  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       665.823 ±     403.038    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.802 ±       6.724  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.465 ±       3.907    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.count                                                            N/A  thrpt    5        18.000                counts
[info] AdtBenchmark.writeJacksonScala:·gc.time                                                             N/A  thrpt    5        41.000                    ms
[info] AdtBenchmark.writeJsoniterScala                                                                     N/A  thrpt    5  14134440.161 ± 1642560.014   ops/s
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate                                                      N/A  thrpt    5       739.184 ±      96.669  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                                 N/A  thrpt    5        82.289 ±       2.552    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5       727.850 ±     575.073  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5        80.856 ±      57.441    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.664 ±       5.495  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.072 ±       0.593    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.count                                                           N/A  thrpt    5        11.000                counts
[info] AdtBenchmark.writeJsoniterScala:·gc.time                                                            N/A  thrpt    5        31.000                    ms
[info] AdtBenchmark.writeJsoniterScalaPrealloc                                                             N/A  thrpt    5  16306588.178 ±   50587.008   ops/s
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                              N/A  thrpt    5         0.100 ±       0.858  MB/sec
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                         N/A  thrpt    5         0.010 ±       0.083    B/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                   N/A  thrpt    5           ≈ 0                counts
[info] AdtBenchmark.writePlayJson                                                                          N/A  thrpt    5    527689.778 ±   19119.206   ops/s
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate                                                           N/A  thrpt    5      1604.776 ±      52.267  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate.norm                                                      N/A  thrpt    5      4785.480 ±      72.371    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5      1514.731 ±     702.142  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5      4518.251 ±    2141.050    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5         0.223 ±       1.053  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5         0.668 ±       3.157    B/op
[info] AdtBenchmark.writePlayJson:·gc.count                                                                N/A  thrpt    5        23.000                counts
[info] AdtBenchmark.writePlayJson:·gc.time                                                                 N/A  thrpt    5        38.000                    ms
[info] AnyRefsBenchmark.readCirce                                                                          N/A  thrpt    5   2142284.524 ±   31732.916   ops/s
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate                                                           N/A  thrpt    5      3007.656 ±      44.825  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm                                                      N/A  thrpt    5      2209.272 ±      29.536    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5      2873.023 ±     695.154  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5      2110.778 ±     539.659    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5         0.079 ±       0.422  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5         0.058 ±       0.310    B/op
[info] AnyRefsBenchmark.readCirce:·gc.count                                                                N/A  thrpt    5        43.000                counts
[info] AnyRefsBenchmark.readCirce:·gc.time                                                                 N/A  thrpt    5        59.000                    ms
[info] AnyRefsBenchmark.readDslJsonJava                                                                    N/A  thrpt    5  10022893.573 ±  540966.896   ops/s
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate                                                     N/A  thrpt    5      1263.331 ±      85.824  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                                N/A  thrpt    5       198.340 ±       5.278    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      1239.396 ±     562.928  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5       194.379 ±      80.302    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.881 ±       7.379  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.137 ±       1.146    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.count                                                          N/A  thrpt    5        19.000                counts
[info] AnyRefsBenchmark.readDslJsonJava:·gc.time                                                           N/A  thrpt    5        43.000                    ms
[info] AnyRefsBenchmark.readJacksonScala                                                                   N/A  thrpt    5   3156996.663 ±  170121.529   ops/s
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate                                                    N/A  thrpt    5      2058.015 ±     120.968  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                               N/A  thrpt    5      1025.821 ±      18.767    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      1975.796 ±      74.985  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5       984.925 ±      38.801    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.905 ±       7.037  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         0.449 ±       3.486    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.count                                                         N/A  thrpt    5        30.000                counts
[info] AnyRefsBenchmark.readJacksonScala:·gc.time                                                          N/A  thrpt    5        50.000                    ms
[info] AnyRefsBenchmark.readJsoniterScala                                                                  N/A  thrpt    5  12812702.065 ±  650739.764   ops/s
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate                                                   N/A  thrpt    5      1689.682 ±      89.840  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                              N/A  thrpt    5       207.533 ±       4.176    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1664.171 ±      21.091  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5       204.432 ±      12.220    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.554 ±       3.454  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.068 ±       0.424    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.count                                                        N/A  thrpt    5        25.000                counts
[info] AnyRefsBenchmark.readJsoniterScala:·gc.time                                                         N/A  thrpt    5        37.000                    ms
[info] AnyRefsBenchmark.readPlayJson                                                                       N/A  thrpt    5   1088050.826 ±  157254.645   ops/s
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate                                                        N/A  thrpt    5      2723.430 ±     411.064  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm                                                   N/A  thrpt    5      3938.659 ±      91.361    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      2666.106 ±     937.105  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5      3855.672 ±    1210.696    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.421 ±       2.706  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.639 ±       4.186    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.count                                                             N/A  thrpt    5        40.000                counts
[info] AnyRefsBenchmark.readPlayJson:·gc.time                                                              N/A  thrpt    5        63.000                    ms
[info] AnyRefsBenchmark.writeCirce                                                                         N/A  thrpt    5   2474296.948 ±   45905.374   ops/s
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate                                                          N/A  thrpt    5      2191.547 ±      64.210  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm                                                     N/A  thrpt    5      1393.803 ±      31.196    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5      2122.384 ±     716.218  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5      1349.954 ±     462.228    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.745 ±       6.149  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5         0.474 ±       3.906    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.count                                                               N/A  thrpt    5        32.000                counts
[info] AnyRefsBenchmark.writeCirce:·gc.time                                                                N/A  thrpt    5        48.000                    ms
[info] AnyRefsBenchmark.writeDslJsonJava                                                                   N/A  thrpt    5  19558679.817 ± 2181528.093   ops/s
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate                                                    N/A  thrpt    5       616.087 ±      78.594  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                               N/A  thrpt    5        49.565 ±       2.127    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5       587.611 ±     563.655  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5        47.209 ±      44.412    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.015 ±       0.067  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         0.001 ±       0.005    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.count                                                         N/A  thrpt    5         9.000                counts
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.time                                                          N/A  thrpt    5        28.000                    ms
[info] AnyRefsBenchmark.writeJacksonScala                                                                  N/A  thrpt    5   6418315.894 ±  814313.865   ops/s
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate                                                   N/A  thrpt    5      1825.219 ±     242.449  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                              N/A  thrpt    5       447.505 ±      14.301    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1776.482 ±     714.552  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5       435.617 ±     167.042    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.785 ±       6.104  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.203 ±       1.591    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.count                                                        N/A  thrpt    5        27.000                counts
[info] AnyRefsBenchmark.writeJacksonScala:·gc.time                                                         N/A  thrpt    5        45.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScala                                                                 N/A  thrpt    5  27389999.680 ± 2743611.319   ops/s
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate                                                  N/A  thrpt    5       863.235 ±     102.491  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                             N/A  thrpt    5        49.596 ±       2.005    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       860.404 ±     696.397  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5        49.325 ±      37.335    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.641 ±       5.342  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.036 ±       0.297    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.count                                                       N/A  thrpt    5        13.000                counts
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.time                                                        N/A  thrpt    5        31.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc                                                         N/A  thrpt    5  34369160.548 ±  163235.714   ops/s
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                          N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                     N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                               N/A  thrpt    5           ≈ 0                counts
[info] AnyRefsBenchmark.writePlayJson                                                                      N/A  thrpt    5   1811046.185 ±   95665.924   ops/s
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate                                                       N/A  thrpt    5      2979.014 ±     168.229  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm                                                  N/A  thrpt    5      2588.675 ±      75.589    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      2930.355 ±     581.585  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5      2546.806 ±     526.150    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.092 ±       0.434  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.079 ±       0.375    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.count                                                            N/A  thrpt    5        44.000                counts
[info] AnyRefsBenchmark.writePlayJson:·gc.time                                                             N/A  thrpt    5        65.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readCirce                                                            128  thrpt    5    299905.126 ±   18281.805   ops/s
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1841.295 ±     118.801  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5      9661.961 ±     251.976    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1788.279 ±     684.657  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      9395.121 ±    4088.263    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.774 ±       5.778  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         4.156 ±      31.143    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.count                                                  128  thrpt    5        27.000                counts
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.time                                                   128  thrpt    5        41.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala                                                     128  thrpt    5    501186.179 ±    3961.020   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5       669.177 ±       9.569  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      2101.161 ±      31.061    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       653.282 ±       6.951  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      2051.260 ±      33.303    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.841 ±       7.109  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         2.639 ±      22.299    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        10.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        37.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala                                                    128  thrpt    5   1315296.727 ±   84608.189   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       906.641 ±      39.406  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1084.856 ±      30.176    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       926.669 ±     566.459  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1110.995 ±     726.948    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.666 ±       5.602  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.794 ±       6.674    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5        14.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        33.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readPlayJson                                                         128  thrpt    5    111002.921 ±    5304.293   ops/s
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      3537.640 ±     171.432  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     50153.396 ±     321.104    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3421.138 ±     428.399  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     48496.044 ±    4544.959    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.071 ±       0.201  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.007 ±       2.884    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        51.000                counts
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        68.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeCirce                                                           128  thrpt    5    351320.260 ±   16009.700   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1213.967 ±      63.358  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5      5437.352 ±      81.547    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1185.944 ±     689.990  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      5314.861 ±    3171.020    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.691 ±       5.018  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         3.102 ±      22.571    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        18.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        35.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala                                                    128  thrpt    5    861191.843 ±   21180.411   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       638.039 ±       4.879  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5      1165.938 ±      32.593    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       589.311 ±     565.205  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1077.914 ±    1046.113    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.025 ±       0.067  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.046 ±       0.123    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         9.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        29.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala                                                   128  thrpt    5   2486928.264 ±  157253.463   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1186.060 ±      81.777  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       750.477 ±       8.222    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1124.102 ±     697.786  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       710.484 ±     412.810    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.679 ±       4.875  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.421 ±       3.012    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        17.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        33.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   2894866.372 ±   79795.787   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson                                                        128  thrpt    5    475134.458 ±    7486.839   ops/s
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5       704.940 ±      15.953  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5      2334.700 ±      48.304    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5       657.965 ±       5.232  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      2179.142 ±      36.096    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.700 ±       5.890  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         2.317 ±      19.501    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        10.000                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        32.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readCirce                                                               128  thrpt    5     17216.387 ±     542.906   ops/s
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1387.017 ±      31.842  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5    126774.318 ±    3399.084    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1318.639 ±      16.239  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    120525.319 ±    2906.969    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.779 ±       6.393  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        70.917 ±     582.065    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        20.000                counts
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.time                                                      128  thrpt    5        40.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala                                                        128  thrpt    5     36460.477 ±    2234.062   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1008.654 ±      60.392  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     43533.513 ±    2123.396    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       984.381 ±      14.099  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     42493.161 ±    3090.182    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.879 ±       6.546  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        38.501 ±     287.788    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5        15.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5        38.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala                                                       128  thrpt    5     44103.974 ±    3368.160   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       612.037 ±      29.355  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5     21839.212 ±    1021.752    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       595.990 ±     572.365  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     21317.911 ±   21089.216    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.152 ±       1.307    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         9.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        23.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readPlayJson                                                            128  thrpt    5     29087.819 ±     776.070   ops/s
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1471.963 ±      58.508  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     79635.439 ±    2436.471    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1442.047 ±     689.444  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     78019.857 ±   37345.166    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.941 ±       7.611  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        51.019 ±     412.708    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        22.000                counts
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        49.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeCirce                                                              128  thrpt    5     24466.650 ±     712.211   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1777.196 ±      18.543  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5    114309.772 ±    2717.083    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1718.294 ±     547.073  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    110567.881 ±   38163.054    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.858 ±       5.560  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        54.843 ±     354.259    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        26.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        42.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala                                                       128  thrpt    5     24939.739 ±    1052.841   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1565.634 ±      88.021  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     98778.172 ±    3026.143    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1575.116 ±     580.190  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     99433.971 ±   38809.017    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.841 ±       5.016  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        53.562 ±     318.961    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5        24.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        43.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala                                                      128  thrpt    5     26758.235 ±     725.708   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      1624.360 ±      39.457  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5     95533.281 ±    3089.324    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1588.733 ±     572.251  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     93465.310 ±   34922.558    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.733 ±       4.446  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5        43.347 ±     262.715    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5        24.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5        41.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5     27553.460 ±     775.305   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5      1580.387 ±      36.488  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5     90268.637 ±    2613.050    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                      128  thrpt    5      1523.304 ±     692.872  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5     86987.704 ±   38811.333    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.749 ±       4.278  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5        43.034 ±     246.096    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5        23.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                     128  thrpt    5        39.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writePlayJson                                                           128  thrpt    5      7737.568 ±     393.523   ops/s
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1153.938 ±      75.661  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    234663.777 ±    4693.542    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1119.584 ±     690.895  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    227508.089 ±  134109.285    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.845 ±       6.792  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       171.082 ±    1374.868    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        17.000                counts
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        41.000                    ms
[info] ArrayOfBigIntsBenchmark.readCirce                                                                   128  thrpt    5     17857.629 ±     509.528   ops/s
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1642.993 ±      64.880  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5    144786.751 ±    4450.100    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1586.216 ±     575.873  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5    139829.173 ±   52643.229    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.758 ±       5.068  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        66.604 ±     445.969    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        24.000                counts
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        41.000                    ms
[info] ArrayOfBigIntsBenchmark.readJacksonScala                                                            128  thrpt    5     42111.217 ±    3052.402   ops/s
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1200.634 ±      57.631  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     44871.577 ±    1813.157    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1180.114 ±     695.569  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     44079.723 ±   25189.444    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.849 ±       5.121  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        31.841 ±     192.667    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        18.000                counts
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        44.000                    ms
[info] ArrayOfBigIntsBenchmark.readJsoniterScala                                                           128  thrpt    5     65938.545 ±    3436.994   ops/s
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       752.933 ±      37.577  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5     17969.309 ±     338.279    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       729.887 ±     572.715  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     17414.571 ±   13484.819    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.566 ±       3.825  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        13.407 ±      90.574    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5        11.000                counts
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        27.000                    ms
[info] ArrayOfBigIntsBenchmark.readPlayJson                                                                128  thrpt    5     32644.328 ±    1597.584   ops/s
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      2166.545 ±     122.980  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5    104442.116 ±    1718.139    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2133.134 ±     692.064  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    102858.489 ±   34410.508    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.067 ±       0.530  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         3.254 ±      25.931    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        32.000                counts
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        47.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJacksonScala                                                           128  thrpt    5     27546.283 ±    1635.155   ops/s
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1777.863 ±     102.160  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5    101569.483 ±    3364.293    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1778.950 ±     724.586  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    101690.380 ±   43818.442    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.804 ±       6.472  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        46.846 ±     377.896    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5        27.000                counts
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        48.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala                                                          128  thrpt    5     33367.574 ±    1727.502   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5      1507.661 ±      64.449  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5     71105.058 ±    2156.628    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1459.432 ±     703.409  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     68878.875 ±   35041.651    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.645 ±       4.023  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        30.918 ±     194.119    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5        22.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        36.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5     34305.864 ±    2229.205   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5      1490.011 ±      51.412  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5     68356.316 ±    2859.411    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                          128  thrpt    5      1456.909 ±     702.913  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     66921.309 ±   35527.580    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.712 ±       4.261  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        33.253 ±     201.084    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5        22.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                         128  thrpt    5        37.000                    ms
[info] ArrayOfBooleansBenchmark.readCirce                                                                  128  thrpt    5    322541.265 ±   15286.560   ops/s
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                   128  thrpt    5      1832.094 ±     105.484  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                              128  thrpt    5      8938.818 ±     231.221    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1786.611 ±     702.941  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5      8720.058 ±    3551.920    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.774 ±       5.779  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         3.812 ±      28.490    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.count                                                        128  thrpt    5        27.000                counts
[info] ArrayOfBooleansBenchmark.readCirce:·gc.time                                                         128  thrpt    5        45.000                    ms
[info] ArrayOfBooleansBenchmark.readDslJsonJava                                                            128  thrpt    5   1510668.356 ±   54055.656   ops/s
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate                                             128  thrpt    5       489.035 ±      31.410  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        128  thrpt    5       509.435 ±      22.958    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    128  thrpt    5       455.800 ±     686.283  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       474.522 ±     710.377    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.014 ±       0.075  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.014 ±       0.078    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count                                                  128  thrpt    5         7.000                counts
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time                                                   128  thrpt    5        21.000                    ms
[info] ArrayOfBooleansBenchmark.readJacksonScala                                                           128  thrpt    5    665978.832 ±   29666.858   ops/s
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                            128  thrpt    5       529.395 ±      27.635  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1251.020 ±      54.657    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       523.737 ±     690.101  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1238.131 ±    1636.830    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.030 ±       0.171    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.count                                                 128  thrpt    5         8.000                counts
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.time                                                  128  thrpt    5        27.000                    ms
[info] ArrayOfBooleansBenchmark.readJsoniterScala                                                          128  thrpt    5   1851732.754 ±  125529.364   ops/s
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       366.910 ±      23.954  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       311.800 ±       6.353    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       314.996 ±     127.240  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       267.468 ±      98.190    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.003 ±       0.030    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         5.000                counts
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5        15.000                    ms
[info] ArrayOfBooleansBenchmark.readPlayJson                                                               128  thrpt    5    100435.189 ±    2114.847   ops/s
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      3369.987 ±     111.280  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     52802.093 ±    1138.743    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      3206.404 ±     617.117  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     50235.398 ±    9236.200    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.067 ±       0.222  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         1.043 ±       3.479    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        48.000                counts
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        66.000                    ms
[info] ArrayOfBooleansBenchmark.writeCirce                                                                 128  thrpt    5    365385.600 ±    5520.972   ops/s
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                  128  thrpt    5      1267.008 ±      31.965  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                             128  thrpt    5      5457.122 ±     150.591    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1252.505 ±     559.557  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5      5395.927 ±    2455.080    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.695 ±       5.172  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         2.982 ±      22.177    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.count                                                       128  thrpt    5        19.000                counts
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.time                                                        128  thrpt    5        35.000                    ms
[info] ArrayOfBooleansBenchmark.writeDslJsonJava                                                           128  thrpt    5   1675713.140 ±   73304.123   ops/s
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate                                            128  thrpt    5       799.794 ±      37.786  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       128  thrpt    5       751.040 ±       7.524    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   128  thrpt    5       782.292 ±     691.396  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       734.366 ±     642.896    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.901 ±       7.578  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.836 ±       7.032    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count                                                 128  thrpt    5        12.000                counts
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time                                                  128  thrpt    5        34.000                    ms
[info] ArrayOfBooleansBenchmark.writeJacksonScala                                                          128  thrpt    5   1018580.054 ±   89071.770   ops/s
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5       741.396 ±      68.202  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      1145.447 ±      38.318    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       722.614 ±     562.042  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1118.719 ±     928.240    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.720 ±       6.068  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.088 ±       9.159    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5        11.000                counts
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5        32.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScala                                                         128  thrpt    5   2748079.419 ±  105270.913   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      1314.847 ±      77.639  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5       752.907 ±      20.368    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1323.087 ±      11.470  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       757.718 ±      32.776    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.666 ±       5.513  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.386 ±       3.192    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5        20.000                counts
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5        37.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5   3205225.078 ±   46174.102   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5           ≈ 0                counts
[info] ArrayOfBooleansBenchmark.writePlayJson                                                              128  thrpt    5    477134.968 ±   48327.007   ops/s
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                               128  thrpt    5       570.155 ±      47.773  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                          128  thrpt    5      1880.605 ±      52.149    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5       592.278 ±     566.457  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1960.175 ±    1951.413    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.055 ±       0.227    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.count                                                    128  thrpt    5         9.000                counts
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.time                                                     128  thrpt    5        30.000                    ms
[info] ArrayOfBytesBenchmark.readCirce                                                                     128  thrpt    5    158181.218 ±    8553.442   ops/s
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      2006.031 ±      68.946  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     19958.332 ±     607.277    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1989.051 ±      61.226  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     19792.658 ±    1629.159    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.741 ±       6.247  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         7.342 ±      61.876    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.count                                                           128  thrpt    5        30.000                counts
[info] ArrayOfBytesBenchmark.readCirce:·gc.time                                                            128  thrpt    5        45.000                    ms
[info] ArrayOfBytesBenchmark.readJacksonScala                                                              128  thrpt    5    451932.795 ±    3754.787   ops/s
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5       372.733 ±      15.658  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      1297.879 ±      45.440    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       312.577 ±     122.136  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1088.278 ±     419.125    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.021 ±       0.080  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.073 ±       0.280    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5         5.000                counts
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        18.000                    ms
[info] ArrayOfBytesBenchmark.readJsoniterScala                                                             128  thrpt    5   1267936.414 ±   14169.794   ops/s
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       252.901 ±      12.635  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       313.884 ±      14.874    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       234.234 ±     523.922  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       290.988 ±     650.578    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.005 ±       0.044    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5         4.000                counts
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        11.000                    ms
[info] ArrayOfBytesBenchmark.readPlayJson                                                                  128  thrpt    5     86720.241 ±    4852.833   ops/s
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      3478.428 ±     192.945  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     63119.204 ±     812.521    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      3343.555 ±     747.240  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     60648.546 ±   11080.773    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.062 ±       0.363  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         1.122 ±       6.508    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        50.000                counts
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        73.000                    ms
[info] ArrayOfBytesBenchmark.writeCirce                                                                    128  thrpt    5    302017.328 ±   15536.211   ops/s
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      1708.519 ±      72.728  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5      8902.864 ±     208.736    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1651.649 ±      31.847  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5      8607.632 ±     537.351    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.716 ±       5.304  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         3.722 ±      27.596    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        25.000                counts
[info] ArrayOfBytesBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        39.000                    ms
[info] ArrayOfBytesBenchmark.writeJacksonScala                                                             128  thrpt    5   1922062.305 ±   34411.391   ops/s
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1020.028 ±      35.506  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5       835.180 ±      30.948    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       985.204 ±       8.347  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       806.669 ±      14.893    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.737 ±       5.679  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.604 ±       4.655    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5        15.000                counts
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        35.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScala                                                            128  thrpt    5   2838343.353 ±   85233.294   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       785.101 ±      34.073  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       435.296 ±       9.243    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       728.401 ±     571.710  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       403.653 ±     310.205    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.672 ±       4.588  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.371 ±       2.529    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5        11.000                counts
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        29.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5   3044790.695 ±   22994.875   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5         0.247 ±       2.122  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.128 ±       1.101    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfBytesBenchmark.writePlayJson                                                                 128  thrpt    5     48292.748 ±    1932.784   ops/s
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      2195.599 ±      72.592  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     71549.677 ±    1053.481    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      2116.945 ±     664.954  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     69032.741 ±   24237.182    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.816 ±       6.937  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        27.021 ±     229.758    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        32.000                counts
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        49.000                    ms
[info] ArrayOfCharsBenchmark.readCirce                                                                     128  thrpt    5    239114.324 ±    9746.606   ops/s
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      2635.164 ±     125.414  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     17340.969 ±     193.732    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      2536.590 ±     732.583  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     16688.352 ±    4503.430    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.142 ±       0.953  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         0.943 ±       6.368    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        38.000                counts
[info] ArrayOfCharsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        50.000                    ms
[info] ArrayOfCharsBenchmark.readJacksonScala                                                              128  thrpt    5    381399.570 ±    5928.210   ops/s
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1973.099 ±      85.080  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      8140.103 ±     260.558    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1916.115 ±     603.557  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      7903.595 ±    2403.843    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.829 ±       6.650  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         3.416 ±      27.401    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        29.000                counts
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        43.000                    ms
[info] ArrayOfCharsBenchmark.readJsoniterScala                                                             128  thrpt    5   2227171.699 ±  199294.418   ops/s
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       799.045 ±      54.362  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       564.726 ±      32.758    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       795.131 ±     699.387  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       564.258 ±     544.289    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.541 ±       4.090  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.394 ±       2.996    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        12.000                counts
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        26.000                    ms
[info] ArrayOfCharsBenchmark.readPlayJson                                                                  128  thrpt    5     87587.710 ±    2012.297   ops/s
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      3455.039 ±     128.527  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     62075.090 ±    1306.551    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      3370.257 ±     125.405  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     60555.253 ±    3047.668    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.156 ±       0.670  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         2.816 ±      12.134    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        50.000                counts
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        73.000                    ms
[info] ArrayOfCharsBenchmark.writeCirce                                                                    128  thrpt    5    261163.763 ±   23464.345   ops/s
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      2121.622 ±     192.355  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5     12784.508 ±     240.980    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      2057.491 ±     632.279  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     12398.240 ±    3618.745    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.741 ±       6.068  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         4.651 ±      38.176    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        31.000                counts
[info] ArrayOfCharsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        46.000                    ms
[info] ArrayOfCharsBenchmark.writeJacksonScala                                                             128  thrpt    5   1447643.881 ±   11767.975   ops/s
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       874.092 ±      17.965  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5       950.133 ±      26.683    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       854.388 ±     695.305  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       929.025 ±     762.471    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.695 ±       5.853  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.757 ±       6.372    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5        13.000                counts
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        32.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScala                                                            128  thrpt    5   2805548.529 ±  133259.643   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       980.444 ±      41.409  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       549.973 ±       9.689    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       927.599 ±     565.557  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       520.833 ±     328.758    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.604 ±       4.424  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.335 ±       2.450    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5        14.000                counts
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        27.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5   3064573.907 ±    9407.134   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfCharsBenchmark.writePlayJson                                                                 128  thrpt    5    397267.048 ±   15645.174   ops/s
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      2560.180 ±     140.506  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     10141.169 ±     402.520    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      2526.871 ±     714.935  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     10007.897 ±    2718.880    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.112 ±       0.403  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.443 ±       1.582    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        38.000                counts
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        54.000                    ms
[info] ArrayOfDoublesBenchmark.readCirce                                                                   128  thrpt    5     25809.398 ±    1336.415   ops/s
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1666.139 ±     120.136  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5    101584.970 ±    2541.620    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1586.142 ±     562.545  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     96678.324 ±   32383.217    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.783 ±       3.932  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        48.184 ±     242.225    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.count                                                         128  thrpt    5        24.000                counts
[info] ArrayOfDoublesBenchmark.readCirce:·gc.time                                                          128  thrpt    5        42.000                    ms
[info] ArrayOfDoublesBenchmark.readDslJsonJava                                                             128  thrpt    5     98064.591 ±    5416.163   ops/s
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       955.166 ±      72.712  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5     15327.597 ±     470.364    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5       912.116 ±     565.380  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     14631.149 ±    8909.612    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.914 ±       7.243  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        14.542 ±     115.283    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count                                                   128  thrpt    5        14.000                counts
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time                                                    128  thrpt    5        35.000                    ms
[info] ArrayOfDoublesBenchmark.readJacksonScala                                                            128  thrpt    5     67078.541 ±    3685.256   ops/s
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1209.161 ±      94.366  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     28365.798 ±     733.543    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1180.229 ±     695.324  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     27661.348 ±   15410.152    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.858 ±       4.982  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        20.160 ±     117.480    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        18.000                counts
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        41.000                    ms
[info] ArrayOfDoublesBenchmark.readJsoniterScala                                                           128  thrpt    5    136232.226 ±    2992.135   ops/s
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       946.454 ±      55.988  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5     10933.005 ±     485.797    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       925.189 ±     569.170  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     10682.013 ±    6436.495    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.645 ±       3.921  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         7.418 ±      44.950    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5        14.000                counts
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        32.000                    ms
[info] ArrayOfDoublesBenchmark.readPlayJson                                                                128  thrpt    5     35808.762 ±    1307.989   ops/s
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1794.349 ±      67.512  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     78857.206 ±    1285.380    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1707.758 ±     544.006  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     75011.077 ±   20972.111    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.912 ±       6.655  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        40.150 ±     293.833    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        26.000                counts
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        50.000                    ms
[info] ArrayOfDoublesBenchmark.writeCirce                                                                  128  thrpt    5     31708.437 ±     610.949   ops/s
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5       521.696 ±      10.930  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     25892.459 ±     752.079    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5       526.794 ±     694.990  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     26153.646 ±   34596.119    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.042 ±       0.272  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         2.075 ±      13.558    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.count                                                        128  thrpt    5         8.000                counts
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        25.000                    ms
[info] ArrayOfDoublesBenchmark.writeJacksonScala                                                           128  thrpt    5     32137.865 ±     964.961   ops/s
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       405.018 ±      13.104  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     19833.649 ±    1022.929    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       378.796 ±     605.031  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     18585.865 ±   30252.826    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.008 ±       0.072  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.406 ±       3.492    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         6.000                counts
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        19.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScala                                                          128  thrpt    5     34154.163 ±    1220.495   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       429.086 ±      36.162  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5     19773.884 ±    2218.235    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       447.412 ±     627.148  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     20638.826 ±   29198.333    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.190 ±       1.639    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        19.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5     34719.953 ±     736.412   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5       391.603 ±      21.823  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5     17750.581 ±    1333.059    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                          128  thrpt    5       381.401 ±     612.796  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     17283.972 ±   27790.836    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.017 ±       0.105  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.755 ±       4.741    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5         6.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                         128  thrpt    5        18.000                    ms
[info] ArrayOfDurationsBenchmark.readCirce                                                                 128  thrpt    5     14632.058 ±     671.855   ops/s
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1081.157 ±      38.998  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5    116294.667 ±    6863.252    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1057.067 ±     568.221  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5    113672.606 ±   60054.535    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.787 ±       3.751  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        83.999 ±     400.196    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        16.000                counts
[info] ArrayOfDurationsBenchmark.readCirce:·gc.time                                                        128  thrpt    5        46.000                    ms
[info] ArrayOfDurationsBenchmark.readJacksonScala                                                          128  thrpt    5     14725.051 ±     568.657   ops/s
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       960.074 ±      49.937  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5    102601.359 ±    3239.362    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       920.035 ±     563.677  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     98394.092 ±   61855.532    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.866 ±       4.527  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        92.570 ±     484.254    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5        14.000                counts
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5        40.000                    ms
[info] ArrayOfDurationsBenchmark.readJsoniterScala                                                         128  thrpt    5    106076.899 ±    7166.053   ops/s
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       284.477 ±      15.979  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      4220.127 ±      86.766    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       300.670 ±     157.519  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      4459.610 ±    2297.940    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.122 ±       0.642    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         5.000                counts
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        14.000                    ms
[info] ArrayOfDurationsBenchmark.readPlayJson                                                              128  thrpt    5     13582.435 ±     716.025   ops/s
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      1326.664 ±      63.923  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    153710.480 ±    5590.754    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1246.601 ±     554.249  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    144537.406 ±   67671.308    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.912 ±       6.576  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5       104.647 ±     752.335    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        19.000                counts
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        43.000                    ms
[info] ArrayOfDurationsBenchmark.writeCirce                                                                128  thrpt    5     44912.347 ±     774.380   ops/s
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1146.623 ±      21.362  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     40175.680 ±     370.484    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1055.615 ±     568.757  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     36985.030 ±   19836.373    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.741 ±       4.224  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        25.967 ±     148.118    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        16.000                counts
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5        34.000                    ms
[info] ArrayOfDurationsBenchmark.writeJacksonScala                                                         128  thrpt    5     64831.016 ±    1413.693   ops/s
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1141.610 ±      47.219  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     27712.245 ±     976.560    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1116.932 ±     694.468  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     27113.613 ±   16859.894    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.779 ±       4.867  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        18.907 ±     118.353    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5        17.000                counts
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        35.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScala                                                        128  thrpt    5    174354.821 ±    6592.997   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       287.056 ±      12.738  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      2590.893 ±      57.217    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       300.060 ±     155.446  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      2708.625 ±    1412.461    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         5.000                counts
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        14.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    184176.460 ±    1336.091   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         0.003 ±       0.001    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ArrayOfDurationsBenchmark.writePlayJson                                                             128  thrpt    5     57832.068 ±     658.264   ops/s
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5      1120.212 ±      15.114  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     30482.790 ±     333.165    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1119.029 ±     690.198  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     30459.286 ±   19053.499    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.812 ±       4.828  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        22.086 ±     131.289    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        17.000                counts
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        38.000                    ms
[info] ArrayOfEnumsBenchmark.readCirce                                                                     128  thrpt    5     92533.121 ±    2774.657   ops/s
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      2055.682 ±      39.533  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     34960.597 ±     809.602    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      2051.018 ±     543.086  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     34872.775 ±    8569.356    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.812 ±       6.588  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5        13.692 ±     111.035    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        31.000                counts
[info] ArrayOfEnumsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        48.000                    ms
[info] ArrayOfEnumsBenchmark.readJacksonScala                                                              128  thrpt    5    117738.530 ±    7417.883   ops/s
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1672.003 ±     111.862  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5     22348.413 ±     551.854    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1639.259 ±      33.944  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     21916.466 ±    1728.392    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.891 ±       5.579  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        12.068 ±      76.165    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        25.000                counts
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        47.000                    ms
[info] ArrayOfEnumsBenchmark.readJsoniterScala                                                             128  thrpt    5    165370.162 ±   11085.699   ops/s
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5      1556.682 ±     107.130  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5     14812.478 ±     396.781    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1523.787 ±     695.755  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     14488.745 ±    6115.366    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.666 ±       4.159  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         6.486 ±      40.868    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        23.000                counts
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        39.000                    ms
[info] ArrayOfEnumsBenchmark.readPlayJson                                                                  128  thrpt    5     54094.204 ±    2544.722   ops/s
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      2912.496 ±     131.782  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     84730.629 ±    2101.224    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2822.031 ±     729.694  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     82056.690 ±   17595.572    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.083 ±       0.501  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         2.428 ±      14.652    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        42.000                counts
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        59.000                    ms
[info] ArrayOfEnumsBenchmark.writeCirce                                                                    128  thrpt    5    169563.884 ±    9744.455   ops/s
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      1134.908 ±      49.035  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5     10533.351 ±     226.791    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1121.269 ±     697.306  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     10396.521 ±    6126.370    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.737 ±       4.532  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         6.845 ±      41.989    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        17.000                counts
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        35.000                    ms
[info] ArrayOfEnumsBenchmark.writeJacksonScala                                                             128  thrpt    5    534492.494 ±    8486.450   ops/s
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       555.920 ±      27.238  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      1636.343 ±      66.902    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       523.603 ±     687.203  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      1540.626 ±    2015.202    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.025 ±       0.104  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.073 ±       0.307    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5         8.000                counts
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        26.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScala                                                            128  thrpt    5    712615.070 ±   19006.736   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       562.004 ±      30.713  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1241.084 ±      47.640    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       528.891 ±     697.645  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1168.072 ±    1541.807    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.021 ±       0.080  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.046 ±       0.177    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         8.000                counts
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        22.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5    778049.490 ±   11910.799   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5         0.205 ±       1.592  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.417 ±       3.243    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfEnumsBenchmark.writePlayJson                                                                 128  thrpt    5    325093.717 ±   15638.521   ops/s
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5       924.853 ±      45.830  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5      4476.816 ±     147.137    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5       917.282 ±     560.730  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5      4438.867 ±    2681.233    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.820 ±       5.422  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         3.942 ±      25.931    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        14.000                counts
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        38.000                    ms
[info] ArrayOfFloatsBenchmark.readCirce                                                                    128  thrpt    5     37336.875 ±    2156.348   ops/s
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate                                                     128  thrpt    5      1914.664 ±     112.914  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm                                                128  thrpt    5     80697.006 ±    1921.212    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1854.472 ±     693.789  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     78230.120 ±   32193.479    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.766 ±       6.462  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5        32.958 ±     278.121    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.count                                                          128  thrpt    5        28.000                counts
[info] ArrayOfFloatsBenchmark.readCirce:·gc.time                                                           128  thrpt    5        45.000                    ms
[info] ArrayOfFloatsBenchmark.readDslJsonJava                                                              128  thrpt    5    298918.939 ±    2340.647   ops/s
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       319.502 ±       7.290  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5      1682.027 ±      27.666    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5       311.113 ±     119.005  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1637.803 ±     623.497    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.012 ±       0.045  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.065 ±       0.235    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count                                                    128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time                                                     128  thrpt    5        15.000                    ms
[info] ArrayOfFloatsBenchmark.readJacksonScala                                                             128  thrpt    5    115556.572 ±    1633.969   ops/s
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1386.770 ±      47.364  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5     18885.810 ±     406.472    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1377.897 ±     553.015  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     18762.107 ±    7358.977    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.849 ±       7.045  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        11.603 ±      96.251    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.count                                                   128  thrpt    5        21.000                counts
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.time                                                    128  thrpt    5        43.000                    ms
[info] ArrayOfFloatsBenchmark.readJsoniterScala                                                            128  thrpt    5    474253.218 ±   33790.393   ops/s
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       320.009 ±      21.632  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1062.043 ±      85.554    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       300.125 ±     155.782  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       997.260 ±     558.789    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.010 ±       0.040  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.035 ±       0.134    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5        14.000                    ms
[info] ArrayOfFloatsBenchmark.readPlayJson                                                                 128  thrpt    5     40276.156 ±    2057.367   ops/s
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      2005.876 ±     101.337  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     78373.068 ±    1397.081    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1974.825 ±      63.386  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     77169.109 ±    4370.463    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.920 ±       7.565  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        36.551 ±     300.827    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        30.000                counts
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        52.000                    ms
[info] ArrayOfFloatsBenchmark.writeCirce                                                                   128  thrpt    5     75236.669 ±     268.537   ops/s
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate                                                    128  thrpt    5       612.854 ±       9.185  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm                                               128  thrpt    5     12819.022 ±     217.179    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5       653.696 ±       3.113  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     13673.299 ±      47.633    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.691 ±       5.772  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        14.454 ±     120.708    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.count                                                         128  thrpt    5        10.000                counts
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.time                                                          128  thrpt    5        16.000                    ms
[info] ArrayOfFloatsBenchmark.writeDslJsonJava                                                             128  thrpt    5     87308.163 ±    1205.486   ops/s
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       507.669 ±      21.974  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5      9150.517 ±     347.002    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5       520.830 ±     686.764  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      9385.489 ±   12349.830    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.009 ±       0.057  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.157 ±       1.035    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count                                                   128  thrpt    5         8.000                counts
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time                                                    128  thrpt    5        23.000                    ms
[info] ArrayOfFloatsBenchmark.writeJacksonScala                                                            128  thrpt    5     78933.388 ±     305.550   ops/s
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       320.534 ±       7.760  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      6390.235 ±     175.933    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       298.332 ±     149.478  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      5947.466 ±    2976.056    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.249 ±       0.875    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5        15.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScala                                                           128  thrpt    5     86551.699 ±    1596.861   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       507.992 ±      15.021  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      9236.789 ±     403.813    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       528.953 ±     697.248  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      9627.645 ±   12800.083    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.152 ±       0.801    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5         8.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5        22.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5     87211.196 ±    4607.730   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5       439.364 ±      21.732  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5      7929.448 ±     599.295    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                           128  thrpt    5       447.547 ±     626.599  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      8096.763 ±   11583.595    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.224 ±       1.285    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5         7.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                          128  thrpt    5        21.000                    ms
[info] ArrayOfInstantsBenchmark.readCirce                                                                  128  thrpt    5     10235.649 ±     375.083   ops/s
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate                                                   128  thrpt    5      1683.848 ±      59.584  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm                                              128  thrpt    5    258890.489 ±    8212.826    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1584.022 ±     576.883  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5    243527.839 ±   88115.074    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.816 ±       5.556  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5       124.517 ±     845.662    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.count                                                        128  thrpt    5        24.000                counts
[info] ArrayOfInstantsBenchmark.readCirce:·gc.time                                                         128  thrpt    5        42.000                    ms
[info] ArrayOfInstantsBenchmark.readJacksonScala                                                           128  thrpt    5     10209.307 ±     475.700   ops/s
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1584.601 ±      48.307  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5    244262.134 ±    8627.100    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1575.159 ±     579.288  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    242988.789 ±   97057.183    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.916 ±       6.892  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       140.037 ±    1053.866    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.count                                                 128  thrpt    5        24.000                counts
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.time                                                  128  thrpt    5        50.000                    ms
[info] ArrayOfInstantsBenchmark.readJsoniterScala                                                          128  thrpt    5    150102.355 ±    1308.340   ops/s
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       401.465 ±      16.931  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      4209.209 ±     192.530    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       381.722 ±     613.721  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      4003.783 ±    6465.313    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.017 ±       0.105  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.175 ±       1.098    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         6.000                counts
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5        15.000                    ms
[info] ArrayOfInstantsBenchmark.readPlayJson                                                               128  thrpt    5      6171.335 ±     314.073   ops/s
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      1630.443 ±     128.623  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5    415712.549 ±   13669.610    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1574.195 ±     584.251  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    401189.152 ±  138343.879    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.949 ±       5.268  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5       242.622 ±    1340.904    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        24.000                counts
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        47.000                    ms
[info] ArrayOfInstantsBenchmark.writeCirce                                                                 128  thrpt    5     20131.455 ±     414.422   ops/s
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate                                                  128  thrpt    5      1572.030 ±      76.763  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm                                             128  thrpt    5    122855.348 ±    3768.914    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1517.666 ±     691.677  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5    118559.813 ±   52011.608    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.775 ±       4.540  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        60.835 ±     357.626    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.count                                                       128  thrpt    5        23.000                counts
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.time                                                        128  thrpt    5        42.000                    ms
[info] ArrayOfInstantsBenchmark.writeJacksonScala                                                          128  thrpt    5     23413.016 ±     274.458   ops/s
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1590.575 ±      61.512  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5    106905.175 ±    3050.828    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1513.048 ±     684.846  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    101688.119 ±   45714.595    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.796 ±       5.067  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        53.636 ±     341.685    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5        23.000                counts
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5        42.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScala                                                         128  thrpt    5    133862.521 ±    2366.880   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       305.357 ±      16.979  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      3589.886 ±     239.972    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       300.457 ±     714.061  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      3537.821 ±    8412.008    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.008 ±       0.072  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.098 ±       0.842    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5         5.000                counts
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5        14.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5    139620.407 ±     313.807   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5         0.003 ±       0.002    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5           ≈ 0                counts
[info] ArrayOfInstantsBenchmark.writePlayJson                                                              128  thrpt    5     23337.321 ±    1058.729   ops/s
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate                                               128  thrpt    5      1627.080 ±      78.163  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    109722.655 ±    3300.616    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1582.276 ±     561.705  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    106715.301 ±   38371.188    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.866 ±       5.122  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        58.588 ±     344.943    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.count                                                    128  thrpt    5        24.000                counts
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.time                                                     128  thrpt    5        42.000                    ms
[info] ArrayOfIntsBenchmark.readCirce                                                                      128  thrpt    5    123269.951 ±    4055.761   ops/s
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate                                                       128  thrpt    5      1758.474 ±     118.662  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                                  128  thrpt    5     22447.409 ±     807.423    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              128  thrpt    5      1719.021 ±     574.036  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         128  thrpt    5     21938.634 ±    6874.669    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          128  thrpt    5         0.770 ±       5.069  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     128  thrpt    5         9.938 ±      65.527    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.count                                                            128  thrpt    5        26.000                counts
[info] ArrayOfIntsBenchmark.readCirce:·gc.time                                                             128  thrpt    5        41.000                    ms
[info] ArrayOfIntsBenchmark.readDslJsonJava                                                                128  thrpt    5    559718.768 ±   20973.354   ops/s
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate                                                 128  thrpt    5       596.679 ±      10.035  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                            128  thrpt    5      1677.638 ±      60.545    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                        128  thrpt    5       585.199 ±     561.362  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      1647.143 ±    1601.985    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.007 ±       0.053  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.021 ±       0.150    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.count                                                      128  thrpt    5         9.000                counts
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.time                                                       128  thrpt    5        30.000                    ms
[info] ArrayOfIntsBenchmark.readJacksonScala                                                               128  thrpt    5    346470.765 ±   19763.903   ops/s
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                                128  thrpt    5       505.136 ±      30.696  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           128  thrpt    5      2294.661 ±     139.550    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                       128  thrpt    5       457.251 ±     688.708  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      2082.633 ±    3206.516    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.012 ±       0.041  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.053 ±       0.190    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.count                                                     128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.time                                                      128  thrpt    5        24.000                    ms
[info] ArrayOfIntsBenchmark.readJsoniterScala                                                              128  thrpt    5    751714.946 ±   43888.793   ops/s
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                               128  thrpt    5       503.850 ±      36.822  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          128  thrpt    5      1054.821 ±      47.374    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       462.787 ±     697.325  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5       970.639 ±    1483.787    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.017 ±       0.088  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.035 ±       0.185    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.count                                                    128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.time                                                     128  thrpt    5        18.000                    ms
[info] ArrayOfIntsBenchmark.readPlayJson                                                                   128  thrpt    5     68755.472 ±    2147.792   ops/s
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                                    128  thrpt    5      2841.510 ±     101.863  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                               128  thrpt    5     65038.920 ±    1089.994    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                           128  thrpt    5      2726.438 ±     522.543  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     62416.665 ±   12932.830    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.062 ±       0.326  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         1.428 ±       7.430    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.count                                                         128  thrpt    5        41.000                counts
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.time                                                          128  thrpt    5        57.000                    ms
[info] ArrayOfIntsBenchmark.writeCirce                                                                     128  thrpt    5    199871.241 ±    2345.081   ops/s
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                      128  thrpt    5      1469.890 ±      48.678  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     11573.625 ±     338.512    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1451.345 ±     707.165  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     11429.426 ±    5636.696    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.712 ±       6.086  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         5.616 ±      48.002    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.count                                                           128  thrpt    5        22.000                counts
[info] ArrayOfIntsBenchmark.writeCirce:·gc.time                                                            128  thrpt    5        36.000                    ms
[info] ArrayOfIntsBenchmark.writeDslJsonJava                                                               128  thrpt    5    652216.445 ±   21007.146   ops/s
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate                                                128  thrpt    5       364.197 ±      23.437  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                           128  thrpt    5       878.688 ±      34.224    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                       128  thrpt    5       376.270 ±     600.155  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5       907.290 ±    1436.424    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.010 ±       0.078  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.024 ±       0.187    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count                                                     128  thrpt    5         6.000                counts
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time                                                      128  thrpt    5        20.000                    ms
[info] ArrayOfIntsBenchmark.writeJacksonScala                                                              128  thrpt    5    649943.442 ±   27031.414   ops/s
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                               128  thrpt    5       497.529 ±      31.479  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      1204.548 ±      36.499    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       459.126 ±     692.086  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1108.748 ±    1634.166    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.020 ±       0.106    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.count                                                    128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.time                                                     128  thrpt    5        22.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScala                                                             128  thrpt    5   1105786.200 ±   19560.269   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       617.516 ±      14.849  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       878.806 ±      25.295    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       595.123 ±     571.965  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       847.266 ±     818.307    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.024 ±       0.096    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count                                                   128  thrpt    5         9.000                counts
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time                                                    128  thrpt    5        25.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc                                                     128  thrpt    5   1177759.454 ±    3616.547   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           128  thrpt    5           ≈ 0                counts
[info] ArrayOfIntsBenchmark.writePlayJson                                                                  128  thrpt    5     33963.990 ±    1360.489   ops/s
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                                   128  thrpt    5      1941.220 ±     115.239  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     89940.471 ±    2167.740    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1848.136 ±     693.554  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     85581.559 ±   29493.633    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.829 ±       6.911  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5        39.057 ±     325.981    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.count                                                        128  thrpt    5        28.000                counts
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.time                                                         128  thrpt    5        44.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readCirce                                                                 128  thrpt    5    129306.140 ±    7163.320   ops/s
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1661.250 ±      69.177  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     20219.025 ±     498.376    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1580.874 ±     565.402  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     19252.029 ±    7368.702    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.787 ±       5.676  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         9.519 ±      68.738    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        24.000                counts
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.time                                                        128  thrpt    5        40.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala                                                          128  thrpt    5    198661.208 ±    9378.011   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1214.509 ±      50.882  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      9619.372 ±     222.818    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1179.643 ±     696.809  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      9337.277 ±    5332.728    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.858 ±       5.843  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         6.724 ±      45.643    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5        18.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5        40.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala                                                         128  thrpt    5    250877.130 ±   12172.811   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      1347.687 ±      82.028  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      8453.718 ±     233.929    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1324.886 ±      10.149  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      8311.913 ±     419.153    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.612 ±       5.181  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         3.795 ±      32.113    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        20.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        32.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readPlayJson                                                              128  thrpt    5     68699.077 ±    2582.335   ops/s
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2773.070 ±     143.077  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     63515.208 ±    1185.763    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2682.964 ±     108.325  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     61454.725 ±    2249.848    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.233 ±       1.875  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         5.397 ±      43.418    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        40.000                counts
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        57.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeCirce                                                                128  thrpt    5    180733.312 ±    7140.931   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1209.286 ±      41.983  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     10530.129 ±     353.434    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1184.516 ±     698.463  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     10321.360 ±    6286.254    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.073 ±       0.384    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        18.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5        24.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala                                                         128  thrpt    5    708690.651 ±   51938.160   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       740.278 ±      63.942  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1643.812 ±      58.266    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       721.144 ±     556.315  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1600.580 ±    1202.191    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.779 ±       6.570  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.698 ±      14.323    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5        11.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        34.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala                                                        128  thrpt    5    705656.907 ±   38837.985   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       558.864 ±      39.142  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      1246.050 ±      49.454    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       594.433 ±     568.314  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1326.688 ±    1284.217    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.010 ±       0.082    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         9.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        24.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    774265.945 ±    3754.274   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson                                                             128  thrpt    5    342992.597 ±   14477.178   ops/s
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5       967.545 ±      55.393  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5      4438.699 ±      81.207    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5       916.813 ±     558.937  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      4204.933 ±    2534.324    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.816 ±       5.647  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         3.764 ±      26.051    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        14.000                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        37.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readCirce                                                            128  thrpt    5     11310.757 ±     383.064   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1438.248 ±      58.420  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5    200075.357 ±    2692.175    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1382.616 ±     573.056  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    192384.855 ±   81710.484    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.819 ±       6.434  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       114.364 ±     898.321    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count                                                  128  thrpt    5        21.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time                                                   128  thrpt    5        43.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala                                                     128  thrpt    5     10744.560 ±     618.586   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1254.457 ±     104.443  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5    183717.133 ±    5904.536    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1179.773 ±     693.333  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5    172693.875 ±   98093.010    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.887 ±       6.072  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       130.532 ±     895.210    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        18.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        40.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala                                                    128  thrpt    5    275662.429 ±    2801.374   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5      1857.657 ±      53.342  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5     10604.294 ±     267.813    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1794.029 ±     705.273  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     10242.115 ±    4074.187    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.662 ±       5.090  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         3.782 ±      29.064    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5        27.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        38.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson                                                         128  thrpt    5      8568.393 ±     163.591   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      1565.760 ±      64.887  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5    287561.429 ±   11407.886    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1574.142 ±     581.713  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    289195.899 ±  110883.364    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.946 ±       7.390  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       174.152 ±    1361.972    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        24.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        50.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeCirce                                                           128  thrpt    5     25618.955 ±    1461.303   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1353.154 ±      83.646  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5     83115.416 ±    1355.409    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1317.642 ±      12.245  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     80950.232 ±    5060.353    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.762 ±       6.026  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        47.820 ±     378.898    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        20.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        40.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala                                                    128  thrpt    5     28510.759 ±     885.370   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1194.371 ±      33.548  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     65926.645 ±    1823.322    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1181.548 ±     692.444  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     65218.566 ±   38220.270    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.808 ±       5.144  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        44.490 ±     282.477    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        18.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        39.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala                                                   128  thrpt    5    625573.667 ±   19697.470   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1167.598 ±      50.325  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      2937.038 ±      77.553    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1191.460 ±     698.042  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      2998.757 ±    1803.958    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.687 ±       4.010  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.725 ±      10.055    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        18.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        35.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    774454.014 ±    4268.928   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         0.036 ±       0.309  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.074 ±       0.627    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson                                                        128  thrpt    5     27772.415 ±     913.958   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1268.465 ±      43.210  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     71870.192 ±    1709.044    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1247.277 ±     560.769  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     70624.427 ±   30123.740    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.845 ±       5.211  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        47.931 ±     296.380    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        19.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        41.000                    ms
[info] ArrayOfLocalDatesBenchmark.readCirce                                                                128  thrpt    5     32303.971 ±    2663.344   ops/s
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1727.965 ±     154.424  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5     84163.634 ±    1744.586    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1716.194 ±     566.142  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     83533.105 ±   22467.468    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.945 ±       4.921  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        46.808 ±     244.399    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.count                                                      128  thrpt    5        26.000                counts
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.time                                                       128  thrpt    5        48.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJacksonScala                                                         128  thrpt    5     35639.402 ±    2855.315   ops/s
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1581.399 ±     141.957  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     69813.816 ±    2000.724    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1583.132 ±     547.417  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     69866.671 ±   22378.375    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.046 ±       0.067  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         2.028 ±       3.015    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        24.000                counts
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        35.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala                                                        128  thrpt    5    472642.051 ±   36405.766   ops/s
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1268.994 ±     122.665  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4224.447 ±     121.621    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1192.457 ±     697.554  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      3969.559 ±    2289.999    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.625 ±       4.451  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         2.098 ±      15.007    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        18.000                counts
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        32.000                    ms
[info] ArrayOfLocalDatesBenchmark.readPlayJson                                                             128  thrpt    5     18410.751 ±     535.574   ops/s
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1858.956 ±      69.805  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    158897.773 ±    3964.427    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1771.916 ±     675.107  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    151526.527 ±   60925.564    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         1.006 ±       6.737  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        86.226 ±     576.961    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        27.000                counts
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        50.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeCirce                                                               128  thrpt    5     55147.146 ±    2169.607   ops/s
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1696.033 ±      68.544  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     48395.209 ±    1339.604    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1651.483 ±      28.811  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     47127.329 ±    2117.817    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.787 ±       4.876  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        22.363 ±     138.062    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        25.000                counts
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        47.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala                                                        128  thrpt    5    158595.087 ±    2470.528   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1925.496 ±      74.608  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     19105.487 ±     483.871    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1848.323 ±     686.355  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     18340.488 ±    6826.799    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.792 ±       6.636  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         7.898 ±      66.228    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5        28.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        48.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala                                                       128  thrpt    5   1145573.057 ±   71235.154   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1270.346 ±      72.360  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1745.076 ±      33.619    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1257.755 ±     577.909  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1727.725 ±     789.062    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.679 ±       4.980  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.911 ±       6.648    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5        19.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5        35.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   1386464.680 ±   26491.451   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson                                                            128  thrpt    5     67786.540 ±    3904.868   ops/s
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1721.455 ±     136.299  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     39962.412 ±     875.738    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1649.314 ±      35.685  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     38295.849 ±    1933.898    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.804 ±       6.307  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        18.930 ±     148.557    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5        25.000                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        41.000                    ms
[info] ArrayOfLocalTimesBenchmark.readCirce                                                                128  thrpt    5     17220.602 ±     823.420   ops/s
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1511.869 ±      58.769  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5    138154.759 ±    4709.556    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1521.140 ±     700.763  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    139004.255 ±   64237.449    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.767 ±       4.044    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.count                                                      128  thrpt    5        23.000                counts
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.time                                                       128  thrpt    5        33.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJacksonScala                                                         128  thrpt    5     17504.537 ±    1008.258   ops/s
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1447.209 ±     117.537  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5    130090.996 ±    3258.654    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1375.357 ±     551.467  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    123645.471 ±   49081.648    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.906 ±       6.814  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        82.079 ±     617.985    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        21.000                counts
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        44.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala                                                        128  thrpt    5    673802.201 ±    9620.922   ops/s
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1815.202 ±      39.688  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4239.545 ±     120.393    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1728.648 ±     558.015  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      4038.284 ±    1361.545    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.637 ±       5.087  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         1.485 ±      11.853    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        26.000                counts
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        39.000                    ms
[info] ArrayOfLocalTimesBenchmark.readPlayJson                                                             128  thrpt    5     12231.960 ±     913.204   ops/s
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1626.976 ±     152.867  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    209302.519 ±    6659.426    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1574.182 ±     567.326  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    202716.579 ±   80190.111    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.916 ±       5.462  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       119.604 ±     720.083    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        24.000                counts
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        47.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeCirce                                                               128  thrpt    5     44883.061 ±    2250.310   ops/s
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1756.769 ±     104.763  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     61594.377 ±    1403.693    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1652.211 ±      34.716  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     57936.756 ±    3011.988    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.783 ±       6.158  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        27.981 ±     220.633    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        25.000                counts
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        41.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala                                                        128  thrpt    5     56256.180 ±    2000.551   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1737.901 ±      39.277  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     48617.947 ±    1306.581    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1711.937 ±     610.010  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     47914.299 ±   18351.424    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.805 ±       6.708  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        22.564 ±     188.109    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5        26.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        42.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala                                                       128  thrpt    5   1339267.000 ±   48771.409   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1257.780 ±      58.141  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1477.865 ±      28.840    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1191.862 ±     700.486  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1401.015 ±     839.483    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.658 ±       4.932  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.784 ±       5.887    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5        18.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5        36.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   1570168.414 ±    3731.855   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson                                                            128  thrpt    5      3667.469 ±     410.698   ops/s
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5       503.367 ±      44.980  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5    216026.188 ±   14023.907    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5       526.642 ±     693.924  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    226822.203 ±  307967.101    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.086 ±       0.567  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        36.086 ±     236.312    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5         8.000                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        27.000                    ms
[info] ArrayOfLongsBenchmark.readCirce                                                                     128  thrpt    5    123897.652 ±    4584.793   ops/s
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      1966.813 ±     127.128  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     24978.779 ±     744.861    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1918.545 ±     558.990  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     24373.806 ±    7431.897    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.774 ±       6.267  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         9.970 ±      80.749    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        29.000                counts
[info] ArrayOfLongsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        46.000                    ms
[info] ArrayOfLongsBenchmark.readDslJsonJava                                                               128  thrpt    5    379902.964 ±     720.165   ops/s
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate                                                128  thrpt    5       784.994 ±      26.545  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                           128  thrpt    5      3251.750 ±     109.730    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                       128  thrpt    5       782.892 ±     687.941  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      3242.995 ±    2848.625    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.843 ±       7.104  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         3.489 ±      29.407    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.count                                                     128  thrpt    5        12.000                counts
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.time                                                      128  thrpt    5        32.000                    ms
[info] ArrayOfLongsBenchmark.readJacksonScala                                                              128  thrpt    5    255341.834 ±   10960.482   ops/s
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5       566.885 ±      21.381  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      3493.831 ±     172.510    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       589.492 ±     563.418  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      3634.607 ±    3493.856    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.029 ±       0.134  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.179 ±       0.824    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5         9.000                counts
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        32.000                    ms
[info] ArrayOfLongsBenchmark.readJsoniterScala                                                             128  thrpt    5    514493.266 ±    9015.180   ops/s
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       665.901 ±      10.935  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5      2036.786 ±      30.295    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       662.267 ±       5.619  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      2025.687 ±      37.592    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.533 ±       4.411  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.628 ±      13.469    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        10.000                counts
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        29.000                    ms
[info] ArrayOfLongsBenchmark.readPlayJson                                                                  128  thrpt    5     72023.013 ±    2642.173   ops/s
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      2895.249 ±     148.770  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     63256.089 ±    1065.208    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2728.449 ±     609.440  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     59598.724 ±   11765.819    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.046 ±       0.183  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         1.005 ±       4.048    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        41.000                counts
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        55.000                    ms
[info] ArrayOfLongsBenchmark.writeCirce                                                                    128  thrpt    5    135932.977 ±    1218.015   ops/s
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      1198.456 ±      42.241  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5     13874.175 ±     512.101    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1183.175 ±     695.753  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     13699.561 ±    8122.793    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.017 ±       0.105  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         0.193 ±       1.214    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        18.000                counts
[info] ArrayOfLongsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        24.000                    ms
[info] ArrayOfLongsBenchmark.writeDslJsonJava                                                              128  thrpt    5    207567.978 ±    5785.667   ops/s
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       166.784 ±      13.263  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5      1264.569 ±     115.239    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5       167.495 ±     598.969  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1274.916 ±    4568.352    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.017 ±       0.092  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.131 ±       0.701    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count                                                    128  thrpt    5         3.000                counts
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time                                                     128  thrpt    5        10.000                    ms
[info] ArrayOfLongsBenchmark.writeJacksonScala                                                             128  thrpt    5    421490.915 ±   13659.361   ops/s
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       429.440 ±      29.621  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      1603.221 ±      78.541    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       455.565 ±     685.351  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      1698.689 ±    2527.688    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.733 ±       6.176  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         2.726 ±      22.970    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5         7.000                counts
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        14.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScala                                                            128  thrpt    5    463427.998 ±    5094.786   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       372.908 ±      19.691  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1266.344 ±      76.284    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       381.058 ±     613.363  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1294.935 ±    2098.773    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.021 ±       0.113  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.071 ±       0.386    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         6.000                counts
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        16.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5    501496.752 ±    1510.187   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfLongsBenchmark.writePlayJson                                                                 128  thrpt    5     28999.777 ±    1045.012   ops/s
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      1591.157 ±      75.787  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     86344.771 ±    2016.268    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1513.756 ±     683.695  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     82197.845 ±   39021.864    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.816 ±       4.715  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        44.668 ±     259.053    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        23.000                counts
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        42.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readCirce                                                           128  thrpt    5      8592.737 ±     363.481   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1245.983 ±      57.872  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5    228184.399 ±    6332.892    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1185.798 ±     696.565  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    217300.239 ±  131479.526    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.837 ±       5.039  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       155.072 ±     938.145    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count                                                 128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time                                                  128  thrpt    5        42.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala                                                    128  thrpt    5      8033.510 ±     330.908   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1074.856 ±      39.043  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5    210547.548 ±    6165.206    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1048.578 ±     549.942  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5    205338.392 ±  104957.039    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.904 ±       6.735  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       176.421 ±    1310.961    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5        16.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5        44.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala                                                   128  thrpt    5    191542.022 ±    3231.109   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1676.341 ±      59.546  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     13772.530 ±     269.642    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1593.217 ±     553.197  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     13088.047 ±    4458.203    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.625 ±       4.893  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         5.156 ±      40.416    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        24.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        38.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson                                                        128  thrpt    5      8043.928 ±     399.763   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      1367.358 ±      60.760  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5    267451.764 ±    5546.302    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1375.876 ±     544.993  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    268994.630 ±   99105.625    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.962 ±       6.888  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       187.693 ±    1346.075    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count                                              128  thrpt    5        21.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        51.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce                                                          128  thrpt    5     20912.032 ±    1358.435   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5      1187.237 ±      52.253  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     89353.080 ±    2873.552    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1120.616 ±     696.236  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     84229.278 ±   48703.239    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.758 ±       5.229  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        56.612 ±     387.768    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count                                                128  thrpt    5        17.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time                                                 128  thrpt    5        35.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala                                                   128  thrpt    5     24505.387 ±    1182.963   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1089.838 ±      53.533  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     69982.900 ±    2295.854    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1115.435 ±     685.439  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     71599.471 ±   43037.963    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.812 ±       6.905  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        52.400 ±     445.373    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5        17.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5        40.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala                                                  128  thrpt    5    375919.148 ±    4438.702   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       878.744 ±      26.956  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      3678.543 ±      89.771    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       860.829 ±     696.498  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      3603.206 ±    2907.595    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.671 ±       5.597  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         2.810 ±      23.449    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5        13.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5        28.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5    365909.121 ±    3254.476   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson                                                       128  thrpt    5     24558.972 ±     945.091   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5      1188.792 ±      59.636  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     76200.251 ±    1874.106    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1180.694 ±     691.707  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     75739.401 ±   45955.760    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.833 ±       5.120  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        53.444 ±     327.438    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count                                             128  thrpt    5        18.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time                                              128  thrpt    5        40.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readCirce                                                               128  thrpt    5     13412.525 ±     248.631   ops/s
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1291.905 ±      35.952  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5    151570.192 ±    4085.934    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1251.696 ±     570.385  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    146852.424 ±   66923.451    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.829 ±       6.185  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        97.612 ±     729.074    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.count                                                     128  thrpt    5        19.000                counts
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.time                                                      128  thrpt    5        41.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala                                                        128  thrpt    5     13225.935 ±     886.166   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1169.778 ±      91.181  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5    139172.226 ±    1621.383    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1114.509 ±     691.811  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    132747.234 ±   86394.647    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.883 ±       5.404  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       106.930 ±     658.741    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5        17.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5        39.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala                                                       128  thrpt    5    291708.153 ±    4722.323   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1749.585 ±      65.331  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      9438.714 ±     257.195    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1727.812 ±     558.038  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      9321.556 ±    3019.466    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.587 ±       4.745  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         3.187 ±      25.771    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5        26.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        39.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readPlayJson                                                            128  thrpt    5     12695.880 ±     372.666   ops/s
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1585.025 ±      53.549  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5    196461.347 ±    4512.081    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1520.866 ±     715.233  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    188568.149 ±   90720.352    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.261 ±       1.549  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        32.573 ±     194.449    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        23.000                counts
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        37.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeCirce                                                              128  thrpt    5     32260.314 ±    1255.244   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1395.098 ±      30.224  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     68052.109 ±    2487.681    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1385.818 ±     561.279  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     67575.536 ±   26173.889    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.762 ±       5.768  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        36.896 ±     278.640    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        21.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        39.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala                                                       128  thrpt    5     79078.762 ±    3385.351   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1993.537 ±     115.225  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     39667.079 ±     785.752    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1918.543 ±     526.039  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     38188.707 ±   11121.859    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.766 ±       6.462  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        15.542 ±     131.164    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5        29.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        42.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala                                                      128  thrpt    5    615353.695 ±   31424.605   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       868.591 ±      46.741  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      2221.338 ±      49.026    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       794.367 ±     699.848  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      2033.596 ±    1834.626    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.616 ±       5.127  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.561 ±      12.984    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5        12.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5        27.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5    738883.518 ±    2371.388   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson                                                           128  thrpt    5     70523.959 ±    1917.146   ops/s
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      2046.475 ±     102.816  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     45664.884 ±    1166.781    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      2004.145 ±      86.088  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     44721.532 ±    1384.104    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.092 ±       0.655  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         2.062 ±      14.789    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        30.000                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        42.000                    ms
[info] ArrayOfPeriodsBenchmark.readCirce                                                                   128  thrpt    5     16812.235 ±    1143.735   ops/s
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5       892.089 ±      34.891  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     83510.995 ±    2985.154    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5       858.364 ±     693.534  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     80531.574 ±   68609.232    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.774 ±       6.489  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        74.207 ±     622.293    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        13.000                counts
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        35.000                    ms
[info] ArrayOfPeriodsBenchmark.readJacksonScala                                                            128  thrpt    5     16989.351 ±     479.992   ops/s
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5       749.742 ±      13.270  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     69443.226 ±    1900.090    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       723.546 ±     569.605  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     67038.025 ±   53397.389    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.833 ±       6.996  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        77.442 ±     650.166    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        11.000                counts
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        35.000                    ms
[info] ArrayOfPeriodsBenchmark.readJsoniterScala                                                           128  thrpt    5    121266.088 ±    2572.323   ops/s
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       316.830 ±      27.421  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      4112.040 ±     425.759    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       300.507 ±     714.009  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      3908.031 ±    9313.051    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.162 ±       0.570    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         5.000                counts
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        15.000                    ms
[info] ArrayOfPeriodsBenchmark.readPlayJson                                                                128  thrpt    5     14392.010 ±     705.382   ops/s
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1114.515 ±      70.070  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5    121852.419 ±    1718.631    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1049.106 ±     574.578  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    114659.016 ±   60534.022    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.924 ±       7.173  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5       100.180 ±     777.539    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        16.000                counts
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        45.000                    ms
[info] ArrayOfPeriodsBenchmark.writeCirce                                                                  128  thrpt    5     47076.436 ±    1575.405   ops/s
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1453.166 ±      76.765  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     48574.427 ±    1763.032    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1384.524 ±     561.196  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     46286.034 ±   18963.929    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.729 ±       6.140  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5        24.211 ±     203.935    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        21.000                counts
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        38.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJacksonScala                                                           128  thrpt    5     77173.962 ±    1510.715   ops/s
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1644.894 ±      61.668  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     33540.250 ±     782.546    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1589.822 ±     551.865  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     32421.742 ±   11418.082    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.054 ±       0.263  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.105 ±       5.367    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5        24.000                counts
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        33.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala                                                          128  thrpt    5    321755.024 ±    7369.227   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       634.317 ±      17.558  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      3102.262 ±      72.149    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       594.731 ±     570.300  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      2909.617 ±    2801.814    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.012 ±       0.070  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.056 ±       0.341    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         9.000                counts
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        25.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    360578.900 ±     686.788   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson                                                               128  thrpt    5     65145.769 ±    2714.418   ops/s
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      1503.754 ±      53.777  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     36326.720 ±     535.056    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1446.665 ±     689.131  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     34960.117 ±   17107.881    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.804 ±       4.990  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        19.517 ±     121.849    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        22.000                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        40.000                    ms
[info] ArrayOfShortsBenchmark.readCirce                                                                    128  thrpt    5    143890.110 ±     979.790   ops/s
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate                                                     128  thrpt    5      1885.990 ±      61.330  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm                                                128  thrpt    5     20627.391 ±     636.488    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1798.111 ±     709.363  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     19668.179 ±    7850.565    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.067 ±       0.280  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         0.729 ±       3.066    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.count                                                          128  thrpt    5        27.000                counts
[info] ArrayOfShortsBenchmark.readCirce:·gc.time                                                           128  thrpt    5        37.000                    ms
[info] ArrayOfShortsBenchmark.readDslJsonJava                                                              128  thrpt    5    847988.111 ±   32656.383   ops/s
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       485.225 ±      31.620  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5       900.404 ±      41.668    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5       520.051 ±     685.670  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5       963.849 ±    1257.027    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.018 ±       0.085  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.032 ±       0.157    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.count                                                    128  thrpt    5         8.000                counts
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.time                                                     128  thrpt    5        26.000                    ms
[info] ArrayOfShortsBenchmark.readJacksonScala                                                             128  thrpt    5    391575.510 ±   19376.538   ops/s
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate                                              128  thrpt    5       403.032 ±      30.864  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      1619.515 ±      78.278    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       378.111 ±     603.566  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      1518.559 ±    2402.875    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.033 ±       0.175    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.count                                                   128  thrpt    5         6.000                counts
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.time                                                    128  thrpt    5        21.000                    ms
[info] ArrayOfShortsBenchmark.readJsoniterScala                                                            128  thrpt    5   1150938.636 ±   15361.546   ops/s
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       409.633 ±      14.477  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       559.939 ±      19.004    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       381.260 ±     437.221  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       521.287 ±     600.590    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.006 ±       0.049    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         6.000                counts
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5        16.000                    ms
[info] ArrayOfShortsBenchmark.readPlayJson                                                                 128  thrpt    5     79073.403 ±    3564.890   ops/s
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      3195.850 ±     192.608  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     63601.600 ±    1525.601    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      3070.509 ±     619.131  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     61104.134 ±   11488.100    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.062 ±       0.234  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         1.238 ±       4.591    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        46.000                counts
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        63.000                    ms
[info] ArrayOfShortsBenchmark.writeCirce                                                                   128  thrpt    5    269085.911 ±   14294.169   ops/s
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate                                                    128  thrpt    5      1640.897 ±      94.002  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm                                               128  thrpt    5      9596.539 ±     147.881    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1591.759 ±     535.210  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5      9313.299 ±    3295.678    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.073 ±       0.258    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.count                                                         128  thrpt    5        24.000                counts
[info] ArrayOfShortsBenchmark.writeCirce:·gc.time                                                          128  thrpt    5        33.000                    ms
[info] ArrayOfShortsBenchmark.writeDslJsonJava                                                             128  thrpt    5   1224708.403 ±   44075.874   ops/s
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       429.629 ±      17.296  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5       552.049 ±      20.427    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5       389.723 ±     559.235  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       501.216 ±     726.984    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.008 ±       0.041  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.010 ±       0.053    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count                                                   128  thrpt    5         6.000                counts
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time                                                    128  thrpt    5        20.000                    ms
[info] ArrayOfShortsBenchmark.writeJacksonScala                                                            128  thrpt    5   1548178.773 ±   33893.795   ops/s
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       931.317 ±      22.557  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5       946.682 ±      16.426    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       853.105 ±     697.976  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       867.303 ±     711.896    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.749 ±       5.159  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.763 ±       5.251    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5        13.000                counts
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5        32.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScala                                                           128  thrpt    5   1891336.202 ±   85383.605   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       662.747 ±      30.409  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       551.436 ±       8.689    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       661.953 ±       4.816  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       550.838 ±      27.422    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.525 ±       4.383  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.435 ±       3.629    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5        10.000                counts
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5        27.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5   2048445.756 ±    6992.887   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfShortsBenchmark.writePlayJson                                                                128  thrpt    5     41471.500 ±    2153.699   ops/s
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate                                                 128  thrpt    5      2072.287 ±     133.099  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     78623.350 ±    1400.440    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1983.838 ±     886.551  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     75257.672 ±   32803.012    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.812 ±       6.901  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        31.510 ±     267.937    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.count                                                      128  thrpt    5        30.000                counts
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.time                                                       128  thrpt    5        45.000                    ms
[info] ArrayOfUUIDsBenchmark.readCirce                                                                     128  thrpt    5     13699.497 ±     281.695   ops/s
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      1691.488 ±      39.918  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5    194305.264 ±    4980.830    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1651.039 ±      28.557  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5    189662.014 ±    6063.697    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.791 ±       4.903  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5        90.864 ±     564.748    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        25.000                counts
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        43.000                    ms
[info] ArrayOfUUIDsBenchmark.readJacksonScala                                                              128  thrpt    5     98449.496 ±    2416.926   ops/s
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1322.801 ±      32.586  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5     21141.844 ±     361.341    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1311.922 ±      14.223  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     20968.381 ±     489.458    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.858 ±       6.805  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        13.619 ±     107.972    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        20.000                counts
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        41.000                    ms
[info] ArrayOfUUIDsBenchmark.readJsoniterScala                                                             128  thrpt    5    241235.342 ±   11557.442   ops/s
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       806.410 ±      45.266  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5      5260.071 ±     143.698    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       795.246 ±     698.906  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      5182.525 ±    4440.640    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.625 ±       4.108  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         4.124 ±      27.238    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        12.000                counts
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        29.000                    ms
[info] ArrayOfUUIDsBenchmark.readPlayJson                                                                  128  thrpt    5     13506.633 ±     375.812   ops/s
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      2058.235 ±     102.692  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5    239744.634 ±    6767.921    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2043.631 ±     583.584  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5    238026.012 ±   65898.365    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.929 ±       7.084  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5       109.236 ±     834.726    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        31.000                counts
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        51.000                    ms
[info] ArrayOfUUIDsBenchmark.writeCirce                                                                    128  thrpt    5     32666.872 ±    1451.848   ops/s
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      2737.577 ±     132.576  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5    131882.772 ±    1026.866    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      2605.164 ±     515.926  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5    125541.227 ±   27287.215    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.075 ±       0.426  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         3.634 ±      20.713    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        39.000                counts
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        52.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJacksonScala                                                             128  thrpt    5    106057.755 ±    1568.269   ops/s
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1502.653 ±      61.363  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5     22295.770 ±     734.450    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1445.674 ±     704.694  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     21448.504 ±   10367.557    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.774 ±       6.490  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        11.518 ±      96.517    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5        22.000                counts
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        41.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala                                                            128  thrpt    5    176032.506 ±    7689.183   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       579.228 ±      36.064  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      5178.247 ±     190.515    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       529.198 ±     698.760  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      4720.440 ±    6112.898    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.148 ±       0.600    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         8.000                counts
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        21.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5    194218.025 ±     698.312   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.003 ±       0.002    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson                                                                 128  thrpt    5     46547.243 ±    1053.925   ops/s
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      3297.508 ±      88.099  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5    111482.851 ±    1292.218    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      3150.322 ±     737.174  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5    106500.594 ±   24277.689    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.042 ±       0.080  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         1.409 ±       2.719    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        47.000                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        64.000                    ms
[info] ArrayOfYearMonthsBenchmark.readCirce                                                                128  thrpt    5     25776.191 ±     959.289   ops/s
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1384.560 ±      64.360  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5     84530.016 ±    2126.968    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1318.475 ±      15.785  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     80500.056 ±    2194.691    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.795 ±       6.489  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        48.206 ±     393.240    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.count                                                      128  thrpt    5        20.000                counts
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.time                                                       128  thrpt    5        38.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJacksonScala                                                         128  thrpt    5     29251.973 ±    2083.775   ops/s
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1202.945 ±      72.816  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     64720.433 ±    1372.621    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1178.445 ±     685.099  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     63358.057 ±   35295.172    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.895 ±       5.370  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        48.067 ±     289.533    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        18.000                counts
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        44.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala                                                        128  thrpt    5    622979.314 ±   27179.327   ops/s
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1681.856 ±      76.718  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4248.407 ±      50.441    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1594.020 ±     551.708  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      4025.471 ±    1334.974    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.604 ±       4.359  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         1.526 ±      11.020    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        24.000                counts
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        38.000                    ms
[info] ArrayOfYearMonthsBenchmark.readPlayJson                                                             128  thrpt    5     22991.916 ±    1030.030   ops/s
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1698.313 ±      97.196  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    116233.516 ±    2776.109    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1653.346 ±      66.989  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    113167.382 ±    5884.143    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.223 ±       1.742  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        15.198 ±     118.710    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        25.000                counts
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        40.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeCirce                                                               128  thrpt    5     71893.068 ±    1303.922   ops/s
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1914.993 ±      61.657  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     41916.746 ±    1331.617    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1853.412 ±     695.300  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     40574.787 ±   15493.884    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.795 ±       6.312  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        17.351 ±     137.663    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        28.000                counts
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        42.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala                                                        128  thrpt    5    179962.668 ±   10626.006   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      2019.589 ±      86.873  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     17661.696 ±     351.380    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1917.245 ±     524.353  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     16760.115 ±    4133.401    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.749 ±       6.363  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         6.451 ±      54.765    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5        29.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        43.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala                                                       128  thrpt    5   1495545.621 ±   79450.070   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1281.453 ±      75.973  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1348.286 ±      23.633    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1257.870 ±     574.932  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1324.348 ±     631.380    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.604 ±       4.889  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.641 ±       5.195    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5        19.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5        35.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   1767930.883 ±    8236.789   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson                                                            128  thrpt    5    152167.328 ±   12375.217   ops/s
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1979.519 ±     196.847  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     20467.985 ±     491.041    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space                           128  thrpt    5         0.003 ±       0.026  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm                      128  thrpt    5         0.032 ±       0.276    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.Metaspace                                        128  thrpt    5         0.009 ±       0.075  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.Metaspace.norm                                   128  thrpt    5         0.094 ±       0.805    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1913.789 ±     587.134  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     19803.911 ±    6638.611    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen                                       128  thrpt    5         0.282 ±       2.428  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm                                  128  thrpt    5         3.029 ±      26.082    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.883 ±       7.468  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         9.479 ±      80.243    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5        31.000                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        75.000                    ms
[info] ArrayOfYearsBenchmark.readJacksonScala                                                              128  thrpt    5     41389.299 ±    1823.350   ops/s
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1534.421 ±      89.940  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5     58344.175 ±    3251.728    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1508.678 ±     694.493  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     57353.353 ±   25945.685    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.879 ±       7.341  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        33.730 ±     281.924    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        23.000                counts
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        45.000                    ms
[info] ArrayOfYearsBenchmark.readJsoniterScala                                                             128  thrpt    5    794125.973 ±   32976.505   ops/s
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5      1605.180 ±      54.813  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5      3180.940 ±     102.620    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1526.803 ±     696.780  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      3026.036 ±    1398.543    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.620 ±       4.300  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.224 ±       8.491    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        23.000                counts
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        35.000                    ms
[info] ArrayOfYearsBenchmark.readPlayJson                                                                  128  thrpt    5     31345.590 ±    3520.624   ops/s
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      2231.024 ±     221.408  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5    112014.017 ±    3114.223    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2197.477 ±     704.581  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5    110266.693 ±   29756.495    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.325 ±       1.683  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5        16.433 ±      85.329    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        33.000                counts
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        50.000                    ms
[info] ArrayOfYearsBenchmark.writeJacksonScala                                                             128  thrpt    5    315531.354 ±    4125.571   ops/s
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1543.039 ±      35.374  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      7695.699 ±     198.123    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1453.789 ±     699.227  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      7249.851 ±    3460.150    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.021 ±       0.178    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5        22.000                counts
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        30.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScala                                                            128  thrpt    5   1938287.149 ±   44314.511   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5      1166.885 ±      30.889  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       947.381 ±      10.739    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1123.868 ±     699.101  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       912.974 ±     583.253    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.641 ±       3.858  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.521 ±       3.137    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5        17.000                counts
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5        33.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5   2244396.637 ±   47835.825   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5         0.547 ±       4.711  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.388 ±       3.336    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearsBenchmark.writePlayJson                                                                 128  thrpt    5    244019.040 ±   10095.021   ops/s
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      1633.188 ±      36.567  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     10533.570 ±     264.332    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1591.481 ±     572.390  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     10269.083 ±    3902.171    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.096 ±       0.563  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.613 ±       3.600    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        24.000                counts
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        36.000                    ms
[info] ArrayOfZoneIdsBenchmark.readCirce                                                                   128  thrpt    5     72670.685 ±    1836.906   ops/s
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1610.568 ±      70.311  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     34876.331 ±    1034.506    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1513.999 ±     673.617  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     32795.187 ±   14944.935    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.833 ±       5.223  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        18.104 ±     113.663    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        23.000                counts
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        41.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJacksonScala                                                            128  thrpt    5     86069.777 ±    2933.648   ops/s
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1129.068 ±      45.897  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     20644.833 ±     373.281    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1046.668 ±     570.414  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     19146.956 ±   10744.588    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.895 ±       7.483  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        16.462 ±     137.649    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        16.000                counts
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        38.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala                                                           128  thrpt    5     97710.826 ±    1714.434   ops/s
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5      1211.425 ±      48.603  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5     19509.483 ±     553.920    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1189.959 ±     697.242  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     19161.765 ±   11157.630    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.658 ±       5.050  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        10.615 ±      81.464    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5        18.000                counts
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        33.000                    ms
[info] ArrayOfZoneIdsBenchmark.readPlayJson                                                                128  thrpt    5     44860.292 ±    2601.032   ops/s
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      2105.719 ±     104.358  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     73873.423 ±    3009.436    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2041.703 ±     645.992  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     71622.764 ±   22195.478    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.978 ±       7.934  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        35.215 ±     286.077    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        31.000                counts
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        50.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeCirce                                                                  128  thrpt    5    112075.843 ±    1761.677   ops/s
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1077.517 ±      38.348  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     15130.105 ±     387.393    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1051.478 ±     555.934  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     14766.737 ±    7887.827    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.824 ±       6.875  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5        11.560 ±      96.389    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        16.000                counts
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        36.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala                                                           128  thrpt    5    337630.498 ±    5547.768   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       515.337 ±      15.230  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      2402.081 ±     100.641    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       523.219 ±     689.447  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      2440.387 ±    3233.715    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.058 ±       0.336    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         8.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        26.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala                                                          128  thrpt    5    634253.741 ±   40327.648   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       808.708 ±      62.847  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      2006.523 ±      69.992    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       794.250 ±     694.565  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1971.401 ±    1736.667    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.695 ±       5.086  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.720 ±      12.613    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5        12.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        30.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    715442.053 ±   35324.019   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson                                                               128  thrpt    5    250058.587 ±    4384.911   ops/s
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5       823.831 ±      14.792  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5      5184.516 ±     144.910    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5       788.822 ±     696.771  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      4967.861 ±    4468.925    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.845 ±       6.788  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         5.325 ±      42.799    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        12.000                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        34.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readCirce                                                               128  thrpt    5    122544.565 ±    1959.715   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1727.178 ±      67.048  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5     22180.193 ±     620.596    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1647.054 ±      34.576  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     21151.556 ±     334.833    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.787 ±       6.199  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        10.112 ±      79.646    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        25.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time                                                      128  thrpt    5        42.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala                                                        128  thrpt    5    183680.679 ±    7309.076   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1120.199 ±      41.107  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5      9597.113 ±     206.811    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1050.610 ±     572.192  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      9010.726 ±    5276.253    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.847 ±       7.159  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         7.371 ±      62.318    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5        16.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5        37.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala                                                       128  thrpt    5    514320.949 ±   12104.439   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       344.639 ±       7.692  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1054.497 ±      20.133    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       315.242 ±     127.956  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       964.947 ±     406.598    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         5.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        13.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson                                                            128  thrpt    5     68504.303 ±    2647.005   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      2760.172 ±     125.964  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     63398.720 ±    1463.026    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2682.112 ±     111.106  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     61610.722 ±    3478.608    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.150 ±       1.026  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         3.459 ±      23.675    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        40.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        58.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeCirce                                                              128  thrpt    5    178829.693 ±    6339.099   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1166.009 ±      32.216  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     10261.432 ±     244.783    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1119.898 ±     691.821  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      9853.904 ±    6031.605    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.754 ±       4.803  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         6.591 ±      41.982    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        17.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        36.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala                                                       128  thrpt    5    540223.672 ±   33082.025   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5       548.961 ±      28.736  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1598.793 ±      68.454    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       523.940 ±     689.994  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1530.776 ±    2068.772    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.036 ±       0.128    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         8.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        25.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala                                                      128  thrpt    5   1137611.577 ±   49573.232   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       872.670 ±      48.832  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      1207.201 ±      35.763    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       859.622 ±     697.582  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1190.370 ±     988.873    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.612 ±       5.181  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.842 ±       7.125    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5        13.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5        30.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5   1275612.170 ±    3887.544   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson                                                           128  thrpt    5    351361.480 ±   13548.254   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5       983.641 ±      36.232  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5      4405.408 ±      52.104    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5       916.228 ±     562.565  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      4104.276 ±    2536.817    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.799 ±       5.652  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         3.577 ±      25.310    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        14.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        36.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readCirce                                                            128  thrpt    5       597.236 ±      28.185   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1278.761 ±      22.925  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5   3368131.089 ±  105606.231    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1235.022 ±     567.646  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5   3254729.297 ± 1558387.388    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         1.172 ±       8.924  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5      3060.012 ±   23296.514    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count                                                  128  thrpt    5        19.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time                                                   128  thrpt    5        43.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala                                                     128  thrpt    5       598.165 ±      18.904   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1271.264 ±      33.137  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5   3343574.432 ±   65412.108    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1236.316 ±     564.781  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5   3249599.876 ± 1412705.250    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         1.078 ±       8.324  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5      2820.790 ±   21778.933    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        19.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        47.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala                                                    128  thrpt    5     48935.426 ±    2375.082   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       819.939 ±      49.251  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5     26367.719 ±     623.312    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       790.208 ±     699.733  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     25377.589 ±   21660.220    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.024 ±       8.595  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5        32.563 ±     273.114    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5        12.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        34.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson                                                         128  thrpt    5       577.033 ±      28.710   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      1265.162 ±      60.591  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5   3449349.815 ±   90165.232    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1169.334 ±     704.218  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5   3187994.282 ± 1914470.923    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         1.157 ±       7.979  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5      3130.678 ±   21470.340    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        18.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        47.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeCirce                                                           128  thrpt    5     14341.153 ±     262.368   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1136.440 ±      37.405  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5    124693.011 ±    3921.773    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1105.908 ±     677.787  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    121388.111 ±   75791.812    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         1.153 ±       9.796  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       127.419 ±    1082.390    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        17.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        41.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala                                                    128  thrpt    5     18847.939 ±    1071.860   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1142.874 ±      76.247  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     95424.401 ±    2668.954    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1103.538 ±     683.163  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     92254.773 ±   60412.768    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         1.174 ±       8.386  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       100.221 ±     719.320    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        17.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        42.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala                                                   128  thrpt    5    215397.037 ±    6485.390   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       782.114 ±      42.145  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      5713.990 ±     195.432    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       789.841 ±     689.453  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      5766.954 ±    4949.045    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.987 ±       7.624  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         7.280 ±      56.329    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        12.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        36.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    247217.324 ±   22684.405   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         0.308 ±       2.303  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         2.037 ±      15.312    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson                                                        128  thrpt    5     17879.591 ±     677.845   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1154.935 ±      53.692  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5    101650.049 ±    1714.786    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1107.034 ±     687.137  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     97390.549 ±   58919.712    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         1.108 ±       7.301  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        97.033 ±     640.413    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        17.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        42.000                    ms
[info] BitSetBenchmark.readJsoniterScala                                                                   128  thrpt    5   1550543.796 ±   11002.993   ops/s
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                                    128  thrpt    5        64.447 ±      11.241  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                               128  thrpt    5        65.409 ±      11.773    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                           128  thrpt    5        51.172 ±     440.608  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5        52.060 ±     448.256    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.149 ±       1.282  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.152 ±       1.305    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.count                                                         128  thrpt    5         1.000                counts
[info] BitSetBenchmark.readJsoniterScala:·gc.time                                                          128  thrpt    5         3.000                    ms
[info] BitSetBenchmark.readPlayJson                                                                        128  thrpt    5     80101.400 ±    2335.743   ops/s
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate                                                         128  thrpt    5      3422.678 ±      96.371  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                                    128  thrpt    5     67243.266 ±    1739.207    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                128  thrpt    5      3299.804 ±     544.155  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                           128  thrpt    5     64830.564 ±   10819.219    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                            128  thrpt    5         0.058 ±       0.250  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                       128  thrpt    5         1.144 ±       4.872    B/op
[info] BitSetBenchmark.readPlayJson:·gc.count                                                              128  thrpt    5        49.000                counts
[info] BitSetBenchmark.readPlayJson:·gc.time                                                               128  thrpt    5        69.000                    ms
[info] BitSetBenchmark.writeJacksonScala                                                                   128  thrpt    5   1847363.439 ±   21822.880   ops/s
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                                    128  thrpt    5       995.586 ±      11.612  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                               128  thrpt    5       847.950 ±      10.621    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                           128  thrpt    5       917.086 ±     568.884  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5       781.176 ±     486.565    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.812 ±       6.594  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.693 ±       5.626    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.count                                                         128  thrpt    5        14.000                counts
[info] BitSetBenchmark.writeJacksonScala:·gc.time                                                          128  thrpt    5        35.000                    ms
[info] BitSetBenchmark.writeJsoniterScala                                                                  128  thrpt    5   2227112.112 ±  124643.848   ops/s
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                                   128  thrpt    5       638.316 ±      32.393  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                              128  thrpt    5       451.046 ±      13.537    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                          128  thrpt    5       595.604 ±     570.759  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5       421.479 ±     411.160    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.012 ±       0.072  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.009 ±       0.051    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.count                                                        128  thrpt    5         9.000                counts
[info] BitSetBenchmark.writeJsoniterScala:·gc.time                                                         128  thrpt    5        25.000                    ms
[info] BitSetBenchmark.writeJsoniterScalaPrealloc                                                          128  thrpt    5   2380872.492 ±   69898.662   ops/s
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                           128  thrpt    5        26.878 ±      22.448  MB/sec
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                      128  thrpt    5        17.783 ±      15.347    B/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                                  128  thrpt    5        51.160 ±     440.500  MB/sec
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5        34.165 ±     294.172    B/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                128  thrpt    5         1.000                counts
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.time                                                 128  thrpt    5         3.000                    ms
[info] BitSetBenchmark.writePlayJson                                                                       128  thrpt    5     51265.323 ±    1612.794   ops/s
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate                                                        128  thrpt    5      2212.139 ±      90.052  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                                   128  thrpt    5     67895.327 ±    1831.442    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                               128  thrpt    5      2139.352 ±     732.499  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                          128  thrpt    5     65640.917 ±   21228.649    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                           128  thrpt    5         0.112 ±       0.658  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                      128  thrpt    5         3.480 ±      20.478    B/op
[info] BitSetBenchmark.writePlayJson:·gc.count                                                             128  thrpt    5        32.000                counts
[info] BitSetBenchmark.writePlayJson:·gc.time                                                              128  thrpt    5        45.000                    ms
[info] ExtractFieldsBenchmark.readCirce                                                                    N/A  thrpt    5    860697.613 ±   43325.745   ops/s
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate                                                     N/A  thrpt    5      2794.008 ±     120.067  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm                                                N/A  thrpt    5      5108.108 ±      54.590    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      2733.942 ±     485.392  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5      4997.997 ±     820.271    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.142 ±       0.965  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.257 ±       1.741    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.count                                                          N/A  thrpt    5        41.000                counts
[info] ExtractFieldsBenchmark.readCirce:·gc.time                                                           N/A  thrpt    5        55.000                    ms
[info] ExtractFieldsBenchmark.readDslJsonJava                                                              N/A  thrpt    5   4995282.913 ±  449965.623   ops/s
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate                                               N/A  thrpt    5       312.738 ±      21.607  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          N/A  thrpt    5        98.534 ±       3.198    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       311.243 ±     119.325  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5        98.184 ±      42.122    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.019 ±       0.048  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.006 ±       0.015    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.count                                                    N/A  thrpt    5         5.000                counts
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.time                                                     N/A  thrpt    5        16.000                    ms
[info] ExtractFieldsBenchmark.readJacksonScala                                                             N/A  thrpt    5   1006090.768 ±   35161.828   ops/s
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate                                              N/A  thrpt    5      1184.335 ±      36.285  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         N/A  thrpt    5      1852.583 ±      42.194    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5      1110.708 ±     689.134  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5      1739.138 ±    1130.462    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.889 ±       7.587  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         1.384 ±      11.807    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.count                                                   N/A  thrpt    5        17.000                counts
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.time                                                    N/A  thrpt    5        41.000                    ms
[info] ExtractFieldsBenchmark.readJsoniterScala                                                            N/A  thrpt    5   9129387.429 ±  184693.695   ops/s
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate                                             N/A  thrpt    5       432.983 ±      25.453  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        N/A  thrpt    5        74.615 ±       3.487    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       448.657 ±     760.127  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5        77.192 ±     129.342    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.001 ±       0.006    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.count                                                  N/A  thrpt    5         7.000                counts
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.time                                                   N/A  thrpt    5        17.000                    ms
[info] ExtractFieldsBenchmark.readPlayJson                                                                 N/A  thrpt    5    471916.684 ±   15033.447   ops/s
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate                                                  N/A  thrpt    5      2306.347 ±      83.592  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             N/A  thrpt    5      7691.029 ±     186.885    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      2263.401 ±     580.376  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5      7550.120 ±    2073.317    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.312 ±       1.535  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         1.043 ±       5.122    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.count                                                       N/A  thrpt    5        34.000                counts
[info] ExtractFieldsBenchmark.readPlayJson:·gc.time                                                        N/A  thrpt    5        57.000                    ms
[info] GeoJSONBenchmark.readCirce                                                                          N/A  thrpt    5      4323.694 ±     120.981   ops/s
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate                                                           N/A  thrpt    5      2181.440 ±     109.127  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm                                                      N/A  thrpt    5    793938.461 ±   23359.739    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5      2109.510 ±     738.584  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5    767639.441 ±  260139.366    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5         1.081 ±       7.208  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5       397.165 ±    2655.950    B/op
[info] GeoJSONBenchmark.readCirce:·gc.count                                                                N/A  thrpt    5        32.000                counts
[info] GeoJSONBenchmark.readCirce:·gc.time                                                                 N/A  thrpt    5        53.000                    ms
[info] GeoJSONBenchmark.readJacksonScala                                                                   N/A  thrpt    5      6915.026 ±     108.620   ops/s
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate                                                    N/A  thrpt    5      2361.070 ±      63.916  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm                                               N/A  thrpt    5    537311.325 ±   14407.220    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      2270.149 ±     525.611  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5    516687.034 ±  124526.262    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.196 ±       1.273  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5        44.546 ±     289.948    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.count                                                         N/A  thrpt    5        34.000                counts
[info] GeoJSONBenchmark.readJacksonScala:·gc.time                                                          N/A  thrpt    5        55.000                    ms
[info] GeoJSONBenchmark.readJsoniterScala                                                                  N/A  thrpt    5     45809.515 ±    2415.754   ops/s
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate                                                   N/A  thrpt    5       761.110 ±      22.669  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                              N/A  thrpt    5     26147.245 ±     623.685    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5       729.370 ±     572.444  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5     25111.820 ±   21261.116    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.675 ±       4.087  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5        23.047 ±     139.553    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.count                                                        N/A  thrpt    5        11.000                counts
[info] GeoJSONBenchmark.readJsoniterScala:·gc.time                                                         N/A  thrpt    5        29.000                    ms
[info] GeoJSONBenchmark.writeCirce                                                                         N/A  thrpt    5      4592.464 ±      61.095   ops/s
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate                                                          N/A  thrpt    5      1009.693 ±      27.638  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm                                                     N/A  thrpt    5    345942.864 ±    8361.554    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5       985.729 ±      15.125  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5    337737.077 ±    8312.162    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.942 ±       5.252  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5       322.264 ±    1797.275    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.count                                                               N/A  thrpt    5        15.000                counts
[info] GeoJSONBenchmark.writeCirce:·gc.time                                                                N/A  thrpt    5        41.000                    ms
[info] GeoJSONBenchmark.writeJacksonScala                                                                  N/A  thrpt    5      5000.610 ±      30.919   ops/s
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate                                                   N/A  thrpt    5       630.323 ±      15.513  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                              N/A  thrpt    5    198356.743 ±    4681.971    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5       580.615 ±     549.446  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5    182691.359 ±  172610.388    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.025 ±       0.105  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         7.863 ±      32.921    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.count                                                        N/A  thrpt    5         9.000                counts
[info] GeoJSONBenchmark.writeJacksonScala:·gc.time                                                         N/A  thrpt    5        16.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScala                                                                 N/A  thrpt    5      6578.900 ±      60.453   ops/s
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate                                                  N/A  thrpt    5       332.016 ±       9.310  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                             N/A  thrpt    5     79406.616 ±    2487.744    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       314.997 ±     127.433  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5     75331.492 ±   30300.879    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.006 ±       0.054  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         1.493 ±      12.856    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.count                                                       N/A  thrpt    5         5.000                counts
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.time                                                        N/A  thrpt    5        15.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc                                                         N/A  thrpt    5      6638.924 ±      71.829   ops/s
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                          N/A  thrpt    5       282.756 ±       4.978  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                     N/A  thrpt    5     67016.867 ±    1255.173    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5       300.249 ±     156.156  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5     71178.170 ±   37524.692    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.013 ±       0.115  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         3.173 ±      27.321    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count                                               N/A  thrpt    5         5.000                counts
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time                                                N/A  thrpt    5        15.000                    ms
[info] GoogleMapsAPIBenchmark.readCirce                                                                    N/A  thrpt    5      7954.430 ±      78.080   ops/s
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate                                                     N/A  thrpt    5      1698.374 ±      39.889  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm                                                N/A  thrpt    5    336003.192 ±    6000.346    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      1647.837 ±      31.483  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5    326009.455 ±    8115.716    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.891 ±       5.313  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5       176.871 ±    1055.891    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.count                                                          N/A  thrpt    5        25.000                counts
[info] GoogleMapsAPIBenchmark.readCirce:·gc.time                                                           N/A  thrpt    5        47.000                    ms
[info] GoogleMapsAPIBenchmark.readDslJsonJava                                                              N/A  thrpt    5     19071.908 ±     185.672   ops/s
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate                                               N/A  thrpt    5       485.780 ±      25.801  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          N/A  thrpt    5     40081.444 ±    2527.201    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       450.617 ±     678.077  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5     37201.009 ±   56253.937    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.950 ±       8.045  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5        78.243 ±     662.615    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count                                                    N/A  thrpt    5         7.000                counts
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time                                                     N/A  thrpt    5        14.000                    ms
[info] GoogleMapsAPIBenchmark.readJacksonScala                                                             N/A  thrpt    5     15898.711 ±     186.196   ops/s
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate                                              N/A  thrpt    5       433.588 ±      17.413  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         N/A  thrpt    5     42913.179 ±    2199.330    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       384.449 ±     550.650  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5     38077.913 ±   55062.244    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.012 ±       0.072  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         1.239 ±       7.122    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.count                                                   N/A  thrpt    5         6.000                counts
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.time                                                    N/A  thrpt    5         9.000                    ms
[info] GoogleMapsAPIBenchmark.readJsoniterScala                                                            N/A  thrpt    5     23195.610 ±    1529.362   ops/s
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                             N/A  thrpt    5       445.454 ±      23.468  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        N/A  thrpt    5     30224.059 ±    1732.525    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       447.553 ±     626.575  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5     30333.301 ±   41932.253    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.008 ±       0.044  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.570 ±       3.006    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count                                                  N/A  thrpt    5         7.000                counts
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time                                                   N/A  thrpt    5        21.000                    ms
[info] GoogleMapsAPIBenchmark.readPlayJson                                                                 N/A  thrpt    5      3339.763 ±      51.636   ops/s
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate                                                  N/A  thrpt    5      2034.674 ±      60.994  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                             N/A  thrpt    5    958583.737 ±   21534.788    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      1928.305 ±     575.328  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5    908530.792 ±  273708.589    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.363 ±       2.480  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5       172.148 ±    1177.208    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.count                                                       N/A  thrpt    5        29.000                counts
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.time                                                        N/A  thrpt    5        50.000                    ms
[info] GoogleMapsAPIBenchmark.writeCirce                                                                   N/A  thrpt    5     10195.015 ±     221.470   ops/s
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate                                                    N/A  thrpt    5      2182.576 ±      65.261  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm                                               N/A  thrpt    5    336904.065 ±   10386.459    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      2053.587 ±     563.794  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5    317024.557 ±   89193.919    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.254 ±       1.627  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5        39.181 ±     251.306    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.count                                                         N/A  thrpt    5        31.000                counts
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.time                                                          N/A  thrpt    5        46.000                    ms
[info] GoogleMapsAPIBenchmark.writeDslJsonJava                                                             N/A  thrpt    5     56676.819 ±    2343.328   ops/s
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate                                              N/A  thrpt    5       547.615 ±      34.263  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         N/A  thrpt    5     15205.063 ±     631.270    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       583.694 ±     558.138  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5     16202.154 ±   15437.615    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.017 ±       0.067  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.462 ±       1.846    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count                                                   N/A  thrpt    5         9.000                counts
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time                                                    N/A  thrpt    5        31.000                    ms
[info] GoogleMapsAPIBenchmark.writeJacksonScala                                                            N/A  thrpt    5     44619.470 ±    3173.141   ops/s
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                             N/A  thrpt    5       658.807 ±      58.609  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        N/A  thrpt    5     23230.826 ±     652.608    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       646.769 ±       4.518  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5     22813.551 ±    1564.712    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.021 ±       0.080  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.735 ±       2.846    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count                                                  N/A  thrpt    5        10.000                counts
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time                                                   N/A  thrpt    5        15.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScala                                                           N/A  thrpt    5     89763.385 ±    2399.122   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                            N/A  thrpt    5       695.137 ±      15.256  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       N/A  thrpt    5     12184.629 ±     433.793    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       727.509 ±     559.605  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5     12750.434 ±    9765.649    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.640 ±       5.081  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5        11.201 ±      88.862    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count                                                 N/A  thrpt    5        11.000                counts
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time                                                  N/A  thrpt    5        31.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc                                                   N/A  thrpt    5    103223.661 ±    9656.164   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    N/A  thrpt    5         0.175 ±       0.931  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               N/A  thrpt    5         2.633 ±      14.034    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         N/A  thrpt    5           ≈ 0                counts
[info] GoogleMapsAPIBenchmark.writePlayJson                                                                N/A  thrpt    5      7660.777 ±     122.398   ops/s
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate                                                 N/A  thrpt    5      2318.786 ±      69.245  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm                                            N/A  thrpt    5    476296.367 ±   11011.202    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      2272.434 ±     548.487  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5    466697.646 ±  106685.503    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.167 ±       1.093  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5        34.204 ±     224.618    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.count                                                      N/A  thrpt    5        34.000                counts
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.time                                                       N/A  thrpt    5        49.000                    ms
[info] IntBenchmark.readCirce                                                                              N/A  thrpt    5   8386764.310 ±  354264.387   ops/s
[info] IntBenchmark.readCirce:·gc.alloc.rate                                                               N/A  thrpt    5      4600.694 ±     198.823  MB/sec
[info] IntBenchmark.readCirce:·gc.alloc.rate.norm                                                          N/A  thrpt    5       863.254 ±       7.794    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                      N/A  thrpt    5      4394.315 ±     156.208  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                                 N/A  thrpt    5       824.617 ±      48.130    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                                  N/A  thrpt    5         0.129 ±       0.105  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                             N/A  thrpt    5         0.024 ±       0.020    B/op
[info] IntBenchmark.readCirce:·gc.count                                                                    N/A  thrpt    5        65.000                counts
[info] IntBenchmark.readCirce:·gc.time                                                                     N/A  thrpt    5        84.000                    ms
[info] IntBenchmark.readDslJsonJava                                                                        N/A  thrpt    5  37838558.530 ± 1909993.357   ops/s
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate                                                         N/A  thrpt    5         6.352 ±      54.509  MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                                    N/A  thrpt    5         0.270 ±       2.319    B/op
[info] IntBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                                N/A  thrpt    5        51.175 ±     440.631  MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                           N/A  thrpt    5         2.177 ±      18.742    B/op
[info] IntBenchmark.readDslJsonJava:·gc.count                                                              N/A  thrpt    5         1.000                counts
[info] IntBenchmark.readDslJsonJava:·gc.time                                                               N/A  thrpt    5         5.000                    ms
[info] IntBenchmark.readJacksonScala                                                                       N/A  thrpt    5  10490068.680 ±  148765.801   ops/s
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate                                                        N/A  thrpt    5      3594.094 ±      53.881  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate.norm                                                   N/A  thrpt    5       539.107 ±       8.050    B/op
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      3489.747 ±     680.175  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5       523.420 ±      98.356    B/op
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.025 ±       0.036  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.004 ±       0.005    B/op
[info] IntBenchmark.readJacksonScala:·gc.count                                                             N/A  thrpt    5        52.000                counts
[info] IntBenchmark.readJacksonScala:·gc.time                                                              N/A  thrpt    5        70.000                    ms
[info] IntBenchmark.readJsoniterScala                                                                      N/A  thrpt    5  48845573.039 ±  312128.154   ops/s
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate                                                       N/A  thrpt    5         0.017 ±       0.143  MB/sec
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5         0.001 ±       0.005    B/op
[info] IntBenchmark.readJsoniterScala:·gc.count                                                            N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readNaiveScala                                                                         N/A  thrpt    5  31319220.977 ±  717086.019   ops/s
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate                                                          N/A  thrpt    5       823.979 ±      38.811  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate.norm                                                     N/A  thrpt    5        41.405 ±       2.365    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5       796.755 ±     700.154  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5        40.057 ±      35.680    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.625 ±       3.900  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5         0.031 ±       0.195    B/op
[info] IntBenchmark.readNaiveScala:·gc.count                                                               N/A  thrpt    5        12.000                counts
[info] IntBenchmark.readNaiveScala:·gc.time                                                                N/A  thrpt    5        29.000                    ms
[info] IntBenchmark.readPlayJson                                                                           N/A  thrpt    5   8670118.588 ±  386672.247   ops/s
[info] IntBenchmark.readPlayJson:·gc.alloc.rate                                                            N/A  thrpt    5      3893.854 ±     154.894  MB/sec
[info] IntBenchmark.readPlayJson:·gc.alloc.rate.norm                                                       N/A  thrpt    5       706.765 ±       3.965    B/op
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                   N/A  thrpt    5      3701.658 ±     170.774  MB/sec
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                              N/A  thrpt    5       671.972 ±      50.441    B/op
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                               N/A  thrpt    5         0.058 ±       0.286  MB/sec
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                          N/A  thrpt    5         0.011 ±       0.053    B/op
[info] IntBenchmark.readPlayJson:·gc.count                                                                 N/A  thrpt    5        55.000                counts
[info] IntBenchmark.readPlayJson:·gc.time                                                                  N/A  thrpt    5        74.000                    ms
[info] IntBenchmark.writeCirce                                                                             N/A  thrpt    5  13517892.406 ±  397955.358   ops/s
[info] IntBenchmark.writeCirce:·gc.alloc.rate                                                              N/A  thrpt    5      1635.616 ±      62.320  MB/sec
[info] IntBenchmark.writeCirce:·gc.alloc.rate.norm                                                         N/A  thrpt    5       190.392 ±       3.777    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                     N/A  thrpt    5      1587.182 ±     552.959  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                                N/A  thrpt    5       184.819 ±      67.136    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                                 N/A  thrpt    5         0.670 ±       4.068  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                            N/A  thrpt    5         0.078 ±       0.475    B/op
[info] IntBenchmark.writeCirce:·gc.count                                                                   N/A  thrpt    5        24.000                counts
[info] IntBenchmark.writeCirce:·gc.time                                                                    N/A  thrpt    5        40.000                    ms
[info] IntBenchmark.writeDslJsonJava                                                                       N/A  thrpt    5  41727950.432 ± 3431584.661   ops/s
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate                                                        N/A  thrpt    5       880.214 ±      30.188  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                                   N/A  thrpt    5        33.204 ±       2.138    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5       913.776 ±     558.651  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5        34.507 ±      22.042    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.948 ±       7.609  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.036 ±       0.284    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.count                                                             N/A  thrpt    5        14.000                counts
[info] IntBenchmark.writeDslJsonJava:·gc.time                                                              N/A  thrpt    5        38.000                    ms
[info] IntBenchmark.writeJacksonScala                                                                      N/A  thrpt    5  13074950.302 ±  183908.825   ops/s
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate                                                       N/A  thrpt    5      2691.741 ±      24.996  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       323.986 ±       3.874    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      2596.311 ±     504.461  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       312.507 ±      61.444    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.071 ±       0.387  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.008 ±       0.046    B/op
[info] IntBenchmark.writeJacksonScala:·gc.count                                                            N/A  thrpt    5        39.000                counts
[info] IntBenchmark.writeJacksonScala:·gc.time                                                             N/A  thrpt    5        50.000                    ms
[info] IntBenchmark.writeJsoniterScala                                                                     N/A  thrpt    5  47745777.887 ± 3427245.710   ops/s
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate                                                      N/A  thrpt    5      1003.833 ±      78.359  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                                 N/A  thrpt    5        33.085 ±       0.777    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5       992.068 ±       8.443  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5        32.707 ±       2.529    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.672 ±       5.388  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.022 ±       0.179    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.count                                                           N/A  thrpt    5        15.000                counts
[info] IntBenchmark.writeJsoniterScala:·gc.time                                                            N/A  thrpt    5        31.000                    ms
[info] IntBenchmark.writeJsoniterScalaPrealloc                                                             N/A  thrpt    5  60478928.578 ±  323149.677   ops/s
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                              N/A  thrpt    5         0.001 ±       0.009  MB/sec
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                         N/A  thrpt    5        ≈ 10⁻⁴                  B/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                   N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeNaiveScala                                                                        N/A  thrpt    5  17788148.921 ±  226792.169   ops/s
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate                                                         N/A  thrpt    5      1688.791 ±      49.275  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm                                                    N/A  thrpt    5       149.406 ±       2.843    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space                                                N/A  thrpt    5      1670.443 ±      31.555  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm                                           N/A  thrpt    5       147.784 ±       1.932    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space                                            N/A  thrpt    5         0.279 ±       1.455  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm                                       N/A  thrpt    5         0.025 ±       0.129    B/op
[info] IntBenchmark.writeNaiveScala:·gc.count                                                              N/A  thrpt    5        25.000                counts
[info] IntBenchmark.writeNaiveScala:·gc.time                                                               N/A  thrpt    5        34.000                    ms
[info] IntBenchmark.writePlayJson                                                                          N/A  thrpt    5   2719288.376 ±   64056.902   ops/s
[info] IntBenchmark.writePlayJson:·gc.alloc.rate                                                           N/A  thrpt    5      2192.386 ±      77.443  MB/sec
[info] IntBenchmark.writePlayJson:·gc.alloc.rate.norm                                                      N/A  thrpt    5      1268.733 ±      21.860    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5      2125.328 ±     702.256  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5      1230.092 ±     413.908    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5         0.710 ±       6.023  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5         0.414 ±       3.514    B/op
[info] IntBenchmark.writePlayJson:·gc.count                                                                N/A  thrpt    5        32.000                counts
[info] IntBenchmark.writePlayJson:·gc.time                                                                 N/A  thrpt    5        46.000                    ms
[info] IntMapOfBooleansBenchmark.readJsoniterScala                                                         128  thrpt    5    168556.439 ±    5873.595   ops/s
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      3210.858 ±     146.406  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5     29970.478 ±     456.404    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      3096.188 ±     551.625  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     28897.725 ±    4707.507    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.123 ±       0.702  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.153 ±       6.611    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        46.000                counts
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        63.000                    ms
[info] IntMapOfBooleansBenchmark.readPlayJson                                                              128  thrpt    5     35315.076 ±    1409.380   ops/s
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2537.409 ±     153.985  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    113066.912 ±    2745.572    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2468.955 ±     639.240  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    110064.775 ±   31171.918    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.133 ±       0.970  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         6.029 ±      44.037    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        37.000                counts
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        56.000                    ms
[info] IntMapOfBooleansBenchmark.writeJacksonScala                                                         128  thrpt    5    143859.433 ±    2219.907   ops/s
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1253.019 ±      47.327  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     13707.049 ±     465.374    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1243.946 ±     572.697  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     13609.588 ±    6322.436    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.854 ±       6.519  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         9.336 ±      71.256    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5        19.000                counts
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        41.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScala                                                        128  thrpt    5    433894.387 ±   38694.185   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1744.309 ±     166.541  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      6326.653 ±     207.778    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1723.117 ±     577.306  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      6248.857 ±    1938.144    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.691 ±       5.131  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         2.575 ±      19.144    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5        26.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        41.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    475566.975 ±   18840.996   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5      1374.455 ±      58.568  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5      4548.349 ±     104.291    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                        128  thrpt    5      1322.761 ±      11.820  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      4377.696 ±     208.738    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.666 ±       5.602  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         2.195 ±      18.449    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5        20.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                                       128  thrpt    5        35.000                    ms
[info] IntMapOfBooleansBenchmark.writePlayJson                                                             128  thrpt    5     74685.577 ±    2860.751   ops/s
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5      1556.038 ±      79.447  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     32785.339 ±     815.315    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1518.539 ±     696.794  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     32001.550 ±   14866.693    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.237 ±       1.910  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         5.001 ±      40.244    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        23.000                counts
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        35.000                    ms
[info] ListOfBooleansBenchmark.readCirce                                                                   128  thrpt    5    314620.247 ±   15445.666   ops/s
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      2349.358 ±      81.432  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     11751.690 ±     265.514    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      2261.599 ±     520.109  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     11317.789 ±    2948.874    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.754 ±       5.870  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         3.748 ±      29.179    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.count                                                         128  thrpt    5        34.000                counts
[info] ListOfBooleansBenchmark.readCirce:·gc.time                                                          128  thrpt    5        45.000                    ms
[info] ListOfBooleansBenchmark.readJacksonScala                                                            128  thrpt    5    491612.018 ±    4700.220   ops/s
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1304.747 ±      27.790  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      4176.684 ±     100.814    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1241.390 ±     567.249  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      3974.201 ±    1827.686    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.904 ±       7.646  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.886 ±      24.416    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        19.000                counts
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        42.000                    ms
[info] ListOfBooleansBenchmark.readJsoniterScala                                                           128  thrpt    5   1334012.797 ±   69790.640   ops/s
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5      2697.755 ±     115.576  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      3182.616 ±      74.569    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      2613.742 ±     546.839  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      3084.932 ±     748.721    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.104 ±       0.413  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.122 ±       0.480    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5        39.000                counts
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        51.000                    ms
[info] ListOfBooleansBenchmark.readPlayJson                                                                128  thrpt    5    100940.541 ±    6054.622   ops/s
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      3378.987 ±     198.763  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     52679.218 ±    1431.049    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      3285.975 ±     537.024  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     51216.804 ±    6413.078    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.046 ±       0.183  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.712 ±       2.812    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        49.000                counts
[info] ListOfBooleansBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        65.000                    ms
[info] ListOfBooleansBenchmark.writeCirce                                                                  128  thrpt    5    347776.569 ±    7551.727   ops/s
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1203.383 ±      48.946  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5      5444.855 ±     186.797    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1186.645 ±     695.901  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5      5370.152 ±    3177.532    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.708 ±       5.004  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         3.209 ±      22.708    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        18.000                counts
[info] ListOfBooleansBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        37.000                    ms
[info] ListOfBooleansBenchmark.writeJacksonScala                                                           128  thrpt    5    834646.939 ±   41992.951   ops/s
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       624.525 ±      26.750  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1177.474 ±      37.888    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       654.384 ±       7.493  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1233.911 ±      73.458    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.021 ±       0.080  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.039 ±       0.151    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5        10.000                counts
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        31.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScala                                                          128  thrpt    5   2011653.965 ±  211590.631   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       959.649 ±      76.631  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       750.868 ±      30.485    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       926.521 ±     568.135  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       725.865 ±     466.570    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.608 ±       4.532  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.496 ±       3.730    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5        14.000                counts
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        27.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   2341774.899 ±    9748.195   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5         0.303 ±       2.610  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.204 ±       1.756    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ListOfBooleansBenchmark.writePlayJson                                                               128  thrpt    5    472451.531 ±   22092.783   ops/s
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5       701.651 ±      35.997  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5      2337.039 ±      58.615    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5       659.083 ±       3.450  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      2195.503 ±     104.222    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.650 ±       5.503  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         2.156 ±      18.271    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        10.000                counts
[info] ListOfBooleansBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        32.000                    ms
[info] MapOfIntsToBooleansBenchmark.readCirce                                                              128  thrpt    5     58325.756 ±    3387.024   ops/s
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      2039.895 ±     127.518  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5     55036.700 ±    1317.034    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1987.975 ±      54.298  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     53643.623 ±    2825.561    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.804 ±       5.959  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        22.178 ±     165.008    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.count                                                    128  thrpt    5        30.000                counts
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.time                                                     128  thrpt    5        46.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJacksonScala                                                       128  thrpt    5     91769.519 ±    5448.181   ops/s
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1703.326 ±     146.865  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     29206.979 ±     804.752    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1638.446 ±      40.121  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     28101.857 ±    1693.138    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.924 ±       7.001  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        16.183 ±     122.783    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5        25.000                counts
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5        45.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala                                                      128  thrpt    5    161803.745 ±    2676.248   ops/s
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      2569.206 ±      86.817  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5     24987.250 ±     569.345    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      2471.429 ±     688.091  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     24033.916 ±    6500.131    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.104 ±       0.501  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.016 ±       4.896    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5        37.000                counts
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5        50.000                    ms
[info] MapOfIntsToBooleansBenchmark.readPlayJson                                                           128  thrpt    5     32626.252 ±    1072.943   ops/s
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      2193.589 ±      90.379  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    105803.039 ±    2256.426    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      2129.902 ±     736.041  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    102745.352 ±   36047.382    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.146 ±       1.077  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         6.998 ±      51.668    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        32.000                counts
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        47.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala                                                      128  thrpt    5    154348.346 ±    7872.159   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1037.166 ±      26.171  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     10575.553 ±     330.103    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       980.098 ±       9.612  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      9994.443 ±     582.549    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.858 ±       6.897  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         8.692 ±      69.891    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5        15.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5        37.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala                                                     128  thrpt    5    442446.047 ±   32934.985   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       503.098 ±      31.917  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1789.702 ±     110.415    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       462.190 ±     695.954  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1650.237 ±    2559.015    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.008 ±       0.072  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.030 ±       0.256    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5         7.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5        20.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5    507754.151 ±   15294.352   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5         6.598 ±      12.200  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5        20.511 ±      38.833    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson                                                          128  thrpt    5     72746.581 ±    3204.269   ops/s
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5      1306.287 ±      35.704  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     28260.041 ±     769.720    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1253.798 ±     557.159  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     27137.819 ±   12546.055    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.196 ±       0.966  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         4.219 ±      20.716    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                                128  thrpt    5        19.000                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5        31.000                    ms
[info] MissingReqFieldBenchmark.readCirce                                                                  N/A  thrpt    5   2893010.088 ±   41300.961   ops/s
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      3725.745 ±      71.346  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5      2026.595 ±      34.327    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      3626.491 ±     576.869  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5      1972.607 ±     313.753    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.054 ±       0.303  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.029 ±       0.165    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        54.000                counts
[info] MissingReqFieldBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        74.000                    ms
[info] MissingReqFieldBenchmark.readDslJsonJava                                                            N/A  thrpt    5    788764.596 ±   76671.938   ops/s
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate                                             N/A  thrpt    5       463.572 ±      40.938  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        N/A  thrpt    5       924.956 ±      36.316    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       455.022 ±     685.691  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5       911.499 ±    1418.375    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.018 ±       0.094  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.035 ±       0.183    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.count                                                  N/A  thrpt    5         7.000                counts
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.time                                                   N/A  thrpt    5        22.000                    ms
[info] MissingReqFieldBenchmark.readJacksonScala                                                           N/A  thrpt    5    355919.934 ±   13950.315   ops/s
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5       832.490 ±      32.777  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5      3680.831 ±     103.170    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       852.387 ±     688.869  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5      3772.990 ±    3132.033    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.939 ±       4.996  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         4.173 ±      22.151    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5        13.000                counts
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5        42.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterScala                                                          N/A  thrpt    5    744723.550 ±   67342.121   ops/s
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5       678.366 ±      61.508  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5      1433.418 ±      20.216    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       664.607 ±       5.214  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5      1404.984 ±     132.783    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.400 ±       3.352  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.875 ±       7.347    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5        10.000                counts
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5        24.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStackless                                                      N/A  thrpt    5   3376254.305 ±   59284.674   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate                                       N/A  thrpt    5      2045.753 ±      68.818  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm                                  N/A  thrpt    5       953.561 ±      20.899    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space                              N/A  thrpt    5      2002.530 ±      40.702  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5       933.444 ±      28.993    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.520 ±       4.257  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.244 ±       1.996    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.count                                            N/A  thrpt    5        30.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.time                                             N/A  thrpt    5        45.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump                                                N/A  thrpt    5   7468075.492 ±  451310.755   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate                                 N/A  thrpt    5       825.363 ±      56.144  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm                            N/A  thrpt    5       173.923 ±       8.857    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space                        N/A  thrpt    5       863.690 ±     699.196  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm                   N/A  thrpt    5       182.292 ±     153.281    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space                    N/A  thrpt    5         0.500 ±       4.168  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm               N/A  thrpt    5         0.106 ±       0.884    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count                                      N/A  thrpt    5        13.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time                                       N/A  thrpt    5        28.000                    ms
[info] MissingReqFieldBenchmark.readPlayJson                                                               N/A  thrpt    5    229656.091 ±   10349.077   ops/s
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate                                                N/A  thrpt    5      2039.609 ±     126.892  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm                                           N/A  thrpt    5     13975.492 ±     404.851    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1993.993 ±     881.808  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5     13653.516 ±    5569.091    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.296 ±       1.468  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         2.021 ±      10.057    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.count                                                     N/A  thrpt    5        30.000                counts
[info] MissingReqFieldBenchmark.readPlayJson:·gc.time                                                      N/A  thrpt    5        48.000                    ms
[info] MutableBitSetBenchmark.readJsoniterScala                                                            128  thrpt    5   1575069.615 ±   15535.257   ops/s
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5        90.662 ±      12.710  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5        90.589 ±      13.366    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       102.329 ±     539.550  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       102.456 ±     540.223    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.144 ±       1.156  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.145 ±       1.158    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         2.000                counts
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5         6.000                    ms
[info] MutableBitSetBenchmark.readPlayJson                                                                 128  thrpt    5     75989.574 ±    1899.781   ops/s
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      3348.408 ±      59.645  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     69343.580 ±    1755.365    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      3232.072 ±     705.373  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     66934.062 ±   14658.531    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.083 ±       0.345  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         1.721 ±       7.128    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        48.000                counts
[info] MutableBitSetBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        68.000                    ms
[info] MutableBitSetBenchmark.writeJacksonScala                                                            128  thrpt    5   1569666.127 ±   89010.067   ops/s
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       850.291 ±      27.074  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5       852.542 ±      27.286    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       851.810 ±     686.328  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       855.622 ±     720.707    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.816 ±       6.366  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.810 ±       6.309    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5        13.000                counts
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5        36.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScala                                                           128  thrpt    5   1804404.201 ±  108377.827   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       505.364 ±      38.773  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       440.895 ±      51.564    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       462.584 ±     696.918  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       404.651 ±     624.067    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.021 ±       0.080  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.018 ±       0.070    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5         7.000                counts
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5        20.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5   1777981.758 ±  137447.350   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5        24.057 ±      50.073  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5        21.481 ±      47.124    B/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                           128  thrpt    5        51.163 ±     440.527  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5        46.897 ±     403.795    B/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5         1.000                counts
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.time                                          128  thrpt    5         3.000                    ms
[info] MutableBitSetBenchmark.writePlayJson                                                                128  thrpt    5     50884.232 ±    1337.123   ops/s
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate                                                 128  thrpt    5      2199.037 ±      72.471  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     68003.565 ±    1301.196    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2136.881 ±     681.087  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     66108.095 ±   22522.257    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.142 ±       1.085  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         4.406 ±      33.806    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.count                                                      128  thrpt    5        32.000                counts
[info] MutableBitSetBenchmark.writePlayJson:·gc.time                                                       128  thrpt    5        46.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala                                                 128  thrpt    5    269340.269 ±   10665.032   ops/s
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1089.386 ±      49.366  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      6365.139 ±     161.320    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1059.099 ±     562.573  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      6187.466 ±    3245.318    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.654 ±       5.539  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         3.788 ±      32.086    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        16.000                counts
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5        32.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readPlayJson                                                      128  thrpt    5     40770.281 ±    1807.614   ops/s
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      2033.313 ±     104.088  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     78472.676 ±    1674.211    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1998.713 ±      84.106  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     77138.546 ±    1088.609    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.192 ±       1.471  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         7.506 ±      57.804    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        30.000                counts
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        45.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala                                                 128  thrpt    5    113285.192 ±    3065.769   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5      1139.415 ±      44.664  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     15826.951 ±     396.034    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1114.069 ±     691.692  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     15486.790 ±    9965.343    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.858 ±       5.450  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        11.941 ±      76.046    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5        17.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5        39.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala                                                128  thrpt    5    329917.863 ±   30871.594   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       457.462 ±      21.415  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      2182.545 ±     119.494    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       461.964 ±     696.464  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      2221.396 ±    3560.932    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.021 ±       0.098  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.100 ±       0.481    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         7.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5        19.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    366218.974 ±    3710.006   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         3.949 ±       1.408  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5        16.968 ±       5.957    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson                                                     128  thrpt    5     58101.071 ±    1508.842   ops/s
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1405.891 ±      72.144  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     38076.967 ±    1427.477    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5      1387.781 ±     606.493  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     37578.144 ±   15958.252    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.200 ±       1.234  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         5.418 ±      33.410    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count                                           128  thrpt    5        21.000                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        33.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readCirce                                                       128  thrpt    5     71259.123 ±    2691.520   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1668.361 ±      57.039  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5     36843.380 ±    1162.216    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5      1652.253 ±      28.640  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     36489.990 ±    1812.920    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.766 ±       4.822  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        16.926 ±     106.547    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count                                             128  thrpt    5        25.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time                                              128  thrpt    5        43.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala                                                128  thrpt    5    133158.325 ±    1712.505   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5       908.521 ±      32.834  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5     10736.450 ±     376.019    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5       851.972 ±     688.264  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     10069.011 ±    8151.592    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.920 ±       7.611  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5        10.835 ±      89.614    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5        13.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5        39.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala                                               128  thrpt    5    261412.895 ±    2748.397   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1106.862 ±      28.400  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      6663.048 ±     122.821    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1058.733 ±     576.177  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      6373.472 ±    3471.743    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.695 ±       5.585  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         4.186 ±      33.628    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5        16.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5        34.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson                                                    128  thrpt    5     29311.141 ±    1121.971   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1481.905 ±      59.122  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     79556.968 ±     743.593    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1451.479 ±     662.349  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     77918.374 ±   35205.448    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.158 ±       1.140  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         8.615 ±      62.279    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        22.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        36.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala                                               128  thrpt    5    177163.911 ±    7459.276   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5      1006.880 ±      43.072  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5      8943.336 ±     116.172    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       980.267 ±      11.261  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      8707.945 ±     452.273    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.845 ±       7.054  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         7.577 ±      63.248    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        15.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        37.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala                                              128  thrpt    5    474320.312 ±   34110.386   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1436.063 ±     112.272  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      4764.603 ±     124.942    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      1387.436 ±     555.577  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      4608.390 ±    2061.675    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.674 ±       5.718  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         2.287 ±      19.398    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        21.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        36.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5    519157.255 ±   42755.653   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5       984.641 ±      96.264  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5      2984.243 ±      91.304    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space              128  thrpt    5       992.294 ±       9.828  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm         128  thrpt    5      3008.763 ±     264.261    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space          128  thrpt    5         0.679 ±       4.971  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5         2.031 ±      14.881    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5        15.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                             128  thrpt    5        32.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson                                                   128  thrpt    5     75454.734 ±    4799.096   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1483.725 ±     106.437  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5     30943.085 ±     650.276    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space                  128  thrpt    5         0.004 ±       0.030  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.Compressed_Class_Space.norm             128  thrpt    5         0.076 ±       0.652    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.Metaspace                               128  thrpt    5         0.010 ±       0.089  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.Metaspace.norm                          128  thrpt    5         0.222 ±       1.913    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      1432.624 ±     647.220  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     29905.041 ±   14473.208    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Old_Gen                              128  thrpt    5         0.475 ±       4.086  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Old_Gen.norm                         128  thrpt    5        10.180 ±      87.657    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.974 ±       7.767  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        20.163 ±     160.415    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        23.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        79.000                    ms
[info] MutableSetOfIntsBenchmark.readCirce                                                                 128  thrpt    5     97381.575 ±     746.441   ops/s
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1602.945 ±      44.180  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     25902.636 ±     841.131    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1520.469 ±     679.723  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     24571.047 ±   11038.393    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.762 ±       4.115  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        12.290 ±      66.325    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        23.000                counts
[info] MutableSetOfIntsBenchmark.readCirce:·gc.time                                                        128  thrpt    5        39.000                    ms
[info] MutableSetOfIntsBenchmark.readJacksonScala                                                          128  thrpt    5    176695.796 ±    6813.908   ops/s
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       749.810 ±      37.681  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      6677.874 ±     229.855    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       720.095 ±     561.550  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      6410.528 ±    4909.445    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.920 ±       7.656  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         8.135 ±      67.656    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5        11.000                counts
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5        39.000                    ms
[info] MutableSetOfIntsBenchmark.readJsoniterScala                                                         128  thrpt    5    275281.651 ±    5915.234   ops/s
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      1012.149 ±      12.643  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      5786.131 ±     107.788    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       992.099 ±       8.546  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      5671.572 ±     145.311    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.702 ±       4.920  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         4.014 ±      28.120    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        15.000                counts
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        34.000                    ms
[info] MutableSetOfIntsBenchmark.readPlayJson                                                              128  thrpt    5     67602.579 ±    2960.532   ops/s
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2559.406 ±     137.683  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     59580.776 ±    1526.562    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2451.449 ±     696.784  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     57080.908 ±   16901.274    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.296 ±       2.280  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         6.972 ±      53.856    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        37.000                counts
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        54.000                    ms
[info] MutableSetOfIntsBenchmark.writeCirce                                                                128  thrpt    5    201550.993 ±   12339.003   ops/s
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1414.160 ±      98.224  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     11041.010 ±     207.461    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1383.424 ±     574.185  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     10801.664 ±    4436.673    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.774 ±       6.090  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         6.029 ±      47.375    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        21.000                counts
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5        41.000                    ms
[info] MutableSetOfIntsBenchmark.writeJacksonScala                                                         128  thrpt    5    515038.446 ±   13500.685   ops/s
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       423.463 ±      34.063  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1293.985 ±     127.515    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       442.640 ±     746.305  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1354.975 ±    2308.974    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.012 ±       0.072  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.038 ±       0.220    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         7.000                counts
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        24.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScala                                                        128  thrpt    5    628115.874 ±   17818.712   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       348.942 ±      13.726  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5       874.245 ±      17.697    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       315.236 ±     127.867  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       789.354 ±     301.360    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.021 ±       0.113  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.052 ±       0.284    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         5.000                counts
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        15.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    684291.860 ±   10880.760   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5         7.981 ±       8.819  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5        18.353 ±      20.250    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] MutableSetOfIntsBenchmark.writePlayJson                                                             128  thrpt    5     35159.542 ±    1454.655   ops/s
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5      1920.173 ±     102.221  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     85936.923 ±    2316.527    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1851.198 ±     691.044  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     82855.382 ±   30987.153    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.820 ±       6.796  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        37.176 ±     308.203    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        28.000                counts
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        42.000                    ms
[info] PrimitivesBenchmark.readCirce                                                                       N/A  thrpt    5    852593.798 ±   12682.107   ops/s
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate                                                        N/A  thrpt    5      2299.961 ±      55.348  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm                                                   N/A  thrpt    5      4245.121 ±     107.236    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      2253.643 ±     552.418  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5      4159.676 ±    1024.008    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.829 ±       6.476  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         1.532 ±      11.981    B/op
[info] PrimitivesBenchmark.readCirce:·gc.count                                                             N/A  thrpt    5        34.000                counts
[info] PrimitivesBenchmark.readCirce:·gc.time                                                              N/A  thrpt    5        51.000                    ms
[info] PrimitivesBenchmark.readJacksonScala                                                                N/A  thrpt    5   1781695.893 ±  229518.710   ops/s
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate                                                 N/A  thrpt    5      1188.151 ±     101.528  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                            N/A  thrpt    5      1049.815 ±      51.495    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space                               N/A  thrpt    5         0.005 ±       0.042  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.Compressed_Class_Space.norm                          N/A  thrpt    5         0.005 ±       0.039    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.Metaspace                                            N/A  thrpt    5         0.015 ±       0.127  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.Metaspace.norm                                       N/A  thrpt    5         0.014 ±       0.118    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      1199.177 ±     586.196  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5      1059.670 ±     509.739    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen                                           N/A  thrpt    5         0.484 ±       4.167  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Old_Gen.norm                                      N/A  thrpt    5         0.451 ±       3.882    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         1.089 ±       7.223  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.951 ±       6.210    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.count                                                      N/A  thrpt    5        20.000                counts
[info] PrimitivesBenchmark.readJacksonScala:·gc.time                                                       N/A  thrpt    5        81.000                    ms
[info] PrimitivesBenchmark.readJsoniterScala                                                               N/A  thrpt    5   8716470.976 ±  335660.689   ops/s
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate                                                N/A  thrpt    5       276.221 ±      31.205  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                           N/A  thrpt    5        49.879 ±       6.992    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       285.787 ±     714.241  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5        51.769 ±     130.054    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.037 ±       0.236  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.007 ±       0.043    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.count                                                     N/A  thrpt    5         5.000                counts
[info] PrimitivesBenchmark.readJsoniterScala:·gc.time                                                      N/A  thrpt    5        13.000                    ms
[info] PrimitivesBenchmark.readPlayJson                                                                    N/A  thrpt    5    289154.058 ±   51244.943   ops/s
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate                                                     N/A  thrpt    5      1921.165 ±     114.608  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm                                                N/A  thrpt    5     10467.784 ±    1388.470    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      1854.125 ±     679.624  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5     10125.268 ±    4867.781    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.421 ±       2.275  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         2.251 ±      12.073    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.count                                                          N/A  thrpt    5        28.000                counts
[info] PrimitivesBenchmark.readPlayJson:·gc.time                                                           N/A  thrpt    5        48.000                    ms
[info] PrimitivesBenchmark.writeCirce                                                                      N/A  thrpt    5   1114525.976 ±   36155.680   ops/s
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate                                                       N/A  thrpt    5      1815.537 ±     106.231  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm                                                  N/A  thrpt    5      2563.376 ±      76.811    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      1715.951 ±     605.554  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5      2421.920 ±     792.875    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.808 ±       6.597  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         1.149 ±       9.384    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.count                                                            N/A  thrpt    5        26.000                counts
[info] PrimitivesBenchmark.writeCirce:·gc.time                                                             N/A  thrpt    5        45.000                    ms
[info] PrimitivesBenchmark.writeJacksonScala                                                               N/A  thrpt    5   2692090.917 ±  201972.969   ops/s
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5      1190.218 ±      91.319  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5       695.760 ±      19.153    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1178.884 ±     691.685  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5       689.976 ±     426.761    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.793 ±       6.630  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.462 ±       3.857    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.count                                                     N/A  thrpt    5        18.000                counts
[info] PrimitivesBenchmark.writeJacksonScala:·gc.time                                                      N/A  thrpt    5        40.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScala                                                              N/A  thrpt    5   6333607.628 ±  440189.989   ops/s
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5       731.618 ±      41.988  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5       181.791 ±       4.541    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       728.310 ±     573.390  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5       180.946 ±     141.225    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.683 ±       5.746  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.166 ±       1.394    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.count                                                    N/A  thrpt    5        11.000                counts
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.time                                                     N/A  thrpt    5        30.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc                                                      N/A  thrpt    5   6797413.542 ±   43032.166   ops/s
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                       N/A  thrpt    5       426.459 ±      11.836  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                  N/A  thrpt    5        98.724 ±       2.810    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                              N/A  thrpt    5       380.830 ±     611.450  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5        88.180 ±     141.937    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5         0.025 ±       0.132  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5         0.006 ±       0.031    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                            N/A  thrpt    5         6.000                counts
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                             N/A  thrpt    5        17.000                    ms
[info] PrimitivesBenchmark.writePlayJson                                                                   N/A  thrpt    5    412396.575 ±   10386.981   ops/s
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate                                                    N/A  thrpt    5      2598.058 ±      58.389  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm                                               N/A  thrpt    5      9914.456 ±     195.746    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5      2515.778 ±     723.074  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5      9602.898 ±    2911.673    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.312 ±       2.465  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         1.191 ±       9.400    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.count                                                         N/A  thrpt    5        38.000                counts
[info] PrimitivesBenchmark.writePlayJson:·gc.time                                                          N/A  thrpt    5        54.000                    ms
[info] SetOfIntsBenchmark.readCirce                                                                        128  thrpt    5     78045.568 ±    1703.792   ops/s
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                         128  thrpt    5      2188.026 ±      75.565  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                                    128  thrpt    5     44119.445 ±    1099.923    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                128  thrpt    5      2124.543 ±     688.115  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                           128  thrpt    5     42834.006 ±   13508.439    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                            128  thrpt    5         0.774 ±       6.490  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                       128  thrpt    5        15.646 ±     131.124    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.count                                                              128  thrpt    5        32.000                counts
[info] SetOfIntsBenchmark.readCirce:·gc.time                                                               128  thrpt    5        48.000                    ms
[info] SetOfIntsBenchmark.readJacksonScala                                                                 128  thrpt    5    121961.483 ±    6164.425   ops/s
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                                  128  thrpt    5      1936.716 ±     141.473  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                             128  thrpt    5     24986.466 ±     674.068    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1906.220 ±     587.916  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     24592.079 ±    7366.770    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.937 ±       7.400  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        12.225 ±      96.638    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.count                                                       128  thrpt    5        29.000                counts
[info] SetOfIntsBenchmark.readJacksonScala:·gc.time                                                        128  thrpt    5        48.000                    ms
[info] SetOfIntsBenchmark.readJsoniterScala                                                                128  thrpt    5    179257.412 ±    3104.292   ops/s
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                                 128  thrpt    5      2727.418 ±     106.141  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                            128  thrpt    5     23942.167 ±     705.968    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2609.338 ±     580.866  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     22904.553 ±    4983.532    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.062 ±       0.278  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.547 ±       2.436    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.count                                                      128  thrpt    5        39.000                counts
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.time                                                       128  thrpt    5        53.000                    ms
[info] SetOfIntsBenchmark.readPlayJson                                                                     128  thrpt    5     59961.076 ±    1249.313   ops/s
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                                      128  thrpt    5      3044.031 ±      91.598  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                                 128  thrpt    5     79890.776 ±    2088.889    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                             128  thrpt    5      2892.472 ±     750.719  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     75921.941 ±   20293.644    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.062 ±       0.170  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         1.643 ±       4.484    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.count                                                           128  thrpt    5        43.000                counts
[info] SetOfIntsBenchmark.readPlayJson:·gc.time                                                            128  thrpt    5        59.000                    ms
[info] SetOfIntsBenchmark.writeCirce                                                                       128  thrpt    5    185984.158 ±    6645.620   ops/s
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                        128  thrpt    5      1322.236 ±      56.583  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                                   128  thrpt    5     11188.155 ±     589.548    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                               128  thrpt    5      1251.596 ±     562.826  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                          128  thrpt    5     10588.238 ±    4697.103    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                           128  thrpt    5         0.733 ±       6.176  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                      128  thrpt    5         6.190 ±      52.183    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.count                                                             128  thrpt    5        19.000                counts
[info] SetOfIntsBenchmark.writeCirce:·gc.time                                                              128  thrpt    5        36.000                    ms
[info] SetOfIntsBenchmark.writeJacksonScala                                                                128  thrpt    5    467985.409 ±   13942.969   ops/s
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                                 128  thrpt    5       418.759 ±      31.880  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                            128  thrpt    5      1408.145 ±     109.703    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                        128  thrpt    5       377.147 ±     439.284  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      1268.925 ±    1492.739    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.008 ±       0.044  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.028 ±       0.148    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.count                                                      128  thrpt    5         6.000                counts
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.time                                                       128  thrpt    5        20.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScala                                                               128  thrpt    5    634601.028 ±    7355.743   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                                128  thrpt    5       349.642 ±       7.426  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                           128  thrpt    5       867.086 ±      14.235    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                       128  thrpt    5       315.221 ±     127.917  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5       781.589 ±     311.696    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.count                                                     128  thrpt    5         5.000                counts
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.time                                                      128  thrpt    5        14.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc                                                       128  thrpt    5    713303.342 ±    1685.038   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                        128  thrpt    5         7.253 ±       0.017  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                   128  thrpt    5        16.001 ±       0.001    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                             128  thrpt    5           ≈ 0                counts
[info] SetOfIntsBenchmark.writePlayJson                                                                    128  thrpt    5     35337.932 ±     669.522   ops/s
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                                     128  thrpt    5      1928.613 ±      83.271  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                                128  thrpt    5     85879.438 ±    2471.407    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1850.666 ±     668.805  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     82381.706 ±   28300.840    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.820 ±       6.883  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5        36.718 ±     308.201    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.count                                                          128  thrpt    5        28.000                counts
[info] SetOfIntsBenchmark.writePlayJson:·gc.time                                                           128  thrpt    5        42.000                    ms
[info] StringOfAsciiCharsBenchmark.readCirce                                                               128  thrpt    5   3373696.820 ±   82691.396   ops/s
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      2851.816 ±      75.659  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5      1330.293 ±      15.290    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2745.538 ±     642.723  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      1280.709 ±     296.887    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.033 ±       0.146  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.015 ±       0.068    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        41.000                counts
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.time                                                      128  thrpt    5        55.000                    ms
[info] StringOfAsciiCharsBenchmark.readDslJsonJava                                                         128  thrpt    5   5952066.986 ±  366522.896   ops/s
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                          128  thrpt    5      1154.110 ±      58.259  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                     128  thrpt    5       305.144 ±       9.934    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1107.882 ±     686.703  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       293.054 ±     185.436    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.844 ±       6.879  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.225 ±       1.837    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count                                               128  thrpt    5        17.000                counts
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time                                                128  thrpt    5        38.000                    ms
[info] StringOfAsciiCharsBenchmark.readJacksonScala                                                        128  thrpt    5   4052724.307 ±  178355.325   ops/s
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      2244.434 ±      99.495  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5       871.557 ±      18.531    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      2185.220 ±     653.658  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       849.222 ±     289.056    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.812 ±       6.722  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.318 ±       2.637    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5        33.000                counts
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5        52.000                    ms
[info] StringOfAsciiCharsBenchmark.readJsoniterScala                                                       128  thrpt    5   6948100.528 ±  176783.865   ops/s
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1349.374 ±      67.625  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5       305.619 ±       8.403    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1324.349 ±      13.199  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       299.970 ±       7.775    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.670 ±       5.593  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.151 ±       1.263    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5        20.000                counts
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        33.000                    ms
[info] StringOfAsciiCharsBenchmark.readPlayJson                                                            128  thrpt    5   4186019.449 ±   82769.566   ops/s
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      2519.671 ±      52.282  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5       947.232 ±      16.256    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2461.202 ±     684.611  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       925.243 ±     256.446    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.142 ±       0.772  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.053 ±       0.290    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        37.000                counts
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        49.000                    ms
[info] StringOfAsciiCharsBenchmark.writeCirce                                                              128  thrpt    5   2147548.230 ±  124611.925   ops/s
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1285.500 ±      59.590  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5       941.973 ±      24.478    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1253.380 ±     563.645  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5       918.701 ±     421.982    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.674 ±       5.364  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.497 ±       3.952    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        19.000                counts
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        36.000                    ms
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava                                                        128  thrpt    5   5878296.712 ±   42249.154   ops/s
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                         128  thrpt    5       585.822 ±      20.828  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                    128  thrpt    5       156.832 ±       5.505    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                128  thrpt    5       585.707 ±     558.865  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       156.823 ±     149.890    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.021 ±       0.071  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.006 ±       0.019    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                              128  thrpt    5         9.000                counts
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                               128  thrpt    5        28.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJacksonScala                                                       128  thrpt    5   4706196.652 ±   90017.270   ops/s
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1284.185 ±      47.678  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5       429.405 ±       9.155    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1247.466 ±     563.659  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       417.221 ±     191.440    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.783 ±       5.995  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.263 ±       2.014    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5        19.000                counts
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        37.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala                                                      128  thrpt    5   5938360.238 ±  217649.690   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       590.554 ±      20.319  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5       156.493 ±       4.321    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       529.212 ±     698.162  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       140.462 ±     187.757    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.021 ±       0.057  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.006 ±       0.015    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         8.000                counts
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5        20.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5   6459948.368 ±   15957.293   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson                                                           128  thrpt    5   4544909.427 ±  126421.884   ops/s
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1290.405 ±      38.755  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5       446.805 ±       6.929    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1250.877 ±     565.454  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       433.188 ±     198.057    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.716 ±       6.123  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.247 ±       2.111    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        19.000                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        36.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readCirce                                                            128  thrpt    5   1570543.941 ±   38095.563   ops/s
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      2126.529 ±      99.429  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5      2130.461 ±      50.702    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2060.563 ±     559.629  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      2064.172 ±     538.875    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.708 ±       5.871  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.716 ±       5.940    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.count                                                  128  thrpt    5        31.000                counts
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.time                                                   128  thrpt    5        46.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava                                                      128  thrpt    5   2764492.899 ±   38144.905   ops/s
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       533.750 ±      25.015  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5       303.832 ±      12.767    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       521.244 ±     686.606  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       296.644 ±     389.952    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.029 ±       0.110  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.016 ±       0.063    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count                                            128  thrpt    5         8.000                counts
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time                                             128  thrpt    5        24.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala                                                     128  thrpt    5   1678862.638 ±   43973.539   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1046.576 ±      38.963  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5       980.984 ±      16.137    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1048.083 ±     561.936  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       982.258 ±     519.778    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.789 ±       6.526  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.733 ±       6.061    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        16.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        41.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala                                                    128  thrpt    5   2411223.181 ±  109582.251   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       469.998 ±       8.017  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       306.791 ±      16.285    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       448.998 ±     628.250  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       294.037 ±     425.214    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.017 ±       0.088  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.011 ±       0.057    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         7.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        16.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readPlayJson                                                         128  thrpt    5   1618052.794 ±   53338.203   ops/s
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5       965.622 ±      23.192  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5       939.194 ±      21.542    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5       920.246 ±     562.742  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       895.494 ±     557.701    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.766 ±       6.440  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.740 ±       6.215    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        14.000                counts
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        36.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeCirce                                                           128  thrpt    5   1854389.351 ±   48868.731   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1421.763 ±      46.637  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5      1206.518 ±      32.095    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1386.391 ±     572.731  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1177.138 ±     517.137    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.695 ±       5.718  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.596 ±       4.905    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count                                                 128  thrpt    5        21.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time                                                  128  thrpt    5        37.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava                                                     128  thrpt    5   3050029.367 ±   10460.275   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       811.705 ±      23.463  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5       418.793 ±      12.983    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                             128  thrpt    5       784.135 ±     689.533  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       404.613 ±     356.808    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.849 ±       7.095  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.438 ±       3.661    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                           128  thrpt    5        12.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                            128  thrpt    5        33.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala                                                    128  thrpt    5   2950751.179 ±   34002.176   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1295.516 ±      39.006  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5       690.831 ±      20.271    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1247.775 ±     566.555  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       665.320 ±     300.299    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.740 ±       6.286  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.393 ±       3.340    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5        19.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5        38.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala                                                   128  thrpt    5   3328634.219 ±  111828.345   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       889.843 ±      23.612  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       420.713 ±       8.964    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       860.431 ±     699.851  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       406.898 ±     332.730    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.604 ±       5.109  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.284 ±       2.400    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5        13.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5        30.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   3614311.014 ±  210468.170   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         2.055 ±      17.062  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.919 ±       7.637    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson                                                        128  thrpt    5   2867116.583 ±   69121.973   ops/s
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1428.699 ±      64.101  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5       784.205 ±      18.759    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5      1385.687 ±     574.097  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       760.606 ±     313.979    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.710 ±       6.001  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.389 ±       3.290    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count                                              128  thrpt    5        21.000                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        39.000                    ms
[info] TwitterAPIBenchmark.readCirce                                                                       N/A  thrpt    5     11781.740 ±     267.639   ops/s
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate                                                        N/A  thrpt    5      1389.076 ±      48.457  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm                                                   N/A  thrpt    5    185535.502 ±    2856.183    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      1306.629 ±      15.115  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5    174529.739 ±    4047.706    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.874 ±       6.823  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5       116.813 ±     911.666    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.count                                                             N/A  thrpt    5        20.000                counts
[info] TwitterAPIBenchmark.readCirce:·gc.time                                                              N/A  thrpt    5        43.000                    ms
[info] TwitterAPIBenchmark.readJacksonScala                                                                N/A  thrpt    5     20997.130 ±     637.382   ops/s
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate                                                 N/A  thrpt    5       322.858 ±      15.866  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                            N/A  thrpt    5     24198.816 ±    1397.252    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5       306.707 ±     109.608  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5     22989.680 ±    8311.397    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.count                                                      N/A  thrpt    5         5.000                counts
[info] TwitterAPIBenchmark.readJacksonScala:·gc.time                                                       N/A  thrpt    5         9.000                    ms
[info] TwitterAPIBenchmark.readJsoniterScala                                                               N/A  thrpt    5     22420.989 ±     378.234   ops/s
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                                N/A  thrpt    5       251.961 ±       8.651  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                           N/A  thrpt    5     17685.237 ±     698.489    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       234.220 ±     523.881  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5     16411.205 ±   36663.384    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.291 ±       2.503    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.count                                                     N/A  thrpt    5         4.000                counts
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.time                                                      N/A  thrpt    5        14.000                    ms
[info] TwitterAPIBenchmark.readPlayJson                                                                    N/A  thrpt    5      7452.517 ±     260.128   ops/s
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate                                                     N/A  thrpt    5      2109.284 ±     124.124  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                                N/A  thrpt    5    445358.090 ±   12961.512    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      2016.102 ±     684.569  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5    425770.059 ±  147813.328    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         1.921 ±      13.451  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5       409.702 ±    2871.122    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.count                                                          N/A  thrpt    5        32.000                counts
[info] TwitterAPIBenchmark.readPlayJson:·gc.time                                                           N/A  thrpt    5        88.000                    ms
[info] TwitterAPIBenchmark.writeJacksonScala                                                               N/A  thrpt    5     63404.269 ±    2684.818   ops/s
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5       823.600 ±      40.415  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5     20441.498 ±     367.638    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       844.518 ±     682.056  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5     20939.935 ±   16460.985    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         1.030 ±       7.049  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5        25.715 ±     176.727    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.count                                                     N/A  thrpt    5        13.000                counts
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.time                                                      N/A  thrpt    5        44.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScala                                                              N/A  thrpt    5     70709.054 ±    1105.677   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5       488.154 ±      10.778  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5     10862.618 ±     317.192    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       522.391 ±     688.774  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5     11635.749 ±   15466.288    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.021 ±       0.098  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.463 ±       2.185    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.count                                                    N/A  thrpt    5         8.000                counts
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.time                                                     N/A  thrpt    5        25.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc                                                      N/A  thrpt    5     75889.182 ±     550.944   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                       N/A  thrpt    5         7.940 ±       1.707  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                  N/A  thrpt    5       164.650 ±      36.505    B/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                            N/A  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.readCirce                                                                 128  thrpt    5    311080.344 ±    8594.639   ops/s
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1862.858 ±      86.026  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5      9423.610 ±     284.279    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1788.464 ±     686.771  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5      9050.700 ±    3627.596    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.737 ±       5.634  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         3.731 ±      28.525    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.count                                                       128  thrpt    5        27.000                counts
[info] VectorOfBooleansBenchmark.readCirce:·gc.time                                                        128  thrpt    5        43.000                    ms
[info] VectorOfBooleansBenchmark.readJacksonScala                                                          128  thrpt    5    500183.173 ±    8923.208   ops/s
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       583.378 ±      11.435  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      1835.351 ±      57.791    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       587.287 ±     562.825  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1849.211 ±    1790.991    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.021 ±       0.080  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.066 ±       0.253    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         9.000                counts
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5        32.000                    ms
[info] VectorOfBooleansBenchmark.readJsoniterScala                                                         128  thrpt    5   1209191.184 ±   33234.589   ops/s
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       652.882 ±       9.172  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5       849.690 ±      30.229    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       661.894 ±       6.097  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       861.408 ±      22.714    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.562 ±       4.616  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.730 ±       5.995    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        10.000                counts
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        29.000                    ms
[info] VectorOfBooleansBenchmark.readPlayJson                                                              128  thrpt    5    102537.273 ±    4801.017   ops/s
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      3279.458 ±     190.634  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     50327.688 ±     934.209    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      3168.758 ±     747.636  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     48612.455 ±    9707.471    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.071 ±       0.166  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.090 ±       2.584    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        47.000                counts
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        67.000                    ms
[info] VectorOfBooleansBenchmark.writeCirce                                                                128  thrpt    5    343059.140 ±    6463.490   ops/s
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1203.436 ±      40.869  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5      5520.174 ±     242.366    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1187.509 ±     694.516  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      5449.292 ±    3253.044    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.708 ±       4.479  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         3.249 ±      20.567    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        18.000                counts
[info] VectorOfBooleansBenchmark.writeCirce:·gc.time                                                       128  thrpt    5        34.000                    ms
[info] VectorOfBooleansBenchmark.writeJacksonScala                                                         128  thrpt    5    736205.984 ±   24088.404   ops/s
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       577.340 ±      21.749  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1234.035 ±      42.222    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       588.601 ±     561.526  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1258.743 ±    1208.612    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.021 ±       0.057  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.044 ±       0.120    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         9.000                counts
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        29.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScala                                                        128  thrpt    5   1542920.996 ±  108311.520   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       736.143 ±      46.199  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5       750.865 ±      28.322    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       728.271 ±     573.176  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       744.680 ±     636.274    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.658 ±       4.367  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.683 ±       4.570    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5        11.000                counts
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        28.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5   1747739.316 ±    2588.202   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.writePlayJson                                                             128  thrpt    5    454417.544 ±   26522.068   ops/s
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5       697.846 ±      29.226  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5      2416.954 ±     129.727    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5       657.522 ±       5.133  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      2277.468 ±     143.901    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.679 ±       5.664  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         2.353 ±      19.648    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        10.000                counts
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        33.000                    ms
[info] Benchmark result is saved to graalvmce1.json
[success] Total time: 5736 s, completed Apr 30, 2018 11:32:05 PM
